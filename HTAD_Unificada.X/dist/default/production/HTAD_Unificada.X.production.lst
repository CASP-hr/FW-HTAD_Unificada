

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Aug 02 12:06:43 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=3
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=3
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=3
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=3
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=2
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=2
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=2
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=2
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=2
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=2,class=CODE,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	text100,global,reloc=2,class=CODE,delta=1
   121                           	psect	text101,global,reloc=2,class=CODE,delta=1,inline
   122                           	psect	text102,global,reloc=2,class=CODE,delta=1
   123                           	psect	text103,global,reloc=2,class=CODE,delta=1
   124                           	psect	text104,global,reloc=2,class=CODE,delta=1
   125                           	psect	text105,global,reloc=2,class=CODE,delta=1,inline
   126                           	psect	text106,global,reloc=2,class=CODE,delta=1,inline
   127                           	psect	text107,global,reloc=2,class=CODE,delta=1
   128                           	psect	text108,global,reloc=2,class=CODE,delta=1
   129                           	psect	text109,global,reloc=2,class=CODE,delta=1
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1
   131                           	psect	text111,global,reloc=2,class=CODE,delta=1
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1
   134                           	psect	text114,global,reloc=2,class=CODE,delta=1
   135                           	psect	text115,global,reloc=2,class=CODE,delta=1
   136                           	psect	text116,global,reloc=2,class=CODE,delta=1
   137                           	psect	text117,global,reloc=2,class=CODE,delta=1
   138                           	psect	text118,global,reloc=2,class=CODE,delta=1
   139                           	psect	text119,global,reloc=2,class=CODE,delta=1
   140                           	psect	text120,global,reloc=2,class=CODE,delta=1
   141                           	psect	text121,global,reloc=2,class=CODE,delta=1
   142                           	psect	text122,global,reloc=2,class=CODE,delta=1
   143                           	psect	text123,global,reloc=2,class=CODE,delta=1,inline
   144                           	psect	text124,global,reloc=2,class=CODE,delta=1,inline
   145                           	psect	text125,global,reloc=2,class=CODE,delta=1,inline
   146                           	psect	text126,global,reloc=2,class=CODE,delta=1,inline
   147                           	psect	text127,global,reloc=2,class=CODE,delta=1,inline
   148                           	psect	text128,global,reloc=2,class=CODE,delta=1,inline
   149                           	psect	text129,global,reloc=2,class=CODE,delta=1,inline
   150                           	psect	text130,global,reloc=2,class=CODE,delta=1
   151                           	psect	text131,global,reloc=2,class=CODE,delta=1
   152                           	psect	text132,global,reloc=2,class=CODE,delta=1
   153                           	psect	text133,global,reloc=2,class=CODE,delta=1
   154                           	psect	text134,global,reloc=2,class=CODE,delta=1
   155                           	psect	text135,global,reloc=2,class=CODE,delta=1
   156                           	psect	text136,global,reloc=2,class=CODE,delta=1
   157                           	psect	text137,global,reloc=2,class=CODE,delta=1
   158                           	psect	text138,global,reloc=2,class=CODE,delta=1
   159                           	psect	text139,global,reloc=2,class=CODE,delta=1
   160                           	psect	text140,global,reloc=2,class=CODE,delta=1
   161                           	psect	text141,global,reloc=2,class=CODE,delta=1,inline
   162                           	psect	text142,global,reloc=2,class=CODE,delta=1,inline
   163                           	psect	text143,global,reloc=2,class=CODE,delta=1,inline
   164                           	psect	text144,global,reloc=2,class=CODE,delta=1
   165                           	psect	text145,global,reloc=2,class=CODE,delta=1,inline
   166                           	psect	text146,global,reloc=2,class=CODE,delta=1,inline
   167                           	psect	text147,global,reloc=2,class=CODE,delta=1,inline
   168                           	psect	text148,global,reloc=2,class=CODE,delta=1
   169                           	psect	text149,global,reloc=2,class=CODE,delta=1
   170                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   171                           	psect	text151,global,reloc=2,class=CODE,delta=1
   172                           	psect	text152,global,reloc=2,class=CODE,delta=1
   173                           	psect	text153,global,reloc=2,class=CODE,delta=1
   174                           	psect	text154,global,reloc=2,class=CODE,delta=1
   175                           	psect	text155,global,reloc=2,class=CODE,delta=1
   176                           	psect	text156,global,reloc=2,class=CODE,delta=1
   177                           	psect	text157,global,reloc=2,class=CODE,delta=1
   178                           	psect	text158,global,reloc=2,class=CODE,delta=1
   179                           	psect	text159,global,reloc=2,class=CODE,delta=1
   180                           	psect	text160,global,reloc=2,class=CODE,delta=1
   181                           	psect	text161,global,reloc=2,class=CODE,delta=1
   182                           	psect	text162,global,reloc=2,class=CODE,delta=1
   183                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   184                           	psect	text163,global,reloc=2,class=CODE,delta=1
   185                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   186                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   187                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   188                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   189  0000                     
   190                           ; Generated 06/04/2022 GMT
   191                           ; 
   192                           ; Copyright © 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   193                           ; All rights reserved.
   194                           ; 
   195                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   196                           ; 
   197                           ; Redistribution and use in source and binary forms, with or without modification, are
   198                           ; permitted provided that the following conditions are met:
   199                           ; 
   200                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   201                           ;        conditions and the following disclaimer.
   202                           ; 
   203                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   204                           ;        of conditions and the following disclaimer in the documentation and/or other
   205                           ;        materials provided with the distribution. Publication is not required when
   206                           ;        this file is used in an embedded application.
   207                           ; 
   208                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   209                           ;        software without specific prior written permission.
   210                           ; 
   211                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   212                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   213                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   214                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   215                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   216                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   217                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   218                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   219                           ; 
   220                           ; 
   221                           ; Code-generator required, PIC18F25K22 Definitions
   222                           ; 
   223                           ; SFR Addresses
   224  0000                     
   225                           	psect	idataBANK0
   226  0077FE                     __pidataBANK0:
   227                           	callstack 0
   228                           
   229                           ;initializer for App_HTAD_Home@isCelsius
   230  0077FE  01                 	db	1
   231                           
   232                           ;initializer for App_HTAD_MenuAjusteErro@CursorColuna
   233  0077FF  0A                 	db	10
   234                           
   235                           ;initializer for App_HTAD_MenuAjusteErro@CursorLinha
   236  007800  01                 	db	1
   237                           
   238                           	psect	idataBANK1
   239  00780A                     __pidataBANK1:
   240                           	callstack 0
   241                           
   242                           ;initializer for readKeypad@previousKeyState
   243  00780A  FF                 	db	255
   244                           
   245                           	psect	smallconst
   246  000600                     __psmallconst:
   247                           	callstack 0
   248  000600  00                 	db	0
   249  000601                     _i2c1_fsmStateTable:
   250                           	callstack 0
   251  000601  1A                 	db	low _I2C1_DO_IDLE
   252  000602  77                 	db	high _I2C1_DO_IDLE
   253  000603  E4                 	db	low _I2C1_DO_SEND_ADR_READ
   254  000604  76                 	db	high _I2C1_DO_SEND_ADR_READ
   255  000605  D4                 	db	low _I2C1_DO_SEND_ADR_WRITE
   256  000606  76                 	db	high _I2C1_DO_SEND_ADR_WRITE
   257  000607  62                 	db	low _I2C1_DO_TX
   258  000608  5C                 	db	high _I2C1_DO_TX
   259  000609  3E                 	db	low _I2C1_DO_RX
   260  00060A  64                 	db	high _I2C1_DO_RX
   261  00060B  0E                 	db	low _I2C1_DO_RCEN
   262  00060C  77                 	db	high _I2C1_DO_RCEN
   263  00060D  38                 	db	low _I2C1_DO_TX_EMPTY
   264  00060E  67                 	db	high _I2C1_DO_TX_EMPTY
   265  00060F  98                 	db	low _I2C1_DO_SEND_RESTART_READ
   266  000610  77                 	db	high _I2C1_DO_SEND_RESTART_READ
   267  000611  90                 	db	low _I2C1_DO_SEND_RESTART_WRITE
   268  000612  77                 	db	high _I2C1_DO_SEND_RESTART_WRITE
   269  000613  88                 	db	low _I2C1_DO_SEND_RESTART
   270  000614  77                 	db	high _I2C1_DO_SEND_RESTART
   271  000615  80                 	db	low _I2C1_DO_SEND_STOP
   272  000616  77                 	db	high _I2C1_DO_SEND_STOP
   273  000617  78                 	db	low _I2C1_DO_RX_ACK
   274  000618  77                 	db	high _I2C1_DO_RX_ACK
   275  000619  70                 	db	low _I2C1_DO_RX_NACK_STOP
   276  00061A  77                 	db	high _I2C1_DO_RX_NACK_STOP
   277  00061B  68                 	db	low _I2C1_DO_RX_NACK_RESTART
   278  00061C  77                 	db	high _I2C1_DO_RX_NACK_RESTART
   279  00061D  02                 	db	low _I2C1_DO_RESET
   280  00061E  77                 	db	high _I2C1_DO_RESET
   281  00061F  0C                 	db	low _I2C1_DO_ADDRESS_NACK
   282  000620  69                 	db	high _I2C1_DO_ADDRESS_NACK
   283  000621                     __end_of_i2c1_fsmStateTable:
   284                           	callstack 0
   285  0000                     _ANSELA	set	3896
   286  0000                     _ANSELB	set	3897
   287  0000                     _ANSELC	set	3898
   288  0000                     _LATCbits	set	3979
   289  0000                     _LATBbits	set	3978
   290  0000                     _PORTCbits	set	3970
   291  0000                     _LATAbits	set	3977
   292  0000                     _RCREG1	set	4014
   293  0000                     _RCSTA1bits	set	4011
   294  0000                     _TXREG1	set	4013
   295  0000                     _TXSTA1bits	set	4012
   296  0000                     _SPBRGH1	set	4016
   297  0000                     _SPBRG1	set	4015
   298  0000                     _TXSTA1	set	4012
   299  0000                     _RCSTA1	set	4011
   300  0000                     _BAUDCON1	set	4024
   301  0000                     _SSP1STATbits	set	4039
   302  0000                     _SSP1CON2bits	set	4037
   303  0000                     _SSP1BUF	set	4041
   304  0000                     _SSP1CON1bits	set	4038
   305  0000                     _SSP1ADD	set	4040
   306  0000                     _SSP1CON2	set	4037
   307  0000                     _SSP1CON1	set	4038
   308  0000                     _SSP1STAT	set	4039
   309  0000                     _PIR2bits	set	4001
   310  0000                     _EEDATA	set	4008
   311  0000                     _EEADR	set	4009
   312  0000                     _EECON2	set	4007
   313  0000                     _EECON1bits	set	4006
   314  0000                     _TABLAT	set	4085
   315  0000                     _TBLPTRL	set	4086
   316  0000                     _TBLPTRH	set	4087
   317  0000                     _TBLPTRU	set	4088
   318  0000                     _ADCON0bits	set	4034
   319  0000                     _ADCON0	set	4034
   320  0000                     _ADRESH	set	4036
   321  0000                     _ADRESL	set	4035
   322  0000                     _ADCON2	set	4032
   323  0000                     _ADCON1	set	4033
   324  0000                     _PIR1bits	set	3998
   325  0000                     _PIE1bits	set	3997
   326  0000                     _RCONbits	set	4048
   327  0000                     _T0CON	set	4053
   328  0000                     _TMR0L	set	4054
   329  0000                     _TMR0H	set	4055
   330  0000                     _T0CONbits	set	4053
   331  0000                     _OSCTUNE	set	3995
   332  0000                     _OSCCON2	set	4050
   333  0000                     _OSCCON	set	4051
   334  0000                     _INTCONbits	set	4082
   335  0000                     _INTCON2bits	set	4081
   336  0000                     _WPUB	set	3937
   337  0000                     _TRISC	set	3988
   338  0000                     _TRISB	set	3987
   339  0000                     _TRISA	set	3986
   340  0000                     _LATC	set	3979
   341  0000                     _LATB	set	3978
   342  0000                     _LATA	set	3977
   343  0000                     _PLLRDY	set	32407
   344  000621                     STR_5:
   345                           
   346                           ; BSR set to: 0
   347  000621  53                 	db	83	;'S'
   348  000622  31                 	db	49	;'1'
   349  000623  3A                 	db	58	;':'
   350  000624  20                 	db	32
   351  000625  41                 	db	65	;'A'
   352  000626  6A                 	db	106	;'j'
   353  000627  2B                 	db	43
   354  000628  3A                 	db	58	;':'
   355  000629  20                 	db	32
   356  00062A  25                 	db	37
   357  00062B  30                 	db	48	;'0'
   358  00062C  32                 	db	50	;'2'
   359  00062D  64                 	db	100	;'d'
   360  00062E  20                 	db	32
   361  00062F  41                 	db	65	;'A'
   362  000630  6A                 	db	106	;'j'
   363  000631  2D                 	db	45
   364  000632  3A                 	db	58	;':'
   365  000633  20                 	db	32
   366  000634  25                 	db	37
   367  000635  30                 	db	48	;'0'
   368  000636  32                 	db	50	;'2'
   369  000637  64                 	db	100	;'d'
   370  000638  20                 	db	32
   371  000639  00                 	db	0
   372  00063A                     STR_6:
   373                           
   374                           ; BSR set to: 0
   375  00063A  53                 	db	83	;'S'
   376  00063B  32                 	db	50	;'2'
   377  00063C  3A                 	db	58	;':'
   378  00063D  20                 	db	32
   379  00063E  41                 	db	65	;'A'
   380  00063F  6A                 	db	106	;'j'
   381  000640  2B                 	db	43
   382  000641  3A                 	db	58	;':'
   383  000642  20                 	db	32
   384  000643  25                 	db	37
   385  000644  30                 	db	48	;'0'
   386  000645  32                 	db	50	;'2'
   387  000646  64                 	db	100	;'d'
   388  000647  20                 	db	32
   389  000648  41                 	db	65	;'A'
   390  000649  6A                 	db	106	;'j'
   391  00064A  2D                 	db	45
   392  00064B  3A                 	db	58	;':'
   393  00064C  20                 	db	32
   394  00064D  25                 	db	37
   395  00064E  30                 	db	48	;'0'
   396  00064F  32                 	db	50	;'2'
   397  000650  64                 	db	100	;'d'
   398  000651  20                 	db	32
   399  000652  00                 	db	0
   400  000653                     STR_7:
   401                           
   402                           ; BSR set to: 0
   403  000653  53                 	db	83	;'S'
   404  000654  33                 	db	51	;'3'
   405  000655  3A                 	db	58	;':'
   406  000656  20                 	db	32
   407  000657  41                 	db	65	;'A'
   408  000658  6A                 	db	106	;'j'
   409  000659  2B                 	db	43
   410  00065A  3A                 	db	58	;':'
   411  00065B  20                 	db	32
   412  00065C  25                 	db	37
   413  00065D  30                 	db	48	;'0'
   414  00065E  32                 	db	50	;'2'
   415  00065F  64                 	db	100	;'d'
   416  000660  20                 	db	32
   417  000661  41                 	db	65	;'A'
   418  000662  6A                 	db	106	;'j'
   419  000663  2D                 	db	45
   420  000664  3A                 	db	58	;':'
   421  000665  20                 	db	32
   422  000666  25                 	db	37
   423  000667  30                 	db	48	;'0'
   424  000668  32                 	db	50	;'2'
   425  000669  64                 	db	100	;'d'
   426  00066A  20                 	db	32
   427  00066B  00                 	db	0
   428  00066C                     STR_4:
   429                           
   430                           ; BSR set to: 0
   431  00066C  4D                 	db	77	;'M'
   432  00066D  65                 	db	101	;'e'
   433  00066E  6E                 	db	110	;'n'
   434  00066F  75                 	db	117	;'u'
   435  000670  20                 	db	32
   436  000671  43                 	db	67	;'C'
   437  000672  2F                 	db	47
   438  000673  46                 	db	70	;'F'
   439  000674  20                 	db	32
   440  000675  20                 	db	32
   441  000676  20                 	db	32
   442  000677  20                 	db	32
   443  000678  20                 	db	32
   444  000679  53                 	db	83	;'S'
   445  00067A  65                 	db	101	;'e'
   446  00067B  6E                 	db	110	;'n'
   447  00067C  68                 	db	104	;'h'
   448  00067D  61                 	db	97	;'a'
   449  00067E  3A                 	db	58	;':'
   450  00067F  25                 	db	37
   451  000680  31                 	db	49	;'1'
   452  000681  64                 	db	100	;'d'
   453  000682  00                 	db	0
   454  000683                     STR_8:
   455                           
   456                           ; BSR set to: 0
   457  000683  53                 	db	83	;'S'
   458  000684  61                 	db	97	;'a'
   459  000685  69                 	db	105	;'i'
   460  000686  20                 	db	32
   461  000687  49                 	db	73	;'I'
   462  000688  4E                 	db	78	;'N'
   463  000689  43                 	db	67	;'C'
   464  00068A  20                 	db	32
   465  00068B  44                 	db	68	;'D'
   466  00068C  45                 	db	69	;'E'
   467  00068D  43                 	db	67	;'C'
   468  00068E  20                 	db	32
   469  00068F  50                 	db	80	;'P'
   470  000690  52                 	db	82	;'R'
   471  000691  58                 	db	88	;'X'
   472  000692  20                 	db	32
   473  000693  53                 	db	83	;'S'
   474  000694  41                 	db	65	;'A'
   475  000695  56                 	db	86	;'V'
   476  000696  20                 	db	32
   477  000697  00                 	db	0
   478  000698                     STR_1:
   479                           
   480                           ; BSR set to: 0
   481  000698  53                 	db	83	;'S'
   482  000699  31                 	db	49	;'1'
   483  00069A  3A                 	db	58	;':'
   484  00069B  25                 	db	37
   485  00069C  20                 	db	32
   486  00069D  33                 	db	51	;'3'
   487  00069E  2E                 	db	46
   488  00069F  32                 	db	50	;'2'
   489  0006A0  66                 	db	102	;'f'
   490  0006A1  DF                 	db	-33
   491  0006A2  25                 	db	37
   492  0006A3  63                 	db	99	;'c'
   493  0006A4  20                 	db	32
   494  0006A5  44                 	db	68	;'D'
   495  0006A6  44                 	db	68	;'D'
   496  0006A7  3A                 	db	58	;':'
   497  0006A8  25                 	db	37
   498  0006A9  34                 	db	52	;'4'
   499  0006AA  64                 	db	100	;'d'
   500  0006AB  20                 	db	32
   501  0006AC  00                 	db	0
   502  0006AD                     STR_2:
   503                           
   504                           ; BSR set to: 0
   505  0006AD  53                 	db	83	;'S'
   506  0006AE  32                 	db	50	;'2'
   507  0006AF  3A                 	db	58	;':'
   508  0006B0  25                 	db	37
   509  0006B1  20                 	db	32
   510  0006B2  33                 	db	51	;'3'
   511  0006B3  2E                 	db	46
   512  0006B4  32                 	db	50	;'2'
   513  0006B5  66                 	db	102	;'f'
   514  0006B6  DF                 	db	-33
   515  0006B7  25                 	db	37
   516  0006B8  63                 	db	99	;'c'
   517  0006B9  20                 	db	32
   518  0006BA  44                 	db	68	;'D'
   519  0006BB  54                 	db	84	;'T'
   520  0006BC  3A                 	db	58	;':'
   521  0006BD  25                 	db	37
   522  0006BE  34                 	db	52	;'4'
   523  0006BF  64                 	db	100	;'d'
   524  0006C0  20                 	db	32
   525  0006C1  00                 	db	0
   526  0006C2                     STR_3:
   527                           
   528                           ; BSR set to: 0
   529  0006C2  53                 	db	83	;'S'
   530  0006C3  33                 	db	51	;'3'
   531  0006C4  3A                 	db	58	;':'
   532  0006C5  25                 	db	37
   533  0006C6  20                 	db	32
   534  0006C7  33                 	db	51	;'3'
   535  0006C8  2E                 	db	46
   536  0006C9  32                 	db	50	;'2'
   537  0006CA  66                 	db	102	;'f'
   538  0006CB  DF                 	db	-33
   539  0006CC  25                 	db	37
   540  0006CD  63                 	db	99	;'c'
   541  0006CE  20                 	db	32
   542  0006CF  43                 	db	67	;'C'
   543  0006D0  4F                 	db	79	;'O'
   544  0006D1  32                 	db	50	;'2'
   545  0006D2  3A                 	db	58	;':'
   546  0006D3  25                 	db	37
   547  0006D4  34                 	db	52	;'4'
   548  0006D5  64                 	db	100	;'d'
   549  0006D6  00                 	db	0
   550  0006D7                     STR_9:
   551                           
   552                           ; BSR set to: 0
   553  0006D7  49                 	db	73	;'I'
   554  0006D8  4E                 	db	78	;'N'
   555  0006D9  46                 	db	70	;'F'
   556  0006DA  00                 	db	0
   557  0006DB                     STR_13:
   558                           
   559                           ; BSR set to: 0
   560  0006DB  4E                 	db	78	;'N'
   561  0006DC  41                 	db	65	;'A'
   562  0006DD  4E                 	db	78	;'N'
   563  0006DE  00                 	db	0
   564  0006DF                     STR_10:
   565                           
   566                           ; BSR set to: 0
   567  0006DF  69                 	db	105	;'i'
   568  0006E0  6E                 	db	110	;'n'
   569  0006E1  66                 	db	102	;'f'
   570  0006E2  00                 	db	0
   571  0006E3                     STR_14:
   572                           
   573                           ; BSR set to: 0
   574  0006E3  6E                 	db	110	;'n'
   575  0006E4  61                 	db	97	;'a'
   576  0006E5  6E                 	db	110	;'n'
   577  0006E6  00                 	db	0
   578  0006E7                     STR_17:
   579                           
   580                           ; BSR set to: 0
   581  0006E7  6C                 	db	108	;'l'
   582  0006E8  66                 	db	102	;'f'
   583  0006E9  00                 	db	0
   584  0006EA  00                 	db	0	; dummy byte at the end
   585  0000                     
   586                           ; #config settings
   587                           
   588                           	psect	cinit
   589  0066AE                     __pcinit:
   590                           	callstack 0
   591  0066AE                     start_initialization:
   592                           	callstack 0
   593  0066AE                     __initialization:
   594                           	callstack 0
   595                           
   596                           ; Initialize objects allocated to BANK1 (1 bytes)
   597                           ; load TBLPTR registers with __pidataBANK1
   598  0066AE  0E0A               	movlw	low __pidataBANK1
   599  0066B0  6EF6               	movwf	tblptrl,c
   600  0066B2  0E78               	movlw	high __pidataBANK1
   601  0066B4  6EF7               	movwf	tblptrh,c
   602  0066B6  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   603  0066B8  6EF8               	movwf	tblptru,c
   604  0066BA  0009               	tblrd		*+	;fetch initializer
   605  0066BC  CFF5 F1FE          	movff	tablat,__pdataBANK1
   606                           
   607                           ; Initialize objects allocated to BANK0 (3 bytes)
   608                           ; load TBLPTR registers with __pidataBANK0
   609  0066C0  0EFE               	movlw	low __pidataBANK0
   610  0066C2  6EF6               	movwf	tblptrl,c
   611  0066C4  0E77               	movlw	high __pidataBANK0
   612  0066C6  6EF7               	movwf	tblptrh,c
   613  0066C8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   614  0066CA  6EF8               	movwf	tblptru,c
   615  0066CC  0009               	tblrd		*+	;fetch initializer
   616  0066CE  CFF5 F0FA          	movff	tablat,__pdataBANK0
   617  0066D2  0009               	tblrd		*+	;fetch initializer
   618  0066D4  CFF5 F0FB          	movff	tablat,__pdataBANK0+1
   619  0066D8  0009               	tblrd		*+	;fetch initializer
   620  0066DA  CFF5 F0FC          	movff	tablat,__pdataBANK0+2
   621                           
   622                           ; Clear objects allocated to BANK4 (100 bytes)
   623  0066DE  EE04  F000         	lfsr	0,__pbssBANK4
   624  0066E2  0E64               	movlw	100
   625  0066E4                     clear_0:
   626  0066E4  6AEE               	clrf	postinc0,c
   627  0066E6  06E8               	decf	wreg,f,c
   628  0066E8  E1FD               	bnz	clear_0
   629                           
   630                           ; Clear objects allocated to BANK3 (230 bytes)
   631  0066EA  EE03  F000         	lfsr	0,__pbssBANK3
   632  0066EE  0EE6               	movlw	230
   633  0066F0                     clear_1:
   634  0066F0  6AEE               	clrf	postinc0,c
   635  0066F2  06E8               	decf	wreg,f,c
   636  0066F4  E1FD               	bnz	clear_1
   637                           
   638                           ; Clear objects allocated to BANK2 (255 bytes)
   639  0066F6  EE02  F000         	lfsr	0,__pbssBANK2
   640  0066FA  EE10 F0FF          	lfsr	1,255
   641  0066FE                     clear_2:
   642  0066FE  6AEE               	clrf	postinc0,c
   643  006700  50E5               	movf	postdec1,w,c
   644  006702  50E1               	movf	fsr1l,w,c
   645  006704  E1FC               	bnz	clear_2
   646  006706  50E2               	movf	fsr1h,w,c
   647  006708  E1FA               	bnz	clear_2
   648                           
   649                           ; Clear objects allocated to BANK1 (213 bytes)
   650  00670A  EE01  F000         	lfsr	0,__pbssBANK1
   651  00670E  0ED5               	movlw	213
   652  006710                     clear_3:
   653  006710  6AEE               	clrf	postinc0,c
   654  006712  06E8               	decf	wreg,f,c
   655  006714  E1FD               	bnz	clear_3
   656                           
   657                           ; Clear objects allocated to BANK0 (3 bytes)
   658  006716  0100               	movlb	0
   659  006718  6BF9               	clrf	(__pbssBANK0+2)& (0+255),b
   660  00671A  6BF8               	clrf	(__pbssBANK0+1)& (0+255),b
   661  00671C  6BF7               	clrf	__pbssBANK0& (0+255),b
   662                           
   663                           ; Clear objects allocated to COMRAM (9 bytes)
   664  00671E  EE00  F04D         	lfsr	0,__pbssCOMRAM
   665  006722  0E09               	movlw	9
   666  006724                     clear_4:
   667  006724  6AEE               	clrf	postinc0,c
   668  006726  06E8               	decf	wreg,f,c
   669  006728  E1FD               	bnz	clear_4
   670  00672A                     end_of_initialization:
   671                           	callstack 0
   672  00672A                     __end_of__initialization:
   673                           	callstack 0
   674  00672A  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   675  00672C  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   676  00672E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   677  006730  6EF8               	movwf	tblptru,c
   678  006732  0100               	movlb	0
   679  006734  EFD3  F03A         	goto	_main	;jump to C main() function
   680                           
   681                           	psect	bssCOMRAM
   682  00004D                     __pbssCOMRAM:
   683                           	callstack 0
   684  00004D                     _prec:
   685                           	callstack 0
   686  00004D                     	ds	2
   687  00004F                     _flags:
   688                           	callstack 0
   689  00004F                     	ds	2
   690  000051                     _timer0ReloadVal:
   691                           	callstack 0
   692  000051                     	ds	2
   693  000053                     _recebeuID:
   694                           	callstack 0
   695  000053                     	ds	1
   696  000054                     _eusart1RxTail:
   697                           	callstack 0
   698  000054                     	ds	1
   699  000055                     _eusart1RxHead:
   700                           	callstack 0
   701  000055                     	ds	1
   702                           
   703                           	psect	bssBANK0
   704  0000F7                     __pbssBANK0:
   705                           	callstack 0
   706  0000F7                     _width:
   707                           	callstack 0
   708  0000F7                     	ds	2
   709  0000F9                     _eusart1RxCount:
   710                           	callstack 0
   711  0000F9                     	ds	1
   712                           
   713                           	psect	dataBANK0
   714  0000FA                     __pdataBANK0:
   715                           	callstack 0
   716  0000FA                     App_HTAD_Home@isCelsius:
   717                           	callstack 0
   718  0000FA                     	ds	1
   719  0000FB                     App_HTAD_MenuAjusteErro@CursorColuna:
   720                           	callstack 0
   721  0000FB                     	ds	1
   722  0000FC                     App_HTAD_MenuAjusteErro@CursorLinha:
   723                           	callstack 0
   724  0000FC                     	ds	1
   725                           
   726                           	psect	bssBANK1
   727  000100                     __pbssBANK1:
   728                           	callstack 0
   729  000100                     _I2C1_Status:
   730                           	callstack 0
   731  000100                     	ds	36
   732  000124                     _bufferEnvio:
   733                           	callstack 0
   734  000124                     	ds	30
   735  000142                     _eusart1RxStatusBuffer:
   736                           	callstack 0
   737  000142                     	ds	8
   738  00014A                     _eusart1RxBuffer:
   739                           	callstack 0
   740  00014A                     	ds	8
   741  000152                     _bufferDadosValorBruto:
   742                           	callstack 0
   743  000152                     	ds	7
   744  000159                     floorf@F527:
   745                           	callstack 0
   746  000159                     	ds	4
   747  00015D                     ___fpclassifyf@F465:
   748                           	callstack 0
   749  00015D                     	ds	4
   750  000161                     _tempo:
   751                           	callstack 0
   752  000161                     	ds	4
   753  000165                     _lastReadTime:
   754                           	callstack 0
   755  000165                     	ds	4
   756  000169                     SRV_ADT7410_Run@tickLast:
   757                           	callstack 0
   758  000169                     	ds	4
   759  00016D                     SRV_ADT7410_Run@tick:
   760                           	callstack 0
   761  00016D                     	ds	4
   762  000171                     readKeypad@lastKeyPressTime:
   763                           	callstack 0
   764  000171                     	ds	4
   765  000175                     App_HTAD_MenuAjusteErro@tickLast:
   766                           	callstack 0
   767  000175                     	ds	4
   768  000179                     App_HTAD_MenuAjusteErro@tick:
   769                           	callstack 0
   770  000179                     	ds	4
   771  00017D                     App_HTAD_Home@tickLast:
   772                           	callstack 0
   773  00017D                     	ds	4
   774  000181                     App_HTAD_Home@tick:
   775                           	callstack 0
   776  000181                     	ds	4
   777  000185                     _nout:
   778                           	callstack 0
   779  000185                     	ds	2
   780  000187                     _contRX:
   781                           	callstack 0
   782  000187                     	ds	2
   783  000189                     _telaDisplay:
   784                           	callstack 0
   785  000189                     	ds	2
   786  00018B                     SRV_ADT7410_Run@timeReset:
   787                           	callstack 0
   788  00018B                     	ds	2
   789  00018D                     	ds	2
   790  00018F                     _count_aux:
   791                           	callstack 0
   792  00018F                     	ds	2
   793  000191                     _EUSART1_ErrorHandler:
   794                           	callstack 0
   795  000191                     	ds	2
   796  000193                     _EUSART1_OverrunErrorHandler:
   797                           	callstack 0
   798  000193                     	ds	2
   799  000195                     _EUSART1_FramingErrorHandler:
   800                           	callstack 0
   801  000195                     	ds	2
   802  000197                     _ADC_InterruptHandler:
   803                           	callstack 0
   804  000197                     	ds	2
   805  000199                     _EUSART1_RxDefaultInterruptHandler:
   806                           	callstack 0
   807  000199                     	ds	2
   808  00019B                     _TMR0_InterruptHandler:
   809                           	callstack 0
   810  00019B                     	ds	2
   811  00019D                     _stateDirectNet:
   812                           	callstack 0
   813  00019D                     	ds	1
   814  00019E                     _ID_Responde:
   815                           	callstack 0
   816  00019E                     	ds	1
   817  00019F                     _respondeHTAD:
   818                           	callstack 0
   819  00019F                     	ds	1
   820  0001A0                     _CPU_Comunicando:
   821                           	callstack 0
   822  0001A0                     	ds	1
   823  0001A1                     _recebeu_Serial:
   824                           	callstack 0
   825  0001A1                     	ds	1
   826  0001A2                     _sample_index:
   827                           	callstack 0
   828  0001A2                     	ds	1
   829  0001A3                     SRV_ADT7410_ReadMeanSensor@accumulatedUmidade:
   830                           	callstack 0
   831  0001A3                     	ds	1
   832  0001A4                     SRV_ADT7410_ReadMeanSensor@accumulatedTraseiro:
   833                           	callstack 0
   834  0001A4                     	ds	1
   835  0001A5                     SRV_ADT7410_ReadMeanSensor@accumulatedDianteiro:
   836                           	callstack 0
   837  0001A5                     	ds	1
   838  0001A6                     _errorNegSensorUmidade:
   839                           	callstack 0
   840  0001A6                     	ds	1
   841  0001A7                     _errorPosSensorUmidade:
   842                           	callstack 0
   843  0001A7                     	ds	1
   844  0001A8                     _errorNegSensorTraseiro:
   845                           	callstack 0
   846  0001A8                     	ds	1
   847  0001A9                     _errorPosSensorTraseiro:
   848                           	callstack 0
   849  0001A9                     	ds	1
   850  0001AA                     _errorNegSensorDianteiro:
   851                           	callstack 0
   852  0001AA                     	ds	1
   853  0001AB                     _errorPosSensorDianteiro:
   854                           	callstack 0
   855  0001AB                     	ds	1
   856  0001AC                     	ds	1
   857  0001AD                     _stateHTAD:
   858                           	callstack 0
   859  0001AD                     	ds	1
   860  0001AE                     _eusart1RxLastError:
   861                           	callstack 0
   862  0001AE                     	ds	1
   863  0001AF                     _habilitaRefrescamento:
   864                           	callstack 0
   865  0001AF                     	ds	1
   866  0001B0                     _Sensor3:
   867                           	callstack 0
   868  0001B0                     	ds	8
   869  0001B8                     _Sensor2:
   870                           	callstack 0
   871  0001B8                     	ds	8
   872  0001C0                     _Sensor1:
   873                           	callstack 0
   874  0001C0                     	ds	8
   875  0001C8                     _bufferDadosFAHRENHEIT:
   876                           	callstack 0
   877  0001C8                     	ds	5
   878  0001CD                     _bufferDadosCELSIUS:
   879                           	callstack 0
   880  0001CD                     	ds	4
   881  0001D1                     _tickRate:
   882                           	callstack 0
   883  0001D1                     	ds	4
   884                           
   885                           	psect	dataBANK1
   886  0001FE                     __pdataBANK1:
   887                           	callstack 0
   888  0001FE                     readKeypad@previousKeyState:
   889                           	callstack 0
   890  0001FE                     	ds	1
   891                           
   892                           	psect	bssBANK2
   893  000200                     __pbssBANK2:
   894                           	callstack 0
   895  000200                     _recebeu:
   896                           	callstack 0
   897  000200                     	ds	20
   898  000214                     _adc_values_an3:
   899                           	callstack 0
   900  000214                     	ds	20
   901  000228                     _adc_values_an1:
   902                           	callstack 0
   903  000228                     	ds	20
   904  00023C                     _adc_values_an0:
   905                           	callstack 0
   906  00023C                     	ds	20
   907  000250                     _dbuf:
   908                           	callstack 0
   909  000250                     	ds	80
   910  0002A0                     _ObjetoHTAD:
   911                           	callstack 0
   912  0002A0                     	ds	35
   913  0002C3                     _bufferDadosDDDTCO2:
   914                           	callstack 0
   915  0002C3                     	ds	30
   916  0002E1                     _bufferLcr:
   917                           	callstack 0
   918  0002E1                     	ds	30
   919                           
   920                           	psect	bssBANK3
   921  000300                     __pbssBANK3:
   922                           	callstack 0
   923  000300                     SRV_ADT7410_ReadMeanSensor@meanTraseiro:
   924                           	callstack 0
   925  000300                     	ds	100
   926  000364                     SRV_ADT7410_ReadMeanSensor@meanDianteiro:
   927                           	callstack 0
   928  000364                     	ds	100
   929  0003C8                     _mchStateHTAD:
   930                           	callstack 0
   931  0003C8                     	ds	30
   932                           
   933                           	psect	bssBANK4
   934  000400                     __pbssBANK4:
   935                           	callstack 0
   936  000400                     SRV_ADT7410_ReadMeanSensor@meanUmidade:
   937                           	callstack 0
   938  000400                     	ds	100
   939                           
   940                           	psect	cstackBANK1
   941  0001D5                     __pcstackBANK1:
   942                           	callstack 0
   943  0001D5                     sprintf@ap:
   944                           	callstack 0
   945                           
   946                           ; 2 bytes @ 0x0
   947  0001D5                     	ds	2
   948  0001D7                     sprintf@f:
   949                           	callstack 0
   950                           
   951                           ; 6 bytes @ 0x2
   952  0001D7                     	ds	6
   953  0001DD                     ??_App_HTAD_Home:
   954  0001DD                     ??_App_HTAD_MenuAjusteErro:
   955                           
   956                           ; 1 bytes @ 0x8
   957  0001DD                     	ds	4
   958  0001E1                     App_HTAD_MenuAjusteErro@txt:
   959                           	callstack 0
   960  0001E1                     App_HTAD_Home@txt:
   961                           	callstack 0
   962                           
   963                           ; 21 bytes @ 0xC
   964  0001E1                     	ds	20
   965  0001F5                     App_HTAD_MenuAjusteErro@key:
   966                           	callstack 0
   967                           
   968                           ; 1 bytes @ 0x20
   969  0001F5                     	ds	1
   970  0001F6                     _App_HTAD_Home$2429:
   971                           	callstack 0
   972                           
   973                           ; 2 bytes @ 0x21
   974  0001F6                     	ds	2
   975  0001F8                     _App_HTAD_Home$2431:
   976                           	callstack 0
   977                           
   978                           ; 2 bytes @ 0x23
   979  0001F8                     	ds	2
   980  0001FA                     _App_HTAD_Home$2433:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0x25
   984  0001FA                     	ds	2
   985  0001FC                     App_HTAD_Home@typeRead:
   986                           	callstack 0
   987                           
   988                           ; 1 bytes @ 0x27
   989  0001FC                     	ds	1
   990  0001FD                     App_HTAD_Home@key:
   991                           	callstack 0
   992                           
   993                           ; 1 bytes @ 0x28
   994  0001FD                     	ds	1
   995                           
   996                           	psect	cstackBANK0
   997  000060                     __pcstackBANK0:
   998                           	callstack 0
   999  000060                     ___fldiv@rem:
  1000                           	callstack 0
  1001                           
  1002                           ; 4 bytes @ 0x0
  1003  000060                     	ds	4
  1004  000064                     ___fldiv@sign:
  1005                           	callstack 0
  1006                           
  1007                           ; 1 bytes @ 0x4
  1008  000064                     	ds	1
  1009  000065                     ___fldiv@new_exp:
  1010                           	callstack 0
  1011                           
  1012                           ; 2 bytes @ 0x5
  1013  000065                     	ds	2
  1014  000067                     ___fldiv@grs:
  1015                           	callstack 0
  1016                           
  1017                           ; 4 bytes @ 0x7
  1018  000067                     	ds	4
  1019  00006B                     ___fldiv@bexp:
  1020                           	callstack 0
  1021                           
  1022                           ; 1 bytes @ 0xB
  1023  00006B                     	ds	1
  1024  00006C                     ___fldiv@aexp:
  1025                           	callstack 0
  1026                           
  1027                           ; 1 bytes @ 0xC
  1028  00006C                     	ds	1
  1029  00006D                     ?_floorf:
  1030                           	callstack 0
  1031  00006D                     SRV_ADT7410_ReadMeanSensor@typeRead:
  1032                           	callstack 0
  1033  00006D                     floorf@x:
  1034                           	callstack 0
  1035                           
  1036                           ; 4 bytes @ 0xD
  1037  00006D                     	ds	1
  1038  00006E                     SRV_ADT7410_ReadMeanSensor@value:
  1039                           	callstack 0
  1040                           
  1041                           ; 2 bytes @ 0xE
  1042  00006E                     	ds	2
  1043  000070                     _SRV_ADT7410_ReadMeanSensor$4209:
  1044                           	callstack 0
  1045                           
  1046                           ; 4 bytes @ 0x10
  1047  000070                     	ds	1
  1048  000071                     floorf@m:
  1049                           	callstack 0
  1050                           
  1051                           ; 4 bytes @ 0x11
  1052  000071                     	ds	3
  1053  000074                     SRV_ADT7410_ReadMeanSensor@valueMean:
  1054                           	callstack 0
  1055                           
  1056                           ; 2 bytes @ 0x14
  1057  000074                     	ds	1
  1058  000075                     floorf@e:
  1059                           	callstack 0
  1060                           
  1061                           ; 2 bytes @ 0x15
  1062  000075                     	ds	1
  1063  000076                     SRV_ADT7410_ReadMeanSensor@address:
  1064                           	callstack 0
  1065                           
  1066                           ; 1 bytes @ 0x16
  1067  000076                     	ds	1
  1068  000077                     SRV_ADT7410_ReadMeanSensor@temp:
  1069                           	callstack 0
  1070  000077                     floorf@u:
  1071                           	callstack 0
  1072                           
  1073                           ; 4 bytes @ 0x17
  1074  000077                     	ds	2
  1075  000079                     SRV_ADT7410_ReadMeanSensor@valueAux:
  1076                           	callstack 0
  1077                           
  1078                           ; 4 bytes @ 0x19
  1079  000079                     	ds	2
  1080  00007B                     ?_efgtoa:
  1081                           	callstack 0
  1082  00007B                     efgtoa@fp:
  1083                           	callstack 0
  1084                           
  1085                           ; 2 bytes @ 0x1B
  1086  00007B                     	ds	2
  1087  00007D                     SRV_ADT7410_ReadMeanSensor@index:
  1088                           	callstack 0
  1089  00007D                     efgtoa@f:
  1090                           	callstack 0
  1091                           
  1092                           ; 4 bytes @ 0x1D
  1093  00007D                     	ds	4
  1094  000081                     efgtoa@c:
  1095                           	callstack 0
  1096                           
  1097                           ; 1 bytes @ 0x21
  1098  000081                     	ds	1
  1099  000082                     ??_efgtoa:
  1100                           
  1101                           ; 1 bytes @ 0x22
  1102  000082                     	ds	5
  1103  000087                     _efgtoa$3637:
  1104                           	callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x27
  1107  000087                     	ds	2
  1108  000089                     _efgtoa$3638:
  1109                           	callstack 0
  1110                           
  1111                           ; 2 bytes @ 0x29
  1112  000089                     	ds	2
  1113  00008B                     _efgtoa$3642:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x2B
  1117  00008B                     	ds	2
  1118  00008D                     _efgtoa$3646:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x2D
  1122  00008D                     	ds	2
  1123  00008F                     _efgtoa$3647:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x2F
  1127  00008F                     	ds	2
  1128  000091                     _efgtoa$3648:
  1129                           	callstack 0
  1130                           
  1131                           ; 2 bytes @ 0x31
  1132  000091                     	ds	2
  1133  000093                     efgtoa@t:
  1134                           	callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x33
  1137  000093                     	ds	2
  1138  000095                     efgtoa@pp:
  1139                           	callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x35
  1142  000095                     	ds	2
  1143  000097                     efgtoa@ne:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x37
  1147  000097                     	ds	2
  1148  000099                     efgtoa@m:
  1149                           	callstack 0
  1150                           
  1151                           ; 2 bytes @ 0x39
  1152  000099                     	ds	2
  1153  00009B                     efgtoa@ou:
  1154                           	callstack 0
  1155                           
  1156                           ; 4 bytes @ 0x3B
  1157  00009B                     	ds	4
  1158  00009F                     efgtoa@d:
  1159                           	callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x3F
  1162  00009F                     	ds	2
  1163  0000A1                     efgtoa@sign:
  1164                           	callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x41
  1167  0000A1                     	ds	2
  1168  0000A3                     efgtoa@p:
  1169                           	callstack 0
  1170                           
  1171                           ; 2 bytes @ 0x43
  1172  0000A3                     	ds	2
  1173  0000A5                     efgtoa@w:
  1174                           	callstack 0
  1175                           
  1176                           ; 2 bytes @ 0x45
  1177  0000A5                     	ds	2
  1178  0000A7                     efgtoa@nmode:
  1179                           	callstack 0
  1180                           
  1181                           ; 1 bytes @ 0x47
  1182  0000A7                     	ds	1
  1183  0000A8                     efgtoa@mode:
  1184                           	callstack 0
  1185                           
  1186                           ; 1 bytes @ 0x48
  1187  0000A8                     	ds	1
  1188  0000A9                     efgtoa@h:
  1189                           	callstack 0
  1190                           
  1191                           ; 4 bytes @ 0x49
  1192  0000A9                     	ds	4
  1193  0000AD                     efgtoa@l:
  1194                           	callstack 0
  1195                           
  1196                           ; 4 bytes @ 0x4D
  1197  0000AD                     	ds	4
  1198  0000B1                     efgtoa@i:
  1199                           	callstack 0
  1200                           
  1201                           ; 2 bytes @ 0x51
  1202  0000B1                     	ds	2
  1203  0000B3                     efgtoa@g:
  1204                           	callstack 0
  1205                           
  1206                           ; 4 bytes @ 0x53
  1207  0000B3                     	ds	4
  1208  0000B7                     efgtoa@e:
  1209                           	callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x57
  1212  0000B7                     	ds	2
  1213  0000B9                     efgtoa@n:
  1214                           	callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x59
  1217  0000B9                     	ds	2
  1218  0000BB                     efgtoa@u:
  1219                           	callstack 0
  1220                           
  1221                           ; 4 bytes @ 0x5B
  1222  0000BB                     	ds	4
  1223  0000BF                     ?_vfpfcnvrt:
  1224                           	callstack 0
  1225  0000BF                     vfpfcnvrt@fp:
  1226                           	callstack 0
  1227                           
  1228                           ; 2 bytes @ 0x5F
  1229  0000BF                     	ds	2
  1230  0000C1                     vfpfcnvrt@fmt:
  1231                           	callstack 0
  1232                           
  1233                           ; 2 bytes @ 0x61
  1234  0000C1                     	ds	2
  1235  0000C3                     vfpfcnvrt@ap:
  1236                           	callstack 0
  1237                           
  1238                           ; 2 bytes @ 0x63
  1239  0000C3                     	ds	2
  1240  0000C5                     ??_vfpfcnvrt:
  1241                           
  1242                           ; 1 bytes @ 0x65
  1243  0000C5                     	ds	4
  1244  0000C9                     vfpfcnvrt@ll:
  1245                           	callstack 0
  1246                           
  1247                           ; 8 bytes @ 0x69
  1248  0000C9                     	ds	8
  1249  0000D1                     vfpfcnvrt@done:
  1250                           	callstack 0
  1251                           
  1252                           ; 2 bytes @ 0x71
  1253  0000D1                     	ds	2
  1254  0000D3                     _vfpfcnvrt$3662:
  1255                           	callstack 0
  1256                           
  1257                           ; 2 bytes @ 0x73
  1258  0000D3                     	ds	2
  1259  0000D5                     _vfpfcnvrt$3663:
  1260                           	callstack 0
  1261                           
  1262                           ; 2 bytes @ 0x75
  1263  0000D5                     	ds	2
  1264  0000D7                     _vfpfcnvrt$3669:
  1265                           	callstack 0
  1266                           
  1267                           ; 2 bytes @ 0x77
  1268  0000D7                     	ds	2
  1269  0000D9                     vfpfcnvrt@f:
  1270                           	callstack 0
  1271                           
  1272                           ; 4 bytes @ 0x79
  1273  0000D9                     	ds	4
  1274  0000DD                     vfpfcnvrt@ct:
  1275                           	callstack 0
  1276                           
  1277                           ; 3 bytes @ 0x7D
  1278  0000DD                     	ds	3
  1279  0000E0                     vfpfcnvrt@c:
  1280                           	callstack 0
  1281                           
  1282                           ; 1 bytes @ 0x80
  1283  0000E0                     	ds	1
  1284  0000E1                     ?_vfprintf:
  1285                           	callstack 0
  1286  0000E1                     vfprintf@fp:
  1287                           	callstack 0
  1288                           
  1289                           ; 2 bytes @ 0x81
  1290  0000E1                     	ds	2
  1291  0000E3                     vfprintf@fmt:
  1292                           	callstack 0
  1293                           
  1294                           ; 2 bytes @ 0x83
  1295  0000E3                     	ds	2
  1296  0000E5                     vfprintf@ap:
  1297                           	callstack 0
  1298                           
  1299                           ; 2 bytes @ 0x85
  1300  0000E5                     	ds	2
  1301  0000E7                     vfprintf@cfmt:
  1302                           	callstack 0
  1303                           
  1304                           ; 2 bytes @ 0x87
  1305  0000E7                     	ds	2
  1306  0000E9                     ?_sprintf:
  1307                           	callstack 0
  1308  0000E9                     sprintf@s:
  1309                           	callstack 0
  1310                           
  1311                           ; 2 bytes @ 0x89
  1312  0000E9                     	ds	2
  1313  0000EB                     sprintf@fmt:
  1314                           	callstack 0
  1315                           
  1316                           ; 2 bytes @ 0x8B
  1317  0000EB                     	ds	10
  1318  0000F5                     App_HTAD_Home@objetoHTAD:
  1319                           	callstack 0
  1320  0000F5                     App_HTAD_MenuAjusteErro@objetoHTAD:
  1321                           	callstack 0
  1322                           
  1323                           ; 2 bytes @ 0x95
  1324  0000F5                     	ds	2
  1325                           
  1326                           	psect	cstackCOMRAM
  1327  000001                     __pcstackCOMRAM:
  1328                           	callstack 0
  1329  000001                     ?i2_SRV_TIMER_GetTick:
  1330                           	callstack 0
  1331  000001                     EUSART1_Read@readValue:
  1332                           	callstack 0
  1333  000001                     
  1334                           ; 1 bytes @ 0x0
  1335  000001                     	ds	4
  1336  000005                     DirectNet_Send@rx:
  1337                           	callstack 0
  1338                           
  1339                           ; 1 bytes @ 0x4
  1340  000005                     	ds	1
  1341  000006                     ??_INTERRUPT_InterruptManager:
  1342                           
  1343                           ; 1 bytes @ 0x5
  1344  000006                     	ds	4
  1345  00000A                     ??_SRV_ADT7410_multiplex_on:
  1346  00000A                     ?_strlen:
  1347                           	callstack 0
  1348  00000A                     ?___fpclassifyf:
  1349                           	callstack 0
  1350  00000A                     ?_isupper:
  1351                           	callstack 0
  1352  00000A                     ?_isdigit:
  1353                           	callstack 0
  1354  00000A                     ?_strncmp:
  1355                           	callstack 0
  1356  00000A                     ?_isspace:
  1357                           	callstack 0
  1358  00000A                     ?___wmul:
  1359                           	callstack 0
  1360  00000A                     ?___awdiv:
  1361                           	callstack 0
  1362  00000A                     ?_SRV_TIMER_GetTick:
  1363                           	callstack 0
  1364  00000A                     ?_SRV_ADT7410_GetTemperature:
  1365                           	callstack 0
  1366  00000A                     ?___flmul:
  1367                           	callstack 0
  1368  00000A                     ?___lmul:
  1369                           	callstack 0
  1370  00000A                     ?___flneg:
  1371                           	callstack 0
  1372  00000A                     ?___xxtofl:
  1373                           	callstack 0
  1374  00000A                     ?___aodiv:
  1375                           	callstack 0
  1376  00000A                     ?___aomod:
  1377                           	callstack 0
  1378  00000A                     DATAEE_WriteByte@bData:
  1379                           	callstack 0
  1380  00000A                     DATAEE_ReadByte@bAdd:
  1381                           	callstack 0
  1382  00000A                     I2C1_Open@address:
  1383                           	callstack 0
  1384  00000A                     I2C1_Close@returnValue:
  1385                           	callstack 0
  1386  00000A                     I2C1_MasterSendTxData@data:
  1387                           	callstack 0
  1388  00000A                     EUSART1_Write@txData:
  1389                           	callstack 0
  1390  00000A                     DRV_LCD_Data@data:
  1391                           	callstack 0
  1392  00000A                     SRV_ADT7410_SetErrorSensor@error_pos:
  1393                           	callstack 0
  1394  00000A                     SRV_ADT7410_GetTemperature@typeRead:
  1395                           	callstack 0
  1396  00000A                     TMR0_SetInterruptHandler@InterruptHandler:
  1397                           	callstack 0
  1398  00000A                     I2C1_SetBuffer@buffer:
  1399                           	callstack 0
  1400  00000A                     I2C1_SetCallback@cb:
  1401                           	callstack 0
  1402  00000A                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1403                           	callstack 0
  1404  00000A                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1405                           	callstack 0
  1406  00000A                     EUSART1_SetErrorHandler@interruptHandler:
  1407                           	callstack 0
  1408  00000A                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1409                           	callstack 0
  1410  00000A                     calculateLRC@data:
  1411                           	callstack 0
  1412  00000A                     ___wmul@multiplier:
  1413                           	callstack 0
  1414  00000A                     ___awdiv@dividend:
  1415                           	callstack 0
  1416  00000A                     isdigit@c:
  1417                           	callstack 0
  1418  00000A                     isspace@c:
  1419                           	callstack 0
  1420  00000A                     isupper@c:
  1421                           	callstack 0
  1422  00000A                     fputc@c:
  1423                           	callstack 0
  1424  00000A                     strcpy@dest:
  1425                           	callstack 0
  1426  00000A                     strlen@s:
  1427                           	callstack 0
  1428  00000A                     strncmp@_l:
  1429                           	callstack 0
  1430  00000A                     ___lmul@multiplier:
  1431                           	callstack 0
  1432  00000A                     ___fleq@ff1:
  1433                           	callstack 0
  1434  00000A                     ___flneg@f1:
  1435                           	callstack 0
  1436  00000A                     ___flmul@b:
  1437                           	callstack 0
  1438  00000A                     ___xxtofl@val:
  1439                           	callstack 0
  1440  00000A                     ___fpclassifyf@x:
  1441                           	callstack 0
  1442  00000A                     ___aodiv@dividend:
  1443                           	callstack 0
  1444  00000A                     ___aomod@dividend:
  1445                           	callstack 0
  1446                           
  1447                           ; 8 bytes @ 0x9
  1448  00000A                     	ds	1
  1449  00000B                     ??_DRV_LCD_Cmd:
  1450  00000B                     DATAEE_WriteByte@bAdd:
  1451                           	callstack 0
  1452  00000B                     I2C1_Open@returnValue:
  1453                           	callstack 0
  1454  00000B                     DRV_LCD_WriteChar@temp:
  1455                           	callstack 0
  1456  00000B                     SRV_ADT7410_SetErrorSensor@error_neg:
  1457                           	callstack 0
  1458                           
  1459                           ; 1 bytes @ 0xA
  1460  00000B                     	ds	1
  1461  00000C                     ??_TMR0_Initialize:
  1462  00000C                     ??_isupper:
  1463  00000C                     ??_isdigit:
  1464  00000C                     ??_isspace:
  1465  00000C                     DATAEE_WriteByte@GIEBitValue:
  1466                           	callstack 0
  1467  00000C                     DRV_LCD_Cmd@cmd:
  1468                           	callstack 0
  1469  00000C                     DRV_LCD_WriteChar@y:
  1470                           	callstack 0
  1471  00000C                     SRV_ADT7410_multiplex_on@address:
  1472                           	callstack 0
  1473  00000C                     SRV_ADT7410_SetErrorSensor@sensor:
  1474                           	callstack 0
  1475  00000C                     calculateLRC@dataLength:
  1476                           	callstack 0
  1477  00000C                     I2C1_SetBuffer@bufferSize:
  1478                           	callstack 0
  1479  00000C                     I2C1_SetCallback@ptr:
  1480                           	callstack 0
  1481  00000C                     ___wmul@multiplicand:
  1482                           	callstack 0
  1483  00000C                     ___awdiv@divisor:
  1484                           	callstack 0
  1485  00000C                     fputc@fp:
  1486                           	callstack 0
  1487  00000C                     strcpy@src:
  1488                           	callstack 0
  1489  00000C                     strlen@a:
  1490                           	callstack 0
  1491  00000C                     strncmp@_r:
  1492                           	callstack 0
  1493                           
  1494                           ; 2 bytes @ 0xB
  1495  00000C                     	ds	1
  1496  00000D                     ??_DRV_LCD_Clear:
  1497  00000D                     ??_DRV_LCD_Init:
  1498  00000D                     gravarDadosNaEEPROM@enderecoEEPROM:
  1499                           	callstack 0
  1500  00000D                     DRV_LCD_SetCursor@coluna:
  1501                           	callstack 0
  1502  00000D                     DRV_LCD_WriteChar@data:
  1503                           	callstack 0
  1504  00000D                     calculateLRC@lrc:
  1505                           	callstack 0
  1506  00000D                     lerDadosDaEEPROM@i:
  1507                           	callstack 0
  1508                           
  1509                           ; 2 bytes @ 0xC
  1510  00000D                     	ds	1
  1511  00000E                     ??_Driver_Analog_Run:
  1512  00000E                     ??_readKeypad:
  1513  00000E                     ??_fputc:
  1514  00000E                     ??___fpclassifyf:
  1515  00000E                     ??_strcpy:
  1516  00000E                     ??___xxtofl:
  1517  00000E                     I2C1_SetCallback@idx:
  1518                           	callstack 0
  1519  00000E                     DRV_LCD_SetCursor@cursorOn:
  1520                           	callstack 0
  1521  00000E                     SRV_ADT7410_GetTemperature@sensor:
  1522                           	callstack 0
  1523  00000E                     calculateLRC@i:
  1524                           	callstack 0
  1525  00000E                     ___awdiv@counter:
  1526                           	callstack 0
  1527  00000E                     DRV_LCD_WriteString@data:
  1528                           	callstack 0
  1529  00000E                     ___wmul@product:
  1530                           	callstack 0
  1531  00000E                     strncmp@n:
  1532                           	callstack 0
  1533  00000E                     ___lmul@multiplicand:
  1534                           	callstack 0
  1535  00000E                     ___fleq@ff2:
  1536                           	callstack 0
  1537  00000E                     ___flmul@a:
  1538                           	callstack 0
  1539                           
  1540                           ; 4 bytes @ 0xD
  1541  00000E                     	ds	1
  1542  00000F                     lerDadosDaEEPROM@enderecoEEPROM:
  1543                           	callstack 0
  1544  00000F                     DRV_LCD_SetCursor@linha:
  1545                           	callstack 0
  1546  00000F                     DirectNet_enviaDadosDDDTCO2@LCR:
  1547                           	callstack 0
  1548  00000F                     DirectNet_enviaDadosSensores@LCR:
  1549                           	callstack 0
  1550  00000F                     ___awdiv@sign:
  1551                           	callstack 0
  1552  00000F                     I2C1_SetDataCompleteCallback@cb:
  1553                           	callstack 0
  1554  00000F                     I2C1_SetAddressNackCallback@cb:
  1555                           	callstack 0
  1556                           
  1557                           ; 2 bytes @ 0xE
  1558  00000F                     	ds	1
  1559  000010                     ??_strncmp:
  1560  000010                     ?_tolower:
  1561                           	callstack 0
  1562  000010                     DRV_LCD_SetCursor@z:
  1563                           	callstack 0
  1564  000010                     _isspace$3736:
  1565                           	callstack 0
  1566  000010                     DRV_LCD_WriteString@i:
  1567                           	callstack 0
  1568  000010                     DirectNet_enviaDadosDDDTCO2@i:
  1569                           	callstack 0
  1570  000010                     DirectNet_enviaDadosSensores@i:
  1571                           	callstack 0
  1572  000010                     ___awdiv@quotient:
  1573                           	callstack 0
  1574  000010                     strcpy@s:
  1575                           	callstack 0
  1576  000010                     tolower@c:
  1577                           	callstack 0
  1578                           
  1579                           ; 2 bytes @ 0xF
  1580  000010                     	ds	1
  1581  000011                     ?_atoi:
  1582                           	callstack 0
  1583  000011                     DRV_LCD_SetCursor@y:
  1584                           	callstack 0
  1585  000011                     I2C1_SetDataCompleteCallback@ptr:
  1586                           	callstack 0
  1587  000011                     I2C1_SetAddressNackCallback@ptr:
  1588                           	callstack 0
  1589  000011                     atoi@s:
  1590                           	callstack 0
  1591  000011                     strncmp@l:
  1592                           	callstack 0
  1593                           
  1594                           ; 2 bytes @ 0x10
  1595  000011                     	ds	1
  1596  000012                     ??___flmul:
  1597  000012                     ??_tolower:
  1598  000012                     ??___fleq:
  1599  000012                     ?___awmod:
  1600                           	callstack 0
  1601  000012                     DRV_LCD_SetCursor@temp:
  1602                           	callstack 0
  1603  000012                     ___xxtofl@sign:
  1604                           	callstack 0
  1605  000012                     ___awmod@dividend:
  1606                           	callstack 0
  1607  000012                     ___fpclassifyf@e:
  1608                           	callstack 0
  1609  000012                     strcpy@d:
  1610                           	callstack 0
  1611  000012                     readKeypad@currentTick:
  1612                           	callstack 0
  1613  000012                     Driver_Analog_Run@currentTick:
  1614                           	callstack 0
  1615  000012                     ___lmul@product:
  1616                           	callstack 0
  1617  000012                     ___aodiv@divisor:
  1618                           	callstack 0
  1619  000012                     ___aomod@divisor:
  1620                           	callstack 0
  1621                           
  1622                           ; 8 bytes @ 0x11
  1623  000012                     	ds	1
  1624  000013                     ??_atoi:
  1625  000013                     ?_ctoa:
  1626                           	callstack 0
  1627  000013                     SRV_Display_Write@coluna:
  1628                           	callstack 0
  1629  000013                     SRV_Display_SetCursor@coluna:
  1630                           	callstack 0
  1631  000013                     ___xxtofl@exp:
  1632                           	callstack 0
  1633  000013                     rd1RegCompleteHandler@ptr:
  1634                           	callstack 0
  1635  000013                     rd2RegCompleteHandler@ptr:
  1636                           	callstack 0
  1637  000013                     wr1RegCompleteHandler@ptr:
  1638                           	callstack 0
  1639  000013                     wr2RegCompleteHandler@ptr:
  1640                           	callstack 0
  1641  000013                     rdBlkRegCompleteHandler@ptr:
  1642                           	callstack 0
  1643  000013                     rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621@ptr:
  1644                           	callstack 0
  1645  000013                     ctoa@fp:
  1646                           	callstack 0
  1647  000013                     fputs@s:
  1648                           	callstack 0
  1649  000013                     strncmp@r:
  1650                           	callstack 0
  1651                           
  1652                           ; 2 bytes @ 0x12
  1653  000013                     	ds	1
  1654  000014                     SRV_Display_SetCursor@linha:
  1655                           	callstack 0
  1656  000014                     SRV_Display_Write@data:
  1657                           	callstack 0
  1658  000014                     ___awmod@divisor:
  1659                           	callstack 0
  1660  000014                     ___xxtofl@arg:
  1661                           	callstack 0
  1662  000014                     ___fpclassifyf@u:
  1663                           	callstack 0
  1664                           
  1665                           ; 4 bytes @ 0x13
  1666  000014                     	ds	1
  1667  000015                     ??_I2C1_DO_TX:
  1668  000015                     ??_I2C1_DO_RX:
  1669  000015                     ??_I2C1_DO_TX_EMPTY:
  1670  000015                     ??_I2C1_DO_ADDRESS_NACK:
  1671  000015                     ctoa@c:
  1672                           	callstack 0
  1673  000015                     fputs@fp:
  1674                           	callstack 0
  1675                           
  1676                           ; 2 bytes @ 0x14
  1677  000015                     	ds	1
  1678  000016                     ??_ctoa:
  1679  000016                     ?___lldiv:
  1680                           	callstack 0
  1681  000016                     readKeypad@currentKeyState:
  1682                           	callstack 0
  1683  000016                     SRV_Display_Write@linha:
  1684                           	callstack 0
  1685  000016                     ___awmod@counter:
  1686                           	callstack 0
  1687  000016                     ___flmul@sign:
  1688                           	callstack 0
  1689  000016                     _tolower$3799:
  1690                           	callstack 0
  1691  000016                     ___lldiv@dividend:
  1692                           	callstack 0
  1693                           
  1694                           ; 4 bytes @ 0x15
  1695  000016                     	ds	1
  1696  000017                     I2C1_MasterOperation@read:
  1697                           	callstack 0
  1698  000017                     ___awmod@sign:
  1699                           	callstack 0
  1700  000017                     ___flmul@aexp:
  1701                           	callstack 0
  1702  000017                     fputs@c:
  1703                           	callstack 0
  1704  000017                     ctoa@l:
  1705                           	callstack 0
  1706  000017                     atoi@neg:
  1707                           	callstack 0
  1708                           
  1709                           ; 2 bytes @ 0x16
  1710  000017                     	ds	1
  1711  000018                     I2C1_MasterOperation@returnValue:
  1712                           	callstack 0
  1713  000018                     incrementDigit@valorSensor:
  1714                           	callstack 0
  1715  000018                     decrementDigit@valorSensor:
  1716                           	callstack 0
  1717  000018                     moveCursor@CursorLinha:
  1718                           	callstack 0
  1719  000018                     fputs@i:
  1720                           	callstack 0
  1721  000018                     ___flmul@grs:
  1722                           	callstack 0
  1723                           
  1724                           ; 4 bytes @ 0x17
  1725  000018                     	ds	1
  1726  000019                     DRV_ADT7410_Read@reg:
  1727                           	callstack 0
  1728  000019                     ctoa@w:
  1729                           	callstack 0
  1730  000019                     _atoi$3705:
  1731                           	callstack 0
  1732                           
  1733                           ; 2 bytes @ 0x18
  1734  000019                     	ds	1
  1735  00001A                     ?_pad:
  1736                           	callstack 0
  1737  00001A                     incrementDigit@CursorLinha:
  1738                           	callstack 0
  1739  00001A                     decrementDigit@CursorLinha:
  1740                           	callstack 0
  1741  00001A                     ___aodiv@counter:
  1742                           	callstack 0
  1743  00001A                     ___aomod@counter:
  1744                           	callstack 0
  1745  00001A                     moveCursor@CursorColuna:
  1746                           	callstack 0
  1747  00001A                     DRV_ADT7410_Read@data:
  1748                           	callstack 0
  1749  00001A                     pad@fp:
  1750                           	callstack 0
  1751  00001A                     ___lldiv@divisor:
  1752                           	callstack 0
  1753                           
  1754                           ; 4 bytes @ 0x19
  1755  00001A                     	ds	1
  1756  00001B                     incrementDigit@CursorColuna:
  1757                           	callstack 0
  1758  00001B                     decrementDigit@CursorColuna:
  1759                           	callstack 0
  1760  00001B                     ___aodiv@sign:
  1761                           	callstack 0
  1762  00001B                     ___aomod@sign:
  1763                           	callstack 0
  1764  00001B                     _atoi$3707:
  1765                           	callstack 0
  1766                           
  1767                           ; 2 bytes @ 0x1A
  1768  00001B                     	ds	1
  1769  00001C                     ??_incrementDigit:
  1770  00001C                     ??_decrementDigit:
  1771  00001C                     ??_moveCursor:
  1772  00001C                     ?_abs:
  1773                           	callstack 0
  1774  00001C                     ___flmul@bexp:
  1775                           	callstack 0
  1776  00001C                     DRV_ADT7410_Read@len:
  1777                           	callstack 0
  1778  00001C                     pad@buf:
  1779                           	callstack 0
  1780  00001C                     abs@a:
  1781                           	callstack 0
  1782  00001C                     ___aodiv@quotient:
  1783                           	callstack 0
  1784                           
  1785                           ; 8 bytes @ 0x1B
  1786  00001C                     	ds	1
  1787  00001D                     _atoi$3706:
  1788                           	callstack 0
  1789  00001D                     incrementDigit@digito1:
  1790                           	callstack 0
  1791  00001D                     decrementDigit@digito1:
  1792                           	callstack 0
  1793  00001D                     ___flmul@prod:
  1794                           	callstack 0
  1795                           
  1796                           ; 4 bytes @ 0x1C
  1797  00001D                     	ds	1
  1798  00001E                     ??_abs:
  1799  00001E                     ??_DRV_ADT7410_Read:
  1800  00001E                     pad@p:
  1801                           	callstack 0
  1802  00001E                     atoi@n:
  1803                           	callstack 0
  1804  00001E                     ___lldiv@quotient:
  1805                           	callstack 0
  1806                           
  1807                           ; 4 bytes @ 0x1D
  1808  00001E                     	ds	1
  1809  00001F                     incrementDigit@digito2:
  1810                           	callstack 0
  1811  00001F                     decrementDigit@digito2:
  1812                           	callstack 0
  1813                           
  1814                           ; 2 bytes @ 0x1E
  1815  00001F                     	ds	1
  1816  000020                     ??_pad:
  1817                           
  1818                           ; 1 bytes @ 0x1F
  1819  000020                     	ds	1
  1820  000021                     ___flmul@temp:
  1821                           	callstack 0
  1822  000021                     pad@i:
  1823                           	callstack 0
  1824                           
  1825                           ; 2 bytes @ 0x20
  1826  000021                     	ds	1
  1827  000022                     DRV_ADT7410_Read@address:
  1828                           	callstack 0
  1829  000022                     ___lldiv@counter:
  1830                           	callstack 0
  1831                           
  1832                           ; 1 bytes @ 0x21
  1833  000022                     	ds	1
  1834  000023                     ?_mapValue:
  1835                           	callstack 0
  1836  000023                     ?___fladd:
  1837                           	callstack 0
  1838  000023                     ?___fltol:
  1839                           	callstack 0
  1840  000023                     mapValue@value:
  1841                           	callstack 0
  1842  000023                     pad@w:
  1843                           	callstack 0
  1844  000023                     DRV_ADT7410_Read@timeOut:
  1845                           	callstack 0
  1846  000023                     ___flge@ff1:
  1847                           	callstack 0
  1848  000023                     ___fltol@f1:
  1849                           	callstack 0
  1850  000023                     ___fladd@b:
  1851                           	callstack 0
  1852                           
  1853                           ; 4 bytes @ 0x22
  1854  000023                     	ds	2
  1855  000025                     ?_dtoa:
  1856                           	callstack 0
  1857  000025                     mapValue@inMin:
  1858                           	callstack 0
  1859  000025                     dtoa@fp:
  1860                           	callstack 0
  1861                           
  1862                           ; 2 bytes @ 0x24
  1863  000025                     	ds	2
  1864  000027                     ??___fltol:
  1865  000027                     mapValue@inMax:
  1866                           	callstack 0
  1867  000027                     DRV_ADT7410_Read@bufferBlock:
  1868                           	callstack 0
  1869  000027                     ___flge@ff2:
  1870                           	callstack 0
  1871  000027                     ___fladd@a:
  1872                           	callstack 0
  1873  000027                     dtoa@d:
  1874                           	callstack 0
  1875                           
  1876                           ; 8 bytes @ 0x26
  1877  000027                     	ds	2
  1878  000029                     mapValue@outMin:
  1879                           	callstack 0
  1880                           
  1881                           ; 2 bytes @ 0x28
  1882  000029                     	ds	2
  1883  00002B                     ??___fladd:
  1884  00002B                     ??___flge:
  1885  00002B                     ?_SRV_ADT7410_Read:
  1886                           	callstack 0
  1887  00002B                     ___fltol@sign1:
  1888                           	callstack 0
  1889  00002B                     mapValue@outMax:
  1890                           	callstack 0
  1891                           
  1892                           ; 2 bytes @ 0x2A
  1893  00002B                     	ds	1
  1894  00002C                     ___fltol@exp1:
  1895                           	callstack 0
  1896                           
  1897                           ; 1 bytes @ 0x2B
  1898  00002C                     	ds	1
  1899  00002D                     ??_mapValue:
  1900  00002D                     SRV_ADT7410_Read@address:
  1901                           	callstack 0
  1902  00002D                     convertFloatToBuffer@value:
  1903                           	callstack 0
  1904                           
  1905                           ; 4 bytes @ 0x2C
  1906  00002D                     	ds	1
  1907  00002E                     SRV_ADT7410_Read@data:
  1908                           	callstack 0
  1909                           
  1910                           ; 2 bytes @ 0x2D
  1911  00002E                     	ds	1
  1912  00002F                     ??_dtoa:
  1913  00002F                     ___fladd@signs:
  1914                           	callstack 0
  1915                           
  1916                           ; 1 bytes @ 0x2E
  1917  00002F                     	ds	1
  1918  000030                     ___fladd@aexp:
  1919                           	callstack 0
  1920  000030                     SRV_ADT7410_Read@temp:
  1921                           	callstack 0
  1922                           
  1923                           ; 2 bytes @ 0x2F
  1924  000030                     	ds	1
  1925  000031                     ?_Driver_Analog_GetValueAN0:
  1926                           	callstack 0
  1927  000031                     ?_Driver_Analog_GetValueAN1:
  1928                           	callstack 0
  1929  000031                     ?_Driver_Analog_GetValueAN3:
  1930                           	callstack 0
  1931  000031                     ___fladd@bexp:
  1932                           	callstack 0
  1933  000031                     convertFloatToBuffer@buffer:
  1934                           	callstack 0
  1935                           
  1936                           ; 2 bytes @ 0x30
  1937  000031                     	ds	1
  1938  000032                     ___fladd@grs:
  1939                           	callstack 0
  1940                           
  1941                           ; 1 bytes @ 0x31
  1942  000032                     	ds	1
  1943  000033                     ??_Driver_Analog_GetValueAN0:
  1944  000033                     ??_Driver_Analog_GetValueAN1:
  1945  000033                     ??_Driver_Analog_GetValueAN3:
  1946  000033                     ?___flsub:
  1947                           	callstack 0
  1948  000033                     convertFloatToBuffer@bufferSize:
  1949                           	callstack 0
  1950  000033                     ___flsub@b:
  1951                           	callstack 0
  1952                           
  1953                           ; 4 bytes @ 0x32
  1954  000033                     	ds	1
  1955  000034                     ??_convertFloatToBuffer:
  1956                           
  1957                           ; 1 bytes @ 0x33
  1958  000034                     	ds	1
  1959  000035                     Driver_Analog_GetValueAN0@averageValue:
  1960                           	callstack 0
  1961  000035                     Driver_Analog_GetValueAN1@averageValue:
  1962                           	callstack 0
  1963  000035                     Driver_Analog_GetValueAN3@averageValue:
  1964                           	callstack 0
  1965                           
  1966                           ; 2 bytes @ 0x34
  1967  000035                     	ds	1
  1968  000036                     convertFloatToBuffer@val:
  1969                           	callstack 0
  1970                           
  1971                           ; 2 bytes @ 0x35
  1972  000036                     	ds	1
  1973  000037                     _dtoa$3613:
  1974                           	callstack 0
  1975  000037                     Driver_Analog_GetValueAN0@sum:
  1976                           	callstack 0
  1977  000037                     Driver_Analog_GetValueAN1@sum:
  1978                           	callstack 0
  1979  000037                     Driver_Analog_GetValueAN3@sum:
  1980                           	callstack 0
  1981  000037                     ___flsub@a:
  1982                           	callstack 0
  1983                           
  1984                           ; 4 bytes @ 0x36
  1985  000037                     	ds	1
  1986  000038                     convertFloatToBuffer@i:
  1987                           	callstack 0
  1988                           
  1989                           ; 2 bytes @ 0x37
  1990  000038                     	ds	1
  1991  000039                     dtoa@p:
  1992                           	callstack 0
  1993                           
  1994                           ; 2 bytes @ 0x38
  1995  000039                     	ds	2
  1996  00003B                     ?___fldiv:
  1997                           	callstack 0
  1998  00003B                     Driver_Analog_GetValueAN0@i:
  1999                           	callstack 0
  2000  00003B                     Driver_Analog_GetValueAN1@i:
  2001                           	callstack 0
  2002  00003B                     Driver_Analog_GetValueAN3@i:
  2003                           	callstack 0
  2004  00003B                     dtoa@w:
  2005                           	callstack 0
  2006  00003B                     ___fldiv@b:
  2007                           	callstack 0
  2008                           
  2009                           ; 4 bytes @ 0x3A
  2010  00003B                     	ds	1
  2011  00003C                     DirectNet_Run@objetoHTAD_DirectNet:
  2012                           	callstack 0
  2013                           
  2014                           ; 2 bytes @ 0x3B
  2015  00003C                     	ds	1
  2016  00003D                     dtoa@s:
  2017                           	callstack 0
  2018                           
  2019                           ; 2 bytes @ 0x3C
  2020  00003D                     	ds	1
  2021  00003E                     ??_DirectNet_Run:
  2022                           
  2023                           ; 1 bytes @ 0x3D
  2024  00003E                     	ds	1
  2025  00003F                     ___fldiv@a:
  2026                           	callstack 0
  2027  00003F                     dtoa@n:
  2028                           	callstack 0
  2029                           
  2030                           ; 8 bytes @ 0x3E
  2031  00003F                     	ds	3
  2032  000042                     DirectNet_Run@valBruto:
  2033                           	callstack 0
  2034                           
  2035                           ; 2 bytes @ 0x41
  2036  000042                     	ds	1
  2037  000043                     ??___fldiv:
  2038                           
  2039                           ; 1 bytes @ 0x42
  2040  000043                     	ds	1
  2041  000044                     DirectNet_Run@valBruto_3049:
  2042                           	callstack 0
  2043                           
  2044                           ; 2 bytes @ 0x43
  2045  000044                     	ds	2
  2046  000046                     DirectNet_Run@valBruto_3050:
  2047                           	callstack 0
  2048                           
  2049                           ; 2 bytes @ 0x45
  2050  000046                     	ds	1
  2051  000047                     ??_SRV_ADT7410_ReadMeanSensor:
  2052  000047                     ??_floorf:
  2053  000047                     dtoa@i:
  2054                           	callstack 0
  2055                           
  2056                           ; 2 bytes @ 0x46
  2057  000047                     	ds	1
  2058  000048                     DirectNet_Run@valBruto_3051:
  2059                           	callstack 0
  2060                           
  2061                           ; 2 bytes @ 0x47
  2062  000048                     	ds	1
  2063  000049                     ??_SRV_ADT7410_Run:
  2064  000049                     SRV_ADT7410_Init@y:
  2065                           	callstack 0
  2066                           
  2067                           ; 2 bytes @ 0x48
  2068  000049                     	ds	1
  2069  00004A                     DirectNet_Run@i:
  2070                           	callstack 0
  2071                           
  2072                           ; 2 bytes @ 0x49
  2073  00004A                     	ds	1
  2074  00004B                     
  2075                           ; 1 bytes @ 0x4A
  2076  00004B                     	ds	2
  2077  00004D                     
  2078                           ; 1 bytes @ 0x4C
  2079 ;;
  2080 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2081 ;;
  2082 ;; *************** function _main *****************
  2083 ;; Defined at:
  2084 ;;		line 49 in file "main.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;		None
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;		None
  2089 ;; Return value:  Size  Location     Type
  2090 ;;                  1    wreg      void 
  2091 ;; Registers used:
  2092 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2098 ;;      Params:         0       0       0       0       0       0       0
  2099 ;;      Locals:         0       0       0       0       0       0       0
  2100 ;;      Temps:          0       0       0       0       0       0       0
  2101 ;;      Totals:         0       0       0       0       0       0       0
  2102 ;;Total ram usage:        0 bytes
  2103 ;; Hardware stack levels required when called: 17
  2104 ;; This function calls:
  2105 ;;		_App_HTAD_init
  2106 ;;		_App_HTAD_run
  2107 ;;		_SYSTEM_Initialize
  2108 ;; This function is called by:
  2109 ;;		Startup code after reset
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           
  2113                           	psect	text0
  2114  0075A6                     __ptext0:
  2115                           	callstack 0
  2116  0075A6                     _main:
  2117                           	callstack 14
  2118  0075A6                     
  2119                           ;main.c: 52:     SYSTEM_Initialize();
  2120  0075A6  EC60  F03A         	call	_SYSTEM_Initialize	;wreg free
  2121  0075AA                     
  2122                           ;main.c: 59:     (INTCONbits.GIE = 1);
  2123  0075AA  8EF2               	bsf	242,7,c	;volatile
  2124  0075AC                     
  2125                           ;main.c: 65:     (INTCONbits.PEIE = 1);
  2126  0075AC  8CF2               	bsf	242,6,c	;volatile
  2127  0075AE                     
  2128                           ;main.c: 70:     App_HTAD_init();
  2129  0075AE  EC18  F034         	call	_App_HTAD_init	;wreg free
  2130  0075B2                     l13786:
  2131                           
  2132                           ;main.c: 73:     {;main.c: 74:         App_HTAD_run();
  2133  0075B2  EC58  F035         	call	_App_HTAD_run	;wreg free
  2134  0075B6  EFD9  F03A         	goto	l13786
  2135  0075BA  EF4E  F000         	goto	start
  2136  0075BE                     __end_of_main:
  2137                           	callstack 0
  2138                           
  2139 ;; *************** function _SYSTEM_Initialize *****************
  2140 ;; Defined at:
  2141 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;		None
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;		None
  2146 ;; Return value:  Size  Location     Type
  2147 ;;                  1    wreg      void 
  2148 ;; Registers used:
  2149 ;;		wreg, status,2, status,0, cstack
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2155 ;;      Params:         0       0       0       0       0       0       0
  2156 ;;      Locals:         0       0       0       0       0       0       0
  2157 ;;      Temps:          0       0       0       0       0       0       0
  2158 ;;      Totals:         0       0       0       0       0       0       0
  2159 ;;Total ram usage:        0 bytes
  2160 ;; Hardware stack levels used: 1
  2161 ;; Hardware stack levels required when called: 6
  2162 ;; This function calls:
  2163 ;;		_ADC_Initialize
  2164 ;;		_EUSART1_Initialize
  2165 ;;		_I2C1_Initialize
  2166 ;;		_INTERRUPT_Initialize
  2167 ;;		_OSCILLATOR_Initialize
  2168 ;;		_PIN_MANAGER_Initialize
  2169 ;;		_TMR0_Initialize
  2170 ;; This function is called by:
  2171 ;;		_main
  2172 ;; This function uses a non-reentrant model
  2173 ;;
  2174                           
  2175                           	psect	text1
  2176  0074C0                     __ptext1:
  2177                           	callstack 0
  2178  0074C0                     _SYSTEM_Initialize:
  2179                           	callstack 24
  2180  0074C0                     
  2181                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  2182  0074C0  ECE3  F03B         	call	_INTERRUPT_Initialize	;wreg free
  2183  0074C4                     
  2184                           ;mcc_generated_files/mcc.c: 54:     I2C1_Initialize();
  2185  0074C4  EC31  F03B         	call	_I2C1_Initialize	;wreg free
  2186  0074C8                     
  2187                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  2188  0074C8  EC8F  F039         	call	_PIN_MANAGER_Initialize	;wreg free
  2189  0074CC                     
  2190                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  2191  0074CC  ECAB  F03A         	call	_OSCILLATOR_Initialize	;wreg free
  2192  0074D0                     
  2193                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  2194  0074D0  EC5A  F039         	call	_TMR0_Initialize	;wreg free
  2195  0074D4                     
  2196                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  2197  0074D4  EC1B  F03B         	call	_ADC_Initialize	;wreg free
  2198  0074D8                     
  2199                           ;mcc_generated_files/mcc.c: 59:     EUSART1_Initialize();
  2200  0074D8  ECB8  F035         	call	_EUSART1_Initialize	;wreg free
  2201  0074DC  0012               	return		;funcret
  2202  0074DE                     __end_of_SYSTEM_Initialize:
  2203                           	callstack 0
  2204                           
  2205 ;; *************** function _PIN_MANAGER_Initialize *****************
  2206 ;; Defined at:
  2207 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;		None
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;		None
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  1    wreg      void 
  2214 ;; Registers used:
  2215 ;;		wreg, status,2
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2221 ;;      Params:         0       0       0       0       0       0       0
  2222 ;;      Locals:         0       0       0       0       0       0       0
  2223 ;;      Temps:          0       0       0       0       0       0       0
  2224 ;;      Totals:         0       0       0       0       0       0       0
  2225 ;;Total ram usage:        0 bytes
  2226 ;; Hardware stack levels used: 1
  2227 ;; Hardware stack levels required when called: 4
  2228 ;; This function calls:
  2229 ;;		Nothing
  2230 ;; This function is called by:
  2231 ;;		_SYSTEM_Initialize
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           	psect	text2
  2236  00731E                     __ptext2:
  2237                           	callstack 0
  2238  00731E                     _PIN_MANAGER_Initialize:
  2239                           	callstack 25
  2240  00731E                     
  2241                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2242  00731E  0E00               	movlw	0
  2243  007320  6E89               	movwf	137,c	;volatile
  2244                           
  2245                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  2246  007322  0E00               	movlw	0
  2247  007324  6E8A               	movwf	138,c	;volatile
  2248                           
  2249                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  2250  007326  0E00               	movlw	0
  2251  007328  6E8B               	movwf	139,c	;volatile
  2252                           
  2253                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xCB;
  2254  00732A  0ECB               	movlw	203
  2255  00732C  6E92               	movwf	146,c	;volatile
  2256                           
  2257                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x00;
  2258  00732E  0E00               	movlw	0
  2259  007330  6E93               	movwf	147,c	;volatile
  2260                           
  2261                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x9F;
  2262  007332  0E9F               	movlw	159
  2263  007334  6E94               	movwf	148,c	;volatile
  2264                           
  2265                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x00;
  2266  007336  0E00               	movlw	0
  2267  007338  010F               	movlb	15	; () banked
  2268  00733A  6F3A               	movwf	58,b	;volatile
  2269                           
  2270                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x30;
  2271  00733C  0E30               	movlw	48
  2272  00733E  6F39               	movwf	57,b	;volatile
  2273                           
  2274                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  2275  007340  0E2F               	movlw	47
  2276  007342  6F38               	movwf	56,b	;volatile
  2277                           
  2278                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  2279  007344  0E00               	movlw	0
  2280  007346  6E61               	movwf	97,c	;volatile
  2281  007348                     
  2282                           ; BSR set to: 15
  2283                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  2284  007348  8EF1               	bsf	241,7,c	;volatile
  2285  00734A                     
  2286                           ; BSR set to: 15
  2287  00734A  0012               	return		;funcret
  2288  00734C                     __end_of_PIN_MANAGER_Initialize:
  2289                           	callstack 0
  2290                           
  2291 ;; *************** function _OSCILLATOR_Initialize *****************
  2292 ;; Defined at:
  2293 ;;		line 62 in file "mcc_generated_files/mcc.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;		None
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;		None
  2298 ;; Return value:  Size  Location     Type
  2299 ;;                  1    wreg      void 
  2300 ;; Registers used:
  2301 ;;		wreg, status,2
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2307 ;;      Params:         0       0       0       0       0       0       0
  2308 ;;      Locals:         0       0       0       0       0       0       0
  2309 ;;      Temps:          0       0       0       0       0       0       0
  2310 ;;      Totals:         0       0       0       0       0       0       0
  2311 ;;Total ram usage:        0 bytes
  2312 ;; Hardware stack levels used: 1
  2313 ;; Hardware stack levels required when called: 4
  2314 ;; This function calls:
  2315 ;;		Nothing
  2316 ;; This function is called by:
  2317 ;;		_SYSTEM_Initialize
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           	psect	text3
  2322  007556                     __ptext3:
  2323                           	callstack 0
  2324  007556                     _OSCILLATOR_Initialize:
  2325                           	callstack 25
  2326  007556                     
  2327                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x30;
  2328  007556  0E30               	movlw	48
  2329  007558  6ED3               	movwf	211,c	;volatile
  2330                           
  2331                           ;mcc_generated_files/mcc.c: 67:     OSCCON2 = 0x04;
  2332  00755A  0E04               	movlw	4
  2333  00755C  6ED2               	movwf	210,c	;volatile
  2334                           
  2335                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
  2336  00755E  0E00               	movlw	0
  2337  007560  6E9B               	movwf	155,c	;volatile
  2338  007562                     l160:
  2339                           
  2340                           ;mcc_generated_files/mcc.c: 71:     while(PLLRDY == 0)
  2341  007562  AED2               	btfss	4050,7,c	;volatile
  2342  007564  EFB6  F03A         	goto	u3841
  2343  007568  EFB8  F03A         	goto	u3840
  2344  00756C                     u3841:
  2345  00756C  EFB1  F03A         	goto	l160
  2346  007570                     u3840:
  2347  007570  0012               	return		;funcret
  2348  007572                     __end_of_OSCILLATOR_Initialize:
  2349                           	callstack 0
  2350                           
  2351 ;; *************** function _INTERRUPT_Initialize *****************
  2352 ;; Defined at:
  2353 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;		None
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;		None
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  1    wreg      void 
  2360 ;; Registers used:
  2361 ;;		None
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2367 ;;      Params:         0       0       0       0       0       0       0
  2368 ;;      Locals:         0       0       0       0       0       0       0
  2369 ;;      Temps:          0       0       0       0       0       0       0
  2370 ;;      Totals:         0       0       0       0       0       0       0
  2371 ;;Total ram usage:        0 bytes
  2372 ;; Hardware stack levels used: 1
  2373 ;; Hardware stack levels required when called: 4
  2374 ;; This function calls:
  2375 ;;		Nothing
  2376 ;; This function is called by:
  2377 ;;		_SYSTEM_Initialize
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           	psect	text4
  2382  0077C6                     __ptext4:
  2383                           	callstack 0
  2384  0077C6                     _INTERRUPT_Initialize:
  2385                           	callstack 25
  2386  0077C6                     
  2387                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  2388  0077C6  9ED0               	bcf	208,7,c	;volatile
  2389  0077C8  0012               	return		;funcret
  2390  0077CA                     __end_of_INTERRUPT_Initialize:
  2391                           	callstack 0
  2392                           
  2393 ;; *************** function _I2C1_Initialize *****************
  2394 ;; Defined at:
  2395 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;		None
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;		None
  2400 ;; Return value:  Size  Location     Type
  2401 ;;                  1    wreg      void 
  2402 ;; Registers used:
  2403 ;;		wreg, status,2
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2409 ;;      Params:         0       0       0       0       0       0       0
  2410 ;;      Locals:         0       0       0       0       0       0       0
  2411 ;;      Temps:          0       0       0       0       0       0       0
  2412 ;;      Totals:         0       0       0       0       0       0       0
  2413 ;;Total ram usage:        0 bytes
  2414 ;; Hardware stack levels used: 1
  2415 ;; Hardware stack levels required when called: 4
  2416 ;; This function calls:
  2417 ;;		Nothing
  2418 ;; This function is called by:
  2419 ;;		_SYSTEM_Initialize
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           	psect	text5
  2424  007662                     __ptext5:
  2425                           	callstack 0
  2426  007662                     _I2C1_Initialize:
  2427                           	callstack 25
  2428  007662                     
  2429                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x00;
  2430  007662  0E00               	movlw	0
  2431  007664  6EC7               	movwf	199,c	;volatile
  2432                           
  2433                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
  2434  007666  0E08               	movlw	8
  2435  007668  6EC6               	movwf	198,c	;volatile
  2436                           
  2437                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
  2438  00766A  0E00               	movlw	0
  2439  00766C  6EC5               	movwf	197,c	;volatile
  2440                           
  2441                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x63;
  2442  00766E  0E63               	movlw	99
  2443  007670  6EC8               	movwf	200,c	;volatile
  2444  007672                     
  2445                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
  2446  007672  9AC6               	bcf	198,5,c	;volatile
  2447  007674  0012               	return		;funcret
  2448  007676                     __end_of_I2C1_Initialize:
  2449                           	callstack 0
  2450                           
  2451 ;; *************** function _EUSART1_Initialize *****************
  2452 ;; Defined at:
  2453 ;;		line 85 in file "mcc_generated_files/eusart1.c"
  2454 ;; Parameters:    Size  Location     Type
  2455 ;;		None
  2456 ;; Auto vars:     Size  Location     Type
  2457 ;;		None
  2458 ;; Return value:  Size  Location     Type
  2459 ;;                  1    wreg      void 
  2460 ;; Registers used:
  2461 ;;		wreg, status,2, status,0, cstack
  2462 ;; Tracked objects:
  2463 ;;		On entry : 0/0
  2464 ;;		On exit  : 0/0
  2465 ;;		Unchanged: 0/0
  2466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2467 ;;      Params:         0       0       0       0       0       0       0
  2468 ;;      Locals:         0       0       0       0       0       0       0
  2469 ;;      Temps:          0       0       0       0       0       0       0
  2470 ;;      Totals:         0       0       0       0       0       0       0
  2471 ;;Total ram usage:        0 bytes
  2472 ;; Hardware stack levels used: 1
  2473 ;; Hardware stack levels required when called: 5
  2474 ;; This function calls:
  2475 ;;		_EUSART1_SetErrorHandler
  2476 ;;		_EUSART1_SetFramingErrorHandler
  2477 ;;		_EUSART1_SetOverrunErrorHandler
  2478 ;;		_EUSART1_SetRxInterruptHandler
  2479 ;; This function is called by:
  2480 ;;		_SYSTEM_Initialize
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           	psect	text6
  2485  006B70                     __ptext6:
  2486                           	callstack 0
  2487  006B70                     _EUSART1_Initialize:
  2488                           	callstack 24
  2489  006B70                     
  2490                           ;mcc_generated_files/eusart1.c: 88:     PIE1bits.RC1IE = 0;
  2491  006B70  9A9D               	bcf	157,5,c	;volatile
  2492  006B72                     
  2493                           ;mcc_generated_files/eusart1.c: 89:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  2494  006B72  0E2A               	movlw	low _EUSART1_Receive_ISR
  2495  006B74  6E0A               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  2496  006B76  0E5D               	movlw	high _EUSART1_Receive_ISR
  2497  006B78  6E0B               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  2498  006B7A  EC93  F03B         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  2499  006B7E                     
  2500                           ;mcc_generated_files/eusart1.c: 93:     BAUDCON1 = 0x0A;
  2501  006B7E  0E0A               	movlw	10
  2502  006B80  6EB8               	movwf	184,c	;volatile
  2503  006B82                     
  2504                           ;mcc_generated_files/eusart1.c: 96:     RCSTA1 = 0x90;
  2505  006B82  0E90               	movlw	144
  2506  006B84  6EAB               	movwf	171,c	;volatile
  2507  006B86                     
  2508                           ;mcc_generated_files/eusart1.c: 99:     TXSTA1 = 0x24;
  2509  006B86  0E24               	movlw	36
  2510  006B88  6EAC               	movwf	172,c	;volatile
  2511  006B8A                     
  2512                           ;mcc_generated_files/eusart1.c: 102:     SPBRG1 = 0x08;
  2513  006B8A  0E08               	movlw	8
  2514  006B8C  6EAF               	movwf	175,c	;volatile
  2515  006B8E                     
  2516                           ;mcc_generated_files/eusart1.c: 105:     SPBRGH1 = 0x02;
  2517  006B8E  0E02               	movlw	2
  2518  006B90  6EB0               	movwf	176,c	;volatile
  2519  006B92                     
  2520                           ;mcc_generated_files/eusart1.c: 108:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  2521  006B92  0E08               	movlw	low _EUSART1_DefaultFramingErrorHandler
  2522  006B94  6E0A               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  2523  006B96  0E78               	movlw	high _EUSART1_DefaultFramingErrorHandler
  2524  006B98  6E0B               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  2525  006B9A  EC9D  F03B         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  2526  006B9E                     
  2527                           ;mcc_generated_files/eusart1.c: 109:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  2528  006B9E  0EBA               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  2529  006BA0  6E0A               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  2530  006BA2  0E77               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  2531  006BA4  6E0B               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  2532  006BA6  EC98  F03B         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  2533  006BAA                     
  2534                           ;mcc_generated_files/eusart1.c: 110:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  2535  006BAA  0EC0               	movlw	low _EUSART1_DefaultErrorHandler
  2536  006BAC  6E0A               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  2537  006BAE  0E77               	movlw	high _EUSART1_DefaultErrorHandler
  2538  006BB0  6E0B               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  2539  006BB2  ECA2  F03B         	call	_EUSART1_SetErrorHandler	;wreg free
  2540                           
  2541                           ;mcc_generated_files/eusart1.c: 112:     eusart1RxLastError.status = 0;
  2542  006BB6  0E00               	movlw	0
  2543  006BB8  0101               	movlb	1	; () banked
  2544  006BBA  6FAE               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  2545                           
  2546                           ;mcc_generated_files/eusart1.c: 115:     eusart1RxHead = 0;
  2547  006BBC  0E00               	movlw	0
  2548  006BBE  6E55               	movwf	_eusart1RxHead^0,c	;volatile
  2549                           
  2550                           ;mcc_generated_files/eusart1.c: 116:     eusart1RxTail = 0;
  2551  006BC0  0E00               	movlw	0
  2552  006BC2  6E54               	movwf	_eusart1RxTail^0,c	;volatile
  2553                           
  2554                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxCount = 0;
  2555  006BC4  0E00               	movlw	0
  2556  006BC6  0100               	movlb	0	; () banked
  2557  006BC8  6FF9               	movwf	_eusart1RxCount& (0+255),b	;volatile
  2558  006BCA                     
  2559                           ; BSR set to: 0
  2560                           ;mcc_generated_files/eusart1.c: 120:     PIE1bits.RC1IE = 1;
  2561  006BCA  8A9D               	bsf	157,5,c	;volatile
  2562  006BCC                     
  2563                           ; BSR set to: 0
  2564  006BCC  0012               	return		;funcret
  2565  006BCE                     __end_of_EUSART1_Initialize:
  2566                           	callstack 0
  2567                           
  2568 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  2569 ;; Defined at:
  2570 ;;		line 238 in file "mcc_generated_files/eusart1.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;  interruptHan    2    9[COMRAM] PTR FTN()void 
  2573 ;;		 -> EUSART1_Receive_ISR(1), 
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;		None
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  1    wreg      void 
  2578 ;; Registers used:
  2579 ;;		wreg, status,2, status,0
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2585 ;;      Params:         2       0       0       0       0       0       0
  2586 ;;      Locals:         0       0       0       0       0       0       0
  2587 ;;      Temps:          0       0       0       0       0       0       0
  2588 ;;      Totals:         2       0       0       0       0       0       0
  2589 ;;Total ram usage:        2 bytes
  2590 ;; Hardware stack levels used: 1
  2591 ;; Hardware stack levels required when called: 4
  2592 ;; This function calls:
  2593 ;;		Nothing
  2594 ;; This function is called by:
  2595 ;;		_EUSART1_Initialize
  2596 ;; This function uses a non-reentrant model
  2597 ;;
  2598                           
  2599                           	psect	text7
  2600  007726                     __ptext7:
  2601                           	callstack 0
  2602  007726                     _EUSART1_SetRxInterruptHandler:
  2603                           	callstack 24
  2604  007726                     
  2605                           ;mcc_generated_files/eusart1.c: 239:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2606  007726  C00A  F199         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  2607  00772A  C00B  F19A         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  2608  00772E  0012               	return		;funcret
  2609  007730                     __end_of_EUSART1_SetRxInterruptHandler:
  2610                           	callstack 0
  2611                           
  2612 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  2613 ;; Defined at:
  2614 ;;		line 229 in file "mcc_generated_files/eusart1.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;  interruptHan    2    9[COMRAM] PTR FTN()void 
  2617 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;		None
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  1    wreg      void 
  2622 ;; Registers used:
  2623 ;;		wreg, status,2, status,0
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2629 ;;      Params:         2       0       0       0       0       0       0
  2630 ;;      Locals:         0       0       0       0       0       0       0
  2631 ;;      Temps:          0       0       0       0       0       0       0
  2632 ;;      Totals:         2       0       0       0       0       0       0
  2633 ;;Total ram usage:        2 bytes
  2634 ;; Hardware stack levels used: 1
  2635 ;; Hardware stack levels required when called: 4
  2636 ;; This function calls:
  2637 ;;		Nothing
  2638 ;; This function is called by:
  2639 ;;		_EUSART1_Initialize
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           	psect	text8
  2644  007730                     __ptext8:
  2645                           	callstack 0
  2646  007730                     _EUSART1_SetOverrunErrorHandler:
  2647                           	callstack 24
  2648  007730                     
  2649                           ;mcc_generated_files/eusart1.c: 230:     EUSART1_OverrunErrorHandler = interruptHandler;
  2650  007730  C00A  F193         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  2651  007734  C00B  F194         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  2652  007738  0012               	return		;funcret
  2653  00773A                     __end_of_EUSART1_SetOverrunErrorHandler:
  2654                           	callstack 0
  2655                           
  2656 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  2657 ;; Defined at:
  2658 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;  interruptHan    2    9[COMRAM] PTR FTN()void 
  2661 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;		None
  2664 ;; Return value:  Size  Location     Type
  2665 ;;                  1    wreg      void 
  2666 ;; Registers used:
  2667 ;;		wreg, status,2, status,0
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2673 ;;      Params:         2       0       0       0       0       0       0
  2674 ;;      Locals:         0       0       0       0       0       0       0
  2675 ;;      Temps:          0       0       0       0       0       0       0
  2676 ;;      Totals:         2       0       0       0       0       0       0
  2677 ;;Total ram usage:        2 bytes
  2678 ;; Hardware stack levels used: 1
  2679 ;; Hardware stack levels required when called: 4
  2680 ;; This function calls:
  2681 ;;		Nothing
  2682 ;; This function is called by:
  2683 ;;		_EUSART1_Initialize
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687                           	psect	text9
  2688  00773A                     __ptext9:
  2689                           	callstack 0
  2690  00773A                     _EUSART1_SetFramingErrorHandler:
  2691                           	callstack 24
  2692  00773A                     
  2693                           ;mcc_generated_files/eusart1.c: 226:     EUSART1_FramingErrorHandler = interruptHandler;
  2694  00773A  C00A  F195         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  2695  00773E  C00B  F196         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  2696  007742  0012               	return		;funcret
  2697  007744                     __end_of_EUSART1_SetFramingErrorHandler:
  2698                           	callstack 0
  2699                           
  2700 ;; *************** function _EUSART1_SetErrorHandler *****************
  2701 ;; Defined at:
  2702 ;;		line 233 in file "mcc_generated_files/eusart1.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;  interruptHan    2    9[COMRAM] PTR FTN()void 
  2705 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  2706 ;; Auto vars:     Size  Location     Type
  2707 ;;		None
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  1    wreg      void 
  2710 ;; Registers used:
  2711 ;;		wreg, status,2, status,0
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2717 ;;      Params:         2       0       0       0       0       0       0
  2718 ;;      Locals:         0       0       0       0       0       0       0
  2719 ;;      Temps:          0       0       0       0       0       0       0
  2720 ;;      Totals:         2       0       0       0       0       0       0
  2721 ;;Total ram usage:        2 bytes
  2722 ;; Hardware stack levels used: 1
  2723 ;; Hardware stack levels required when called: 4
  2724 ;; This function calls:
  2725 ;;		Nothing
  2726 ;; This function is called by:
  2727 ;;		_EUSART1_Initialize
  2728 ;; This function uses a non-reentrant model
  2729 ;;
  2730                           
  2731                           	psect	text10
  2732  007744                     __ptext10:
  2733                           	callstack 0
  2734  007744                     _EUSART1_SetErrorHandler:
  2735                           	callstack 24
  2736  007744                     
  2737                           ;mcc_generated_files/eusart1.c: 234:     EUSART1_ErrorHandler = interruptHandler;
  2738  007744  C00A  F191         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  2739  007748  C00B  F192         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  2740  00774C  0012               	return		;funcret
  2741  00774E                     __end_of_EUSART1_SetErrorHandler:
  2742                           	callstack 0
  2743                           
  2744 ;; *************** function _ADC_Initialize *****************
  2745 ;; Defined at:
  2746 ;;		line 62 in file "mcc_generated_files/adc.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;		None
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;		None
  2751 ;; Return value:  Size  Location     Type
  2752 ;;                  1    wreg      void 
  2753 ;; Registers used:
  2754 ;;		wreg, status,2
  2755 ;; Tracked objects:
  2756 ;;		On entry : 0/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2760 ;;      Params:         0       0       0       0       0       0       0
  2761 ;;      Locals:         0       0       0       0       0       0       0
  2762 ;;      Temps:          0       0       0       0       0       0       0
  2763 ;;      Totals:         0       0       0       0       0       0       0
  2764 ;;Total ram usage:        0 bytes
  2765 ;; Hardware stack levels used: 1
  2766 ;; Hardware stack levels required when called: 4
  2767 ;; This function calls:
  2768 ;;		Nothing
  2769 ;; This function is called by:
  2770 ;;		_SYSTEM_Initialize
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774                           	psect	text11
  2775  007636                     __ptext11:
  2776                           	callstack 0
  2777  007636                     _ADC_Initialize:
  2778                           	callstack 25
  2779  007636                     
  2780                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  2781  007636  0E00               	movlw	0
  2782  007638  6EC1               	movwf	193,c	;volatile
  2783                           
  2784                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x00;
  2785  00763A  0E00               	movlw	0
  2786  00763C  6EC0               	movwf	192,c	;volatile
  2787                           
  2788                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  2789  00763E  0E00               	movlw	0
  2790  007640  6EC3               	movwf	195,c	;volatile
  2791                           
  2792                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  2793  007642  0E00               	movlw	0
  2794  007644  6EC4               	movwf	196,c	;volatile
  2795                           
  2796                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x01;
  2797  007646  0E01               	movlw	1
  2798  007648  6EC2               	movwf	194,c	;volatile
  2799  00764A  0012               	return		;funcret
  2800  00764C                     __end_of_ADC_Initialize:
  2801                           	callstack 0
  2802                           
  2803 ;; *************** function _App_HTAD_run *****************
  2804 ;; Defined at:
  2805 ;;		line 95 in file "App_HTAD.c"
  2806 ;; Parameters:    Size  Location     Type
  2807 ;;		None
  2808 ;; Auto vars:     Size  Location     Type
  2809 ;;		None
  2810 ;; Return value:  Size  Location     Type
  2811 ;;                  1    wreg      void 
  2812 ;; Registers used:
  2813 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  2814 ;; Tracked objects:
  2815 ;;		On entry : 0/0
  2816 ;;		On exit  : 0/0
  2817 ;;		Unchanged: 0/0
  2818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2819 ;;      Params:         0       0       0       0       0       0       0
  2820 ;;      Locals:         0       0       0       0       0       0       0
  2821 ;;      Temps:          0       0       0       0       0       0       0
  2822 ;;      Totals:         0       0       0       0       0       0       0
  2823 ;;Total ram usage:        0 bytes
  2824 ;; Hardware stack levels used: 1
  2825 ;; Hardware stack levels required when called: 16
  2826 ;; This function calls:
  2827 ;;		_App_HTAD_Home
  2828 ;;		_App_HTAD_MenuAjusteErro
  2829 ;;		_DirectNet_Run
  2830 ;;		_Driver_Analog_Run
  2831 ;;		_SRV_ADT7410_Run
  2832 ;; This function is called by:
  2833 ;;		_main
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           	psect	text12
  2838  006AB0                     __ptext12:
  2839                           	callstack 0
  2840  006AB0                     _App_HTAD_run:
  2841                           	callstack 14
  2842  006AB0                     
  2843                           ;App_HTAD.c: 97:     SRV_ADT7410_Run();
  2844  006AB0  EC6E  F026         	call	_SRV_ADT7410_Run	;wreg free
  2845  006AB4                     
  2846                           ;App_HTAD.c: 98:     Driver_Analog_Run();
  2847  006AB4  ECCF  F025         	call	_Driver_Analog_Run	;wreg free
  2848  006AB8                     
  2849                           ;App_HTAD.c: 99:     DirectNet_Run(&ObjetoHTAD);
  2850  006AB8  0EA0               	movlw	low _ObjetoHTAD
  2851  006ABA  6E3C               	movwf	DirectNet_Run@objetoHTAD_DirectNet^0,c
  2852  006ABC  0E02               	movlw	high _ObjetoHTAD
  2853  006ABE  6E3D               	movwf	(DirectNet_Run@objetoHTAD_DirectNet+1)^0,c
  2854  006AC0  ECA3  F009         	call	_DirectNet_Run	;wreg free
  2855  006AC4                     
  2856                           ;App_HTAD.c: 100:     mchStateHTAD[stateHTAD](&ObjetoHTAD);
  2857  006AC4  0EA0               	movlw	low _ObjetoHTAD
  2858  006AC6  0100               	movlb	0	; () banked
  2859  006AC8  6FF5               	movwf	App_HTAD_MenuAjusteErro@objetoHTAD& (0+255),b
  2860  006ACA  0E02               	movlw	high _ObjetoHTAD
  2861  006ACC  6FF6               	movwf	(App_HTAD_MenuAjusteErro@objetoHTAD+1)& (0+255),b
  2862  006ACE  0101               	movlb	1	; () banked
  2863  006AD0  51AD               	movf	_stateHTAD& (0+255),w,b
  2864  006AD2  0D02               	mullw	2
  2865  006AD4  0EC8               	movlw	low _mchStateHTAD
  2866  006AD6  24F3               	addwf	243,w,c
  2867  006AD8  6ED9               	movwf	fsr2l,c
  2868  006ADA  0E03               	movlw	high _mchStateHTAD
  2869  006ADC  20F4               	addwfc	prodh,w,c
  2870  006ADE  6EDA               	movwf	fsr2h,c
  2871  006AE0  D802               	call	u14058
  2872  006AE2  EF7D  F035         	goto	u14059
  2873  006AE6                     u14058:
  2874  006AE6  0005               	push	
  2875  006AE8  6EFA               	movwf	pclath,c
  2876  006AEA  50DE               	movf	postinc2,w,c
  2877  006AEC  6EFD               	movwf	tosl,c
  2878  006AEE  50DE               	movf	postinc2,w,c
  2879  006AF0  6EFE               	movwf	tosh,c
  2880  006AF2  50F8               	movf	tblptru,w,c
  2881  006AF4  6EFF               	movwf	tosu,c
  2882  006AF6  50FA               	movf	pclath,w,c
  2883  006AF8  0012               	return		;indir
  2884  006AFA                     u14059:
  2885  006AFA                     
  2886                           ;App_HTAD.c: 101:     if(ObjetoHTAD.ResetWDT == 0){
  2887  006AFA  0102               	movlb	2	; () banked
  2888  006AFC  51BA               	movf	(_ObjetoHTAD+26)& (0+255),w,b
  2889  006AFE  A4D8               	btfss	status,2,c
  2890  006B00  EF84  F035         	goto	u14061
  2891  006B04  EF86  F035         	goto	u14060
  2892  006B08                     u14061:
  2893  006B08  EF87  F035         	goto	l902
  2894  006B0C                     u14060:
  2895  006B0C                     
  2896                           ; BSR set to: 2
  2897  006B0C  0004               	clrwdt		;# 
  2898  006B0E                     l902:
  2899  006B0E  0012               	return		;funcret
  2900  006B10                     __end_of_App_HTAD_run:
  2901                           	callstack 0
  2902                           
  2903 ;; *************** function _SRV_ADT7410_Run *****************
  2904 ;; Defined at:
  2905 ;;		line 223 in file "ServiceADT7410.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;		None
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;		None
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  1    wreg      void 
  2912 ;; Registers used:
  2913 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2919 ;;      Params:         0       0       0       0       0       0       0
  2920 ;;      Locals:         0       0       0       0       0       0       0
  2921 ;;      Temps:          4       0       0       0       0       0       0
  2922 ;;      Totals:         4       0       0       0       0       0       0
  2923 ;;Total ram usage:        4 bytes
  2924 ;; Hardware stack levels used: 1
  2925 ;; Hardware stack levels required when called: 15
  2926 ;; This function calls:
  2927 ;;		_SRV_ADT7410_Off
  2928 ;;		_SRV_ADT7410_On
  2929 ;;		_SRV_ADT7410_ReadMeanSensor
  2930 ;;		_SRV_TIMER_GetTick
  2931 ;; This function is called by:
  2932 ;;		_App_HTAD_run
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           	psect	text13
  2937  004CDC                     __ptext13:
  2938                           	callstack 0
  2939  004CDC                     _SRV_ADT7410_Run:
  2940                           	callstack 14
  2941  004CDC                     
  2942                           ;ServiceADT7410.c: 225:     static uint32_t tick = 0;;ServiceADT7410.c: 226:  static uin
      +                          t32_t tickLast = 0;;ServiceADT7410.c: 228:     static uint16_t timeReset = 0;;ServiceADT
      +                          7410.c: 230:  tick = SRV_TIMER_GetTick();
  2943  004CDC  ECB9  F03A         	call	_SRV_TIMER_GetTick	;wreg free
  2944  004CE0  C00A  F16D         	movff	?_SRV_TIMER_GetTick,SRV_ADT7410_Run@tick
  2945  004CE4  C00B  F16E         	movff	?_SRV_TIMER_GetTick+1,SRV_ADT7410_Run@tick+1
  2946  004CE8  C00C  F16F         	movff	?_SRV_TIMER_GetTick+2,SRV_ADT7410_Run@tick+2
  2947  004CEC  C00D  F170         	movff	?_SRV_TIMER_GetTick+3,SRV_ADT7410_Run@tick+3
  2948  004CF0                     
  2949                           ;ServiceADT7410.c: 232:  if((uint32_t)(tick - tickLast) >= 250)
  2950  004CF0  0101               	movlb	1	; () banked
  2951  004CF2  5169               	movf	SRV_ADT7410_Run@tickLast& (0+255),w,b
  2952  004CF4  5D6D               	subwf	SRV_ADT7410_Run@tick& (0+255),w,b
  2953  004CF6  6E49               	movwf	??_SRV_ADT7410_Run^0,c
  2954  004CF8  516A               	movf	(SRV_ADT7410_Run@tickLast+1)& (0+255),w,b
  2955  004CFA  596E               	subwfb	(SRV_ADT7410_Run@tick+1)& (0+255),w,b
  2956  004CFC  6E4A               	movwf	(??_SRV_ADT7410_Run+1)^0,c
  2957  004CFE  516B               	movf	(SRV_ADT7410_Run@tickLast+2)& (0+255),w,b
  2958  004D00  596F               	subwfb	(SRV_ADT7410_Run@tick+2)& (0+255),w,b
  2959  004D02  6E4B               	movwf	(??_SRV_ADT7410_Run+2)^0,c
  2960  004D04  516C               	movf	(SRV_ADT7410_Run@tickLast+3)& (0+255),w,b
  2961  004D06  5970               	subwfb	(SRV_ADT7410_Run@tick+3)& (0+255),w,b
  2962  004D08  6E4C               	movwf	(??_SRV_ADT7410_Run+3)^0,c
  2963  004D0A  504C               	movf	(??_SRV_ADT7410_Run+3)^0,w,c
  2964  004D0C  104B               	iorwf	(??_SRV_ADT7410_Run+2)^0,w,c
  2965  004D0E  104A               	iorwf	(??_SRV_ADT7410_Run+1)^0,w,c
  2966  004D10  E109               	bnz	u13390
  2967  004D12  0EFA               	movlw	250
  2968  004D14  5C49               	subwf	??_SRV_ADT7410_Run^0,w,c
  2969  004D16  A0D8               	btfss	status,0,c
  2970  004D18  EF90  F026         	goto	u13391
  2971  004D1C  EF92  F026         	goto	u13390
  2972  004D20                     u13391:
  2973  004D20  EF03  F027         	goto	l1336
  2974  004D24                     u13390:
  2975  004D24                     
  2976                           ; BSR set to: 1
  2977                           ;ServiceADT7410.c: 233:  {;ServiceADT7410.c: 234:         tickLast = tick;
  2978  004D24  C16D  F169         	movff	SRV_ADT7410_Run@tick,SRV_ADT7410_Run@tickLast
  2979  004D28  C16E  F16A         	movff	SRV_ADT7410_Run@tick+1,SRV_ADT7410_Run@tickLast+1
  2980  004D2C  C16F  F16B         	movff	SRV_ADT7410_Run@tick+2,SRV_ADT7410_Run@tickLast+2
  2981  004D30  C170  F16C         	movff	SRV_ADT7410_Run@tick+3,SRV_ADT7410_Run@tickLast+3
  2982  004D34                     
  2983                           ; BSR set to: 1
  2984                           ;ServiceADT7410.c: 236:         timeReset++;
  2985  004D34  4B8B               	infsnz	SRV_ADT7410_Run@timeReset& (0+255),f,b
  2986  004D36  2B8C               	incf	(SRV_ADT7410_Run@timeReset+1)& (0+255),f,b
  2987  004D38                     
  2988                           ; BSR set to: 1
  2989                           ;ServiceADT7410.c: 238:         if(timeReset <= 240)
  2990  004D38  518C               	movf	(SRV_ADT7410_Run@timeReset+1)& (0+255),w,b
  2991  004D3A  E107               	bnz	u13401
  2992  004D3C  0EF1               	movlw	241
  2993  004D3E  5D8B               	subwf	SRV_ADT7410_Run@timeReset& (0+255),w,b
  2994  004D40  B0D8               	btfsc	status,0,c
  2995  004D42  EFA5  F026         	goto	u13401
  2996  004D46  EFA7  F026         	goto	u13400
  2997  004D4A                     u13401:
  2998  004D4A  EFE3  F026         	goto	l13144
  2999  004D4E                     u13400:
  3000  004D4E                     
  3001                           ; BSR set to: 1
  3002                           ;ServiceADT7410.c: 239:         {;ServiceADT7410.c: 240:             SRV_ADT7410_ReadMea
      +                          nSensor(SENSOR_S1,FAHRENHEIT,&Sensor1.FAHRENHEIT);
  3003  004D4E  0E01               	movlw	1
  3004  004D50  0100               	movlb	0	; () banked
  3005  004D52  6F6D               	movwf	SRV_ADT7410_ReadMeanSensor@typeRead& (0+255),b
  3006  004D54  0EC4               	movlw	low (_Sensor1+4)
  3007  004D56  6F6E               	movwf	SRV_ADT7410_ReadMeanSensor@value& (0+255),b
  3008  004D58  0E01               	movlw	high (_Sensor1+4)
  3009  004D5A  6F6F               	movwf	(SRV_ADT7410_ReadMeanSensor@value+1)& (0+255),b
  3010  004D5C  0E01               	movlw	1
  3011  004D5E  EC37  F011         	call	_SRV_ADT7410_ReadMeanSensor
  3012                           
  3013                           ;ServiceADT7410.c: 241:             SRV_ADT7410_ReadMeanSensor(SENSOR_S2,FAHRENHEIT,&Sen
      +                          sor2.FAHRENHEIT);
  3014  004D62  0E01               	movlw	1
  3015  004D64  0100               	movlb	0	; () banked
  3016  004D66  6F6D               	movwf	SRV_ADT7410_ReadMeanSensor@typeRead& (0+255),b
  3017  004D68  0EBC               	movlw	low (_Sensor2+4)
  3018  004D6A  6F6E               	movwf	SRV_ADT7410_ReadMeanSensor@value& (0+255),b
  3019  004D6C  0E01               	movlw	high (_Sensor2+4)
  3020  004D6E  6F6F               	movwf	(SRV_ADT7410_ReadMeanSensor@value+1)& (0+255),b
  3021  004D70  0E02               	movlw	2
  3022  004D72  EC37  F011         	call	_SRV_ADT7410_ReadMeanSensor
  3023                           
  3024                           ;ServiceADT7410.c: 242:             SRV_ADT7410_ReadMeanSensor(SENSOR_S3,FAHRENHEIT,&Sen
      +                          sor3.FAHRENHEIT);
  3025  004D76  0E01               	movlw	1
  3026  004D78  0100               	movlb	0	; () banked
  3027  004D7A  6F6D               	movwf	SRV_ADT7410_ReadMeanSensor@typeRead& (0+255),b
  3028  004D7C  0EB4               	movlw	low (_Sensor3+4)
  3029  004D7E  6F6E               	movwf	SRV_ADT7410_ReadMeanSensor@value& (0+255),b
  3030  004D80  0E01               	movlw	high (_Sensor3+4)
  3031  004D82  6F6F               	movwf	(SRV_ADT7410_ReadMeanSensor@value+1)& (0+255),b
  3032  004D84  0E03               	movlw	3
  3033  004D86  EC37  F011         	call	_SRV_ADT7410_ReadMeanSensor
  3034                           
  3035                           ;ServiceADT7410.c: 243:             SRV_ADT7410_ReadMeanSensor(SENSOR_S1,CELSIUS,&Sensor
      +                          1.CELSIUS);
  3036  004D8A  0E00               	movlw	0
  3037  004D8C  0100               	movlb	0	; () banked
  3038  004D8E  6F6D               	movwf	SRV_ADT7410_ReadMeanSensor@typeRead& (0+255),b
  3039  004D90  0EC0               	movlw	low _Sensor1
  3040  004D92  6F6E               	movwf	SRV_ADT7410_ReadMeanSensor@value& (0+255),b
  3041  004D94  0E01               	movlw	high _Sensor1
  3042  004D96  6F6F               	movwf	(SRV_ADT7410_ReadMeanSensor@value+1)& (0+255),b
  3043  004D98  0E01               	movlw	1
  3044  004D9A  EC37  F011         	call	_SRV_ADT7410_ReadMeanSensor
  3045                           
  3046                           ;ServiceADT7410.c: 244:             SRV_ADT7410_ReadMeanSensor(SENSOR_S2,CELSIUS,&Sensor
      +                          2.CELSIUS);
  3047  004D9E  0E00               	movlw	0
  3048  004DA0  0100               	movlb	0	; () banked
  3049  004DA2  6F6D               	movwf	SRV_ADT7410_ReadMeanSensor@typeRead& (0+255),b
  3050  004DA4  0EB8               	movlw	low _Sensor2
  3051  004DA6  6F6E               	movwf	SRV_ADT7410_ReadMeanSensor@value& (0+255),b
  3052  004DA8  0E01               	movlw	high _Sensor2
  3053  004DAA  6F6F               	movwf	(SRV_ADT7410_ReadMeanSensor@value+1)& (0+255),b
  3054  004DAC  0E02               	movlw	2
  3055  004DAE  EC37  F011         	call	_SRV_ADT7410_ReadMeanSensor
  3056                           
  3057                           ;ServiceADT7410.c: 245:             SRV_ADT7410_ReadMeanSensor(SENSOR_S3,CELSIUS,&Sensor
      +                          3.CELSIUS);
  3058  004DB2  0E00               	movlw	0
  3059  004DB4  0100               	movlb	0	; () banked
  3060  004DB6  6F6D               	movwf	SRV_ADT7410_ReadMeanSensor@typeRead& (0+255),b
  3061  004DB8  0EB0               	movlw	low _Sensor3
  3062  004DBA  6F6E               	movwf	SRV_ADT7410_ReadMeanSensor@value& (0+255),b
  3063  004DBC  0E01               	movlw	high _Sensor3
  3064  004DBE  6F6F               	movwf	(SRV_ADT7410_ReadMeanSensor@value+1)& (0+255),b
  3065  004DC0  0E03               	movlw	3
  3066  004DC2  EC37  F011         	call	_SRV_ADT7410_ReadMeanSensor
  3067  004DC6                     l13144:
  3068                           
  3069                           ;ServiceADT7410.c: 247:         if(timeReset == 241)
  3070  004DC6  0EF1               	movlw	241
  3071  004DC8  0101               	movlb	1	; () banked
  3072  004DCA  198B               	xorwf	SRV_ADT7410_Run@timeReset& (0+255),w,b
  3073  004DCC  118C               	iorwf	(SRV_ADT7410_Run@timeReset+1)& (0+255),w,b
  3074  004DCE  A4D8               	btfss	status,2,c
  3075  004DD0  EFEC  F026         	goto	u13411
  3076  004DD4  EFEE  F026         	goto	u13410
  3077  004DD8                     u13411:
  3078  004DD8  EFF0  F026         	goto	l13148
  3079  004DDC                     u13410:
  3080  004DDC                     
  3081                           ; BSR set to: 1
  3082                           ;ServiceADT7410.c: 248:         {;ServiceADT7410.c: 249:            SRV_ADT7410_Off();
  3083  004DDC  ECE7  F03B         	call	_SRV_ADT7410_Off	;wreg free
  3084  004DE0                     l13148:
  3085                           
  3086                           ;ServiceADT7410.c: 251:         if(timeReset >= 245)
  3087  004DE0  0101               	movlb	1	; () banked
  3088  004DE2  518C               	movf	(SRV_ADT7410_Run@timeReset+1)& (0+255),w,b
  3089  004DE4  E109               	bnz	u13420
  3090  004DE6  0EF5               	movlw	245
  3091  004DE8  5D8B               	subwf	SRV_ADT7410_Run@timeReset& (0+255),w,b
  3092  004DEA  A0D8               	btfss	status,0,c
  3093  004DEC  EFFA  F026         	goto	u13421
  3094  004DF0  EFFC  F026         	goto	u13420
  3095  004DF4                     u13421:
  3096  004DF4  EF03  F027         	goto	l1336
  3097  004DF8                     u13420:
  3098  004DF8                     
  3099                           ; BSR set to: 1
  3100                           ;ServiceADT7410.c: 252:         {;ServiceADT7410.c: 253:            SRV_ADT7410_On();
  3101  004DF8  ECE5  F03B         	call	_SRV_ADT7410_On	;wreg free
  3102  004DFC                     
  3103                           ;ServiceADT7410.c: 254:            timeReset = 0;
  3104  004DFC  0E00               	movlw	0
  3105  004DFE  0101               	movlb	1	; () banked
  3106  004E00  6F8C               	movwf	(SRV_ADT7410_Run@timeReset+1)& (0+255),b
  3107  004E02  0E00               	movlw	0
  3108  004E04  6F8B               	movwf	SRV_ADT7410_Run@timeReset& (0+255),b
  3109  004E06                     l1336:
  3110                           
  3111                           ; BSR set to: 1
  3112  004E06  0012               	return		;funcret
  3113  004E08                     __end_of_SRV_ADT7410_Run:
  3114                           	callstack 0
  3115                           
  3116 ;; *************** function _SRV_ADT7410_On *****************
  3117 ;; Defined at:
  3118 ;;		line 92 in file "ServiceADT7410.c"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;		None
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;		None
  3123 ;; Return value:  Size  Location     Type
  3124 ;;                  1    wreg      void 
  3125 ;; Registers used:
  3126 ;;		None
  3127 ;; Tracked objects:
  3128 ;;		On entry : 0/0
  3129 ;;		On exit  : 0/0
  3130 ;;		Unchanged: 0/0
  3131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3132 ;;      Params:         0       0       0       0       0       0       0
  3133 ;;      Locals:         0       0       0       0       0       0       0
  3134 ;;      Temps:          0       0       0       0       0       0       0
  3135 ;;      Totals:         0       0       0       0       0       0       0
  3136 ;;Total ram usage:        0 bytes
  3137 ;; Hardware stack levels used: 1
  3138 ;; Hardware stack levels required when called: 4
  3139 ;; This function calls:
  3140 ;;		Nothing
  3141 ;; This function is called by:
  3142 ;;		_SRV_ADT7410_Run
  3143 ;; This function uses a non-reentrant model
  3144 ;;
  3145                           
  3146                           	psect	text14
  3147  0077CA                     __ptext14:
  3148                           	callstack 0
  3149  0077CA                     _SRV_ADT7410_On:
  3150                           	callstack 24
  3151  0077CA  8A89               	bsf	137,5,c	;volatile
  3152  0077CC  0012               	return		;funcret
  3153  0077CE                     __end_of_SRV_ADT7410_On:
  3154                           	callstack 0
  3155                           
  3156 ;; *************** function _SRV_ADT7410_Off *****************
  3157 ;; Defined at:
  3158 ;;		line 97 in file "ServiceADT7410.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;		None
  3161 ;; Auto vars:     Size  Location     Type
  3162 ;;		None
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      void 
  3165 ;; Registers used:
  3166 ;;		None
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3172 ;;      Params:         0       0       0       0       0       0       0
  3173 ;;      Locals:         0       0       0       0       0       0       0
  3174 ;;      Temps:          0       0       0       0       0       0       0
  3175 ;;      Totals:         0       0       0       0       0       0       0
  3176 ;;Total ram usage:        0 bytes
  3177 ;; Hardware stack levels used: 1
  3178 ;; Hardware stack levels required when called: 4
  3179 ;; This function calls:
  3180 ;;		Nothing
  3181 ;; This function is called by:
  3182 ;;		_SRV_ADT7410_Run
  3183 ;; This function uses a non-reentrant model
  3184 ;;
  3185                           
  3186                           	psect	text15
  3187  0077CE                     __ptext15:
  3188                           	callstack 0
  3189  0077CE                     _SRV_ADT7410_Off:
  3190                           	callstack 24
  3191  0077CE  9A89               	bcf	137,5,c	;volatile
  3192  0077D0  0012               	return		;funcret
  3193  0077D2                     __end_of_SRV_ADT7410_Off:
  3194                           	callstack 0
  3195                           
  3196 ;; *************** function _Driver_Analog_Run *****************
  3197 ;; Defined at:
  3198 ;;		line 31 in file "Driver_Analog.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;		None
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;  currentTick     4   17[COMRAM] unsigned long 
  3203 ;; Return value:  Size  Location     Type
  3204 ;;                  1    wreg      void 
  3205 ;; Registers used:
  3206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3207 ;; Tracked objects:
  3208 ;;		On entry : 0/0
  3209 ;;		On exit  : 0/0
  3210 ;;		Unchanged: 0/0
  3211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3212 ;;      Params:         0       0       0       0       0       0       0
  3213 ;;      Locals:         4       0       0       0       0       0       0
  3214 ;;      Temps:          4       0       0       0       0       0       0
  3215 ;;      Totals:         8       0       0       0       0       0       0
  3216 ;;Total ram usage:        8 bytes
  3217 ;; Hardware stack levels used: 1
  3218 ;; Hardware stack levels required when called: 5
  3219 ;; This function calls:
  3220 ;;		_SRV_TIMER_GetTick
  3221 ;; This function is called by:
  3222 ;;		_App_HTAD_run
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226                           	psect	text16
  3227  004B9E                     __ptext16:
  3228                           	callstack 0
  3229  004B9E                     _Driver_Analog_Run:
  3230                           	callstack 24
  3231  004B9E                     
  3232                           ;Driver_Analog.c: 32:     uint32_t currentTick = SRV_TIMER_GetTick();
  3233  004B9E  ECB9  F03A         	call	_SRV_TIMER_GetTick	;wreg free
  3234  004BA2  C00A  F012         	movff	?_SRV_TIMER_GetTick,Driver_Analog_Run@currentTick
  3235  004BA6  C00B  F013         	movff	?_SRV_TIMER_GetTick+1,Driver_Analog_Run@currentTick+1
  3236  004BAA  C00C  F014         	movff	?_SRV_TIMER_GetTick+2,Driver_Analog_Run@currentTick+2
  3237  004BAE  C00D  F015         	movff	?_SRV_TIMER_GetTick+3,Driver_Analog_Run@currentTick+3
  3238  004BB2                     
  3239                           ;Driver_Analog.c: 35:     if ((currentTick - lastReadTime) >= 100) {
  3240  004BB2  0101               	movlb	1	; () banked
  3241  004BB4  5165               	movf	_lastReadTime& (0+255),w,b
  3242  004BB6  5C12               	subwf	Driver_Analog_Run@currentTick^0,w,c
  3243  004BB8  6E0E               	movwf	??_Driver_Analog_Run^0,c
  3244  004BBA  5166               	movf	(_lastReadTime+1)& (0+255),w,b
  3245  004BBC  5813               	subwfb	(Driver_Analog_Run@currentTick+1)^0,w,c
  3246  004BBE  6E0F               	movwf	(??_Driver_Analog_Run+1)^0,c
  3247  004BC0  5167               	movf	(_lastReadTime+2)& (0+255),w,b
  3248  004BC2  5814               	subwfb	(Driver_Analog_Run@currentTick+2)^0,w,c
  3249  004BC4  6E10               	movwf	(??_Driver_Analog_Run+2)^0,c
  3250  004BC6  5168               	movf	(_lastReadTime+3)& (0+255),w,b
  3251  004BC8  5815               	subwfb	(Driver_Analog_Run@currentTick+3)^0,w,c
  3252  004BCA  6E11               	movwf	(??_Driver_Analog_Run+3)^0,c
  3253  004BCC  5011               	movf	(??_Driver_Analog_Run+3)^0,w,c
  3254  004BCE  1010               	iorwf	(??_Driver_Analog_Run+2)^0,w,c
  3255  004BD0  100F               	iorwf	(??_Driver_Analog_Run+1)^0,w,c
  3256  004BD2  E109               	bnz	u8990
  3257  004BD4  0E64               	movlw	100
  3258  004BD6  5C0E               	subwf	??_Driver_Analog_Run^0,w,c
  3259  004BD8  A0D8               	btfss	status,0,c
  3260  004BDA  EFF1  F025         	goto	u8991
  3261  004BDE  EFF3  F025         	goto	u8990
  3262  004BE2                     u8991:
  3263  004BE2  EF6D  F026         	goto	l1458
  3264  004BE6                     u8990:
  3265  004BE6                     
  3266                           ; BSR set to: 1
  3267                           ;Driver_Analog.c: 36:         lastReadTime = currentTick;
  3268  004BE6  C012  F165         	movff	Driver_Analog_Run@currentTick,_lastReadTime
  3269  004BEA  C013  F166         	movff	Driver_Analog_Run@currentTick+1,_lastReadTime+1
  3270  004BEE  C014  F167         	movff	Driver_Analog_Run@currentTick+2,_lastReadTime+2
  3271  004BF2  C015  F168         	movff	Driver_Analog_Run@currentTick+3,_lastReadTime+3
  3272  004BF6                     
  3273                           ; BSR set to: 1
  3274                           ;Driver_Analog.c: 39:         ADCON0bits.CHS = 0;
  3275  004BF6  0E83               	movlw	-125
  3276  004BF8  16C2               	andwf	194,f,c	;volatile
  3277  004BFA                     
  3278                           ; BSR set to: 1
  3279                           ;Driver_Analog.c: 40:         ADCON0bits.GO_nDONE = 1;
  3280  004BFA  82C2               	bsf	194,1,c	;volatile
  3281  004BFC                     l1448:
  3282  004BFC  B2C2               	btfsc	194,1,c	;volatile
  3283  004BFE  EF03  F026         	goto	u9001
  3284  004C02  EF05  F026         	goto	u9000
  3285  004C06                     u9001:
  3286  004C06  EFFE  F025         	goto	l1448
  3287  004C0A                     u9000:
  3288  004C0A                     
  3289                           ;Driver_Analog.c: 42:         adc_values_an0[sample_index] = (ADRESH << 8) | ADRESL;
  3290  004C0A  50C3               	movf	195,w,c	;volatile
  3291  004C0C  CFC4 F00E          	movff	4036,??_Driver_Analog_Run	;volatile
  3292  004C10  6A0F               	clrf	(??_Driver_Analog_Run+1)^0,c
  3293  004C12  C00E  F00F         	movff	??_Driver_Analog_Run,??_Driver_Analog_Run+1
  3294  004C16  6A0E               	clrf	??_Driver_Analog_Run^0,c
  3295  004C18  120E               	iorwf	??_Driver_Analog_Run^0,f,c
  3296  004C1A  0E00               	movlw	0
  3297  004C1C  120F               	iorwf	(??_Driver_Analog_Run+1)^0,f,c
  3298  004C1E  0101               	movlb	1	; () banked
  3299  004C20  51A2               	movf	_sample_index& (0+255),w,b
  3300  004C22  0D02               	mullw	2
  3301  004C24  0E3C               	movlw	low _adc_values_an0
  3302  004C26  24F3               	addwf	243,w,c
  3303  004C28  6ED9               	movwf	fsr2l,c
  3304  004C2A  0E02               	movlw	high _adc_values_an0
  3305  004C2C  20F4               	addwfc	prodh,w,c
  3306  004C2E  6EDA               	movwf	fsr2h,c
  3307  004C30  C00E  FFDE         	movff	??_Driver_Analog_Run,postinc2
  3308  004C34  C00F  FFDD         	movff	??_Driver_Analog_Run+1,postdec2
  3309  004C38                     
  3310                           ; BSR set to: 1
  3311                           ;Driver_Analog.c: 44:         ADCON0bits.CHS = 1;
  3312  004C38  50C2               	movf	194,w,c	;volatile
  3313  004C3A  0B83               	andlw	-125
  3314  004C3C  0904               	iorlw	4
  3315  004C3E  6EC2               	movwf	194,c	;volatile
  3316  004C40                     
  3317                           ; BSR set to: 1
  3318                           ;Driver_Analog.c: 45:         ADCON0bits.GO_nDONE = 1;
  3319  004C40  82C2               	bsf	194,1,c	;volatile
  3320  004C42                     l1451:
  3321  004C42  B2C2               	btfsc	194,1,c	;volatile
  3322  004C44  EF26  F026         	goto	u9011
  3323  004C48  EF28  F026         	goto	u9010
  3324  004C4C                     u9011:
  3325  004C4C  EF21  F026         	goto	l1451
  3326  004C50                     u9010:
  3327  004C50                     
  3328                           ;Driver_Analog.c: 47:         adc_values_an1[sample_index] = (ADRESH << 8) | ADRESL;
  3329  004C50  50C3               	movf	195,w,c	;volatile
  3330  004C52  CFC4 F00E          	movff	4036,??_Driver_Analog_Run	;volatile
  3331  004C56  6A0F               	clrf	(??_Driver_Analog_Run+1)^0,c
  3332  004C58  C00E  F00F         	movff	??_Driver_Analog_Run,??_Driver_Analog_Run+1
  3333  004C5C  6A0E               	clrf	??_Driver_Analog_Run^0,c
  3334  004C5E  120E               	iorwf	??_Driver_Analog_Run^0,f,c
  3335  004C60  0E00               	movlw	0
  3336  004C62  120F               	iorwf	(??_Driver_Analog_Run+1)^0,f,c
  3337  004C64  0101               	movlb	1	; () banked
  3338  004C66  51A2               	movf	_sample_index& (0+255),w,b
  3339  004C68  0D02               	mullw	2
  3340  004C6A  0E28               	movlw	low _adc_values_an1
  3341  004C6C  24F3               	addwf	243,w,c
  3342  004C6E  6ED9               	movwf	fsr2l,c
  3343  004C70  0E02               	movlw	high _adc_values_an1
  3344  004C72  20F4               	addwfc	prodh,w,c
  3345  004C74  6EDA               	movwf	fsr2h,c
  3346  004C76  C00E  FFDE         	movff	??_Driver_Analog_Run,postinc2
  3347  004C7A  C00F  FFDD         	movff	??_Driver_Analog_Run+1,postdec2
  3348  004C7E                     
  3349                           ; BSR set to: 1
  3350                           ;Driver_Analog.c: 49:         ADCON0bits.CHS = 3;
  3351  004C7E  50C2               	movf	194,w,c	;volatile
  3352  004C80  0B83               	andlw	-125
  3353  004C82  090C               	iorlw	12
  3354  004C84  6EC2               	movwf	194,c	;volatile
  3355  004C86                     
  3356                           ; BSR set to: 1
  3357                           ;Driver_Analog.c: 50:         ADCON0bits.GO_nDONE = 1;
  3358  004C86  82C2               	bsf	194,1,c	;volatile
  3359  004C88                     l1454:
  3360  004C88  B2C2               	btfsc	194,1,c	;volatile
  3361  004C8A  EF49  F026         	goto	u9021
  3362  004C8E  EF4B  F026         	goto	u9020
  3363  004C92                     u9021:
  3364  004C92  EF44  F026         	goto	l1454
  3365  004C96                     u9020:
  3366  004C96                     
  3367                           ;Driver_Analog.c: 52:         adc_values_an3[sample_index] = (ADRESH << 8) | ADRESL;
  3368  004C96  50C3               	movf	195,w,c	;volatile
  3369  004C98  CFC4 F00E          	movff	4036,??_Driver_Analog_Run	;volatile
  3370  004C9C  6A0F               	clrf	(??_Driver_Analog_Run+1)^0,c
  3371  004C9E  C00E  F00F         	movff	??_Driver_Analog_Run,??_Driver_Analog_Run+1
  3372  004CA2  6A0E               	clrf	??_Driver_Analog_Run^0,c
  3373  004CA4  120E               	iorwf	??_Driver_Analog_Run^0,f,c
  3374  004CA6  0E00               	movlw	0
  3375  004CA8  120F               	iorwf	(??_Driver_Analog_Run+1)^0,f,c
  3376  004CAA  0101               	movlb	1	; () banked
  3377  004CAC  51A2               	movf	_sample_index& (0+255),w,b
  3378  004CAE  0D02               	mullw	2
  3379  004CB0  0E14               	movlw	low _adc_values_an3
  3380  004CB2  24F3               	addwf	243,w,c
  3381  004CB4  6ED9               	movwf	fsr2l,c
  3382  004CB6  0E02               	movlw	high _adc_values_an3
  3383  004CB8  20F4               	addwfc	prodh,w,c
  3384  004CBA  6EDA               	movwf	fsr2h,c
  3385  004CBC  C00E  FFDE         	movff	??_Driver_Analog_Run,postinc2
  3386  004CC0  C00F  FFDD         	movff	??_Driver_Analog_Run+1,postdec2
  3387  004CC4                     
  3388                           ; BSR set to: 1
  3389                           ;Driver_Analog.c: 55:         sample_index++;
  3390  004CC4  2BA2               	incf	_sample_index& (0+255),f,b
  3391  004CC6                     
  3392                           ; BSR set to: 1
  3393                           ;Driver_Analog.c: 56:         if (sample_index >= 10) {
  3394  004CC6  0E09               	movlw	9
  3395  004CC8  65A2               	cpfsgt	_sample_index& (0+255),b
  3396  004CCA  EF69  F026         	goto	u9031
  3397  004CCE  EF6B  F026         	goto	u9030
  3398  004CD2                     u9031:
  3399  004CD2  EF6D  F026         	goto	l1458
  3400  004CD6                     u9030:
  3401  004CD6                     
  3402                           ; BSR set to: 1
  3403                           ;Driver_Analog.c: 57:             sample_index = 0;
  3404  004CD6  0E00               	movlw	0
  3405  004CD8  6FA2               	movwf	_sample_index& (0+255),b
  3406  004CDA                     l1458:
  3407                           
  3408                           ; BSR set to: 1
  3409  004CDA  0012               	return		;funcret
  3410  004CDC                     __end_of_Driver_Analog_Run:
  3411                           	callstack 0
  3412                           
  3413 ;; *************** function _DirectNet_Run *****************
  3414 ;; Defined at:
  3415 ;;		line 179 in file "Driver_DirectNet.c"
  3416 ;; Parameters:    Size  Location     Type
  3417 ;;  objetoHTAD_D    2   59[COMRAM] PTR struct .
  3418 ;;		 -> ObjetoHTAD(35), 
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;  valBruto        2   71[COMRAM] int 
  3421 ;;  valBruto        2   69[COMRAM] int 
  3422 ;;  valBruto        2   67[COMRAM] int 
  3423 ;;  valBruto        2   65[COMRAM] int 
  3424 ;;  i               2   73[COMRAM] int 
  3425 ;; Return value:  Size  Location     Type
  3426 ;;                  1    wreg      void 
  3427 ;; Registers used:
  3428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3429 ;; Tracked objects:
  3430 ;;		On entry : 0/0
  3431 ;;		On exit  : 0/0
  3432 ;;		Unchanged: 0/0
  3433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3434 ;;      Params:         2       0       0       0       0       0       0
  3435 ;;      Locals:        10       0       0       0       0       0       0
  3436 ;;      Temps:          4       0       0       0       0       0       0
  3437 ;;      Totals:        16       0       0       0       0       0       0
  3438 ;;Total ram usage:       16 bytes
  3439 ;; Hardware stack levels used: 1
  3440 ;; Hardware stack levels required when called: 7
  3441 ;; This function calls:
  3442 ;;		_DirectNet_enviaDadosDDDTCO2
  3443 ;;		_DirectNet_enviaDadosSensores
  3444 ;;		_Driver_Analog_GetValueAN0
  3445 ;;		_Driver_Analog_GetValueAN1
  3446 ;;		_Driver_Analog_GetValueAN3
  3447 ;;		_EUSART1_Write
  3448 ;;		_EUSART1_is_tx_done
  3449 ;;		_SRV_ADT7410_GetTemperature
  3450 ;;		_SRV_TIMER_GetTick
  3451 ;;		___flmul
  3452 ;;		___fltol
  3453 ;;		_convertFloatToBuffer
  3454 ;; This function is called by:
  3455 ;;		_App_HTAD_run
  3456 ;;		_App_HTAD_UpdateDIrectNet
  3457 ;; This function uses a non-reentrant model
  3458 ;;
  3459                           
  3460                           	psect	text17
  3461  001346                     __ptext17:
  3462                           	callstack 0
  3463  001346                     _DirectNet_Run:
  3464                           	callstack 22
  3465  001346                     
  3466                           ;Driver_DirectNet.c: 184:     if ((SRV_TIMER_GetTick() - tempo > 10) && recebeu_Serial){
  3467  001346  ECB9  F03A         	call	_SRV_TIMER_GetTick	;wreg free
  3468  00134A  0101               	movlb	1	; () banked
  3469  00134C  5161               	movf	_tempo& (0+255),w,b
  3470  00134E  5C0A               	subwf	?_SRV_TIMER_GetTick^0,w,c
  3471  001350  6E3E               	movwf	??_DirectNet_Run^0,c
  3472  001352  5162               	movf	(_tempo+1)& (0+255),w,b
  3473  001354  580B               	subwfb	(?_SRV_TIMER_GetTick+1)^0,w,c
  3474  001356  6E3F               	movwf	(??_DirectNet_Run+1)^0,c
  3475  001358  5163               	movf	(_tempo+2)& (0+255),w,b
  3476  00135A  580C               	subwfb	(?_SRV_TIMER_GetTick+2)^0,w,c
  3477  00135C  6E40               	movwf	(??_DirectNet_Run+2)^0,c
  3478  00135E  5164               	movf	(_tempo+3)& (0+255),w,b
  3479  001360  580D               	subwfb	(?_SRV_TIMER_GetTick+3)^0,w,c
  3480  001362  6E41               	movwf	(??_DirectNet_Run+3)^0,c
  3481  001364  5041               	movf	(??_DirectNet_Run+3)^0,w,c
  3482  001366  1040               	iorwf	(??_DirectNet_Run+2)^0,w,c
  3483  001368  103F               	iorwf	(??_DirectNet_Run+1)^0,w,c
  3484  00136A  E109               	bnz	u13430
  3485  00136C  0E0B               	movlw	11
  3486  00136E  5C3E               	subwf	??_DirectNet_Run^0,w,c
  3487  001370  A0D8               	btfss	status,0,c
  3488  001372  EFBD  F009         	goto	u13431
  3489  001376  EFBF  F009         	goto	u13430
  3490  00137A                     u13431:
  3491  00137A  EF86  F00D         	goto	l1593
  3492  00137E                     u13430:
  3493  00137E                     
  3494                           ; BSR set to: 1
  3495  00137E  51A1               	movf	_recebeu_Serial& (0+255),w,b
  3496  001380  B4D8               	btfsc	status,2,c
  3497  001382  EFC5  F009         	goto	u13441
  3498  001386  EFC7  F009         	goto	u13440
  3499  00138A                     u13441:
  3500  00138A  EF86  F00D         	goto	l1593
  3501  00138E                     u13440:
  3502  00138E                     
  3503                           ; BSR set to: 1
  3504  00138E  8A8B               	bsf	139,5,c	;volatile
  3505  001390                     
  3506                           ; BSR set to: 1
  3507                           ;Driver_DirectNet.c: 187:         objetoHTAD_DirectNet->contWDT++;
  3508  001390  EE20 F018          	lfsr	2,24
  3509  001394  503C               	movf	DirectNet_Run@objetoHTAD_DirectNet^0,w,c
  3510  001396  26D9               	addwf	fsr2l,f,c
  3511  001398  503D               	movf	(DirectNet_Run@objetoHTAD_DirectNet+1)^0,w,c
  3512  00139A  22DA               	addwfc	fsr2h,f,c
  3513  00139C  2ADE               	incf	postinc2,f,c
  3514  00139E  0E00               	movlw	0
  3515  0013A0  22DD               	addwfc	postdec2,f,c
  3516  0013A2                     
  3517                           ; BSR set to: 1
  3518                           ;Driver_DirectNet.c: 189:         for (i = 0; i < contRX; i++) {
  3519  0013A2  0E00               	movlw	0
  3520  0013A4  6E4B               	movwf	(DirectNet_Run@i+1)^0,c
  3521  0013A6  0E00               	movlw	0
  3522  0013A8  6E4A               	movwf	DirectNet_Run@i^0,c
  3523  0013AA  EFF9  F009         	goto	l13172
  3524  0013AE                     l13164:
  3525                           
  3526                           ; BSR set to: 1
  3527                           ;Driver_DirectNet.c: 190:             if(recebeu[i] == 0x4E && recebeu[i + 2] == 0x05){
  3528  0013AE  0E00               	movlw	low _recebeu
  3529  0013B0  244A               	addwf	DirectNet_Run@i^0,w,c
  3530  0013B2  6ED9               	movwf	fsr2l,c
  3531  0013B4  0E02               	movlw	high _recebeu
  3532  0013B6  204B               	addwfc	(DirectNet_Run@i+1)^0,w,c
  3533  0013B8  6EDA               	movwf	fsr2h,c
  3534  0013BA  0E4E               	movlw	78
  3535  0013BC  18DE               	xorwf	postinc2,w,c
  3536  0013BE  A4D8               	btfss	status,2,c
  3537  0013C0  EFE4  F009         	goto	u13451
  3538  0013C4  EFE6  F009         	goto	u13450
  3539  0013C8                     u13451:
  3540  0013C8  EFF7  F009         	goto	l13170
  3541  0013CC                     u13450:
  3542  0013CC                     
  3543                           ; BSR set to: 1
  3544  0013CC  0E02               	movlw	low (_recebeu+2)
  3545  0013CE  244A               	addwf	DirectNet_Run@i^0,w,c
  3546  0013D0  6ED9               	movwf	fsr2l,c
  3547  0013D2  0E02               	movlw	high (_recebeu+2)
  3548  0013D4  204B               	addwfc	(DirectNet_Run@i+1)^0,w,c
  3549  0013D6  6EDA               	movwf	fsr2h,c
  3550  0013D8  0E05               	movlw	5
  3551  0013DA  18DE               	xorwf	postinc2,w,c
  3552  0013DC  A4D8               	btfss	status,2,c
  3553  0013DE  EFF3  F009         	goto	u13461
  3554  0013E2  EFF5  F009         	goto	u13460
  3555  0013E6                     u13461:
  3556  0013E6  EFF7  F009         	goto	l13170
  3557  0013EA                     u13460:
  3558  0013EA                     
  3559                           ; BSR set to: 1
  3560                           ;Driver_DirectNet.c: 191:               stateDirectNet = 0;
  3561  0013EA  0E00               	movlw	0
  3562  0013EC  6F9D               	movwf	_stateDirectNet& (0+255),b
  3563  0013EE                     l13170:
  3564                           
  3565                           ; BSR set to: 1
  3566                           ;Driver_DirectNet.c: 193:         }
  3567  0013EE  4A4A               	infsnz	DirectNet_Run@i^0,f,c
  3568  0013F0  2A4B               	incf	(DirectNet_Run@i+1)^0,f,c
  3569  0013F2                     l13172:
  3570                           
  3571                           ; BSR set to: 1
  3572  0013F2  5187               	movf	_contRX& (0+255),w,b
  3573  0013F4  5C4A               	subwf	DirectNet_Run@i^0,w,c
  3574  0013F6  5188               	movf	(_contRX+1)& (0+255),w,b
  3575  0013F8  584B               	subwfb	(DirectNet_Run@i+1)^0,w,c
  3576  0013FA  A0D8               	btfss	status,0,c
  3577  0013FC  EF02  F00A         	goto	u13471
  3578  001400  EF04  F00A         	goto	u13470
  3579  001404                     u13471:
  3580  001404  EFD7  F009         	goto	l13164
  3581  001408                     u13470:
  3582  001408  EF3D  F00D         	goto	l13362
  3583  00140C                     l13174:
  3584                           
  3585                           ; BSR set to: 1
  3586                           ;Driver_DirectNet.c: 198:                 i = 0;
  3587  00140C  0E00               	movlw	0
  3588  00140E  6E4B               	movwf	(DirectNet_Run@i+1)^0,c
  3589  001410  0E00               	movlw	0
  3590  001412  6E4A               	movwf	DirectNet_Run@i^0,c
  3591                           
  3592                           ;Driver_DirectNet.c: 199:                 for (i = 0; i < contRX; i++) {
  3593  001414  0E00               	movlw	0
  3594  001416  6E4B               	movwf	(DirectNet_Run@i+1)^0,c
  3595  001418  0E00               	movlw	0
  3596  00141A  6E4A               	movwf	DirectNet_Run@i^0,c
  3597  00141C  EF63  F00A         	goto	l13200
  3598  001420                     l13176:
  3599                           
  3600                           ; BSR set to: 1
  3601                           ;Driver_DirectNet.c: 200:                    if(recebeu[i] == 0x4E && recebeu[i + 2] == 
      +                          0x05){
  3602  001420  0E00               	movlw	low _recebeu
  3603  001422  244A               	addwf	DirectNet_Run@i^0,w,c
  3604  001424  6ED9               	movwf	fsr2l,c
  3605  001426  0E02               	movlw	high _recebeu
  3606  001428  204B               	addwfc	(DirectNet_Run@i+1)^0,w,c
  3607  00142A  6EDA               	movwf	fsr2h,c
  3608  00142C  0E4E               	movlw	78
  3609  00142E  18DE               	xorwf	postinc2,w,c
  3610  001430  A4D8               	btfss	status,2,c
  3611  001432  EF1D  F00A         	goto	u13481
  3612  001436  EF1F  F00A         	goto	u13480
  3613  00143A                     u13481:
  3614  00143A  EF61  F00A         	goto	l13198
  3615  00143E                     u13480:
  3616  00143E                     
  3617                           ; BSR set to: 1
  3618  00143E  0E02               	movlw	low (_recebeu+2)
  3619  001440  244A               	addwf	DirectNet_Run@i^0,w,c
  3620  001442  6ED9               	movwf	fsr2l,c
  3621  001444  0E02               	movlw	high (_recebeu+2)
  3622  001446  204B               	addwfc	(DirectNet_Run@i+1)^0,w,c
  3623  001448  6EDA               	movwf	fsr2h,c
  3624  00144A  0E05               	movlw	5
  3625  00144C  18DE               	xorwf	postinc2,w,c
  3626  00144E  A4D8               	btfss	status,2,c
  3627  001450  EF2C  F00A         	goto	u13491
  3628  001454  EF2E  F00A         	goto	u13490
  3629  001458                     u13491:
  3630  001458  EF61  F00A         	goto	l13198
  3631  00145C                     u13490:
  3632  00145C                     
  3633                           ; BSR set to: 1
  3634                           ;Driver_DirectNet.c: 201:                         EUSART1_Write(0x4E);
  3635  00145C  0E4E               	movlw	78
  3636  00145E  EC26  F03B         	call	_EUSART1_Write
  3637  001462                     
  3638                           ;Driver_DirectNet.c: 202:                         EUSART1_Write(recebeu[i+1]);
  3639  001462  0E01               	movlw	low (_recebeu+1)
  3640  001464  244A               	addwf	DirectNet_Run@i^0,w,c
  3641  001466  6ED9               	movwf	fsr2l,c
  3642  001468  0E02               	movlw	high (_recebeu+1)
  3643  00146A  204B               	addwfc	(DirectNet_Run@i+1)^0,w,c
  3644  00146C  6EDA               	movwf	fsr2h,c
  3645  00146E  50DF               	movf	indf2,w,c
  3646  001470  EC26  F03B         	call	_EUSART1_Write
  3647  001474                     
  3648                           ;Driver_DirectNet.c: 203:                         EUSART1_Write(0x06);
  3649  001474  0E06               	movlw	6
  3650  001476  EC26  F03B         	call	_EUSART1_Write
  3651  00147A                     
  3652                           ;Driver_DirectNet.c: 204:                         stateDirectNet = 1;
  3653  00147A  0E01               	movlw	1
  3654  00147C  0101               	movlb	1	; () banked
  3655  00147E  6F9D               	movwf	_stateDirectNet& (0+255),b
  3656  001480                     
  3657                           ; BSR set to: 1
  3658                           ;Driver_DirectNet.c: 205:                         recebeuID = recebeu[i+1];
  3659  001480  0E01               	movlw	low (_recebeu+1)
  3660  001482  244A               	addwf	DirectNet_Run@i^0,w,c
  3661  001484  6ED9               	movwf	fsr2l,c
  3662  001486  0E02               	movlw	high (_recebeu+1)
  3663  001488  204B               	addwfc	(DirectNet_Run@i+1)^0,w,c
  3664  00148A  6EDA               	movwf	fsr2h,c
  3665  00148C  50DF               	movf	indf2,w,c
  3666  00148E  6E53               	movwf	_recebeuID^0,c
  3667  001490                     
  3668                           ; BSR set to: 1
  3669                           ;Driver_DirectNet.c: 206:                         respondeHTAD = recebeuID;
  3670  001490  C053  F19F         	movff	_recebeuID,_respondeHTAD
  3671  001494                     
  3672                           ; BSR set to: 1
  3673                           ;Driver_DirectNet.c: 207:                         if(recebeuID == 0x2B){
  3674  001494  0E2B               	movlw	43
  3675  001496  1853               	xorwf	_recebeuID^0,w,c
  3676  001498  A4D8               	btfss	status,2,c
  3677  00149A  EF51  F00A         	goto	u13501
  3678  00149E  EF53  F00A         	goto	u13500
  3679  0014A2                     u13501:
  3680  0014A2  EF55  F00A         	goto	l13196
  3681  0014A6                     u13500:
  3682  0014A6                     
  3683                           ; BSR set to: 1
  3684                           ;Driver_DirectNet.c: 208:                           respondeHTAD = 0x32;
  3685  0014A6  0E32               	movlw	50
  3686  0014A8  6F9F               	movwf	_respondeHTAD& (0+255),b
  3687  0014AA                     l13196:
  3688                           
  3689                           ; BSR set to: 1
  3690                           ;Driver_DirectNet.c: 210:                         objetoHTAD_DirectNet->contWDT = 0;
  3691  0014AA  EE20 F018          	lfsr	2,24
  3692  0014AE  503C               	movf	DirectNet_Run@objetoHTAD_DirectNet^0,w,c
  3693  0014B0  26D9               	addwf	fsr2l,f,c
  3694  0014B2  503D               	movf	(DirectNet_Run@objetoHTAD_DirectNet+1)^0,w,c
  3695  0014B4  22DA               	addwfc	fsr2h,f,c
  3696  0014B6  0E00               	movlw	0
  3697  0014B8  6EDE               	movwf	postinc2,c
  3698  0014BA  0E00               	movlw	0
  3699  0014BC  6EDD               	movwf	postdec2,c
  3700                           
  3701                           ;Driver_DirectNet.c: 211:                         break;
  3702  0014BE  EF56  F00D         	goto	l13364
  3703  0014C2                     l13198:
  3704                           
  3705                           ; BSR set to: 1
  3706                           ;Driver_DirectNet.c: 213:                 }
  3707  0014C2  4A4A               	infsnz	DirectNet_Run@i^0,f,c
  3708  0014C4  2A4B               	incf	(DirectNet_Run@i+1)^0,f,c
  3709  0014C6                     l13200:
  3710                           
  3711                           ; BSR set to: 1
  3712  0014C6  5187               	movf	_contRX& (0+255),w,b
  3713  0014C8  5C4A               	subwf	DirectNet_Run@i^0,w,c
  3714  0014CA  5188               	movf	(_contRX+1)& (0+255),w,b
  3715  0014CC  584B               	subwfb	(DirectNet_Run@i+1)^0,w,c
  3716  0014CE  A0D8               	btfss	status,0,c
  3717  0014D0  EF6C  F00A         	goto	u13511
  3718  0014D4  EF6E  F00A         	goto	u13510
  3719  0014D8                     u13511:
  3720  0014D8  EF10  F00A         	goto	l13176
  3721  0014DC                     u13510:
  3722  0014DC  EF56  F00D         	goto	l13364
  3723  0014E0                     l13202:
  3724                           
  3725                           ; BSR set to: 1
  3726                           ;Driver_DirectNet.c: 216:                 i = 0;
  3727  0014E0  0E00               	movlw	0
  3728  0014E2  6E4B               	movwf	(DirectNet_Run@i+1)^0,c
  3729  0014E4  0E00               	movlw	0
  3730  0014E6  6E4A               	movwf	DirectNet_Run@i^0,c
  3731                           
  3732                           ;Driver_DirectNet.c: 217:                 for (i = 0; i < contRX; i++) {
  3733  0014E8  0E00               	movlw	0
  3734  0014EA  6E4B               	movwf	(DirectNet_Run@i+1)^0,c
  3735  0014EC  0E00               	movlw	0
  3736  0014EE  6E4A               	movwf	DirectNet_Run@i^0,c
  3737  0014F0  EFF6  F00C         	goto	l13344
  3738  0014F4                     l13204:
  3739                           
  3740                           ; BSR set to: 1
  3741                           ;Driver_DirectNet.c: 219:                     if( recebeu[i] == 0x01 && recebeu[i + 1] =
      +                          = 0x30 && recebeu[i + 2] == respondeHTAD + 0x10 &&
  3742  0014F4  0E00               	movlw	low _recebeu
  3743  0014F6  244A               	addwf	DirectNet_Run@i^0,w,c
  3744  0014F8  6ED9               	movwf	fsr2l,c
  3745  0014FA  0E02               	movlw	high _recebeu
  3746  0014FC  204B               	addwfc	(DirectNet_Run@i+1)^0,w,c
  3747  0014FE  6EDA               	movwf	fsr2h,c
  3748  001500  04DE               	decf	postinc2,w,c
  3749  001502  A4D8               	btfss	status,2,c
  3750  001504  EF86  F00A         	goto	u13521
  3751  001508  EF88  F00A         	goto	u13520
  3752  00150C                     u13521:
  3753  00150C  EFEE  F00C         	goto	l13338
  3754  001510                     u13520:
  3755  001510                     
  3756                           ; BSR set to: 1
  3757  001510  0E01               	movlw	low (_recebeu+1)
  3758  001512  244A               	addwf	DirectNet_Run@i^0,w,c
  3759  001514  6ED9               	movwf	fsr2l,c
  3760  001516  0E02               	movlw	high (_recebeu+1)
  3761  001518  204B               	addwfc	(DirectNet_Run@i+1)^0,w,c
  3762  00151A  6EDA               	movwf	fsr2h,c
  3763  00151C  0E30               	movlw	48
  3764  00151E  18DE               	xorwf	postinc2,w,c
  3765  001520  A4D8               	btfss	status,2,c
  3766  001522  EF95  F00A         	goto	u13531
  3767  001526  EF97  F00A         	goto	u13530
  3768  00152A                     u13531:
  3769  00152A  EFEE  F00C         	goto	l13338
  3770  00152E                     u13530:
  3771  00152E                     
  3772                           ; BSR set to: 1
  3773  00152E  0E02               	movlw	low (_recebeu+2)
  3774  001530  244A               	addwf	DirectNet_Run@i^0,w,c
  3775  001532  6ED9               	movwf	fsr2l,c
  3776  001534  0E02               	movlw	high (_recebeu+2)
  3777  001536  204B               	addwfc	(DirectNet_Run@i+1)^0,w,c
  3778  001538  6EDA               	movwf	fsr2h,c
  3779  00153A  50DF               	movf	indf2,w,c
  3780  00153C  6E3E               	movwf	??_DirectNet_Run^0,c
  3781  00153E  6A3F               	clrf	(??_DirectNet_Run+1)^0,c
  3782  001540  519F               	movf	_respondeHTAD& (0+255),w,b
  3783  001542  6E40               	movwf	(??_DirectNet_Run+2)^0,c
  3784  001544  6A41               	clrf	(??_DirectNet_Run+3)^0,c
  3785  001546  0E10               	movlw	16
  3786  001548  2640               	addwf	(??_DirectNet_Run+2)^0,f,c
  3787  00154A  0E00               	movlw	0
  3788  00154C  2241               	addwfc	(??_DirectNet_Run+3)^0,f,c
  3789  00154E  503E               	movf	??_DirectNet_Run^0,w,c
  3790  001550  1840               	xorwf	(??_DirectNet_Run+2)^0,w,c
  3791  001552  E107               	bnz	u13541
  3792  001554  503F               	movf	(??_DirectNet_Run+1)^0,w,c
  3793  001556  1841               	xorwf	(??_DirectNet_Run+3)^0,w,c
  3794  001558  A4D8               	btfss	status,2,c
  3795  00155A  EFB1  F00A         	goto	u13541
  3796  00155E  EFB3  F00A         	goto	u13540
  3797  001562                     u13541:
  3798  001562  EFEE  F00C         	goto	l13338
  3799  001566                     u13540:
  3800  001566                     
  3801                           ; BSR set to: 1
  3802  001566  0E0F               	movlw	low (_recebeu+15)
  3803  001568  244A               	addwf	DirectNet_Run@i^0,w,c
  3804  00156A  6ED9               	movwf	fsr2l,c
  3805  00156C  0E02               	movlw	high (_recebeu+15)
  3806  00156E  204B               	addwfc	(DirectNet_Run@i+1)^0,w,c
  3807  001570  6EDA               	movwf	fsr2h,c
  3808  001572  0E17               	movlw	23
  3809  001574  18DE               	xorwf	postinc2,w,c
  3810  001576  A4D8               	btfss	status,2,c
  3811  001578  EFC0  F00A         	goto	u13551
  3812  00157C  EFC2  F00A         	goto	u13550
  3813  001580                     u13551:
  3814  001580  EFEE  F00C         	goto	l13338
  3815  001584                     u13550:
  3816  001584                     
  3817                           ; BSR set to: 1
  3818                           ;Driver_DirectNet.c: 225:                     {;Driver_DirectNet.c: 226:                
      +                                   objetoHTAD_DirectNet->contWDT = 0;
  3819  001584  EE20 F018          	lfsr	2,24
  3820  001588  503C               	movf	DirectNet_Run@objetoHTAD_DirectNet^0,w,c
  3821  00158A  26D9               	addwf	fsr2l,f,c
  3822  00158C  503D               	movf	(DirectNet_Run@objetoHTAD_DirectNet+1)^0,w,c
  3823  00158E  22DA               	addwfc	fsr2h,f,c
  3824  001590  0E00               	movlw	0
  3825  001592  6EDE               	movwf	postinc2,c
  3826  001594  0E00               	movlw	0
  3827  001596  6EDD               	movwf	postdec2,c
  3828  001598                     
  3829                           ; BSR set to: 1
  3830                           ;Driver_DirectNet.c: 227:                         if(recebeuID == 0x22){
  3831  001598  0E22               	movlw	34
  3832  00159A  1853               	xorwf	_recebeuID^0,w,c
  3833  00159C  A4D8               	btfss	status,2,c
  3834  00159E  EFD3  F00A         	goto	u13561
  3835  0015A2  EFD5  F00A         	goto	u13560
  3836  0015A6                     u13561:
  3837  0015A6  EF4F  F00B         	goto	l13234
  3838  0015AA                     u13560:
  3839  0015AA                     
  3840                           ; BSR set to: 1
  3841                           ;Driver_DirectNet.c: 229:                             objetoHTAD_DirectNet->temperatureS
      +                          1 = SRV_ADT7410_GetTemperature(SENSOR_S1, CELSIUS);
  3842  0015AA  0E00               	movlw	0
  3843  0015AC  6E0A               	movwf	SRV_ADT7410_GetTemperature@typeRead^0,c
  3844  0015AE  0E01               	movlw	1
  3845  0015B0  EC9E  F02B         	call	_SRV_ADT7410_GetTemperature
  3846  0015B4  C03C  FFD9         	movff	DirectNet_Run@objetoHTAD_DirectNet,fsr2l
  3847  0015B8  C03D  FFDA         	movff	DirectNet_Run@objetoHTAD_DirectNet+1,fsr2h
  3848  0015BC  C00A  FFDE         	movff	?_SRV_ADT7410_GetTemperature,postinc2
  3849  0015C0  C00B  FFDE         	movff	?_SRV_ADT7410_GetTemperature+1,postinc2
  3850  0015C4  C00C  FFDE         	movff	?_SRV_ADT7410_GetTemperature+2,postinc2
  3851  0015C8  C00D  FFDE         	movff	?_SRV_ADT7410_GetTemperature+3,postinc2
  3852  0015CC                     
  3853                           ;Driver_DirectNet.c: 230:                             int valBruto = objetoHTAD_DirectNe
      +                          t->temperatureS1 * 128;
  3854  0015CC  0E00               	movlw	0
  3855  0015CE  6E0E               	movwf	___flmul@a^0,c
  3856  0015D0  0E00               	movlw	0
  3857  0015D2  6E0F               	movwf	(___flmul@a+1)^0,c
  3858  0015D4  0E00               	movlw	0
  3859  0015D6  6E10               	movwf	(___flmul@a+2)^0,c
  3860  0015D8  0E43               	movlw	67
  3861  0015DA  6E11               	movwf	(___flmul@a+3)^0,c
  3862  0015DC  C03C  FFD9         	movff	DirectNet_Run@objetoHTAD_DirectNet,fsr2l
  3863  0015E0  C03D  FFDA         	movff	DirectNet_Run@objetoHTAD_DirectNet+1,fsr2h
  3864  0015E4  CFDE F00A          	movff	postinc2,___flmul@b
  3865  0015E8  CFDE F00B          	movff	postinc2,___flmul@b+1
  3866  0015EC  CFDE F00C          	movff	postinc2,___flmul@b+2
  3867  0015F0  CFDE F00D          	movff	postinc2,___flmul@b+3
  3868  0015F4  ECA9  F01B         	call	___flmul	;wreg free
  3869  0015F8  C00A  F023         	movff	?___flmul,___fltol@f1
  3870  0015FC  C00B  F024         	movff	?___flmul+1,___fltol@f1+1
  3871  001600  C00C  F025         	movff	?___flmul+2,___fltol@f1+2
  3872  001604  C00D  F026         	movff	?___flmul+3,___fltol@f1+3
  3873  001608  EC1B  F028         	call	___fltol	;wreg free
  3874  00160C  C023  F042         	movff	?___fltol,DirectNet_Run@valBruto
  3875  001610  C024  F043         	movff	?___fltol+1,DirectNet_Run@valBruto+1
  3876  001614                     
  3877                           ;Driver_DirectNet.c: 231:                             bufferDadosValorBruto[1] = valBrut
      +                          o >> 8;
  3878  001614  5043               	movf	(DirectNet_Run@valBruto+1)^0,w,c
  3879  001616  0101               	movlb	1	; () banked
  3880  001618  6F53               	movwf	(_bufferDadosValorBruto+1)& (0+255),b
  3881  00161A                     
  3882                           ; BSR set to: 1
  3883                           ;Driver_DirectNet.c: 232:                             bufferDadosValorBruto[0] = valBrut
      +                          o;
  3884  00161A  C042  F152         	movff	DirectNet_Run@valBruto,_bufferDadosValorBruto
  3885  00161E                     
  3886                           ; BSR set to: 1
  3887                           ;Driver_DirectNet.c: 233:                             convertFloatToBuffer(objetoHTAD_Di
      +                          rectNet->temperatureS1,bufferDadosCELSIUS,sizeof(bufferDadosCELSIUS));
  3888  00161E  C03C  FFD9         	movff	DirectNet_Run@objetoHTAD_DirectNet,fsr2l
  3889  001622  C03D  FFDA         	movff	DirectNet_Run@objetoHTAD_DirectNet+1,fsr2h
  3890  001626  CFDE F02D          	movff	postinc2,convertFloatToBuffer@value
  3891  00162A  CFDE F02E          	movff	postinc2,convertFloatToBuffer@value+1
  3892  00162E  CFDE F02F          	movff	postinc2,convertFloatToBuffer@value+2
  3893  001632  CFDE F030          	movff	postinc2,convertFloatToBuffer@value+3
  3894  001636  0ECD               	movlw	low _bufferDadosCELSIUS
  3895  001638  6E31               	movwf	convertFloatToBuffer@buffer^0,c
  3896  00163A  0E01               	movlw	high _bufferDadosCELSIUS
  3897  00163C  6E32               	movwf	(convertFloatToBuffer@buffer+1)^0,c
  3898  00163E  0E04               	movlw	4
  3899  001640  6E33               	movwf	convertFloatToBuffer@bufferSize^0,c
  3900  001642  EC71  F030         	call	_convertFloatToBuffer	;wreg free
  3901  001646                     
  3902                           ;Driver_DirectNet.c: 234:                             objetoHTAD_DirectNet->temperatureS
      +                          1 = SRV_ADT7410_GetTemperature(SENSOR_S1, FAHRENHEIT);
  3903  001646  0E01               	movlw	1
  3904  001648  6E0A               	movwf	SRV_ADT7410_GetTemperature@typeRead^0,c
  3905  00164A  0E01               	movlw	1
  3906  00164C  EC9E  F02B         	call	_SRV_ADT7410_GetTemperature
  3907  001650  C03C  FFD9         	movff	DirectNet_Run@objetoHTAD_DirectNet,fsr2l
  3908  001654  C03D  FFDA         	movff	DirectNet_Run@objetoHTAD_DirectNet+1,fsr2h
  3909  001658  C00A  FFDE         	movff	?_SRV_ADT7410_GetTemperature,postinc2
  3910  00165C  C00B  FFDE         	movff	?_SRV_ADT7410_GetTemperature+1,postinc2
  3911  001660  C00C  FFDE         	movff	?_SRV_ADT7410_GetTemperature+2,postinc2
  3912  001664  C00D  FFDE         	movff	?_SRV_ADT7410_GetTemperature+3,postinc2
  3913  001668                     
  3914                           ;Driver_DirectNet.c: 235:                             convertFloatToBuffer(objetoHTAD_Di
      +                          rectNet->temperatureS1,bufferDadosFAHRENHEIT,sizeof(bufferDadosFAHRENHEIT));
  3915  001668  C03C  FFD9         	movff	DirectNet_Run@objetoHTAD_DirectNet,fsr2l
  3916  00166C  C03D  FFDA         	movff	DirectNet_Run@objetoHTAD_DirectNet+1,fsr2h
  3917  001670  CFDE F02D          	movff	postinc2,convertFloatToBuffer@value
  3918  001674  CFDE F02E          	movff	postinc2,convertFloatToBuffer@value+1
  3919  001678  CFDE F02F          	movff	postinc2,convertFloatToBuffer@value+2
  3920  00167C  CFDE F030          	movff	postinc2,convertFloatToBuffer@value+3
  3921  001680  0EC8               	movlw	low _bufferDadosFAHRENHEIT
  3922  001682  6E31               	movwf	convertFloatToBuffer@buffer^0,c
  3923  001684  0E01               	movlw	high _bufferDadosFAHRENHEIT
  3924  001686  6E32               	movwf	(convertFloatToBuffer@buffer+1)^0,c
  3925  001688  0E05               	movlw	5
  3926  00168A  6E33               	movwf	convertFloatToBuffer@bufferSize^0,c
  3927  00168C  EC71  F030         	call	_convertFloatToBuffer	;wreg free
  3928  001690                     
  3929                           ;Driver_DirectNet.c: 236:                             ID_Responde = 0x22;
  3930  001690  0E22               	movlw	34
  3931  001692  0101               	movlb	1	; () banked
  3932  001694  6F9E               	movwf	_ID_Responde& (0+255),b
  3933  001696                     l13232:
  3934                           
  3935                           ; BSR set to: 1
  3936                           ;Driver_DirectNet.c: 237:                             DirectNet_enviaDadosSensores();
  3937  001696  EC96  F027         	call	_DirectNet_enviaDadosSensores	;wreg free
  3938                           
  3939                           ;Driver_DirectNet.c: 239:                         }
  3940  00169A  EFE9  F00C         	goto	l13334
  3941  00169E                     l13234:
  3942                           
  3943                           ; BSR set to: 1
  3944  00169E  0E24               	movlw	36
  3945  0016A0  1853               	xorwf	_recebeuID^0,w,c
  3946  0016A2  A4D8               	btfss	status,2,c
  3947  0016A4  EF56  F00B         	goto	u13571
  3948  0016A8  EF58  F00B         	goto	u13570
  3949  0016AC                     u13571:
  3950  0016AC  EFDA  F00B         	goto	l13254
  3951  0016B0                     u13570:
  3952  0016B0                     
  3953                           ; BSR set to: 1
  3954                           ;Driver_DirectNet.c: 241:                             objetoHTAD_DirectNet->temperatureS
      +                          2 = SRV_ADT7410_GetTemperature(SENSOR_S2, CELSIUS);
  3955  0016B0  0E00               	movlw	0
  3956  0016B2  6E0A               	movwf	SRV_ADT7410_GetTemperature@typeRead^0,c
  3957  0016B4  0E02               	movlw	2
  3958  0016B6  EC9E  F02B         	call	_SRV_ADT7410_GetTemperature
  3959  0016BA  EE20 F004          	lfsr	2,4
  3960  0016BE  503C               	movf	DirectNet_Run@objetoHTAD_DirectNet^0,w,c
  3961  0016C0  26D9               	addwf	fsr2l,f,c
  3962  0016C2  503D               	movf	(DirectNet_Run@objetoHTAD_DirectNet+1)^0,w,c
  3963  0016C4  22DA               	addwfc	fsr2h,f,c
  3964  0016C6  C00A  FFDE         	movff	?_SRV_ADT7410_GetTemperature,postinc2
  3965  0016CA  C00B  FFDE         	movff	?_SRV_ADT7410_GetTemperature+1,postinc2
  3966  0016CE  C00C  FFDE         	movff	?_SRV_ADT7410_GetTemperature+2,postinc2
  3967  0016D2  C00D  FFDE         	movff	?_SRV_ADT7410_GetTemperature+3,postinc2
  3968  0016D6                     
  3969                           ;Driver_DirectNet.c: 242:                             int valBruto = objetoHTAD_DirectNe
      +                          t->temperatureS2 * 128;
  3970  0016D6  0E00               	movlw	0
  3971  0016D8  6E0E               	movwf	___flmul@a^0,c
  3972  0016DA  0E00               	movlw	0
  3973  0016DC  6E0F               	movwf	(___flmul@a+1)^0,c
  3974  0016DE  0E00               	movlw	0
  3975  0016E0  6E10               	movwf	(___flmul@a+2)^0,c
  3976  0016E2  0E43               	movlw	67
  3977  0016E4  6E11               	movwf	(___flmul@a+3)^0,c
  3978  0016E6  EE20 F004          	lfsr	2,4
  3979  0016EA  503C               	movf	DirectNet_Run@objetoHTAD_DirectNet^0,w,c
  3980  0016EC  26D9               	addwf	fsr2l,f,c
  3981  0016EE  503D               	movf	(DirectNet_Run@objetoHTAD_DirectNet+1)^0,w,c
  3982  0016F0  22DA               	addwfc	fsr2h,f,c
  3983  0016F2  CFDE F00A          	movff	postinc2,___flmul@b
  3984  0016F6  CFDE F00B          	movff	postinc2,___flmul@b+1
  3985  0016FA  CFDE F00C          	movff	postinc2,___flmul@b+2
  3986  0016FE  CFDE F00D          	movff	postinc2,___flmul@b+3
  3987  001702  ECA9  F01B         	call	___flmul	;wreg free
  3988  001706  C00A  F023         	movff	?___flmul,___fltol@f1
  3989  00170A  C00B  F024         	movff	?___flmul+1,___fltol@f1+1
  3990  00170E  C00C  F025         	movff	?___flmul+2,___fltol@f1+2
  3991  001712  C00D  F026         	movff	?___flmul+3,___fltol@f1+3
  3992  001716  EC1B  F028         	call	___fltol	;wreg free
  3993  00171A  C023  F044         	movff	?___fltol,DirectNet_Run@valBruto_3049
  3994  00171E  C024  F045         	movff	?___fltol+1,DirectNet_Run@valBruto_3049+1
  3995  001722                     
  3996                           ;Driver_DirectNet.c: 243:                             bufferDadosValorBruto[1] = valBrut
      +                          o >> 8;
  3997  001722  5045               	movf	(DirectNet_Run@valBruto_3049+1)^0,w,c
  3998  001724  0101               	movlb	1	; () banked
  3999  001726  6F53               	movwf	(_bufferDadosValorBruto+1)& (0+255),b
  4000  001728                     
  4001                           ; BSR set to: 1
  4002                           ;Driver_DirectNet.c: 244:                             bufferDadosValorBruto[0] = valBrut
      +                          o;
  4003  001728  C044  F152         	movff	DirectNet_Run@valBruto_3049,_bufferDadosValorBruto
  4004  00172C                     
  4005                           ; BSR set to: 1
  4006                           ;Driver_DirectNet.c: 245:                             convertFloatToBuffer(objetoHTAD_Di
      +                          rectNet->temperatureS2,bufferDadosCELSIUS,sizeof(bufferDadosCELSIUS));
  4007  00172C  EE20 F004          	lfsr	2,4
  4008  001730  503C               	movf	DirectNet_Run@objetoHTAD_DirectNet^0,w,c
  4009  001732  26D9               	addwf	fsr2l,f,c
  4010  001734  503D               	movf	(DirectNet_Run@objetoHTAD_DirectNet+1)^0,w,c
  4011  001736  22DA               	addwfc	fsr2h,f,c
  4012  001738  CFDE F02D          	movff	postinc2,convertFloatToBuffer@value
  4013  00173C  CFDE F02E          	movff	postinc2,convertFloatToBuffer@value+1
  4014  001740  CFDE F02F          	movff	postinc2,convertFloatToBuffer@value+2
  4015  001744  CFDE F030          	movff	postinc2,convertFloatToBuffer@value+3
  4016  001748  0ECD               	movlw	low _bufferDadosCELSIUS
  4017  00174A  6E31               	movwf	convertFloatToBuffer@buffer^0,c
  4018  00174C  0E01               	movlw	high _bufferDadosCELSIUS
  4019  00174E  6E32               	movwf	(convertFloatToBuffer@buffer+1)^0,c
  4020  001750  0E04               	movlw	4
  4021  001752  6E33               	movwf	convertFloatToBuffer@bufferSize^0,c
  4022  001754  EC71  F030         	call	_convertFloatToBuffer	;wreg free
  4023  001758                     
  4024                           ;Driver_DirectNet.c: 246:                             objetoHTAD_DirectNet->temperatureS
      +                          2 = SRV_ADT7410_GetTemperature(SENSOR_S2, FAHRENHEIT);
  4025  001758  0E01               	movlw	1
  4026  00175A  6E0A               	movwf	SRV_ADT7410_GetTemperature@typeRead^0,c
  4027  00175C  0E02               	movlw	2
  4028  00175E  EC9E  F02B         	call	_SRV_ADT7410_GetTemperature
  4029  001762  EE20 F004          	lfsr	2,4
  4030  001766  503C               	movf	DirectNet_Run@objetoHTAD_DirectNet^0,w,c
  4031  001768  26D9               	addwf	fsr2l,f,c
  4032  00176A  503D               	movf	(DirectNet_Run@objetoHTAD_DirectNet+1)^0,w,c
  4033  00176C  22DA               	addwfc	fsr2h,f,c
  4034  00176E  C00A  FFDE         	movff	?_SRV_ADT7410_GetTemperature,postinc2
  4035  001772  C00B  FFDE         	movff	?_SRV_ADT7410_GetTemperature+1,postinc2
  4036  001776  C00C  FFDE         	movff	?_SRV_ADT7410_GetTemperature+2,postinc2
  4037  00177A  C00D  FFDE         	movff	?_SRV_ADT7410_GetTemperature+3,postinc2
  4038  00177E                     
  4039                           ;Driver_DirectNet.c: 247:                             convertFloatToBuffer(objetoHTAD_Di
      +                          rectNet->temperatureS2,bufferDadosFAHRENHEIT,sizeof(bufferDadosFAHRENHEIT));
  4040  00177E  EE20 F004          	lfsr	2,4
  4041  001782  503C               	movf	DirectNet_Run@objetoHTAD_DirectNet^0,w,c
  4042  001784  26D9               	addwf	fsr2l,f,c
  4043  001786  503D               	movf	(DirectNet_Run@objetoHTAD_DirectNet+1)^0,w,c
  4044  001788  22DA               	addwfc	fsr2h,f,c
  4045  00178A  CFDE F02D          	movff	postinc2,convertFloatToBuffer@value
  4046  00178E  CFDE F02E          	movff	postinc2,convertFloatToBuffer@value+1
  4047  001792  CFDE F02F          	movff	postinc2,convertFloatToBuffer@value+2
  4048  001796  CFDE F030          	movff	postinc2,convertFloatToBuffer@value+3
  4049  00179A  0EC8               	movlw	low _bufferDadosFAHRENHEIT
  4050  00179C  6E31               	movwf	convertFloatToBuffer@buffer^0,c
  4051  00179E  0E01               	movlw	high _bufferDadosFAHRENHEIT
  4052  0017A0  6E32               	movwf	(convertFloatToBuffer@buffer+1)^0,c
  4053  0017A2  0E05               	movlw	5
  4054  0017A4  6E33               	movwf	convertFloatToBuffer@bufferSize^0,c
  4055  0017A6  EC71  F030         	call	_convertFloatToBuffer	;wreg free
  4056  0017AA                     
  4057                           ;Driver_DirectNet.c: 248:                             ID_Responde = 0x24;
  4058  0017AA  0E24               	movlw	36
  4059  0017AC  0101               	movlb	1	; () banked
  4060  0017AE  6F9E               	movwf	_ID_Responde& (0+255),b
  4061  0017B0  EF4B  F00B         	goto	l13232
  4062  0017B4                     l13254:
  4063                           
  4064                           ; BSR set to: 1
  4065  0017B4  0E23               	movlw	35
  4066  0017B6  1853               	xorwf	_recebeuID^0,w,c
  4067  0017B8  A4D8               	btfss	status,2,c
  4068  0017BA  EFE1  F00B         	goto	u13581
  4069  0017BE  EFE3  F00B         	goto	u13580
  4070  0017C2                     u13581:
  4071  0017C2  EF65  F00C         	goto	l13274
  4072  0017C6                     u13580:
  4073  0017C6                     
  4074                           ; BSR set to: 1
  4075                           ;Driver_DirectNet.c: 253:                             objetoHTAD_DirectNet->temperatureS
      +                          3 = SRV_ADT7410_GetTemperature(SENSOR_S3, CELSIUS);
  4076  0017C6  0E00               	movlw	0
  4077  0017C8  6E0A               	movwf	SRV_ADT7410_GetTemperature@typeRead^0,c
  4078  0017CA  0E03               	movlw	3
  4079  0017CC  EC9E  F02B         	call	_SRV_ADT7410_GetTemperature
  4080  0017D0  EE20 F008          	lfsr	2,8
  4081  0017D4  503C               	movf	DirectNet_Run@objetoHTAD_DirectNet^0,w,c
  4082  0017D6  26D9               	addwf	fsr2l,f,c
  4083  0017D8  503D               	movf	(DirectNet_Run@objetoHTAD_DirectNet+1)^0,w,c
  4084  0017DA  22DA               	addwfc	fsr2h,f,c
  4085  0017DC  C00A  FFDE         	movff	?_SRV_ADT7410_GetTemperature,postinc2
  4086  0017E0  C00B  FFDE         	movff	?_SRV_ADT7410_GetTemperature+1,postinc2
  4087  0017E4  C00C  FFDE         	movff	?_SRV_ADT7410_GetTemperature+2,postinc2
  4088  0017E8  C00D  FFDE         	movff	?_SRV_ADT7410_GetTemperature+3,postinc2
  4089  0017EC                     
  4090                           ;Driver_DirectNet.c: 254:                             int valBruto = objetoHTAD_DirectNe
      +                          t->temperatureS3 * 128;
  4091  0017EC  0E00               	movlw	0
  4092  0017EE  6E0E               	movwf	___flmul@a^0,c
  4093  0017F0  0E00               	movlw	0
  4094  0017F2  6E0F               	movwf	(___flmul@a+1)^0,c
  4095  0017F4  0E00               	movlw	0
  4096  0017F6  6E10               	movwf	(___flmul@a+2)^0,c
  4097  0017F8  0E43               	movlw	67
  4098  0017FA  6E11               	movwf	(___flmul@a+3)^0,c
  4099  0017FC  EE20 F008          	lfsr	2,8
  4100  001800  503C               	movf	DirectNet_Run@objetoHTAD_DirectNet^0,w,c
  4101  001802  26D9               	addwf	fsr2l,f,c
  4102  001804  503D               	movf	(DirectNet_Run@objetoHTAD_DirectNet+1)^0,w,c
  4103  001806  22DA               	addwfc	fsr2h,f,c
  4104  001808  CFDE F00A          	movff	postinc2,___flmul@b
  4105  00180C  CFDE F00B          	movff	postinc2,___flmul@b+1
  4106  001810  CFDE F00C          	movff	postinc2,___flmul@b+2
  4107  001814  CFDE F00D          	movff	postinc2,___flmul@b+3
  4108  001818  ECA9  F01B         	call	___flmul	;wreg free
  4109  00181C  C00A  F023         	movff	?___flmul,___fltol@f1
  4110  001820  C00B  F024         	movff	?___flmul+1,___fltol@f1+1
  4111  001824  C00C  F025         	movff	?___flmul+2,___fltol@f1+2
  4112  001828  C00D  F026         	movff	?___flmul+3,___fltol@f1+3
  4113  00182C  EC1B  F028         	call	___fltol	;wreg free
  4114  001830  C023  F046         	movff	?___fltol,DirectNet_Run@valBruto_3050
  4115  001834  C024  F047         	movff	?___fltol+1,DirectNet_Run@valBruto_3050+1
  4116  001838                     
  4117                           ;Driver_DirectNet.c: 255:                             bufferDadosValorBruto[1] = valBrut
      +                          o >> 8;
  4118  001838  5047               	movf	(DirectNet_Run@valBruto_3050+1)^0,w,c
  4119  00183A  0101               	movlb	1	; () banked
  4120  00183C  6F53               	movwf	(_bufferDadosValorBruto+1)& (0+255),b
  4121  00183E                     
  4122                           ; BSR set to: 1
  4123                           ;Driver_DirectNet.c: 256:                             bufferDadosValorBruto[0] = valBrut
      +                          o;
  4124  00183E  C046  F152         	movff	DirectNet_Run@valBruto_3050,_bufferDadosValorBruto
  4125  001842                     
  4126                           ; BSR set to: 1
  4127                           ;Driver_DirectNet.c: 257:                             convertFloatToBuffer(objetoHTAD_Di
      +                          rectNet->temperatureS3,bufferDadosCELSIUS,sizeof(bufferDadosCELSIUS));
  4128  001842  EE20 F008          	lfsr	2,8
  4129  001846  503C               	movf	DirectNet_Run@objetoHTAD_DirectNet^0,w,c
  4130  001848  26D9               	addwf	fsr2l,f,c
  4131  00184A  503D               	movf	(DirectNet_Run@objetoHTAD_DirectNet+1)^0,w,c
  4132  00184C  22DA               	addwfc	fsr2h,f,c
  4133  00184E  CFDE F02D          	movff	postinc2,convertFloatToBuffer@value
  4134  001852  CFDE F02E          	movff	postinc2,convertFloatToBuffer@value+1
  4135  001856  CFDE F02F          	movff	postinc2,convertFloatToBuffer@value+2
  4136  00185A  CFDE F030          	movff	postinc2,convertFloatToBuffer@value+3
  4137  00185E  0ECD               	movlw	low _bufferDadosCELSIUS
  4138  001860  6E31               	movwf	convertFloatToBuffer@buffer^0,c
  4139  001862  0E01               	movlw	high _bufferDadosCELSIUS
  4140  001864  6E32               	movwf	(convertFloatToBuffer@buffer+1)^0,c
  4141  001866  0E04               	movlw	4
  4142  001868  6E33               	movwf	convertFloatToBuffer@bufferSize^0,c
  4143  00186A  EC71  F030         	call	_convertFloatToBuffer	;wreg free
  4144  00186E                     
  4145                           ;Driver_DirectNet.c: 258:                             objetoHTAD_DirectNet->temperatureS
      +                          3 = SRV_ADT7410_GetTemperature(SENSOR_S3, FAHRENHEIT);
  4146  00186E  0E01               	movlw	1
  4147  001870  6E0A               	movwf	SRV_ADT7410_GetTemperature@typeRead^0,c
  4148  001872  0E03               	movlw	3
  4149  001874  EC9E  F02B         	call	_SRV_ADT7410_GetTemperature
  4150  001878  EE20 F008          	lfsr	2,8
  4151  00187C  503C               	movf	DirectNet_Run@objetoHTAD_DirectNet^0,w,c
  4152  00187E  26D9               	addwf	fsr2l,f,c
  4153  001880  503D               	movf	(DirectNet_Run@objetoHTAD_DirectNet+1)^0,w,c
  4154  001882  22DA               	addwfc	fsr2h,f,c
  4155  001884  C00A  FFDE         	movff	?_SRV_ADT7410_GetTemperature,postinc2
  4156  001888  C00B  FFDE         	movff	?_SRV_ADT7410_GetTemperature+1,postinc2
  4157  00188C  C00C  FFDE         	movff	?_SRV_ADT7410_GetTemperature+2,postinc2
  4158  001890  C00D  FFDE         	movff	?_SRV_ADT7410_GetTemperature+3,postinc2
  4159  001894                     
  4160                           ;Driver_DirectNet.c: 259:                             convertFloatToBuffer(objetoHTAD_Di
      +                          rectNet->temperatureS3,bufferDadosFAHRENHEIT,sizeof(bufferDadosFAHRENHEIT));
  4161  001894  EE20 F008          	lfsr	2,8
  4162  001898  503C               	movf	DirectNet_Run@objetoHTAD_DirectNet^0,w,c
  4163  00189A  26D9               	addwf	fsr2l,f,c
  4164  00189C  503D               	movf	(DirectNet_Run@objetoHTAD_DirectNet+1)^0,w,c
  4165  00189E  22DA               	addwfc	fsr2h,f,c
  4166  0018A0  CFDE F02D          	movff	postinc2,convertFloatToBuffer@value
  4167  0018A4  CFDE F02E          	movff	postinc2,convertFloatToBuffer@value+1
  4168  0018A8  CFDE F02F          	movff	postinc2,convertFloatToBuffer@value+2
  4169  0018AC  CFDE F030          	movff	postinc2,convertFloatToBuffer@value+3
  4170  0018B0  0EC8               	movlw	low _bufferDadosFAHRENHEIT
  4171  0018B2  6E31               	movwf	convertFloatToBuffer@buffer^0,c
  4172  0018B4  0E01               	movlw	high _bufferDadosFAHRENHEIT
  4173  0018B6  6E32               	movwf	(convertFloatToBuffer@buffer+1)^0,c
  4174  0018B8  0E05               	movlw	5
  4175  0018BA  6E33               	movwf	convertFloatToBuffer@bufferSize^0,c
  4176  0018BC  EC71  F030         	call	_convertFloatToBuffer	;wreg free
  4177  0018C0                     
  4178                           ;Driver_DirectNet.c: 260:                             ID_Responde = 0x23;
  4179  0018C0  0E23               	movlw	35
  4180  0018C2  0101               	movlb	1	; () banked
  4181  0018C4  6F9E               	movwf	_ID_Responde& (0+255),b
  4182  0018C6  EF4B  F00B         	goto	l13232
  4183  0018CA                     l13274:
  4184                           
  4185                           ; BSR set to: 1
  4186  0018CA  0E2B               	movlw	43
  4187  0018CC  1853               	xorwf	_recebeuID^0,w,c
  4188  0018CE  A4D8               	btfss	status,2,c
  4189  0018D0  EF6C  F00C         	goto	u13591
  4190  0018D4  EF6E  F00C         	goto	u13590
  4191  0018D8                     u13591:
  4192  0018D8  EFE9  F00C         	goto	l1576
  4193  0018DC                     u13590:
  4194  0018DC                     
  4195                           ; BSR set to: 1
  4196                           ;Driver_DirectNet.c: 267:                             objetoHTAD_DirectNet->DD = Driver_
      +                          Analog_GetValueAN0();
  4197  0018DC  EC74  F031         	call	_Driver_Analog_GetValueAN0	;wreg free
  4198  0018E0  EE20 F00C          	lfsr	2,12
  4199  0018E4  503C               	movf	DirectNet_Run@objetoHTAD_DirectNet^0,w,c
  4200  0018E6  26D9               	addwf	fsr2l,f,c
  4201  0018E8  503D               	movf	(DirectNet_Run@objetoHTAD_DirectNet+1)^0,w,c
  4202  0018EA  22DA               	addwfc	fsr2h,f,c
  4203  0018EC  C031  FFDE         	movff	?_Driver_Analog_GetValueAN0,postinc2
  4204  0018F0  C032  FFDD         	movff	?_Driver_Analog_GetValueAN0+1,postdec2
  4205                           
  4206                           ;Driver_DirectNet.c: 268:                             objetoHTAD_DirectNet->DT = Driver_
      +                          Analog_GetValueAN1();
  4207  0018F4  EC1E  F031         	call	_Driver_Analog_GetValueAN1	;wreg free
  4208  0018F8  EE20 F00E          	lfsr	2,14
  4209  0018FC  503C               	movf	DirectNet_Run@objetoHTAD_DirectNet^0,w,c
  4210  0018FE  26D9               	addwf	fsr2l,f,c
  4211  001900  503D               	movf	(DirectNet_Run@objetoHTAD_DirectNet+1)^0,w,c
  4212  001902  22DA               	addwfc	fsr2h,f,c
  4213  001904  C031  FFDE         	movff	?_Driver_Analog_GetValueAN1,postinc2
  4214  001908  C032  FFDD         	movff	?_Driver_Analog_GetValueAN1+1,postdec2
  4215                           
  4216                           ;Driver_DirectNet.c: 269:                             objetoHTAD_DirectNet->CO2 = Driver
      +                          _Analog_GetValueAN3();
  4217  00190C  ECC8  F030         	call	_Driver_Analog_GetValueAN3	;wreg free
  4218  001910  EE20 F010          	lfsr	2,16
  4219  001914  503C               	movf	DirectNet_Run@objetoHTAD_DirectNet^0,w,c
  4220  001916  26D9               	addwf	fsr2l,f,c
  4221  001918  503D               	movf	(DirectNet_Run@objetoHTAD_DirectNet+1)^0,w,c
  4222  00191A  22DA               	addwfc	fsr2h,f,c
  4223  00191C  C031  FFDE         	movff	?_Driver_Analog_GetValueAN3,postinc2
  4224  001920  C032  FFDD         	movff	?_Driver_Analog_GetValueAN3+1,postdec2
  4225  001924                     
  4226                           ;Driver_DirectNet.c: 271:                             int valBruto = objetoHTAD_DirectNe
      +                          t->DD;
  4227  001924  EE20 F00C          	lfsr	2,12
  4228  001928  503C               	movf	DirectNet_Run@objetoHTAD_DirectNet^0,w,c
  4229  00192A  26D9               	addwf	fsr2l,f,c
  4230  00192C  503D               	movf	(DirectNet_Run@objetoHTAD_DirectNet+1)^0,w,c
  4231  00192E  22DA               	addwfc	fsr2h,f,c
  4232  001930  CFDE F048          	movff	postinc2,DirectNet_Run@valBruto_3051
  4233  001934  CFDD F049          	movff	postdec2,DirectNet_Run@valBruto_3051+1
  4234  001938                     
  4235                           ;Driver_DirectNet.c: 273:                             bufferDadosDDDTCO2[0] = 0xAA;
  4236  001938  0EAA               	movlw	170
  4237  00193A  0102               	movlb	2	; () banked
  4238  00193C  6FC3               	movwf	_bufferDadosDDDTCO2& (0+255),b
  4239  00193E                     
  4240                           ; BSR set to: 2
  4241                           ;Driver_DirectNet.c: 274:                             bufferDadosDDDTCO2[1] = 0x00;
  4242  00193E  0E00               	movlw	0
  4243  001940  6FC4               	movwf	(_bufferDadosDDDTCO2+1)& (0+255),b
  4244  001942                     
  4245                           ; BSR set to: 2
  4246                           ;Driver_DirectNet.c: 275:                             bufferDadosDDDTCO2[2] = 0x00;
  4247  001942  0E00               	movlw	0
  4248  001944  6FC5               	movwf	(_bufferDadosDDDTCO2+2)& (0+255),b
  4249  001946                     
  4250                           ; BSR set to: 2
  4251                           ;Driver_DirectNet.c: 276:                             bufferDadosDDDTCO2[3] = 0x00;
  4252  001946  0E00               	movlw	0
  4253  001948  6FC6               	movwf	(_bufferDadosDDDTCO2+3)& (0+255),b
  4254  00194A                     
  4255                           ; BSR set to: 2
  4256                           ;Driver_DirectNet.c: 277:                             bufferDadosDDDTCO2[4] = 0x00;
  4257  00194A  0E00               	movlw	0
  4258  00194C  6FC7               	movwf	(_bufferDadosDDDTCO2+4)& (0+255),b
  4259  00194E                     
  4260                           ; BSR set to: 2
  4261                           ;Driver_DirectNet.c: 278:                             bufferDadosDDDTCO2[5] = 0x00;
  4262  00194E  0E00               	movlw	0
  4263  001950  6FC8               	movwf	(_bufferDadosDDDTCO2+5)& (0+255),b
  4264  001952                     
  4265                           ; BSR set to: 2
  4266                           ;Driver_DirectNet.c: 279:                             bufferDadosDDDTCO2[6] = 0x00;
  4267  001952  0E00               	movlw	0
  4268  001954  6FC9               	movwf	(_bufferDadosDDDTCO2+6)& (0+255),b
  4269  001956                     
  4270                           ; BSR set to: 2
  4271                           ;Driver_DirectNet.c: 280:                             bufferDadosDDDTCO2[7] = 0x00;
  4272  001956  0E00               	movlw	0
  4273  001958  6FCA               	movwf	(_bufferDadosDDDTCO2+7)& (0+255),b
  4274  00195A                     
  4275                           ; BSR set to: 2
  4276                           ;Driver_DirectNet.c: 281:                             bufferDadosDDDTCO2[8] = 0x00;
  4277  00195A  0E00               	movlw	0
  4278  00195C  6FCB               	movwf	(_bufferDadosDDDTCO2+8)& (0+255),b
  4279  00195E                     
  4280                           ; BSR set to: 2
  4281                           ;Driver_DirectNet.c: 284:                             valBruto = objetoHTAD_DirectNet->D
      +                          D;
  4282  00195E  EE20 F00C          	lfsr	2,12
  4283  001962  503C               	movf	DirectNet_Run@objetoHTAD_DirectNet^0,w,c
  4284  001964  26D9               	addwf	fsr2l,f,c
  4285  001966  503D               	movf	(DirectNet_Run@objetoHTAD_DirectNet+1)^0,w,c
  4286  001968  22DA               	addwfc	fsr2h,f,c
  4287  00196A  CFDE F048          	movff	postinc2,DirectNet_Run@valBruto_3051
  4288  00196E  CFDD F049          	movff	postdec2,DirectNet_Run@valBruto_3051+1
  4289  001972                     
  4290                           ; BSR set to: 2
  4291                           ;Driver_DirectNet.c: 287:                             bufferDadosDDDTCO2[10] = valBruto 
      +                          >> 8;
  4292  001972  5049               	movf	(DirectNet_Run@valBruto_3051+1)^0,w,c
  4293  001974  6FCD               	movwf	(_bufferDadosDDDTCO2+10)& (0+255),b
  4294  001976                     
  4295                           ; BSR set to: 2
  4296                           ;Driver_DirectNet.c: 288:                             bufferDadosDDDTCO2[9] = valBruto;
  4297  001976  C048  F2CC         	movff	DirectNet_Run@valBruto_3051,_bufferDadosDDDTCO2+9
  4298  00197A                     
  4299                           ; BSR set to: 2
  4300                           ;Driver_DirectNet.c: 290:                             valBruto = valBruto = objetoHTAD_D
      +                          irectNet->DT;
  4301  00197A  EE20 F00E          	lfsr	2,14
  4302  00197E  503C               	movf	DirectNet_Run@objetoHTAD_DirectNet^0,w,c
  4303  001980  26D9               	addwf	fsr2l,f,c
  4304  001982  503D               	movf	(DirectNet_Run@objetoHTAD_DirectNet+1)^0,w,c
  4305  001984  22DA               	addwfc	fsr2h,f,c
  4306  001986  CFDE F048          	movff	postinc2,DirectNet_Run@valBruto_3051
  4307  00198A  CFDD F049          	movff	postdec2,DirectNet_Run@valBruto_3051+1
  4308  00198E  C048  F048         	movff	DirectNet_Run@valBruto_3051,DirectNet_Run@valBruto_3051
  4309  001992  C049  F049         	movff	DirectNet_Run@valBruto_3051+1,DirectNet_Run@valBruto_3051+1
  4310  001996                     
  4311                           ; BSR set to: 2
  4312                           ;Driver_DirectNet.c: 292:                             bufferDadosDDDTCO2[12] = valBruto 
      +                          >> 8;
  4313  001996  5049               	movf	(DirectNet_Run@valBruto_3051+1)^0,w,c
  4314  001998  6FCF               	movwf	(_bufferDadosDDDTCO2+12)& (0+255),b
  4315  00199A                     
  4316                           ; BSR set to: 2
  4317                           ;Driver_DirectNet.c: 293:                             bufferDadosDDDTCO2[11] = valBruto;
  4318  00199A  C048  F2CE         	movff	DirectNet_Run@valBruto_3051,_bufferDadosDDDTCO2+11
  4319  00199E                     
  4320                           ; BSR set to: 2
  4321                           ;Driver_DirectNet.c: 295:                             valBruto = objetoHTAD_DirectNet->C
      +                          O2;
  4322  00199E  EE20 F010          	lfsr	2,16
  4323  0019A2  503C               	movf	DirectNet_Run@objetoHTAD_DirectNet^0,w,c
  4324  0019A4  26D9               	addwf	fsr2l,f,c
  4325  0019A6  503D               	movf	(DirectNet_Run@objetoHTAD_DirectNet+1)^0,w,c
  4326  0019A8  22DA               	addwfc	fsr2h,f,c
  4327  0019AA  CFDE F048          	movff	postinc2,DirectNet_Run@valBruto_3051
  4328  0019AE  CFDD F049          	movff	postdec2,DirectNet_Run@valBruto_3051+1
  4329  0019B2                     
  4330                           ; BSR set to: 2
  4331                           ;Driver_DirectNet.c: 297:                             bufferDadosDDDTCO2[14] = valBruto 
      +                          >> 8;
  4332  0019B2  5049               	movf	(DirectNet_Run@valBruto_3051+1)^0,w,c
  4333  0019B4  6FD1               	movwf	(_bufferDadosDDDTCO2+14)& (0+255),b
  4334  0019B6                     
  4335                           ; BSR set to: 2
  4336                           ;Driver_DirectNet.c: 298:                             bufferDadosDDDTCO2[13] = valBruto;
  4337  0019B6  C048  F2D0         	movff	DirectNet_Run@valBruto_3051,_bufferDadosDDDTCO2+13
  4338  0019BA                     
  4339                           ; BSR set to: 2
  4340                           ;Driver_DirectNet.c: 300:                             bufferDadosDDDTCO2[15] = 0xFF;
  4341  0019BA  69D2               	setf	(_bufferDadosDDDTCO2+15)& (0+255),b
  4342  0019BC                     
  4343                           ; BSR set to: 2
  4344                           ;Driver_DirectNet.c: 301:                             bufferDadosDDDTCO2[16] = 0xFF;
  4345  0019BC  69D3               	setf	(_bufferDadosDDDTCO2+16)& (0+255),b
  4346  0019BE                     
  4347                           ; BSR set to: 2
  4348                           ;Driver_DirectNet.c: 302:                             bufferDadosDDDTCO2[17] = 0xFF;
  4349  0019BE  69D4               	setf	(_bufferDadosDDDTCO2+17)& (0+255),b
  4350  0019C0                     
  4351                           ; BSR set to: 2
  4352                           ;Driver_DirectNet.c: 303:                             bufferDadosDDDTCO2[18] = 0xFF;
  4353  0019C0  69D5               	setf	(_bufferDadosDDDTCO2+18)& (0+255),b
  4354  0019C2                     
  4355                           ; BSR set to: 2
  4356                           ;Driver_DirectNet.c: 304:                             bufferDadosDDDTCO2[19] = 0xFF;
  4357  0019C2  69D6               	setf	(_bufferDadosDDDTCO2+19)& (0+255),b
  4358  0019C4                     
  4359                           ; BSR set to: 2
  4360                           ;Driver_DirectNet.c: 305:                             bufferDadosDDDTCO2[20] = 0xFF;
  4361  0019C4  69D7               	setf	(_bufferDadosDDDTCO2+20)& (0+255),b
  4362  0019C6                     
  4363                           ; BSR set to: 2
  4364                           ;Driver_DirectNet.c: 306:                             bufferDadosDDDTCO2[21] = 0xFF;
  4365  0019C6  69D8               	setf	(_bufferDadosDDDTCO2+21)& (0+255),b
  4366  0019C8                     
  4367                           ; BSR set to: 2
  4368                           ;Driver_DirectNet.c: 307:                             bufferDadosDDDTCO2[22] = 0xFF;
  4369  0019C8  69D9               	setf	(_bufferDadosDDDTCO2+22)& (0+255),b
  4370  0019CA                     
  4371                           ; BSR set to: 2
  4372                           ;Driver_DirectNet.c: 308:                             DirectNet_enviaDadosDDDTCO2();
  4373  0019CA  ECBB  F02F         	call	_DirectNet_enviaDadosDDDTCO2	;wreg free
  4374  0019CE  EFE9  F00C         	goto	l13334
  4375  0019D2                     l1576:
  4376  0019D2                     l13334:
  4377                           
  4378                           ;Driver_DirectNet.c: 310:                        stateDirectNet = 2;
  4379  0019D2  0E02               	movlw	2
  4380  0019D4  0101               	movlb	1	; () banked
  4381  0019D6  6F9D               	movwf	_stateDirectNet& (0+255),b
  4382                           
  4383                           ;Driver_DirectNet.c: 311:                        break;
  4384  0019D8  EF56  F00D         	goto	l13364
  4385  0019DC                     l13338:
  4386                           
  4387                           ; BSR set to: 1
  4388                           ;Driver_DirectNet.c: 314:                       EUSART1_Write(0x04);
  4389  0019DC  0E04               	movlw	4
  4390  0019DE  EC26  F03B         	call	_EUSART1_Write
  4391  0019E2                     
  4392                           ;Driver_DirectNet.c: 315:                       stateDirectNet = 0;
  4393  0019E2  0E00               	movlw	0
  4394  0019E4  0101               	movlb	1	; () banked
  4395  0019E6  6F9D               	movwf	_stateDirectNet& (0+255),b
  4396  0019E8                     
  4397                           ; BSR set to: 1
  4398                           ;Driver_DirectNet.c: 317:                 }
  4399  0019E8  4A4A               	infsnz	DirectNet_Run@i^0,f,c
  4400  0019EA  2A4B               	incf	(DirectNet_Run@i+1)^0,f,c
  4401  0019EC                     l13344:
  4402                           
  4403                           ; BSR set to: 1
  4404  0019EC  5187               	movf	_contRX& (0+255),w,b
  4405  0019EE  5C4A               	subwf	DirectNet_Run@i^0,w,c
  4406  0019F0  5188               	movf	(_contRX+1)& (0+255),w,b
  4407  0019F2  584B               	subwfb	(DirectNet_Run@i+1)^0,w,c
  4408  0019F4  A0D8               	btfss	status,0,c
  4409  0019F6  EFFF  F00C         	goto	u13601
  4410  0019FA  EF01  F00D         	goto	u13600
  4411  0019FE                     u13601:
  4412  0019FE  EF7A  F00A         	goto	l13204
  4413  001A02                     u13600:
  4414  001A02  EF56  F00D         	goto	l13364
  4415  001A06                     l13346:
  4416                           
  4417                           ; BSR set to: 1
  4418                           ;Driver_DirectNet.c: 321:                 i = 0;
  4419  001A06  0E00               	movlw	0
  4420  001A08  6E4B               	movwf	(DirectNet_Run@i+1)^0,c
  4421  001A0A  0E00               	movlw	0
  4422  001A0C  6E4A               	movwf	DirectNet_Run@i^0,c
  4423                           
  4424                           ;Driver_DirectNet.c: 322:                 for (i = 0; i < contRX; i++) {
  4425  001A0E  0E00               	movlw	0
  4426  001A10  6E4B               	movwf	(DirectNet_Run@i+1)^0,c
  4427  001A12  0E00               	movlw	0
  4428  001A14  6E4A               	movwf	DirectNet_Run@i^0,c
  4429  001A16  EF2D  F00D         	goto	l13356
  4430  001A1A                     l13348:
  4431                           
  4432                           ; BSR set to: 1
  4433                           ;Driver_DirectNet.c: 323:                     if( recebeu[i] == 0x06){
  4434  001A1A  0E00               	movlw	low _recebeu
  4435  001A1C  244A               	addwf	DirectNet_Run@i^0,w,c
  4436  001A1E  6ED9               	movwf	fsr2l,c
  4437  001A20  0E02               	movlw	high _recebeu
  4438  001A22  204B               	addwfc	(DirectNet_Run@i+1)^0,w,c
  4439  001A24  6EDA               	movwf	fsr2h,c
  4440  001A26  0E06               	movlw	6
  4441  001A28  18DE               	xorwf	postinc2,w,c
  4442  001A2A  A4D8               	btfss	status,2,c
  4443  001A2C  EF1A  F00D         	goto	u13611
  4444  001A30  EF1C  F00D         	goto	u13610
  4445  001A34                     u13611:
  4446  001A34  EF2B  F00D         	goto	l13354
  4447  001A38                     u13610:
  4448  001A38                     
  4449                           ; BSR set to: 1
  4450                           ;Driver_DirectNet.c: 324:                         EUSART1_Write(0x04);
  4451  001A38  0E04               	movlw	4
  4452  001A3A  EC26  F03B         	call	_EUSART1_Write
  4453  001A3E                     
  4454                           ;Driver_DirectNet.c: 325:                         objetoHTAD_DirectNet->contWDT = 0;
  4455  001A3E  EE20 F018          	lfsr	2,24
  4456  001A42  503C               	movf	DirectNet_Run@objetoHTAD_DirectNet^0,w,c
  4457  001A44  26D9               	addwf	fsr2l,f,c
  4458  001A46  503D               	movf	(DirectNet_Run@objetoHTAD_DirectNet+1)^0,w,c
  4459  001A48  22DA               	addwfc	fsr2h,f,c
  4460  001A4A  0E00               	movlw	0
  4461  001A4C  6EDE               	movwf	postinc2,c
  4462  001A4E  0E00               	movlw	0
  4463  001A50  6EDD               	movwf	postdec2,c
  4464                           
  4465                           ;Driver_DirectNet.c: 326:                        break;
  4466  001A52  EF38  F00D         	goto	l13358
  4467  001A56                     l13354:
  4468                           
  4469                           ; BSR set to: 1
  4470                           ;Driver_DirectNet.c: 328:                 }
  4471  001A56  4A4A               	infsnz	DirectNet_Run@i^0,f,c
  4472  001A58  2A4B               	incf	(DirectNet_Run@i+1)^0,f,c
  4473  001A5A                     l13356:
  4474                           
  4475                           ; BSR set to: 1
  4476  001A5A  5187               	movf	_contRX& (0+255),w,b
  4477  001A5C  5C4A               	subwf	DirectNet_Run@i^0,w,c
  4478  001A5E  5188               	movf	(_contRX+1)& (0+255),w,b
  4479  001A60  584B               	subwfb	(DirectNet_Run@i+1)^0,w,c
  4480  001A62  A0D8               	btfss	status,0,c
  4481  001A64  EF36  F00D         	goto	u13621
  4482  001A68  EF38  F00D         	goto	u13620
  4483  001A6C                     u13621:
  4484  001A6C  EF0D  F00D         	goto	l13348
  4485  001A70                     u13620:
  4486  001A70                     l13358:
  4487                           
  4488                           ;Driver_DirectNet.c: 329:                 stateDirectNet = 0;
  4489  001A70  0E00               	movlw	0
  4490  001A72  0101               	movlb	1	; () banked
  4491  001A74  6F9D               	movwf	_stateDirectNet& (0+255),b
  4492                           
  4493                           ;Driver_DirectNet.c: 330:                 break;
  4494  001A76  EF56  F00D         	goto	l13364
  4495  001A7A                     l13362:
  4496                           
  4497                           ; BSR set to: 1
  4498  001A7A  519D               	movf	_stateDirectNet& (0+255),w,b
  4499  001A7C  6E3E               	movwf	??_DirectNet_Run^0,c
  4500  001A7E  6A3F               	clrf	(??_DirectNet_Run+1)^0,c
  4501                           
  4502                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4503                           ; Switch size 1, requested type "simple"
  4504                           ; Number of cases is 1, Range of values is 0 to 0
  4505                           ; switch strategies available:
  4506                           ; Name         Instructions Cycles
  4507                           ; simple_byte            4     3 (average)
  4508                           ;	Chosen strategy is simple_byte
  4509  001A80  503F               	movf	(??_DirectNet_Run+1)^0,w,c
  4510  001A82  0A00               	xorlw	0	; case 0
  4511  001A84  B4D8               	btfsc	status,2,c
  4512  001A86  EF47  F00D         	goto	l14108
  4513  001A8A  EF56  F00D         	goto	l13364
  4514  001A8E                     l14108:
  4515                           
  4516                           ; BSR set to: 1
  4517                           ; Switch size 1, requested type "simple"
  4518                           ; Number of cases is 3, Range of values is 0 to 2
  4519                           ; switch strategies available:
  4520                           ; Name         Instructions Cycles
  4521                           ; simple_byte           10     6 (average)
  4522                           ;	Chosen strategy is simple_byte
  4523  001A8E  503E               	movf	??_DirectNet_Run^0,w,c
  4524  001A90  0A00               	xorlw	0	; case 0
  4525  001A92  B4D8               	btfsc	status,2,c
  4526  001A94  EF06  F00A         	goto	l13174
  4527  001A98  0A01               	xorlw	1	; case 1
  4528  001A9A  B4D8               	btfsc	status,2,c
  4529  001A9C  EF70  F00A         	goto	l13202
  4530  001AA0  0A03               	xorlw	3	; case 2
  4531  001AA2  B4D8               	btfsc	status,2,c
  4532  001AA4  EF03  F00D         	goto	l13346
  4533  001AA8  EF56  F00D         	goto	l13364
  4534  001AAC                     l13364:
  4535                           
  4536                           ; BSR set to: 1
  4537                           ;Driver_DirectNet.c: 333:         i = 0;
  4538  001AAC  0E00               	movlw	0
  4539  001AAE  6E4B               	movwf	(DirectNet_Run@i+1)^0,c
  4540  001AB0  0E00               	movlw	0
  4541  001AB2  6E4A               	movwf	DirectNet_Run@i^0,c
  4542                           
  4543                           ;Driver_DirectNet.c: 334:         while(EUSART1_is_tx_done() == 0){i++;recebeu[i] = 0;if
      +                          (i > contRX)i = 0; }
  4544  001AB4  EF74  F00D         	goto	l13374
  4545  001AB8                     l13366:
  4546  001AB8  4A4A               	infsnz	DirectNet_Run@i^0,f,c
  4547  001ABA  2A4B               	incf	(DirectNet_Run@i+1)^0,f,c
  4548  001ABC  0E00               	movlw	low _recebeu
  4549  001ABE  244A               	addwf	DirectNet_Run@i^0,w,c
  4550  001AC0  6ED9               	movwf	fsr2l,c
  4551  001AC2  0E02               	movlw	high _recebeu
  4552  001AC4  204B               	addwfc	(DirectNet_Run@i+1)^0,w,c
  4553  001AC6  6EDA               	movwf	fsr2h,c
  4554  001AC8  0E00               	movlw	0
  4555  001ACA  6EDF               	movwf	indf2,c
  4556  001ACC  504A               	movf	DirectNet_Run@i^0,w,c
  4557  001ACE  0101               	movlb	1	; () banked
  4558  001AD0  5D87               	subwf	_contRX& (0+255),w,b
  4559  001AD2  504B               	movf	(DirectNet_Run@i+1)^0,w,c
  4560  001AD4  5988               	subwfb	(_contRX+1)& (0+255),w,b
  4561  001AD6  B0D8               	btfsc	status,0,c
  4562  001AD8  EF70  F00D         	goto	u13631
  4563  001ADC  EF72  F00D         	goto	u13630
  4564  001AE0                     u13631:
  4565  001AE0  EF74  F00D         	goto	l13374
  4566  001AE4                     u13630:
  4567  001AE4  EF56  F00D         	goto	l13364
  4568  001AE8                     l13374:
  4569                           
  4570                           ; BSR set to: 1
  4571  001AE8  EC3B  F03B         	call	_EUSART1_is_tx_done	;wreg free
  4572  001AEC  0900               	iorlw	0
  4573  001AEE  B4D8               	btfsc	status,2,c
  4574  001AF0  EF7C  F00D         	goto	u13641
  4575  001AF4  EF7E  F00D         	goto	u13640
  4576  001AF8                     u13641:
  4577  001AF8  EF5C  F00D         	goto	l13366
  4578  001AFC                     u13640:
  4579  001AFC  9A8B               	bcf	139,5,c	;volatile
  4580  001AFE                     
  4581                           ;Driver_DirectNet.c: 337:        contRX = 0;
  4582  001AFE  0E00               	movlw	0
  4583  001B00  0101               	movlb	1	; () banked
  4584  001B02  6F88               	movwf	(_contRX+1)& (0+255),b
  4585  001B04  0E00               	movlw	0
  4586  001B06  6F87               	movwf	_contRX& (0+255),b
  4587                           
  4588                           ;Driver_DirectNet.c: 338:        recebeu_Serial = 0;
  4589  001B08  0E00               	movlw	0
  4590  001B0A  6FA1               	movwf	_recebeu_Serial& (0+255),b
  4591  001B0C                     l1593:
  4592                           
  4593                           ; BSR set to: 1
  4594  001B0C  0012               	return		;funcret
  4595  001B0E                     __end_of_DirectNet_Run:
  4596                           	callstack 0
  4597                           
  4598 ;; *************** function _convertFloatToBuffer *****************
  4599 ;; Defined at:
  4600 ;;		line 159 in file "Driver_DirectNet.c"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;  value           4   44[COMRAM] float 
  4603 ;;  buffer          2   48[COMRAM] PTR unsigned char 
  4604 ;;		 -> bufferDadosFAHRENHEIT(5), bufferDadosCELSIUS(4), 
  4605 ;;  bufferSize      1   50[COMRAM] unsigned char 
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;  i               2   55[COMRAM] unsigned int 
  4608 ;;  val             2   53[COMRAM] int 
  4609 ;; Return value:  Size  Location     Type
  4610 ;;                  1    wreg      void 
  4611 ;; Registers used:
  4612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4613 ;; Tracked objects:
  4614 ;;		On entry : 0/0
  4615 ;;		On exit  : 0/0
  4616 ;;		Unchanged: 0/0
  4617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4618 ;;      Params:         7       0       0       0       0       0       0
  4619 ;;      Locals:         4       0       0       0       0       0       0
  4620 ;;      Temps:          2       0       0       0       0       0       0
  4621 ;;      Totals:        13       0       0       0       0       0       0
  4622 ;;Total ram usage:       13 bytes
  4623 ;; Hardware stack levels used: 1
  4624 ;; Hardware stack levels required when called: 5
  4625 ;; This function calls:
  4626 ;;		___awdiv
  4627 ;;		___awmod
  4628 ;;		___flmul
  4629 ;;		___fltol
  4630 ;; This function is called by:
  4631 ;;		_DirectNet_Run
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           	psect	text18
  4636  0060E2                     __ptext18:
  4637                           	callstack 0
  4638  0060E2                     _convertFloatToBuffer:
  4639                           	callstack 23
  4640  0060E2                     
  4641                           ;Driver_DirectNet.c: 160:     int val = value * 100;
  4642  0060E2  0E00               	movlw	0
  4643  0060E4  6E0E               	movwf	___flmul@a^0,c
  4644  0060E6  0E00               	movlw	0
  4645  0060E8  6E0F               	movwf	(___flmul@a+1)^0,c
  4646  0060EA  0EC8               	movlw	200
  4647  0060EC  6E10               	movwf	(___flmul@a+2)^0,c
  4648  0060EE  0E42               	movlw	66
  4649  0060F0  6E11               	movwf	(___flmul@a+3)^0,c
  4650  0060F2  C02D  F00A         	movff	convertFloatToBuffer@value,___flmul@b
  4651  0060F6  C02E  F00B         	movff	convertFloatToBuffer@value+1,___flmul@b+1
  4652  0060FA  C02F  F00C         	movff	convertFloatToBuffer@value+2,___flmul@b+2
  4653  0060FE  C030  F00D         	movff	convertFloatToBuffer@value+3,___flmul@b+3
  4654  006102  ECA9  F01B         	call	___flmul	;wreg free
  4655  006106  C00A  F023         	movff	?___flmul,___fltol@f1
  4656  00610A  C00B  F024         	movff	?___flmul+1,___fltol@f1+1
  4657  00610E  C00C  F025         	movff	?___flmul+2,___fltol@f1+2
  4658  006112  C00D  F026         	movff	?___flmul+3,___fltol@f1+3
  4659  006116  EC1B  F028         	call	___fltol	;wreg free
  4660  00611A  C023  F036         	movff	?___fltol,convertFloatToBuffer@val
  4661  00611E  C024  F037         	movff	?___fltol+1,convertFloatToBuffer@val+1
  4662  006122                     
  4663                           ;Driver_DirectNet.c: 161:     for (size_t i = 0; i < bufferSize; i++) {
  4664  006122  0E00               	movlw	0
  4665  006124  6E39               	movwf	(convertFloatToBuffer@i+1)^0,c
  4666  006126  0E00               	movlw	0
  4667  006128  6E38               	movwf	convertFloatToBuffer@i^0,c
  4668  00612A  EFB9  F030         	goto	l13118
  4669  00612E                     l13112:
  4670                           
  4671                           ;Driver_DirectNet.c: 162:         buffer[i] = val % 10;
  4672  00612E  5038               	movf	convertFloatToBuffer@i^0,w,c
  4673  006130  2431               	addwf	convertFloatToBuffer@buffer^0,w,c
  4674  006132  6ED9               	movwf	fsr2l,c
  4675  006134  5039               	movf	(convertFloatToBuffer@i+1)^0,w,c
  4676  006136  2032               	addwfc	(convertFloatToBuffer@buffer+1)^0,w,c
  4677  006138  6EDA               	movwf	fsr2h,c
  4678  00613A  C036  F012         	movff	convertFloatToBuffer@val,___awmod@dividend
  4679  00613E  C037  F013         	movff	convertFloatToBuffer@val+1,___awmod@dividend+1
  4680  006142  0E00               	movlw	0
  4681  006144  6E15               	movwf	(___awmod@divisor+1)^0,c
  4682  006146  0E0A               	movlw	10
  4683  006148  6E14               	movwf	___awmod@divisor^0,c
  4684  00614A  EC19  F030         	call	___awmod	;wreg free
  4685  00614E  5012               	movf	?___awmod^0,w,c
  4686  006150  6EDF               	movwf	indf2,c
  4687  006152                     
  4688                           ;Driver_DirectNet.c: 163:         val /= 10;
  4689  006152  C036  F00A         	movff	convertFloatToBuffer@val,___awdiv@dividend
  4690  006156  C037  F00B         	movff	convertFloatToBuffer@val+1,___awdiv@dividend+1
  4691  00615A  0E00               	movlw	0
  4692  00615C  6E0D               	movwf	(___awdiv@divisor+1)^0,c
  4693  00615E  0E0A               	movlw	10
  4694  006160  6E0C               	movwf	___awdiv@divisor^0,c
  4695  006162  ECF8  F02E         	call	___awdiv	;wreg free
  4696  006166  C00A  F036         	movff	?___awdiv,convertFloatToBuffer@val
  4697  00616A  C00B  F037         	movff	?___awdiv+1,convertFloatToBuffer@val+1
  4698  00616E                     
  4699                           ;Driver_DirectNet.c: 164:     }
  4700  00616E  4A38               	infsnz	convertFloatToBuffer@i^0,f,c
  4701  006170  2A39               	incf	(convertFloatToBuffer@i+1)^0,f,c
  4702  006172                     l13118:
  4703  006172  5033               	movf	convertFloatToBuffer@bufferSize^0,w,c
  4704  006174  6E34               	movwf	??_convertFloatToBuffer^0,c
  4705  006176  6A35               	clrf	(??_convertFloatToBuffer+1)^0,c
  4706  006178  5034               	movf	??_convertFloatToBuffer^0,w,c
  4707  00617A  5C38               	subwf	convertFloatToBuffer@i^0,w,c
  4708  00617C  5035               	movf	(??_convertFloatToBuffer+1)^0,w,c
  4709  00617E  5839               	subwfb	(convertFloatToBuffer@i+1)^0,w,c
  4710  006180  A0D8               	btfss	status,0,c
  4711  006182  EFC5  F030         	goto	u13371
  4712  006186  EFC7  F030         	goto	u13370
  4713  00618A                     u13371:
  4714  00618A  EF97  F030         	goto	l13112
  4715  00618E                     u13370:
  4716  00618E  0012               	return		;funcret
  4717  006190                     __end_of_convertFloatToBuffer:
  4718                           	callstack 0
  4719                           
  4720 ;; *************** function _EUSART1_is_tx_done *****************
  4721 ;; Defined at:
  4722 ;;		line 133 in file "mcc_generated_files/eusart1.c"
  4723 ;; Parameters:    Size  Location     Type
  4724 ;;		None
  4725 ;; Auto vars:     Size  Location     Type
  4726 ;;		None
  4727 ;; Return value:  Size  Location     Type
  4728 ;;                  1    wreg      _Bool 
  4729 ;; Registers used:
  4730 ;;		wreg
  4731 ;; Tracked objects:
  4732 ;;		On entry : 0/0
  4733 ;;		On exit  : 0/0
  4734 ;;		Unchanged: 0/0
  4735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4736 ;;      Params:         0       0       0       0       0       0       0
  4737 ;;      Locals:         0       0       0       0       0       0       0
  4738 ;;      Temps:          0       0       0       0       0       0       0
  4739 ;;      Totals:         0       0       0       0       0       0       0
  4740 ;;Total ram usage:        0 bytes
  4741 ;; Hardware stack levels used: 1
  4742 ;; Hardware stack levels required when called: 4
  4743 ;; This function calls:
  4744 ;;		Nothing
  4745 ;; This function is called by:
  4746 ;;		_DirectNet_Run
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750                           	psect	text19
  4751  007676                     __ptext19:
  4752                           	callstack 0
  4753  007676                     _EUSART1_is_tx_done:
  4754                           	callstack 24
  4755  007676                     
  4756                           ;mcc_generated_files/eusart1.c: 135:     return TXSTA1bits.TRMT;
  4757  007676  B2AC               	btfsc	172,1,c	;volatile
  4758  007678  EF40  F03B         	goto	u8341
  4759  00767C  EF43  F03B         	goto	u8340
  4760  007680                     u8341:
  4761  007680  0E01               	movlw	1
  4762  007682  EF44  F03B         	goto	u8346
  4763  007686                     u8340:
  4764  007686  0E00               	movlw	0
  4765  007688                     u8346:
  4766  007688  0012               	return		;funcret
  4767  00768A                     __end_of_EUSART1_is_tx_done:
  4768                           	callstack 0
  4769                           
  4770 ;; *************** function _DirectNet_enviaDadosSensores *****************
  4771 ;; Defined at:
  4772 ;;		line 97 in file "Driver_DirectNet.c"
  4773 ;; Parameters:    Size  Location     Type
  4774 ;;		None
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;  i               2   15[COMRAM] int 
  4777 ;;  LCR             1   14[COMRAM] unsigned char 
  4778 ;; Return value:  Size  Location     Type
  4779 ;;                  1    wreg      void 
  4780 ;; Registers used:
  4781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4782 ;; Tracked objects:
  4783 ;;		On entry : 0/0
  4784 ;;		On exit  : 0/0
  4785 ;;		Unchanged: 0/0
  4786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4787 ;;      Params:         0       0       0       0       0       0       0
  4788 ;;      Locals:         3       0       0       0       0       0       0
  4789 ;;      Temps:          0       0       0       0       0       0       0
  4790 ;;      Totals:         3       0       0       0       0       0       0
  4791 ;;Total ram usage:        3 bytes
  4792 ;; Hardware stack levels used: 1
  4793 ;; Hardware stack levels required when called: 5
  4794 ;; This function calls:
  4795 ;;		_EUSART1_Write
  4796 ;;		_calculateLRC
  4797 ;; This function is called by:
  4798 ;;		_DirectNet_Run
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801                           
  4802                           	psect	text20
  4803  004F2C                     __ptext20:
  4804                           	callstack 0
  4805  004F2C                     _DirectNet_enviaDadosSensores:
  4806                           	callstack 23
  4807  004F2C                     
  4808                           ;Driver_DirectNet.c: 99:     bufferLcr[0] = 0xAA;
  4809  004F2C  0EAA               	movlw	170
  4810  004F2E  0102               	movlb	2	; () banked
  4811  004F30  6FE1               	movwf	_bufferLcr& (0+255),b
  4812                           
  4813                           ;Driver_DirectNet.c: 100:     bufferLcr[1] = 0x00;
  4814  004F32  0E00               	movlw	0
  4815  004F34  6FE2               	movwf	(_bufferLcr+1)& (0+255),b
  4816                           
  4817                           ;Driver_DirectNet.c: 101:     bufferLcr[2] = 0x00;
  4818  004F36  0E00               	movlw	0
  4819  004F38  6FE3               	movwf	(_bufferLcr+2)& (0+255),b
  4820                           
  4821                           ;Driver_DirectNet.c: 102:     bufferLcr[3] = 0x00;
  4822  004F3A  0E00               	movlw	0
  4823  004F3C  6FE4               	movwf	(_bufferLcr+3)& (0+255),b
  4824  004F3E                     
  4825                           ; BSR set to: 2
  4826                           ;Driver_DirectNet.c: 103:     bufferLcr[4] = bufferDadosValorBruto[0];
  4827  004F3E  C152  F2E5         	movff	_bufferDadosValorBruto,_bufferLcr+4
  4828  004F42                     
  4829                           ; BSR set to: 2
  4830                           ;Driver_DirectNet.c: 104:     bufferLcr[5] = bufferDadosValorBruto[1];
  4831  004F42  C153  F2E6         	movff	_bufferDadosValorBruto+1,_bufferLcr+5
  4832                           
  4833                           ;Driver_DirectNet.c: 105:     bufferLcr[6] = 0x00;
  4834  004F46  0E00               	movlw	0
  4835  004F48  6FE7               	movwf	(_bufferLcr+6)& (0+255),b
  4836  004F4A                     
  4837                           ; BSR set to: 2
  4838                           ;Driver_DirectNet.c: 106:     bufferLcr[7] = bufferDadosCELSIUS[0];
  4839  004F4A  C1CD  F2E8         	movff	_bufferDadosCELSIUS,_bufferLcr+7
  4840  004F4E                     
  4841                           ; BSR set to: 2
  4842                           ;Driver_DirectNet.c: 107:     bufferLcr[8] = bufferDadosCELSIUS[1];
  4843  004F4E  C1CE  F2E9         	movff	_bufferDadosCELSIUS+1,_bufferLcr+8
  4844  004F52                     
  4845                           ; BSR set to: 2
  4846                           ;Driver_DirectNet.c: 108:     bufferLcr[9] = bufferDadosCELSIUS[2];
  4847  004F52  C1CF  F2EA         	movff	_bufferDadosCELSIUS+2,_bufferLcr+9
  4848  004F56                     
  4849                           ; BSR set to: 2
  4850                           ;Driver_DirectNet.c: 109:     bufferLcr[10] = bufferDadosCELSIUS[3];
  4851  004F56  C1D0  F2EB         	movff	_bufferDadosCELSIUS+3,_bufferLcr+10
  4852  004F5A                     
  4853                           ; BSR set to: 2
  4854                           ;Driver_DirectNet.c: 110:     bufferLcr[11] = bufferDadosFAHRENHEIT[0];
  4855  004F5A  C1C8  F2EC         	movff	_bufferDadosFAHRENHEIT,_bufferLcr+11
  4856  004F5E                     
  4857                           ; BSR set to: 2
  4858                           ;Driver_DirectNet.c: 111:     bufferLcr[12] = bufferDadosFAHRENHEIT[1];
  4859  004F5E  C1C9  F2ED         	movff	_bufferDadosFAHRENHEIT+1,_bufferLcr+12
  4860  004F62                     
  4861                           ; BSR set to: 2
  4862                           ;Driver_DirectNet.c: 112:     bufferLcr[13] = bufferDadosFAHRENHEIT[2];
  4863  004F62  C1CA  F2EE         	movff	_bufferDadosFAHRENHEIT+2,_bufferLcr+13
  4864  004F66                     
  4865                           ; BSR set to: 2
  4866                           ;Driver_DirectNet.c: 113:     bufferLcr[14] = bufferDadosFAHRENHEIT[3];
  4867  004F66  C1CB  F2EF         	movff	_bufferDadosFAHRENHEIT+3,_bufferLcr+14
  4868  004F6A                     
  4869                           ; BSR set to: 2
  4870                           ;Driver_DirectNet.c: 114:     bufferLcr[15] = bufferDadosFAHRENHEIT[4];
  4871  004F6A  C1CC  F2F0         	movff	_bufferDadosFAHRENHEIT+4,_bufferLcr+15
  4872                           
  4873                           ;Driver_DirectNet.c: 115:     bufferLcr[16] = 0x00;
  4874  004F6E  0E00               	movlw	0
  4875  004F70  6FF1               	movwf	(_bufferLcr+16)& (0+255),b
  4876                           
  4877                           ;Driver_DirectNet.c: 116:     bufferLcr[17] = 0x00;
  4878  004F72  0E00               	movlw	0
  4879  004F74  6FF2               	movwf	(_bufferLcr+17)& (0+255),b
  4880  004F76                     
  4881                           ; BSR set to: 2
  4882                           ;Driver_DirectNet.c: 117:     bufferLcr[18] = ID_Responde;
  4883  004F76  C19E  F2F3         	movff	_ID_Responde,_bufferLcr+18
  4884                           
  4885                           ;Driver_DirectNet.c: 118:     bufferLcr[19] = 0x00;
  4886  004F7A  0E00               	movlw	0
  4887  004F7C  6FF4               	movwf	(_bufferLcr+19)& (0+255),b
  4888                           
  4889                           ;Driver_DirectNet.c: 119:     bufferLcr[20] = 0x55;
  4890  004F7E  0E55               	movlw	85
  4891  004F80  6FF5               	movwf	(_bufferLcr+20)& (0+255),b
  4892  004F82                     
  4893                           ; BSR set to: 2
  4894                           ;Driver_DirectNet.c: 121:     uint8_t LCR = calculateLRC(bufferLcr,21);
  4895  004F82  0EE1               	movlw	low _bufferLcr
  4896  004F84  6E0A               	movwf	calculateLRC@data^0,c
  4897  004F86  0E02               	movlw	high _bufferLcr
  4898  004F88  6E0B               	movwf	(calculateLRC@data+1)^0,c
  4899  004F8A  0E15               	movlw	21
  4900  004F8C  6E0C               	movwf	calculateLRC@dataLength^0,c
  4901  004F8E  EC75  F039         	call	_calculateLRC	;wreg free
  4902  004F92  6E0F               	movwf	DirectNet_enviaDadosSensores@LCR^0,c
  4903  004F94                     
  4904                           ;Driver_DirectNet.c: 124:     bufferEnvio[0] = 0x06;
  4905  004F94  0E06               	movlw	6
  4906  004F96  0101               	movlb	1	; () banked
  4907  004F98  6F24               	movwf	_bufferEnvio& (0+255),b
  4908  004F9A                     
  4909                           ; BSR set to: 1
  4910                           ;Driver_DirectNet.c: 125:     bufferEnvio[1] = 0x02;
  4911  004F9A  0E02               	movlw	2
  4912  004F9C  6F25               	movwf	(_bufferEnvio+1)& (0+255),b
  4913  004F9E                     
  4914                           ; BSR set to: 1
  4915                           ;Driver_DirectNet.c: 126:     bufferEnvio[2] = 0xAA;
  4916  004F9E  0EAA               	movlw	170
  4917  004FA0  6F26               	movwf	(_bufferEnvio+2)& (0+255),b
  4918  004FA2                     
  4919                           ; BSR set to: 1
  4920                           ;Driver_DirectNet.c: 127:     bufferEnvio[3] = 0x00;
  4921  004FA2  0E00               	movlw	0
  4922  004FA4  6F27               	movwf	(_bufferEnvio+3)& (0+255),b
  4923  004FA6                     
  4924                           ; BSR set to: 1
  4925                           ;Driver_DirectNet.c: 128:     bufferEnvio[4] = 0x00;
  4926  004FA6  0E00               	movlw	0
  4927  004FA8  6F28               	movwf	(_bufferEnvio+4)& (0+255),b
  4928  004FAA                     
  4929                           ; BSR set to: 1
  4930                           ;Driver_DirectNet.c: 129:     bufferEnvio[5] = 0x00;
  4931  004FAA  0E00               	movlw	0
  4932  004FAC  6F29               	movwf	(_bufferEnvio+5)& (0+255),b
  4933  004FAE                     
  4934                           ; BSR set to: 1
  4935                           ;Driver_DirectNet.c: 130:     bufferEnvio[6] = bufferDadosValorBruto[0];
  4936  004FAE  C152  F12A         	movff	_bufferDadosValorBruto,_bufferEnvio+6
  4937  004FB2                     
  4938                           ; BSR set to: 1
  4939                           ;Driver_DirectNet.c: 131:     bufferEnvio[7] = bufferDadosValorBruto[1];
  4940  004FB2  C153  F12B         	movff	_bufferDadosValorBruto+1,_bufferEnvio+7
  4941  004FB6                     
  4942                           ; BSR set to: 1
  4943                           ;Driver_DirectNet.c: 132:     bufferEnvio[8] = 0x00;
  4944  004FB6  0E00               	movlw	0
  4945  004FB8  6F2C               	movwf	(_bufferEnvio+8)& (0+255),b
  4946  004FBA                     
  4947                           ; BSR set to: 1
  4948                           ;Driver_DirectNet.c: 133:     bufferEnvio[9] = bufferDadosCELSIUS[0];
  4949  004FBA  C1CD  F12D         	movff	_bufferDadosCELSIUS,_bufferEnvio+9
  4950  004FBE                     
  4951                           ; BSR set to: 1
  4952                           ;Driver_DirectNet.c: 134:     bufferEnvio[10] = bufferDadosCELSIUS[1];
  4953  004FBE  C1CE  F12E         	movff	_bufferDadosCELSIUS+1,_bufferEnvio+10
  4954  004FC2                     
  4955                           ; BSR set to: 1
  4956                           ;Driver_DirectNet.c: 135:     bufferEnvio[11] = bufferDadosCELSIUS[2];
  4957  004FC2  C1CF  F12F         	movff	_bufferDadosCELSIUS+2,_bufferEnvio+11
  4958  004FC6                     
  4959                           ; BSR set to: 1
  4960                           ;Driver_DirectNet.c: 136:     bufferEnvio[12] = bufferDadosCELSIUS[3];
  4961  004FC6  C1D0  F130         	movff	_bufferDadosCELSIUS+3,_bufferEnvio+12
  4962  004FCA                     
  4963                           ; BSR set to: 1
  4964                           ;Driver_DirectNet.c: 137:     bufferEnvio[13] = bufferDadosFAHRENHEIT[0];
  4965  004FCA  C1C8  F131         	movff	_bufferDadosFAHRENHEIT,_bufferEnvio+13
  4966  004FCE                     
  4967                           ; BSR set to: 1
  4968                           ;Driver_DirectNet.c: 138:     bufferEnvio[14] = bufferDadosFAHRENHEIT[1];
  4969  004FCE  C1C9  F132         	movff	_bufferDadosFAHRENHEIT+1,_bufferEnvio+14
  4970  004FD2                     
  4971                           ; BSR set to: 1
  4972                           ;Driver_DirectNet.c: 139:     bufferEnvio[15] = bufferDadosFAHRENHEIT[2];
  4973  004FD2  C1CA  F133         	movff	_bufferDadosFAHRENHEIT+2,_bufferEnvio+15
  4974  004FD6                     
  4975                           ; BSR set to: 1
  4976                           ;Driver_DirectNet.c: 140:     bufferEnvio[16] = bufferDadosFAHRENHEIT[3];
  4977  004FD6  C1CB  F134         	movff	_bufferDadosFAHRENHEIT+3,_bufferEnvio+16
  4978  004FDA                     
  4979                           ; BSR set to: 1
  4980                           ;Driver_DirectNet.c: 141:     bufferEnvio[17] = bufferDadosFAHRENHEIT[4];
  4981  004FDA  C1CC  F135         	movff	_bufferDadosFAHRENHEIT+4,_bufferEnvio+17
  4982  004FDE                     
  4983                           ; BSR set to: 1
  4984                           ;Driver_DirectNet.c: 142:     bufferEnvio[18] = 0x00;
  4985  004FDE  0E00               	movlw	0
  4986  004FE0  6F36               	movwf	(_bufferEnvio+18)& (0+255),b
  4987  004FE2                     
  4988                           ; BSR set to: 1
  4989                           ;Driver_DirectNet.c: 143:     bufferEnvio[19] = 0x00;
  4990  004FE2  0E00               	movlw	0
  4991  004FE4  6F37               	movwf	(_bufferEnvio+19)& (0+255),b
  4992  004FE6                     
  4993                           ; BSR set to: 1
  4994                           ;Driver_DirectNet.c: 144:     bufferEnvio[20] = ID_Responde;
  4995  004FE6  C19E  F138         	movff	_ID_Responde,_bufferEnvio+20
  4996  004FEA                     
  4997                           ; BSR set to: 1
  4998                           ;Driver_DirectNet.c: 145:     bufferEnvio[21] = 0x00;
  4999  004FEA  0E00               	movlw	0
  5000  004FEC  6F39               	movwf	(_bufferEnvio+21)& (0+255),b
  5001  004FEE                     
  5002                           ; BSR set to: 1
  5003                           ;Driver_DirectNet.c: 146:     bufferEnvio[22] = 0x55;
  5004  004FEE  0E55               	movlw	85
  5005  004FF0  6F3A               	movwf	(_bufferEnvio+22)& (0+255),b
  5006  004FF2                     
  5007                           ; BSR set to: 1
  5008                           ;Driver_DirectNet.c: 147:     bufferEnvio[23] = 0x03;
  5009  004FF2  0E03               	movlw	3
  5010  004FF4  6F3B               	movwf	(_bufferEnvio+23)& (0+255),b
  5011  004FF6                     
  5012                           ; BSR set to: 1
  5013                           ;Driver_DirectNet.c: 148:     bufferEnvio[24] = LCR;
  5014  004FF6  C00F  F13C         	movff	DirectNet_enviaDadosSensores@LCR,_bufferEnvio+24
  5015  004FFA                     
  5016                           ; BSR set to: 1
  5017                           ;Driver_DirectNet.c: 152:     int i;;Driver_DirectNet.c: 153:     for (i = 0; i < 25; i+
      +                          +) {
  5018  004FFA  0E00               	movlw	0
  5019  004FFC  6E11               	movwf	(DirectNet_enviaDadosSensores@i+1)^0,c
  5020  004FFE  0E00               	movlw	0
  5021  005000  6E10               	movwf	DirectNet_enviaDadosSensores@i^0,c
  5022  005002                     l9676:
  5023                           
  5024                           ;Driver_DirectNet.c: 155:         EUSART1_Write(bufferEnvio[i]);
  5025  005002  0E24               	movlw	low _bufferEnvio
  5026  005004  2410               	addwf	DirectNet_enviaDadosSensores@i^0,w,c
  5027  005006  6ED9               	movwf	fsr2l,c
  5028  005008  0E01               	movlw	high _bufferEnvio
  5029  00500A  2011               	addwfc	(DirectNet_enviaDadosSensores@i+1)^0,w,c
  5030  00500C  6EDA               	movwf	fsr2h,c
  5031  00500E  50DF               	movf	indf2,w,c
  5032  005010  EC26  F03B         	call	_EUSART1_Write
  5033  005014                     
  5034                           ;Driver_DirectNet.c: 156:     }
  5035  005014  4A10               	infsnz	DirectNet_enviaDadosSensores@i^0,f,c
  5036  005016  2A11               	incf	(DirectNet_enviaDadosSensores@i+1)^0,f,c
  5037  005018  BE11               	btfsc	(DirectNet_enviaDadosSensores@i+1)^0,7,c
  5038  00501A  EF18  F028         	goto	u8881
  5039  00501E  5011               	movf	(DirectNet_enviaDadosSensores@i+1)^0,w,c
  5040  005020  E109               	bnz	u8880
  5041  005022  0E19               	movlw	25
  5042  005024  5C10               	subwf	DirectNet_enviaDadosSensores@i^0,w,c
  5043  005026  A0D8               	btfss	status,0,c
  5044  005028  EF18  F028         	goto	u8881
  5045  00502C  EF1A  F028         	goto	u8880
  5046  005030                     u8881:
  5047  005030  EF01  F028         	goto	l9676
  5048  005034                     u8880:
  5049  005034  0012               	return		;funcret
  5050  005036                     __end_of_DirectNet_enviaDadosSensores:
  5051                           	callstack 0
  5052                           
  5053 ;; *************** function _DirectNet_enviaDadosDDDTCO2 *****************
  5054 ;; Defined at:
  5055 ;;		line 51 in file "Driver_DirectNet.c"
  5056 ;; Parameters:    Size  Location     Type
  5057 ;;		None
  5058 ;; Auto vars:     Size  Location     Type
  5059 ;;  i               2   15[COMRAM] int 
  5060 ;;  LCR             1   14[COMRAM] unsigned char 
  5061 ;; Return value:  Size  Location     Type
  5062 ;;                  1    wreg      void 
  5063 ;; Registers used:
  5064 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5065 ;; Tracked objects:
  5066 ;;		On entry : 0/0
  5067 ;;		On exit  : 0/0
  5068 ;;		Unchanged: 0/0
  5069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5070 ;;      Params:         0       0       0       0       0       0       0
  5071 ;;      Locals:         3       0       0       0       0       0       0
  5072 ;;      Temps:          0       0       0       0       0       0       0
  5073 ;;      Totals:         3       0       0       0       0       0       0
  5074 ;;Total ram usage:        3 bytes
  5075 ;; Hardware stack levels used: 1
  5076 ;; Hardware stack levels required when called: 5
  5077 ;; This function calls:
  5078 ;;		_EUSART1_Write
  5079 ;;		_calculateLRC
  5080 ;; This function is called by:
  5081 ;;		_DirectNet_Run
  5082 ;; This function uses a non-reentrant model
  5083 ;;
  5084                           
  5085                           	psect	text21
  5086  005F76                     __ptext21:
  5087                           	callstack 0
  5088  005F76                     _DirectNet_enviaDadosDDDTCO2:
  5089                           	callstack 23
  5090  005F76                     
  5091                           ;Driver_DirectNet.c: 55:     uint8_t LCR = calculateLRC(bufferDadosDDDTCO2,23);
  5092  005F76  0EC3               	movlw	low _bufferDadosDDDTCO2
  5093  005F78  6E0A               	movwf	calculateLRC@data^0,c
  5094  005F7A  0E02               	movlw	high _bufferDadosDDDTCO2
  5095  005F7C  6E0B               	movwf	(calculateLRC@data+1)^0,c
  5096  005F7E  0E17               	movlw	23
  5097  005F80  6E0C               	movwf	calculateLRC@dataLength^0,c
  5098  005F82  EC75  F039         	call	_calculateLRC	;wreg free
  5099  005F86  6E0F               	movwf	DirectNet_enviaDadosDDDTCO2@LCR^0,c
  5100  005F88                     
  5101                           ;Driver_DirectNet.c: 57:     bufferEnvio[0] = 0x06;
  5102  005F88  0E06               	movlw	6
  5103  005F8A  0101               	movlb	1	; () banked
  5104  005F8C  6F24               	movwf	_bufferEnvio& (0+255),b
  5105  005F8E                     
  5106                           ; BSR set to: 1
  5107                           ;Driver_DirectNet.c: 58:     bufferEnvio[1] = 0x02;
  5108  005F8E  0E02               	movlw	2
  5109  005F90  6F25               	movwf	(_bufferEnvio+1)& (0+255),b
  5110  005F92                     
  5111                           ; BSR set to: 1
  5112                           ;Driver_DirectNet.c: 59:     bufferEnvio[2] = bufferDadosDDDTCO2[0];
  5113  005F92  C2C3  F126         	movff	_bufferDadosDDDTCO2,_bufferEnvio+2
  5114  005F96                     
  5115                           ; BSR set to: 1
  5116                           ;Driver_DirectNet.c: 60:     bufferEnvio[3] = bufferDadosDDDTCO2[1];
  5117  005F96  C2C4  F127         	movff	_bufferDadosDDDTCO2+1,_bufferEnvio+3
  5118  005F9A                     
  5119                           ; BSR set to: 1
  5120                           ;Driver_DirectNet.c: 61:     bufferEnvio[4] = bufferDadosDDDTCO2[2];
  5121  005F9A  C2C5  F128         	movff	_bufferDadosDDDTCO2+2,_bufferEnvio+4
  5122  005F9E                     
  5123                           ; BSR set to: 1
  5124                           ;Driver_DirectNet.c: 62:     bufferEnvio[5] = bufferDadosDDDTCO2[3];
  5125  005F9E  C2C6  F129         	movff	_bufferDadosDDDTCO2+3,_bufferEnvio+5
  5126  005FA2                     
  5127                           ; BSR set to: 1
  5128                           ;Driver_DirectNet.c: 63:     bufferEnvio[6] = bufferDadosDDDTCO2[4];
  5129  005FA2  C2C7  F12A         	movff	_bufferDadosDDDTCO2+4,_bufferEnvio+6
  5130  005FA6                     
  5131                           ; BSR set to: 1
  5132                           ;Driver_DirectNet.c: 64:     bufferEnvio[7] = bufferDadosDDDTCO2[5];
  5133  005FA6  C2C8  F12B         	movff	_bufferDadosDDDTCO2+5,_bufferEnvio+7
  5134  005FAA                     
  5135                           ; BSR set to: 1
  5136                           ;Driver_DirectNet.c: 65:     bufferEnvio[8] = bufferDadosDDDTCO2[6];
  5137  005FAA  C2C9  F12C         	movff	_bufferDadosDDDTCO2+6,_bufferEnvio+8
  5138  005FAE                     
  5139                           ; BSR set to: 1
  5140                           ;Driver_DirectNet.c: 66:     bufferEnvio[9] = bufferDadosDDDTCO2[7];
  5141  005FAE  C2CA  F12D         	movff	_bufferDadosDDDTCO2+7,_bufferEnvio+9
  5142  005FB2                     
  5143                           ; BSR set to: 1
  5144                           ;Driver_DirectNet.c: 67:     bufferEnvio[10] = bufferDadosDDDTCO2[8];
  5145  005FB2  C2CB  F12E         	movff	_bufferDadosDDDTCO2+8,_bufferEnvio+10
  5146  005FB6                     
  5147                           ; BSR set to: 1
  5148                           ;Driver_DirectNet.c: 68:     bufferEnvio[11] = bufferDadosDDDTCO2[9];
  5149  005FB6  C2CC  F12F         	movff	_bufferDadosDDDTCO2+9,_bufferEnvio+11
  5150  005FBA                     
  5151                           ; BSR set to: 1
  5152                           ;Driver_DirectNet.c: 69:     bufferEnvio[12] = bufferDadosDDDTCO2[10];
  5153  005FBA  C2CD  F130         	movff	_bufferDadosDDDTCO2+10,_bufferEnvio+12
  5154  005FBE                     
  5155                           ; BSR set to: 1
  5156                           ;Driver_DirectNet.c: 70:     bufferEnvio[13] = bufferDadosDDDTCO2[11];
  5157  005FBE  C2CE  F131         	movff	_bufferDadosDDDTCO2+11,_bufferEnvio+13
  5158  005FC2                     
  5159                           ; BSR set to: 1
  5160                           ;Driver_DirectNet.c: 71:     bufferEnvio[14] = bufferDadosDDDTCO2[12];
  5161  005FC2  C2CF  F132         	movff	_bufferDadosDDDTCO2+12,_bufferEnvio+14
  5162  005FC6                     
  5163                           ; BSR set to: 1
  5164                           ;Driver_DirectNet.c: 72:     bufferEnvio[15] = bufferDadosDDDTCO2[13];
  5165  005FC6  C2D0  F133         	movff	_bufferDadosDDDTCO2+13,_bufferEnvio+15
  5166  005FCA                     
  5167                           ; BSR set to: 1
  5168                           ;Driver_DirectNet.c: 73:     bufferEnvio[16] = bufferDadosDDDTCO2[14];
  5169  005FCA  C2D1  F134         	movff	_bufferDadosDDDTCO2+14,_bufferEnvio+16
  5170  005FCE                     
  5171                           ; BSR set to: 1
  5172                           ;Driver_DirectNet.c: 74:     bufferEnvio[17] = bufferDadosDDDTCO2[15];
  5173  005FCE  C2D2  F135         	movff	_bufferDadosDDDTCO2+15,_bufferEnvio+17
  5174  005FD2                     
  5175                           ; BSR set to: 1
  5176                           ;Driver_DirectNet.c: 75:     bufferEnvio[18] = bufferDadosDDDTCO2[16];
  5177  005FD2  C2D3  F136         	movff	_bufferDadosDDDTCO2+16,_bufferEnvio+18
  5178  005FD6                     
  5179                           ; BSR set to: 1
  5180                           ;Driver_DirectNet.c: 76:     bufferEnvio[19] = bufferDadosDDDTCO2[17];
  5181  005FD6  C2D4  F137         	movff	_bufferDadosDDDTCO2+17,_bufferEnvio+19
  5182  005FDA                     
  5183                           ; BSR set to: 1
  5184                           ;Driver_DirectNet.c: 77:     bufferEnvio[20] = bufferDadosDDDTCO2[18];
  5185  005FDA  C2D5  F138         	movff	_bufferDadosDDDTCO2+18,_bufferEnvio+20
  5186  005FDE                     
  5187                           ; BSR set to: 1
  5188                           ;Driver_DirectNet.c: 78:     bufferEnvio[21] = bufferDadosDDDTCO2[19];
  5189  005FDE  C2D6  F139         	movff	_bufferDadosDDDTCO2+19,_bufferEnvio+21
  5190  005FE2                     
  5191                           ; BSR set to: 1
  5192                           ;Driver_DirectNet.c: 79:     bufferEnvio[22] = bufferDadosDDDTCO2[20];
  5193  005FE2  C2D7  F13A         	movff	_bufferDadosDDDTCO2+20,_bufferEnvio+22
  5194  005FE6                     
  5195                           ; BSR set to: 1
  5196                           ;Driver_DirectNet.c: 80:     bufferEnvio[23] = bufferDadosDDDTCO2[21];
  5197  005FE6  C2D8  F13B         	movff	_bufferDadosDDDTCO2+21,_bufferEnvio+23
  5198  005FEA                     
  5199                           ; BSR set to: 1
  5200                           ;Driver_DirectNet.c: 81:     bufferEnvio[24] = bufferDadosDDDTCO2[22];
  5201  005FEA  C2D9  F13C         	movff	_bufferDadosDDDTCO2+22,_bufferEnvio+24
  5202  005FEE                     
  5203                           ; BSR set to: 1
  5204                           ;Driver_DirectNet.c: 83:     bufferEnvio[25] = 0x03;
  5205  005FEE  0E03               	movlw	3
  5206  005FF0  6F3D               	movwf	(_bufferEnvio+25)& (0+255),b
  5207  005FF2                     
  5208                           ; BSR set to: 1
  5209                           ;Driver_DirectNet.c: 84:     bufferEnvio[26] = LCR;
  5210  005FF2  C00F  F13E         	movff	DirectNet_enviaDadosDDDTCO2@LCR,_bufferEnvio+26
  5211  005FF6                     
  5212                           ; BSR set to: 1
  5213                           ;Driver_DirectNet.c: 90:     int i;;Driver_DirectNet.c: 91:     for (i = 0; i < 27; i++)
      +                           {
  5214  005FF6  0E00               	movlw	0
  5215  005FF8  6E11               	movwf	(DirectNet_enviaDadosDDDTCO2@i+1)^0,c
  5216  005FFA  0E00               	movlw	0
  5217  005FFC  6E10               	movwf	DirectNet_enviaDadosDDDTCO2@i^0,c
  5218  005FFE                     l9586:
  5219                           
  5220                           ;Driver_DirectNet.c: 93:         EUSART1_Write(bufferEnvio[i]);
  5221  005FFE  0E24               	movlw	low _bufferEnvio
  5222  006000  2410               	addwf	DirectNet_enviaDadosDDDTCO2@i^0,w,c
  5223  006002  6ED9               	movwf	fsr2l,c
  5224  006004  0E01               	movlw	high _bufferEnvio
  5225  006006  2011               	addwfc	(DirectNet_enviaDadosDDDTCO2@i+1)^0,w,c
  5226  006008  6EDA               	movwf	fsr2h,c
  5227  00600A  50DF               	movf	indf2,w,c
  5228  00600C  EC26  F03B         	call	_EUSART1_Write
  5229  006010                     
  5230                           ;Driver_DirectNet.c: 94:     }
  5231  006010  4A10               	infsnz	DirectNet_enviaDadosDDDTCO2@i^0,f,c
  5232  006012  2A11               	incf	(DirectNet_enviaDadosDDDTCO2@i+1)^0,f,c
  5233  006014  BE11               	btfsc	(DirectNet_enviaDadosDDDTCO2@i+1)^0,7,c
  5234  006016  EF16  F030         	goto	u8871
  5235  00601A  5011               	movf	(DirectNet_enviaDadosDDDTCO2@i+1)^0,w,c
  5236  00601C  E109               	bnz	u8870
  5237  00601E  0E1B               	movlw	27
  5238  006020  5C10               	subwf	DirectNet_enviaDadosDDDTCO2@i^0,w,c
  5239  006022  A0D8               	btfss	status,0,c
  5240  006024  EF16  F030         	goto	u8871
  5241  006028  EF18  F030         	goto	u8870
  5242  00602C                     u8871:
  5243  00602C  EFFF  F02F         	goto	l9586
  5244  006030                     u8870:
  5245  006030  0012               	return		;funcret
  5246  006032                     __end_of_DirectNet_enviaDadosDDDTCO2:
  5247                           	callstack 0
  5248                           
  5249 ;; *************** function _calculateLRC *****************
  5250 ;; Defined at:
  5251 ;;		line 43 in file "Driver_DirectNet.c"
  5252 ;; Parameters:    Size  Location     Type
  5253 ;;  data            2    9[COMRAM] PTR unsigned char 
  5254 ;;		 -> bufferLcr(30), bufferDadosDDDTCO2(30), 
  5255 ;;  dataLength      1   11[COMRAM] unsigned char 
  5256 ;; Auto vars:     Size  Location     Type
  5257 ;;  i               1   13[COMRAM] unsigned char 
  5258 ;;  lrc             1   12[COMRAM] unsigned char 
  5259 ;; Return value:  Size  Location     Type
  5260 ;;                  1    wreg      unsigned char 
  5261 ;; Registers used:
  5262 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5268 ;;      Params:         3       0       0       0       0       0       0
  5269 ;;      Locals:         2       0       0       0       0       0       0
  5270 ;;      Temps:          0       0       0       0       0       0       0
  5271 ;;      Totals:         5       0       0       0       0       0       0
  5272 ;;Total ram usage:        5 bytes
  5273 ;; Hardware stack levels used: 1
  5274 ;; Hardware stack levels required when called: 4
  5275 ;; This function calls:
  5276 ;;		Nothing
  5277 ;; This function is called by:
  5278 ;;		_DirectNet_enviaDadosDDDTCO2
  5279 ;;		_DirectNet_enviaDadosSensores
  5280 ;; This function uses a non-reentrant model
  5281 ;;
  5282                           
  5283                           	psect	text22
  5284  0072EA                     __ptext22:
  5285                           	callstack 0
  5286  0072EA                     _calculateLRC:
  5287                           	callstack 23
  5288  0072EA                     
  5289                           ;Driver_DirectNet.c: 44:     uint8_t lrc = 0;
  5290  0072EA  0E00               	movlw	0
  5291  0072EC  6E0D               	movwf	calculateLRC@lrc^0,c
  5292                           
  5293                           ;Driver_DirectNet.c: 45:     for (uint8_t i = 0; i < dataLength; i++) {
  5294  0072EE  0E00               	movlw	0
  5295  0072F0  6E0E               	movwf	calculateLRC@i^0,c
  5296  0072F2  EF84  F039         	goto	l9008
  5297  0072F6                     l9004:
  5298                           
  5299                           ;Driver_DirectNet.c: 46:         lrc ^= data[i];
  5300  0072F6  500E               	movf	calculateLRC@i^0,w,c
  5301  0072F8  240A               	addwf	calculateLRC@data^0,w,c
  5302  0072FA  6ED9               	movwf	fsr2l,c
  5303  0072FC  0E00               	movlw	0
  5304  0072FE  200B               	addwfc	(calculateLRC@data+1)^0,w,c
  5305  007300  6EDA               	movwf	fsr2h,c
  5306  007302  50DF               	movf	indf2,w,c
  5307  007304  1A0D               	xorwf	calculateLRC@lrc^0,f,c
  5308  007306                     
  5309                           ;Driver_DirectNet.c: 47:     }
  5310  007306  2A0E               	incf	calculateLRC@i^0,f,c
  5311  007308                     l9008:
  5312  007308  500C               	movf	calculateLRC@dataLength^0,w,c
  5313  00730A  5C0E               	subwf	calculateLRC@i^0,w,c
  5314  00730C  A0D8               	btfss	status,0,c
  5315  00730E  EF8B  F039         	goto	u8201
  5316  007312  EF8D  F039         	goto	u8200
  5317  007316                     u8201:
  5318  007316  EF7B  F039         	goto	l9004
  5319  00731A                     u8200:
  5320  00731A                     
  5321                           ;Driver_DirectNet.c: 48:     return lrc;
  5322  00731A  500D               	movf	calculateLRC@lrc^0,w,c
  5323  00731C  0012               	return		;funcret
  5324  00731E                     __end_of_calculateLRC:
  5325                           	callstack 0
  5326                           
  5327 ;; *************** function _EUSART1_Write *****************
  5328 ;; Defined at:
  5329 ;;		line 164 in file "mcc_generated_files/eusart1.c"
  5330 ;; Parameters:    Size  Location     Type
  5331 ;;  txData          1    wreg     unsigned char 
  5332 ;; Auto vars:     Size  Location     Type
  5333 ;;  txData          1    9[COMRAM] unsigned char 
  5334 ;; Return value:  Size  Location     Type
  5335 ;;                  1    wreg      void 
  5336 ;; Registers used:
  5337 ;;		wreg
  5338 ;; Tracked objects:
  5339 ;;		On entry : 0/0
  5340 ;;		On exit  : 0/0
  5341 ;;		Unchanged: 0/0
  5342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5343 ;;      Params:         0       0       0       0       0       0       0
  5344 ;;      Locals:         1       0       0       0       0       0       0
  5345 ;;      Temps:          0       0       0       0       0       0       0
  5346 ;;      Totals:         1       0       0       0       0       0       0
  5347 ;;Total ram usage:        1 bytes
  5348 ;; Hardware stack levels used: 1
  5349 ;; Hardware stack levels required when called: 4
  5350 ;; This function calls:
  5351 ;;		Nothing
  5352 ;; This function is called by:
  5353 ;;		_DirectNet_enviaDadosDDDTCO2
  5354 ;;		_DirectNet_enviaDadosSensores
  5355 ;;		_DirectNet_Run
  5356 ;; This function uses a non-reentrant model
  5357 ;;
  5358                           
  5359                           	psect	text23
  5360  00764C                     __ptext23:
  5361                           	callstack 0
  5362  00764C                     _EUSART1_Write:
  5363                           	callstack 24
  5364                           
  5365                           ;incstack = 0
  5366                           ;EUSART1_Write@txData stored from wreg
  5367  00764C  6E0A               	movwf	EUSART1_Write@txData^0,c
  5368  00764E                     l766:
  5369                           
  5370                           ;mcc_generated_files/eusart1.c: 166:     while(0 == PIR1bits.TX1IF)
  5371  00764E  A89E               	btfss	158,4,c	;volatile
  5372  007650  EF2C  F03B         	goto	u8131
  5373  007654  EF2E  F03B         	goto	u8130
  5374  007658                     u8131:
  5375  007658  EF27  F03B         	goto	l766
  5376  00765C                     u8130:
  5377  00765C                     
  5378                           ;mcc_generated_files/eusart1.c: 170:     TXREG1 = txData;
  5379  00765C  C00A  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  5380  007660  0012               	return		;funcret
  5381  007662                     __end_of_EUSART1_Write:
  5382                           	callstack 0
  5383                           
  5384 ;; *************** function _App_HTAD_Home *****************
  5385 ;; Defined at:
  5386 ;;		line 113 in file "App_HTAD.c"
  5387 ;; Parameters:    Size  Location     Type
  5388 ;;  objetoHTAD      2  149[BANK0 ] PTR struct .
  5389 ;;		 -> ObjetoHTAD(35), 
  5390 ;; Auto vars:     Size  Location     Type
  5391 ;;  typeRead        1   39[BANK1 ] enum E515
  5392 ;;  txt            21   12[BANK1 ] unsigned char [21]
  5393 ;;  key             1   40[BANK1 ] enum E505
  5394 ;; Return value:  Size  Location     Type
  5395 ;;                  1    wreg      void 
  5396 ;; Registers used:
  5397 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5398 ;; Tracked objects:
  5399 ;;		On entry : 0/0
  5400 ;;		On exit  : 0/0
  5401 ;;		Unchanged: 0/0
  5402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5403 ;;      Params:         0       2       0       0       0       0       0
  5404 ;;      Locals:         0       0      29       0       0       0       0
  5405 ;;      Temps:          0       0       4       0       0       0       0
  5406 ;;      Totals:         0       2      33       0       0       0       0
  5407 ;;Total ram usage:       35 bytes
  5408 ;; Hardware stack levels used: 1
  5409 ;; Hardware stack levels required when called: 12
  5410 ;; This function calls:
  5411 ;;		_Driver_Analog_GetValueAN0
  5412 ;;		_Driver_Analog_GetValueAN1
  5413 ;;		_Driver_Analog_GetValueAN3
  5414 ;;		_SRV_ADT7410_GetTemperature
  5415 ;;		_SRV_Display_Write
  5416 ;;		_SRV_TIMER_GetTick
  5417 ;;		_readKeypad
  5418 ;;		_sprintf
  5419 ;; This function is called by:
  5420 ;;		_App_HTAD_init
  5421 ;;		_App_HTAD_run
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425                           	psect	text24
  5426  003322                     __ptext24:
  5427                           	callstack 0
  5428  003322                     _App_HTAD_Home:
  5429                           	callstack 17
  5430  003322                     
  5431                           ;App_HTAD.c: 113: void App_HTAD_Home(Object_t* objetoHTAD);App_HTAD.c: 114: {;App_HTAD.c
      +                          : 115:     static uint32_t tick = 0;;App_HTAD.c: 116:     static uint32_t tickLast = 0;;
      +                          App_HTAD.c: 117:     char txt[21];;App_HTAD.c: 118:     static _Bool isCelsius = 1;;App_
      +                          HTAD.c: 120:     if(objetoHTAD->contWDT >= 10){
  5432  003322  0100               	movlb	0	; () banked
  5433  003324  EE20 F018          	lfsr	2,24
  5434  003328  51F5               	movf	App_HTAD_Home@objetoHTAD& (0+255),w,b
  5435  00332A  26D9               	addwf	fsr2l,f,c
  5436  00332C  51F6               	movf	(App_HTAD_Home@objetoHTAD+1)& (0+255),w,b
  5437  00332E  22DA               	addwfc	fsr2h,f,c
  5438  003330  0E01               	movlw	1
  5439  003332  50DB               	movf	plusw2,w,c
  5440  003334  E109               	bnz	u13650
  5441  003336  0E0A               	movlw	10
  5442  003338  5CDE               	subwf	postinc2,w,c
  5443  00333A  A0D8               	btfss	status,0,c
  5444  00333C  EFA2  F019         	goto	u13651
  5445  003340  EFA4  F019         	goto	u13650
  5446  003344                     u13651:
  5447  003344  EFAC  F019         	goto	l13388
  5448  003348                     u13650:
  5449  003348                     
  5450                           ; BSR set to: 0
  5451                           ;App_HTAD.c: 121:         objetoHTAD->ResetWDT = 1;
  5452  003348  EE20 F01A          	lfsr	2,26
  5453  00334C  51F5               	movf	App_HTAD_Home@objetoHTAD& (0+255),w,b
  5454  00334E  26D9               	addwf	fsr2l,f,c
  5455  003350  51F6               	movf	(App_HTAD_Home@objetoHTAD+1)& (0+255),w,b
  5456  003352  22DA               	addwfc	fsr2h,f,c
  5457  003354  0E01               	movlw	1
  5458  003356  6EDF               	movwf	indf2,c
  5459  003358                     l13388:
  5460                           
  5461                           ; BSR set to: 0
  5462                           ;App_HTAD.c: 124:     tick = SRV_TIMER_GetTick();
  5463  003358  ECB9  F03A         	call	_SRV_TIMER_GetTick	;wreg free
  5464  00335C  C00A  F181         	movff	?_SRV_TIMER_GetTick,App_HTAD_Home@tick
  5465  003360  C00B  F182         	movff	?_SRV_TIMER_GetTick+1,App_HTAD_Home@tick+1
  5466  003364  C00C  F183         	movff	?_SRV_TIMER_GetTick+2,App_HTAD_Home@tick+2
  5467  003368  C00D  F184         	movff	?_SRV_TIMER_GetTick+3,App_HTAD_Home@tick+3
  5468  00336C                     
  5469                           ;App_HTAD.c: 126:     if ((uint32_t)(tick - tickLast) >= 200)
  5470  00336C  0101               	movlb	1	; () banked
  5471  00336E  517D               	movf	App_HTAD_Home@tickLast& (0+255),w,b
  5472  003370  5D81               	subwf	App_HTAD_Home@tick& (0+255),w,b
  5473  003372  6FDD               	movwf	??_App_HTAD_Home& (0+255),b
  5474  003374  517E               	movf	(App_HTAD_Home@tickLast+1)& (0+255),w,b
  5475  003376  5982               	subwfb	(App_HTAD_Home@tick+1)& (0+255),w,b
  5476  003378  6FDE               	movwf	(??_App_HTAD_Home+1)& (0+255),b
  5477  00337A  517F               	movf	(App_HTAD_Home@tickLast+2)& (0+255),w,b
  5478  00337C  5983               	subwfb	(App_HTAD_Home@tick+2)& (0+255),w,b
  5479  00337E  6FDF               	movwf	(??_App_HTAD_Home+2)& (0+255),b
  5480  003380  5180               	movf	(App_HTAD_Home@tickLast+3)& (0+255),w,b
  5481  003382  5984               	subwfb	(App_HTAD_Home@tick+3)& (0+255),w,b
  5482  003384  6FE0               	movwf	(??_App_HTAD_Home+3)& (0+255),b
  5483  003386  51E0               	movf	(??_App_HTAD_Home+3)& (0+255),w,b
  5484  003388  11DF               	iorwf	(??_App_HTAD_Home+2)& (0+255),w,b
  5485  00338A  11DE               	iorwf	(??_App_HTAD_Home+1)& (0+255),w,b
  5486  00338C  E109               	bnz	u13660
  5487  00338E  0EC8               	movlw	200
  5488  003390  5DDD               	subwf	??_App_HTAD_Home& (0+255),w,b
  5489  003392  A0D8               	btfss	status,0,c
  5490  003394  EFCE  F019         	goto	u13661
  5491  003398  EFD0  F019         	goto	u13660
  5492  00339C                     u13661:
  5493  00339C  EF44  F01B         	goto	l13444
  5494  0033A0                     u13660:
  5495  0033A0                     
  5496                           ; BSR set to: 1
  5497                           ;App_HTAD.c: 127:     {;App_HTAD.c: 128:         tickLast = tick;
  5498  0033A0  C181  F17D         	movff	App_HTAD_Home@tick,App_HTAD_Home@tickLast
  5499  0033A4  C182  F17E         	movff	App_HTAD_Home@tick+1,App_HTAD_Home@tickLast+1
  5500  0033A8  C183  F17F         	movff	App_HTAD_Home@tick+2,App_HTAD_Home@tickLast+2
  5501  0033AC  C184  F180         	movff	App_HTAD_Home@tick+3,App_HTAD_Home@tickLast+3
  5502  0033B0                     
  5503                           ; BSR set to: 1
  5504  0033B0  B489               	btfsc	137,2,c	;volatile
  5505  0033B2  EFDD  F019         	goto	u13671
  5506  0033B6  EFE0  F019         	goto	u13670
  5507  0033BA                     u13671:
  5508  0033BA  0E01               	movlw	1
  5509  0033BC  EFE1  F019         	goto	u13676
  5510  0033C0                     u13670:
  5511  0033C0  0E00               	movlw	0
  5512  0033C2                     u13676:
  5513  0033C2  0AFF               	xorlw	255
  5514  0033C4  6FDD               	movwf	??_App_HTAD_Home& (0+255),b
  5515  0033C6  47DD               	rlncf	??_App_HTAD_Home& (0+255),f,b
  5516  0033C8  47DD               	rlncf	??_App_HTAD_Home& (0+255),f,b
  5517  0033CA  5089               	movf	137,w,c	;volatile
  5518  0033CC  19DD               	xorwf	??_App_HTAD_Home& (0+255),w,b
  5519  0033CE  0BFB               	andlw	-5
  5520  0033D0  19DD               	xorwf	??_App_HTAD_Home& (0+255),w,b
  5521  0033D2  6E89               	movwf	137,c	;volatile
  5522  0033D4                     
  5523                           ; BSR set to: 1
  5524                           ;App_HTAD.c: 132:         TypeRead_e typeRead = isCelsius ? CELSIUS : FAHRENHEIT;
  5525  0033D4  0100               	movlb	0	; () banked
  5526  0033D6  51FA               	movf	App_HTAD_Home@isCelsius& (0+255),w,b
  5527  0033D8  B4D8               	btfsc	status,2,c
  5528  0033DA  EFF1  F019         	goto	u13681
  5529  0033DE  EFF4  F019         	goto	u13680
  5530  0033E2                     u13681:
  5531  0033E2  0E01               	movlw	1
  5532  0033E4  EFF5  F019         	goto	u13690
  5533  0033E8                     u13680:
  5534  0033E8  0E00               	movlw	0
  5535  0033EA                     u13690:
  5536  0033EA  0101               	movlb	1	; () banked
  5537  0033EC  6FFC               	movwf	App_HTAD_Home@typeRead& (0+255),b
  5538  0033EE                     
  5539                           ; BSR set to: 1
  5540                           ;App_HTAD.c: 134:         objetoHTAD->temperatureS1 = SRV_ADT7410_GetTemperature(SENSOR_
      +                          S1, typeRead);
  5541  0033EE  C1FC  F00A         	movff	App_HTAD_Home@typeRead,SRV_ADT7410_GetTemperature@typeRead
  5542  0033F2  0E01               	movlw	1
  5543  0033F4  EC9E  F02B         	call	_SRV_ADT7410_GetTemperature
  5544  0033F8  C0F5  FFD9         	movff	App_HTAD_Home@objetoHTAD,fsr2l
  5545  0033FC  C0F6  FFDA         	movff	App_HTAD_Home@objetoHTAD+1,fsr2h
  5546  003400  C00A  FFDE         	movff	?_SRV_ADT7410_GetTemperature,postinc2
  5547  003404  C00B  FFDE         	movff	?_SRV_ADT7410_GetTemperature+1,postinc2
  5548  003408  C00C  FFDE         	movff	?_SRV_ADT7410_GetTemperature+2,postinc2
  5549  00340C  C00D  FFDE         	movff	?_SRV_ADT7410_GetTemperature+3,postinc2
  5550  003410                     
  5551                           ;App_HTAD.c: 135:         objetoHTAD->temperatureS2 = SRV_ADT7410_GetTemperature(SENSOR_
      +                          S2, typeRead);
  5552  003410  C1FC  F00A         	movff	App_HTAD_Home@typeRead,SRV_ADT7410_GetTemperature@typeRead
  5553  003414  0E02               	movlw	2
  5554  003416  EC9E  F02B         	call	_SRV_ADT7410_GetTemperature
  5555  00341A  0100               	movlb	0	; () banked
  5556  00341C  EE20 F004          	lfsr	2,4
  5557  003420  51F5               	movf	App_HTAD_Home@objetoHTAD& (0+255),w,b
  5558  003422  26D9               	addwf	fsr2l,f,c
  5559  003424  51F6               	movf	(App_HTAD_Home@objetoHTAD+1)& (0+255),w,b
  5560  003426  22DA               	addwfc	fsr2h,f,c
  5561  003428  C00A  FFDE         	movff	?_SRV_ADT7410_GetTemperature,postinc2
  5562  00342C  C00B  FFDE         	movff	?_SRV_ADT7410_GetTemperature+1,postinc2
  5563  003430  C00C  FFDE         	movff	?_SRV_ADT7410_GetTemperature+2,postinc2
  5564  003434  C00D  FFDE         	movff	?_SRV_ADT7410_GetTemperature+3,postinc2
  5565  003438                     
  5566                           ; BSR set to: 0
  5567                           ;App_HTAD.c: 136:         objetoHTAD->temperatureS3 = SRV_ADT7410_GetTemperature(SENSOR_
      +                          S3, typeRead);
  5568  003438  C1FC  F00A         	movff	App_HTAD_Home@typeRead,SRV_ADT7410_GetTemperature@typeRead
  5569  00343C  0E03               	movlw	3
  5570  00343E  EC9E  F02B         	call	_SRV_ADT7410_GetTemperature
  5571  003442  0100               	movlb	0	; () banked
  5572  003444  EE20 F008          	lfsr	2,8
  5573  003448  51F5               	movf	App_HTAD_Home@objetoHTAD& (0+255),w,b
  5574  00344A  26D9               	addwf	fsr2l,f,c
  5575  00344C  51F6               	movf	(App_HTAD_Home@objetoHTAD+1)& (0+255),w,b
  5576  00344E  22DA               	addwfc	fsr2h,f,c
  5577  003450  C00A  FFDE         	movff	?_SRV_ADT7410_GetTemperature,postinc2
  5578  003454  C00B  FFDE         	movff	?_SRV_ADT7410_GetTemperature+1,postinc2
  5579  003458  C00C  FFDE         	movff	?_SRV_ADT7410_GetTemperature+2,postinc2
  5580  00345C  C00D  FFDE         	movff	?_SRV_ADT7410_GetTemperature+3,postinc2
  5581  003460                     
  5582                           ; BSR set to: 0
  5583                           ;App_HTAD.c: 138:         objetoHTAD->DD = Driver_Analog_GetValueAN0();
  5584  003460  EC74  F031         	call	_Driver_Analog_GetValueAN0	;wreg free
  5585  003464  0100               	movlb	0	; () banked
  5586  003466  EE20 F00C          	lfsr	2,12
  5587  00346A  51F5               	movf	App_HTAD_Home@objetoHTAD& (0+255),w,b
  5588  00346C  26D9               	addwf	fsr2l,f,c
  5589  00346E  51F6               	movf	(App_HTAD_Home@objetoHTAD+1)& (0+255),w,b
  5590  003470  22DA               	addwfc	fsr2h,f,c
  5591  003472  C031  FFDE         	movff	?_Driver_Analog_GetValueAN0,postinc2
  5592  003476  C032  FFDD         	movff	?_Driver_Analog_GetValueAN0+1,postdec2
  5593  00347A                     
  5594                           ; BSR set to: 0
  5595                           ;App_HTAD.c: 139:         objetoHTAD->DT = Driver_Analog_GetValueAN1();
  5596  00347A  EC1E  F031         	call	_Driver_Analog_GetValueAN1	;wreg free
  5597  00347E  0100               	movlb	0	; () banked
  5598  003480  EE20 F00E          	lfsr	2,14
  5599  003484  51F5               	movf	App_HTAD_Home@objetoHTAD& (0+255),w,b
  5600  003486  26D9               	addwf	fsr2l,f,c
  5601  003488  51F6               	movf	(App_HTAD_Home@objetoHTAD+1)& (0+255),w,b
  5602  00348A  22DA               	addwfc	fsr2h,f,c
  5603  00348C  C031  FFDE         	movff	?_Driver_Analog_GetValueAN1,postinc2
  5604  003490  C032  FFDD         	movff	?_Driver_Analog_GetValueAN1+1,postdec2
  5605  003494                     
  5606                           ; BSR set to: 0
  5607                           ;App_HTAD.c: 140:         objetoHTAD->CO2 = Driver_Analog_GetValueAN3();
  5608  003494  ECC8  F030         	call	_Driver_Analog_GetValueAN3	;wreg free
  5609  003498  0100               	movlb	0	; () banked
  5610  00349A  EE20 F010          	lfsr	2,16
  5611  00349E  51F5               	movf	App_HTAD_Home@objetoHTAD& (0+255),w,b
  5612  0034A0  26D9               	addwf	fsr2l,f,c
  5613  0034A2  51F6               	movf	(App_HTAD_Home@objetoHTAD+1)& (0+255),w,b
  5614  0034A4  22DA               	addwfc	fsr2h,f,c
  5615  0034A6  C031  FFDE         	movff	?_Driver_Analog_GetValueAN3,postinc2
  5616  0034AA  C032  FFDD         	movff	?_Driver_Analog_GetValueAN3+1,postdec2
  5617  0034AE                     
  5618                           ; BSR set to: 0
  5619                           ;App_HTAD.c: 143:         sprintf(txt, "S1:% 3.2f\xDF""%c DD:%4d ", objetoHTAD->temperat
      +                          ureS1, isCelsius ? 'C' : 'F',objetoHTAD->DD);
  5620  0034AE  51FA               	movf	App_HTAD_Home@isCelsius& (0+255),w,b
  5621  0034B0  A4D8               	btfss	status,2,c
  5622  0034B2  EF5D  F01A         	goto	u13701
  5623  0034B6  EF5F  F01A         	goto	u13700
  5624  0034BA                     u13701:
  5625  0034BA  EF66  F01A         	goto	l13414
  5626  0034BE                     u13700:
  5627  0034BE                     
  5628                           ; BSR set to: 0
  5629  0034BE  0E00               	movlw	0
  5630  0034C0  0101               	movlb	1	; () banked
  5631  0034C2  6FF7               	movwf	(_App_HTAD_Home$2429+1)& (0+255),b
  5632  0034C4  0E46               	movlw	70
  5633  0034C6  6FF6               	movwf	_App_HTAD_Home$2429& (0+255),b
  5634  0034C8  EF6B  F01A         	goto	l13416
  5635  0034CC                     l13414:
  5636                           
  5637                           ; BSR set to: 0
  5638  0034CC  0E00               	movlw	0
  5639  0034CE  0101               	movlb	1	; () banked
  5640  0034D0  6FF7               	movwf	(_App_HTAD_Home$2429+1)& (0+255),b
  5641  0034D2  0E43               	movlw	67
  5642  0034D4  6FF6               	movwf	_App_HTAD_Home$2429& (0+255),b
  5643  0034D6                     l13416:
  5644                           
  5645                           ; BSR set to: 1
  5646  0034D6  0EE1               	movlw	low App_HTAD_Home@txt
  5647  0034D8  0100               	movlb	0	; () banked
  5648  0034DA  6FE9               	movwf	sprintf@s& (0+255),b
  5649  0034DC  0E01               	movlw	high App_HTAD_Home@txt
  5650  0034DE  6FEA               	movwf	(sprintf@s+1)& (0+255),b
  5651  0034E0  0E98               	movlw	low STR_1
  5652  0034E2  6FEB               	movwf	sprintf@fmt& (0+255),b
  5653  0034E4  0E06               	movlw	high STR_1
  5654  0034E6  6FEC               	movwf	(sprintf@fmt+1)& (0+255),b
  5655  0034E8  C0F5  FFD9         	movff	App_HTAD_Home@objetoHTAD,fsr2l
  5656  0034EC  C0F6  FFDA         	movff	App_HTAD_Home@objetoHTAD+1,fsr2h
  5657  0034F0  CFDE F0ED          	movff	postinc2,?_sprintf+4
  5658  0034F4  CFDE F0EE          	movff	postinc2,?_sprintf+5
  5659  0034F8  CFDE F0EF          	movff	postinc2,?_sprintf+6
  5660  0034FC  CFDE F0F0          	movff	postinc2,?_sprintf+7
  5661  003500  C1F6  F0F1         	movff	_App_HTAD_Home$2429,?_sprintf+8
  5662  003504  C1F7  F0F2         	movff	_App_HTAD_Home$2429+1,?_sprintf+9
  5663  003508  EE20 F00C          	lfsr	2,12
  5664  00350C  51F5               	movf	App_HTAD_Home@objetoHTAD& (0+255),w,b
  5665  00350E  26D9               	addwf	fsr2l,f,c
  5666  003510  51F6               	movf	(App_HTAD_Home@objetoHTAD+1)& (0+255),w,b
  5667  003512  22DA               	addwfc	fsr2h,f,c
  5668  003514  CFDE F0F3          	movff	postinc2,?_sprintf+10
  5669  003518  CFDD F0F4          	movff	postdec2,?_sprintf+11
  5670  00351C  EC43  F036         	call	_sprintf	;wreg free
  5671  003520                     
  5672                           ;App_HTAD.c: 144:         SRV_Display_Write(1, 1, txt);
  5673  003520  0E01               	movlw	1
  5674  003522  6E13               	movwf	SRV_Display_Write@coluna^0,c
  5675  003524  0EE1               	movlw	low App_HTAD_Home@txt
  5676  003526  6E14               	movwf	SRV_Display_Write@data^0,c
  5677  003528  0E01               	movlw	high App_HTAD_Home@txt
  5678  00352A  6E15               	movwf	(SRV_Display_Write@data+1)^0,c
  5679  00352C  0E01               	movlw	1
  5680  00352E  EC6F  F03A         	call	_SRV_Display_Write
  5681  003532                     
  5682                           ;App_HTAD.c: 146:         sprintf(txt, "S2:% 3.2f\xDF""%c DT:%4d ", objetoHTAD->temperat
      +                          ureS2, isCelsius ? 'C' : 'F',objetoHTAD->DT);
  5683  003532  0100               	movlb	0	; () banked
  5684  003534  51FA               	movf	App_HTAD_Home@isCelsius& (0+255),w,b
  5685  003536  A4D8               	btfss	status,2,c
  5686  003538  EFA0  F01A         	goto	u13711
  5687  00353C  EFA2  F01A         	goto	u13710
  5688  003540                     u13711:
  5689  003540  EFA9  F01A         	goto	l13424
  5690  003544                     u13710:
  5691  003544                     
  5692                           ; BSR set to: 0
  5693  003544  0E00               	movlw	0
  5694  003546  0101               	movlb	1	; () banked
  5695  003548  6FF9               	movwf	(_App_HTAD_Home$2431+1)& (0+255),b
  5696  00354A  0E46               	movlw	70
  5697  00354C  6FF8               	movwf	_App_HTAD_Home$2431& (0+255),b
  5698  00354E  EFAE  F01A         	goto	l13426
  5699  003552                     l13424:
  5700                           
  5701                           ; BSR set to: 0
  5702  003552  0E00               	movlw	0
  5703  003554  0101               	movlb	1	; () banked
  5704  003556  6FF9               	movwf	(_App_HTAD_Home$2431+1)& (0+255),b
  5705  003558  0E43               	movlw	67
  5706  00355A  6FF8               	movwf	_App_HTAD_Home$2431& (0+255),b
  5707  00355C                     l13426:
  5708                           
  5709                           ; BSR set to: 1
  5710  00355C  0EE1               	movlw	low App_HTAD_Home@txt
  5711  00355E  0100               	movlb	0	; () banked
  5712  003560  6FE9               	movwf	sprintf@s& (0+255),b
  5713  003562  0E01               	movlw	high App_HTAD_Home@txt
  5714  003564  6FEA               	movwf	(sprintf@s+1)& (0+255),b
  5715  003566  0EAD               	movlw	low STR_2
  5716  003568  6FEB               	movwf	sprintf@fmt& (0+255),b
  5717  00356A  0E06               	movlw	high STR_2
  5718  00356C  6FEC               	movwf	(sprintf@fmt+1)& (0+255),b
  5719  00356E  EE20 F004          	lfsr	2,4
  5720  003572  51F5               	movf	App_HTAD_Home@objetoHTAD& (0+255),w,b
  5721  003574  26D9               	addwf	fsr2l,f,c
  5722  003576  51F6               	movf	(App_HTAD_Home@objetoHTAD+1)& (0+255),w,b
  5723  003578  22DA               	addwfc	fsr2h,f,c
  5724  00357A  CFDE F0ED          	movff	postinc2,?_sprintf+4
  5725  00357E  CFDE F0EE          	movff	postinc2,?_sprintf+5
  5726  003582  CFDE F0EF          	movff	postinc2,?_sprintf+6
  5727  003586  CFDE F0F0          	movff	postinc2,?_sprintf+7
  5728  00358A  C1F8  F0F1         	movff	_App_HTAD_Home$2431,?_sprintf+8
  5729  00358E  C1F9  F0F2         	movff	_App_HTAD_Home$2431+1,?_sprintf+9
  5730  003592  EE20 F00E          	lfsr	2,14
  5731  003596  51F5               	movf	App_HTAD_Home@objetoHTAD& (0+255),w,b
  5732  003598  26D9               	addwf	fsr2l,f,c
  5733  00359A  51F6               	movf	(App_HTAD_Home@objetoHTAD+1)& (0+255),w,b
  5734  00359C  22DA               	addwfc	fsr2h,f,c
  5735  00359E  CFDE F0F3          	movff	postinc2,?_sprintf+10
  5736  0035A2  CFDD F0F4          	movff	postdec2,?_sprintf+11
  5737  0035A6  EC43  F036         	call	_sprintf	;wreg free
  5738  0035AA                     
  5739                           ;App_HTAD.c: 147:         SRV_Display_Write(2, 1, txt);
  5740  0035AA  0E01               	movlw	1
  5741  0035AC  6E13               	movwf	SRV_Display_Write@coluna^0,c
  5742  0035AE  0EE1               	movlw	low App_HTAD_Home@txt
  5743  0035B0  6E14               	movwf	SRV_Display_Write@data^0,c
  5744  0035B2  0E01               	movlw	high App_HTAD_Home@txt
  5745  0035B4  6E15               	movwf	(SRV_Display_Write@data+1)^0,c
  5746  0035B6  0E02               	movlw	2
  5747  0035B8  EC6F  F03A         	call	_SRV_Display_Write
  5748  0035BC                     
  5749                           ;App_HTAD.c: 149:         sprintf(txt, "S3:% 3.2f\xDF""%c CO2:%4d", objetoHTAD->temperat
      +                          ureS3, isCelsius ? 'C' : 'F',objetoHTAD->CO2);
  5750  0035BC  0100               	movlb	0	; () banked
  5751  0035BE  51FA               	movf	App_HTAD_Home@isCelsius& (0+255),w,b
  5752  0035C0  A4D8               	btfss	status,2,c
  5753  0035C2  EFE5  F01A         	goto	u13721
  5754  0035C6  EFE7  F01A         	goto	u13720
  5755  0035CA                     u13721:
  5756  0035CA  EFEE  F01A         	goto	l13434
  5757  0035CE                     u13720:
  5758  0035CE                     
  5759                           ; BSR set to: 0
  5760  0035CE  0E00               	movlw	0
  5761  0035D0  0101               	movlb	1	; () banked
  5762  0035D2  6FFB               	movwf	(_App_HTAD_Home$2433+1)& (0+255),b
  5763  0035D4  0E46               	movlw	70
  5764  0035D6  6FFA               	movwf	_App_HTAD_Home$2433& (0+255),b
  5765  0035D8  EFF3  F01A         	goto	l13436
  5766  0035DC                     l13434:
  5767                           
  5768                           ; BSR set to: 0
  5769  0035DC  0E00               	movlw	0
  5770  0035DE  0101               	movlb	1	; () banked
  5771  0035E0  6FFB               	movwf	(_App_HTAD_Home$2433+1)& (0+255),b
  5772  0035E2  0E43               	movlw	67
  5773  0035E4  6FFA               	movwf	_App_HTAD_Home$2433& (0+255),b
  5774  0035E6                     l13436:
  5775                           
  5776                           ; BSR set to: 1
  5777  0035E6  0EE1               	movlw	low App_HTAD_Home@txt
  5778  0035E8  0100               	movlb	0	; () banked
  5779  0035EA  6FE9               	movwf	sprintf@s& (0+255),b
  5780  0035EC  0E01               	movlw	high App_HTAD_Home@txt
  5781  0035EE  6FEA               	movwf	(sprintf@s+1)& (0+255),b
  5782  0035F0  0EC2               	movlw	low STR_3
  5783  0035F2  6FEB               	movwf	sprintf@fmt& (0+255),b
  5784  0035F4  0E06               	movlw	high STR_3
  5785  0035F6  6FEC               	movwf	(sprintf@fmt+1)& (0+255),b
  5786  0035F8  EE20 F008          	lfsr	2,8
  5787  0035FC  51F5               	movf	App_HTAD_Home@objetoHTAD& (0+255),w,b
  5788  0035FE  26D9               	addwf	fsr2l,f,c
  5789  003600  51F6               	movf	(App_HTAD_Home@objetoHTAD+1)& (0+255),w,b
  5790  003602  22DA               	addwfc	fsr2h,f,c
  5791  003604  CFDE F0ED          	movff	postinc2,?_sprintf+4
  5792  003608  CFDE F0EE          	movff	postinc2,?_sprintf+5
  5793  00360C  CFDE F0EF          	movff	postinc2,?_sprintf+6
  5794  003610  CFDE F0F0          	movff	postinc2,?_sprintf+7
  5795  003614  C1FA  F0F1         	movff	_App_HTAD_Home$2433,?_sprintf+8
  5796  003618  C1FB  F0F2         	movff	_App_HTAD_Home$2433+1,?_sprintf+9
  5797  00361C  EE20 F010          	lfsr	2,16
  5798  003620  51F5               	movf	App_HTAD_Home@objetoHTAD& (0+255),w,b
  5799  003622  26D9               	addwf	fsr2l,f,c
  5800  003624  51F6               	movf	(App_HTAD_Home@objetoHTAD+1)& (0+255),w,b
  5801  003626  22DA               	addwfc	fsr2h,f,c
  5802  003628  CFDE F0F3          	movff	postinc2,?_sprintf+10
  5803  00362C  CFDD F0F4          	movff	postdec2,?_sprintf+11
  5804  003630  EC43  F036         	call	_sprintf	;wreg free
  5805  003634                     
  5806                           ;App_HTAD.c: 150:         SRV_Display_Write(3, 1, txt);
  5807  003634  0E01               	movlw	1
  5808  003636  6E13               	movwf	SRV_Display_Write@coluna^0,c
  5809  003638  0EE1               	movlw	low App_HTAD_Home@txt
  5810  00363A  6E14               	movwf	SRV_Display_Write@data^0,c
  5811  00363C  0E01               	movlw	high App_HTAD_Home@txt
  5812  00363E  6E15               	movwf	(SRV_Display_Write@data+1)^0,c
  5813  003640  0E03               	movlw	3
  5814  003642  EC6F  F03A         	call	_SRV_Display_Write
  5815  003646                     
  5816                           ;App_HTAD.c: 152:         sprintf(txt, "Menu C/F     Senha:%1d", objetoHTAD->senha);
  5817  003646  0EE1               	movlw	low App_HTAD_Home@txt
  5818  003648  0100               	movlb	0	; () banked
  5819  00364A  6FE9               	movwf	sprintf@s& (0+255),b
  5820  00364C  0E01               	movlw	high App_HTAD_Home@txt
  5821  00364E  6FEA               	movwf	(sprintf@s+1)& (0+255),b
  5822  003650  0E6C               	movlw	low STR_4
  5823  003652  6FEB               	movwf	sprintf@fmt& (0+255),b
  5824  003654  0E06               	movlw	high STR_4
  5825  003656  6FEC               	movwf	(sprintf@fmt+1)& (0+255),b
  5826  003658  EE20 F022          	lfsr	2,34
  5827  00365C  51F5               	movf	App_HTAD_Home@objetoHTAD& (0+255),w,b
  5828  00365E  26D9               	addwf	fsr2l,f,c
  5829  003660  51F6               	movf	(App_HTAD_Home@objetoHTAD+1)& (0+255),w,b
  5830  003662  22DA               	addwfc	fsr2h,f,c
  5831  003664  50DF               	movf	indf2,w,c
  5832  003666  0101               	movlb	1	; () banked
  5833  003668  6FDD               	movwf	??_App_HTAD_Home& (0+255),b
  5834  00366A  51DD               	movf	??_App_HTAD_Home& (0+255),w,b
  5835  00366C  0100               	movlb	0	; () banked
  5836  00366E  6FED               	movwf	(?_sprintf+4)& (0+255),b
  5837  003670  6BEE               	clrf	(?_sprintf+5)& (0+255),b
  5838  003672  EC43  F036         	call	_sprintf	;wreg free
  5839  003676                     
  5840                           ;App_HTAD.c: 153:         SRV_Display_Write(4, 1, txt);
  5841  003676  0E01               	movlw	1
  5842  003678  6E13               	movwf	SRV_Display_Write@coluna^0,c
  5843  00367A  0EE1               	movlw	low App_HTAD_Home@txt
  5844  00367C  6E14               	movwf	SRV_Display_Write@data^0,c
  5845  00367E  0E01               	movlw	high App_HTAD_Home@txt
  5846  003680  6E15               	movwf	(SRV_Display_Write@data+1)^0,c
  5847  003682  0E04               	movlw	4
  5848  003684  EC6F  F03A         	call	_SRV_Display_Write
  5849  003688                     l13444:
  5850                           
  5851                           ;App_HTAD.c: 158:     Key_e key = readKeypad();
  5852  003688  EC1E  F025         	call	_readKeypad	;wreg free
  5853  00368C  0101               	movlb	1	; () banked
  5854  00368E  6FFD               	movwf	App_HTAD_Home@key& (0+255),b
  5855  003690                     
  5856                           ; BSR set to: 1
  5857                           ;App_HTAD.c: 160:     if(key == T1){
  5858  003690  51FD               	movf	App_HTAD_Home@key& (0+255),w,b
  5859  003692  A4D8               	btfss	status,2,c
  5860  003694  EF4E  F01B         	goto	u13731
  5861  003698  EF50  F01B         	goto	u13730
  5862  00369C                     u13731:
  5863  00369C  EF6B  F01B         	goto	l13454
  5864  0036A0                     u13730:
  5865  0036A0                     
  5866                           ; BSR set to: 1
  5867                           ;App_HTAD.c: 161:         if(objetoHTAD->senha == 3){
  5868  0036A0  0100               	movlb	0	; () banked
  5869  0036A2  EE20 F022          	lfsr	2,34
  5870  0036A6  51F5               	movf	App_HTAD_Home@objetoHTAD& (0+255),w,b
  5871  0036A8  26D9               	addwf	fsr2l,f,c
  5872  0036AA  51F6               	movf	(App_HTAD_Home@objetoHTAD+1)& (0+255),w,b
  5873  0036AC  22DA               	addwfc	fsr2h,f,c
  5874  0036AE  0E03               	movlw	3
  5875  0036B0  18DE               	xorwf	postinc2,w,c
  5876  0036B2  A4D8               	btfss	status,2,c
  5877  0036B4  EF5E  F01B         	goto	u13741
  5878  0036B8  EF60  F01B         	goto	u13740
  5879  0036BC                     u13741:
  5880  0036BC  EF6B  F01B         	goto	l13454
  5881  0036C0                     u13740:
  5882  0036C0                     
  5883                           ; BSR set to: 0
  5884                           ;App_HTAD.c: 162:             objetoHTAD->senha = 0;
  5885  0036C0  EE20 F022          	lfsr	2,34
  5886  0036C4  51F5               	movf	App_HTAD_Home@objetoHTAD& (0+255),w,b
  5887  0036C6  26D9               	addwf	fsr2l,f,c
  5888  0036C8  51F6               	movf	(App_HTAD_Home@objetoHTAD+1)& (0+255),w,b
  5889  0036CA  22DA               	addwfc	fsr2h,f,c
  5890  0036CC  0E00               	movlw	0
  5891  0036CE  6EDF               	movwf	indf2,c
  5892  0036D0                     
  5893                           ; BSR set to: 0
  5894                           ;App_HTAD.c: 163:             stateHTAD = MenuAjusteErro;
  5895  0036D0  0E01               	movlw	1
  5896  0036D2  0101               	movlb	1	; () banked
  5897  0036D4  6FAD               	movwf	_stateHTAD& (0+255),b
  5898  0036D6                     l13454:
  5899                           
  5900                           ;App_HTAD.c: 166:     if (key == T2) {
  5901  0036D6  0101               	movlb	1	; () banked
  5902  0036D8  05FD               	decf	App_HTAD_Home@key& (0+255),w,b
  5903  0036DA  A4D8               	btfss	status,2,c
  5904  0036DC  EF72  F01B         	goto	u13751
  5905  0036E0  EF74  F01B         	goto	u13750
  5906  0036E4                     u13751:
  5907  0036E4  EF80  F01B         	goto	l13458
  5908  0036E8                     u13750:
  5909  0036E8                     
  5910                           ; BSR set to: 1
  5911                           ;App_HTAD.c: 167:         isCelsius = !isCelsius;
  5912  0036E8  0100               	movlb	0	; () banked
  5913  0036EA  51FA               	movf	App_HTAD_Home@isCelsius& (0+255),w,b
  5914  0036EC  B4D8               	btfsc	status,2,c
  5915  0036EE  EF7B  F01B         	goto	u13761
  5916  0036F2  EF7E  F01B         	goto	u13760
  5917  0036F6                     u13761:
  5918  0036F6  0E01               	movlw	1
  5919  0036F8  EF7F  F01B         	goto	u13770
  5920  0036FC                     u13760:
  5921  0036FC  0E00               	movlw	0
  5922  0036FE                     u13770:
  5923  0036FE  6FFA               	movwf	App_HTAD_Home@isCelsius& (0+255),b
  5924  003700                     l13458:
  5925                           
  5926                           ;App_HTAD.c: 169:     if (key == T5) {;;
  5927  003700  0E04               	movlw	4
  5928  003702  0101               	movlb	1	; () banked
  5929  003704  19FD               	xorwf	App_HTAD_Home@key& (0+255),w,b
  5930  003706  A4D8               	btfss	status,2,c
  5931  003708  EF88  F01B         	goto	u13781
  5932  00370C  EF8A  F01B         	goto	u13780
  5933  003710                     u13781:
  5934  003710  EFA8  F01B         	goto	l935
  5935  003714                     u13780:
  5936  003714                     
  5937                           ; BSR set to: 1
  5938                           ;App_HTAD.c: 170:         objetoHTAD->senha ++;
  5939  003714  0100               	movlb	0	; () banked
  5940  003716  EE20 F022          	lfsr	2,34
  5941  00371A  51F5               	movf	App_HTAD_Home@objetoHTAD& (0+255),w,b
  5942  00371C  26D9               	addwf	fsr2l,f,c
  5943  00371E  51F6               	movf	(App_HTAD_Home@objetoHTAD+1)& (0+255),w,b
  5944  003720  22DA               	addwfc	fsr2h,f,c
  5945  003722  2ADF               	incf	indf2,f,c
  5946                           
  5947                           ;App_HTAD.c: 171:         if(objetoHTAD->senha > 9){
  5948  003724  EE20 F022          	lfsr	2,34
  5949  003728  51F5               	movf	App_HTAD_Home@objetoHTAD& (0+255),w,b
  5950  00372A  26D9               	addwf	fsr2l,f,c
  5951  00372C  51F6               	movf	(App_HTAD_Home@objetoHTAD+1)& (0+255),w,b
  5952  00372E  22DA               	addwfc	fsr2h,f,c
  5953  003730  0E09               	movlw	9
  5954  003732  64DF               	cpfsgt	indf2,c
  5955  003734  EF9E  F01B         	goto	u13791
  5956  003738  EFA0  F01B         	goto	u13790
  5957  00373C                     u13791:
  5958  00373C  EFA8  F01B         	goto	l935
  5959  003740                     u13790:
  5960  003740                     
  5961                           ; BSR set to: 0
  5962                           ;App_HTAD.c: 172:             objetoHTAD->senha = 0;
  5963  003740  EE20 F022          	lfsr	2,34
  5964  003744  51F5               	movf	App_HTAD_Home@objetoHTAD& (0+255),w,b
  5965  003746  26D9               	addwf	fsr2l,f,c
  5966  003748  51F6               	movf	(App_HTAD_Home@objetoHTAD+1)& (0+255),w,b
  5967  00374A  22DA               	addwfc	fsr2h,f,c
  5968  00374C  0E00               	movlw	0
  5969  00374E  6EDF               	movwf	indf2,c
  5970  003750                     l935:
  5971  003750  0012               	return		;funcret
  5972  003752                     __end_of_App_HTAD_Home:
  5973                           	callstack 0
  5974                           
  5975 ;; *************** function _App_HTAD_MenuAjusteErro *****************
  5976 ;; Defined at:
  5977 ;;		line 224 in file "App_HTAD.c"
  5978 ;; Parameters:    Size  Location     Type
  5979 ;;  objetoHTAD      2  149[BANK0 ] PTR struct .
  5980 ;;		 -> ObjetoHTAD(35), 
  5981 ;; Auto vars:     Size  Location     Type
  5982 ;;  txt            20   12[BANK1 ] unsigned char [20]
  5983 ;;  key             1   32[BANK1 ] enum E505
  5984 ;; Return value:  Size  Location     Type
  5985 ;;                  1    wreg      void 
  5986 ;; Registers used:
  5987 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5988 ;; Tracked objects:
  5989 ;;		On entry : 0/0
  5990 ;;		On exit  : 0/0
  5991 ;;		Unchanged: 0/0
  5992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5993 ;;      Params:         0       2       0       0       0       0       0
  5994 ;;      Locals:         0       0      21       0       0       0       0
  5995 ;;      Temps:          0       0       4       0       0       0       0
  5996 ;;      Totals:         0       2      25       0       0       0       0
  5997 ;;Total ram usage:       27 bytes
  5998 ;; Hardware stack levels used: 1
  5999 ;; Hardware stack levels required when called: 12
  6000 ;; This function calls:
  6001 ;;		_DRV_LCD_SetCursor
  6002 ;;		_SRV_Display_Write
  6003 ;;		_SRV_TIMER_GetTick
  6004 ;;		_decrementDigit
  6005 ;;		_gravarDadosNaEEPROM
  6006 ;;		_incrementDigit
  6007 ;;		_lerDadosDaEEPROM
  6008 ;;		_moveCursor
  6009 ;;		_readKeypad
  6010 ;;		_sprintf
  6011 ;; This function is called by:
  6012 ;;		_App_HTAD_init
  6013 ;;		_App_HTAD_run
  6014 ;; This function uses a non-reentrant model
  6015 ;;
  6016                           
  6017                           	psect	text25
  6018  0028C0                     __ptext25:
  6019                           	callstack 0
  6020  0028C0                     _App_HTAD_MenuAjusteErro:
  6021                           	callstack 17
  6022  0028C0                     
  6023                           ;App_HTAD.c: 225:     static uint32_t tick = 0;;App_HTAD.c: 226:     static uint32_t tic
      +                          kLast = 0;;App_HTAD.c: 227:     static uint8_t CursorLinha = 1;;App_HTAD.c: 228:     sta
      +                          tic uint8_t CursorColuna = 10;;App_HTAD.c: 230:     static uint8_t stateteste = 0;;App_H
      +                          TAD.c: 231:     char txt[20];;App_HTAD.c: 232:     tick = SRV_TIMER_GetTick();
  6024  0028C0  ECB9  F03A         	call	_SRV_TIMER_GetTick	;wreg free
  6025  0028C4  C00A  F179         	movff	?_SRV_TIMER_GetTick,App_HTAD_MenuAjusteErro@tick
  6026  0028C8  C00B  F17A         	movff	?_SRV_TIMER_GetTick+1,App_HTAD_MenuAjusteErro@tick+1
  6027  0028CC  C00C  F17B         	movff	?_SRV_TIMER_GetTick+2,App_HTAD_MenuAjusteErro@tick+2
  6028  0028D0  C00D  F17C         	movff	?_SRV_TIMER_GetTick+3,App_HTAD_MenuAjusteErro@tick+3
  6029  0028D4                     
  6030                           ;App_HTAD.c: 233:     if ((uint32_t)(tick - tickLast) >= 250) {
  6031  0028D4  0101               	movlb	1	; () banked
  6032  0028D6  5175               	movf	App_HTAD_MenuAjusteErro@tickLast& (0+255),w,b
  6033  0028D8  5D79               	subwf	App_HTAD_MenuAjusteErro@tick& (0+255),w,b
  6034  0028DA  6FDD               	movwf	??_App_HTAD_MenuAjusteErro& (0+255),b
  6035  0028DC  5176               	movf	(App_HTAD_MenuAjusteErro@tickLast+1)& (0+255),w,b
  6036  0028DE  597A               	subwfb	(App_HTAD_MenuAjusteErro@tick+1)& (0+255),w,b
  6037  0028E0  6FDE               	movwf	(??_App_HTAD_MenuAjusteErro+1)& (0+255),b
  6038  0028E2  5177               	movf	(App_HTAD_MenuAjusteErro@tickLast+2)& (0+255),w,b
  6039  0028E4  597B               	subwfb	(App_HTAD_MenuAjusteErro@tick+2)& (0+255),w,b
  6040  0028E6  6FDF               	movwf	(??_App_HTAD_MenuAjusteErro+2)& (0+255),b
  6041  0028E8  5178               	movf	(App_HTAD_MenuAjusteErro@tickLast+3)& (0+255),w,b
  6042  0028EA  597C               	subwfb	(App_HTAD_MenuAjusteErro@tick+3)& (0+255),w,b
  6043  0028EC  6FE0               	movwf	(??_App_HTAD_MenuAjusteErro+3)& (0+255),b
  6044  0028EE  51E0               	movf	(??_App_HTAD_MenuAjusteErro+3)& (0+255),w,b
  6045  0028F0  11DF               	iorwf	(??_App_HTAD_MenuAjusteErro+2)& (0+255),w,b
  6046  0028F2  11DE               	iorwf	(??_App_HTAD_MenuAjusteErro+1)& (0+255),w,b
  6047  0028F4  E109               	bnz	u13800
  6048  0028F6  0EFA               	movlw	250
  6049  0028F8  5DDD               	subwf	??_App_HTAD_MenuAjusteErro& (0+255),w,b
  6050  0028FA  A0D8               	btfss	status,0,c
  6051  0028FC  EF82  F014         	goto	u13801
  6052  002900  EF84  F014         	goto	u13800
  6053  002904                     u13801:
  6054  002904  EF32  F015         	goto	l13484
  6055  002908                     u13800:
  6056  002908                     
  6057                           ; BSR set to: 1
  6058                           ;App_HTAD.c: 234:         tickLast = tick;
  6059  002908  C179  F175         	movff	App_HTAD_MenuAjusteErro@tick,App_HTAD_MenuAjusteErro@tickLast
  6060  00290C  C17A  F176         	movff	App_HTAD_MenuAjusteErro@tick+1,App_HTAD_MenuAjusteErro@tickLast+1
  6061  002910  C17B  F177         	movff	App_HTAD_MenuAjusteErro@tick+2,App_HTAD_MenuAjusteErro@tickLast+2
  6062  002914  C17C  F178         	movff	App_HTAD_MenuAjusteErro@tick+3,App_HTAD_MenuAjusteErro@tickLast+3
  6063  002918                     
  6064                           ; BSR set to: 1
  6065                           ;App_HTAD.c: 237:         sprintf(txt, "S1: Aj+: %02d Aj-: %02d ",objetoHTAD->erroSensor
      +                          S1.positivo,objetoHTAD->erroSensorS1.negativo);
  6066  002918  0EE1               	movlw	low App_HTAD_MenuAjusteErro@txt
  6067  00291A  0100               	movlb	0	; () banked
  6068  00291C  6FE9               	movwf	sprintf@s& (0+255),b
  6069  00291E  0E01               	movlw	high App_HTAD_MenuAjusteErro@txt
  6070  002920  6FEA               	movwf	(sprintf@s+1)& (0+255),b
  6071  002922  0E21               	movlw	low STR_5
  6072  002924  6FEB               	movwf	sprintf@fmt& (0+255),b
  6073  002926  0E06               	movlw	high STR_5
  6074  002928  6FEC               	movwf	(sprintf@fmt+1)& (0+255),b
  6075  00292A  EE20 F013          	lfsr	2,19
  6076  00292E  51F5               	movf	App_HTAD_MenuAjusteErro@objetoHTAD& (0+255),w,b
  6077  002930  26D9               	addwf	fsr2l,f,c
  6078  002932  51F6               	movf	(App_HTAD_MenuAjusteErro@objetoHTAD+1)& (0+255),w,b
  6079  002934  22DA               	addwfc	fsr2h,f,c
  6080  002936  50DF               	movf	indf2,w,c
  6081  002938  0101               	movlb	1	; () banked
  6082  00293A  6FDD               	movwf	??_App_HTAD_MenuAjusteErro& (0+255),b
  6083  00293C  51DD               	movf	??_App_HTAD_MenuAjusteErro& (0+255),w,b
  6084  00293E  0100               	movlb	0	; () banked
  6085  002940  6FED               	movwf	(?_sprintf+4)& (0+255),b
  6086  002942  6BEE               	clrf	(?_sprintf+5)& (0+255),b
  6087  002944  EE20 F012          	lfsr	2,18
  6088  002948  51F5               	movf	App_HTAD_MenuAjusteErro@objetoHTAD& (0+255),w,b
  6089  00294A  26D9               	addwf	fsr2l,f,c
  6090  00294C  51F6               	movf	(App_HTAD_MenuAjusteErro@objetoHTAD+1)& (0+255),w,b
  6091  00294E  22DA               	addwfc	fsr2h,f,c
  6092  002950  50DF               	movf	indf2,w,c
  6093  002952  0101               	movlb	1	; () banked
  6094  002954  6FDE               	movwf	(??_App_HTAD_MenuAjusteErro+1)& (0+255),b
  6095  002956  51DE               	movf	(??_App_HTAD_MenuAjusteErro+1)& (0+255),w,b
  6096  002958  0100               	movlb	0	; () banked
  6097  00295A  6FEF               	movwf	(?_sprintf+6)& (0+255),b
  6098  00295C  6BF0               	clrf	(?_sprintf+7)& (0+255),b
  6099  00295E  EC43  F036         	call	_sprintf	;wreg free
  6100  002962                     
  6101                           ;App_HTAD.c: 238:         SRV_Display_Write(1, 1, txt);
  6102  002962  0E01               	movlw	1
  6103  002964  6E13               	movwf	SRV_Display_Write@coluna^0,c
  6104  002966  0EE1               	movlw	low App_HTAD_MenuAjusteErro@txt
  6105  002968  6E14               	movwf	SRV_Display_Write@data^0,c
  6106  00296A  0E01               	movlw	high App_HTAD_MenuAjusteErro@txt
  6107  00296C  6E15               	movwf	(SRV_Display_Write@data+1)^0,c
  6108  00296E  0E01               	movlw	1
  6109  002970  EC6F  F03A         	call	_SRV_Display_Write
  6110  002974                     
  6111                           ;App_HTAD.c: 239:         sprintf(txt, "S2: Aj+: %02d Aj-: %02d ",objetoHTAD->erroSensor
      +                          S2.positivo,objetoHTAD->erroSensorS2.negativo);
  6112  002974  0EE1               	movlw	low App_HTAD_MenuAjusteErro@txt
  6113  002976  0100               	movlb	0	; () banked
  6114  002978  6FE9               	movwf	sprintf@s& (0+255),b
  6115  00297A  0E01               	movlw	high App_HTAD_MenuAjusteErro@txt
  6116  00297C  6FEA               	movwf	(sprintf@s+1)& (0+255),b
  6117  00297E  0E3A               	movlw	low STR_6
  6118  002980  6FEB               	movwf	sprintf@fmt& (0+255),b
  6119  002982  0E06               	movlw	high STR_6
  6120  002984  6FEC               	movwf	(sprintf@fmt+1)& (0+255),b
  6121  002986  EE20 F015          	lfsr	2,21
  6122  00298A  51F5               	movf	App_HTAD_MenuAjusteErro@objetoHTAD& (0+255),w,b
  6123  00298C  26D9               	addwf	fsr2l,f,c
  6124  00298E  51F6               	movf	(App_HTAD_MenuAjusteErro@objetoHTAD+1)& (0+255),w,b
  6125  002990  22DA               	addwfc	fsr2h,f,c
  6126  002992  50DF               	movf	indf2,w,c
  6127  002994  0101               	movlb	1	; () banked
  6128  002996  6FDD               	movwf	??_App_HTAD_MenuAjusteErro& (0+255),b
  6129  002998  51DD               	movf	??_App_HTAD_MenuAjusteErro& (0+255),w,b
  6130  00299A  0100               	movlb	0	; () banked
  6131  00299C  6FED               	movwf	(?_sprintf+4)& (0+255),b
  6132  00299E  6BEE               	clrf	(?_sprintf+5)& (0+255),b
  6133  0029A0  EE20 F014          	lfsr	2,20
  6134  0029A4  51F5               	movf	App_HTAD_MenuAjusteErro@objetoHTAD& (0+255),w,b
  6135  0029A6  26D9               	addwf	fsr2l,f,c
  6136  0029A8  51F6               	movf	(App_HTAD_MenuAjusteErro@objetoHTAD+1)& (0+255),w,b
  6137  0029AA  22DA               	addwfc	fsr2h,f,c
  6138  0029AC  50DF               	movf	indf2,w,c
  6139  0029AE  0101               	movlb	1	; () banked
  6140  0029B0  6FDE               	movwf	(??_App_HTAD_MenuAjusteErro+1)& (0+255),b
  6141  0029B2  51DE               	movf	(??_App_HTAD_MenuAjusteErro+1)& (0+255),w,b
  6142  0029B4  0100               	movlb	0	; () banked
  6143  0029B6  6FEF               	movwf	(?_sprintf+6)& (0+255),b
  6144  0029B8  6BF0               	clrf	(?_sprintf+7)& (0+255),b
  6145  0029BA  EC43  F036         	call	_sprintf	;wreg free
  6146                           
  6147                           ;App_HTAD.c: 240:         SRV_Display_Write(2, 1, txt);
  6148  0029BE  0E01               	movlw	1
  6149  0029C0  6E13               	movwf	SRV_Display_Write@coluna^0,c
  6150  0029C2  0EE1               	movlw	low App_HTAD_MenuAjusteErro@txt
  6151  0029C4  6E14               	movwf	SRV_Display_Write@data^0,c
  6152  0029C6  0E01               	movlw	high App_HTAD_MenuAjusteErro@txt
  6153  0029C8  6E15               	movwf	(SRV_Display_Write@data+1)^0,c
  6154  0029CA  0E02               	movlw	2
  6155  0029CC  EC6F  F03A         	call	_SRV_Display_Write
  6156  0029D0                     
  6157                           ;App_HTAD.c: 241:         sprintf(txt, "S3: Aj+: %02d Aj-: %02d ",objetoHTAD->erroSensor
      +                          S3.positivo,objetoHTAD->erroSensorS3.negativo);
  6158  0029D0  0EE1               	movlw	low App_HTAD_MenuAjusteErro@txt
  6159  0029D2  0100               	movlb	0	; () banked
  6160  0029D4  6FE9               	movwf	sprintf@s& (0+255),b
  6161  0029D6  0E01               	movlw	high App_HTAD_MenuAjusteErro@txt
  6162  0029D8  6FEA               	movwf	(sprintf@s+1)& (0+255),b
  6163  0029DA  0E53               	movlw	low STR_7
  6164  0029DC  6FEB               	movwf	sprintf@fmt& (0+255),b
  6165  0029DE  0E06               	movlw	high STR_7
  6166  0029E0  6FEC               	movwf	(sprintf@fmt+1)& (0+255),b
  6167  0029E2  EE20 F017          	lfsr	2,23
  6168  0029E6  51F5               	movf	App_HTAD_MenuAjusteErro@objetoHTAD& (0+255),w,b
  6169  0029E8  26D9               	addwf	fsr2l,f,c
  6170  0029EA  51F6               	movf	(App_HTAD_MenuAjusteErro@objetoHTAD+1)& (0+255),w,b
  6171  0029EC  22DA               	addwfc	fsr2h,f,c
  6172  0029EE  50DF               	movf	indf2,w,c
  6173  0029F0  0101               	movlb	1	; () banked
  6174  0029F2  6FDD               	movwf	??_App_HTAD_MenuAjusteErro& (0+255),b
  6175  0029F4  51DD               	movf	??_App_HTAD_MenuAjusteErro& (0+255),w,b
  6176  0029F6  0100               	movlb	0	; () banked
  6177  0029F8  6FED               	movwf	(?_sprintf+4)& (0+255),b
  6178  0029FA  6BEE               	clrf	(?_sprintf+5)& (0+255),b
  6179  0029FC  EE20 F016          	lfsr	2,22
  6180  002A00  51F5               	movf	App_HTAD_MenuAjusteErro@objetoHTAD& (0+255),w,b
  6181  002A02  26D9               	addwf	fsr2l,f,c
  6182  002A04  51F6               	movf	(App_HTAD_MenuAjusteErro@objetoHTAD+1)& (0+255),w,b
  6183  002A06  22DA               	addwfc	fsr2h,f,c
  6184  002A08  50DF               	movf	indf2,w,c
  6185  002A0A  0101               	movlb	1	; () banked
  6186  002A0C  6FDE               	movwf	(??_App_HTAD_MenuAjusteErro+1)& (0+255),b
  6187  002A0E  51DE               	movf	(??_App_HTAD_MenuAjusteErro+1)& (0+255),w,b
  6188  002A10  0100               	movlb	0	; () banked
  6189  002A12  6FEF               	movwf	(?_sprintf+6)& (0+255),b
  6190  002A14  6BF0               	clrf	(?_sprintf+7)& (0+255),b
  6191  002A16  EC43  F036         	call	_sprintf	;wreg free
  6192  002A1A                     
  6193                           ;App_HTAD.c: 242:         SRV_Display_Write(3, 1, txt);
  6194  002A1A  0E01               	movlw	1
  6195  002A1C  6E13               	movwf	SRV_Display_Write@coluna^0,c
  6196  002A1E  0EE1               	movlw	low App_HTAD_MenuAjusteErro@txt
  6197  002A20  6E14               	movwf	SRV_Display_Write@data^0,c
  6198  002A22  0E01               	movlw	high App_HTAD_MenuAjusteErro@txt
  6199  002A24  6E15               	movwf	(SRV_Display_Write@data+1)^0,c
  6200  002A26  0E03               	movlw	3
  6201  002A28  EC6F  F03A         	call	_SRV_Display_Write
  6202                           
  6203                           ;App_HTAD.c: 243:         sprintf(txt, "Sai INC DEC PRX SAV ");
  6204  002A2C  0EE1               	movlw	low App_HTAD_MenuAjusteErro@txt
  6205  002A2E  0100               	movlb	0	; () banked
  6206  002A30  6FE9               	movwf	sprintf@s& (0+255),b
  6207  002A32  0E01               	movlw	high App_HTAD_MenuAjusteErro@txt
  6208  002A34  6FEA               	movwf	(sprintf@s+1)& (0+255),b
  6209  002A36  0E83               	movlw	low STR_8
  6210  002A38  6FEB               	movwf	sprintf@fmt& (0+255),b
  6211  002A3A  0E06               	movlw	high STR_8
  6212  002A3C  6FEC               	movwf	(sprintf@fmt+1)& (0+255),b
  6213  002A3E  EC43  F036         	call	_sprintf	;wreg free
  6214  002A42                     
  6215                           ;App_HTAD.c: 244:         SRV_Display_Write(4, 1, txt);
  6216  002A42  0E01               	movlw	1
  6217  002A44  6E13               	movwf	SRV_Display_Write@coluna^0,c
  6218  002A46  0EE1               	movlw	low App_HTAD_MenuAjusteErro@txt
  6219  002A48  6E14               	movwf	SRV_Display_Write@data^0,c
  6220  002A4A  0E01               	movlw	high App_HTAD_MenuAjusteErro@txt
  6221  002A4C  6E15               	movwf	(SRV_Display_Write@data+1)^0,c
  6222  002A4E  0E04               	movlw	4
  6223  002A50  EC6F  F03A         	call	_SRV_Display_Write
  6224  002A54                     
  6225                           ;App_HTAD.c: 245:         DRV_LCD_SetCursor(CursorLinha, CursorColuna, 1);
  6226  002A54  C0FB  F00D         	movff	App_HTAD_MenuAjusteErro@CursorColuna,DRV_LCD_SetCursor@coluna
  6227  002A58  0E01               	movlw	1
  6228  002A5A  6E0E               	movwf	DRV_LCD_SetCursor@cursorOn^0,c
  6229  002A5C  0100               	movlb	0	; () banked
  6230  002A5E  51FC               	movf	App_HTAD_MenuAjusteErro@CursorLinha& (0+255),w,b
  6231  002A60  EC22  F02B         	call	_DRV_LCD_SetCursor
  6232  002A64                     l13484:
  6233                           
  6234                           ;App_HTAD.c: 249:     Key_e key = readKeypad();
  6235  002A64  EC1E  F025         	call	_readKeypad	;wreg free
  6236  002A68  0101               	movlb	1	; () banked
  6237  002A6A  6FF5               	movwf	App_HTAD_MenuAjusteErro@key& (0+255),b
  6238                           
  6239                           ;App_HTAD.c: 251:     switch (key) {
  6240  002A6C  EF0F  F017         	goto	l13576
  6241  002A70                     l13486:
  6242                           
  6243                           ; BSR set to: 1
  6244                           ;App_HTAD.c: 253:             lerDadosDaEEPROM();
  6245  002A70  ECC5  F032         	call	_lerDadosDaEEPROM	;wreg free
  6246  002A74                     
  6247                           ;App_HTAD.c: 254:             stateHTAD = HOME;
  6248  002A74  0E00               	movlw	0
  6249  002A76  0101               	movlb	1	; () banked
  6250  002A78  6FAD               	movwf	_stateHTAD& (0+255),b
  6251                           
  6252                           ;App_HTAD.c: 255:             break;
  6253  002A7A  EF30  F017         	goto	l1039
  6254  002A7E                     l13490:
  6255                           
  6256                           ; BSR set to: 1
  6257                           ;App_HTAD.c: 259:                 if (CursorColuna == 10 || CursorColuna == 11) {
  6258  002A7E  0E0A               	movlw	10
  6259  002A80  0100               	movlb	0	; () banked
  6260  002A82  19FB               	xorwf	App_HTAD_MenuAjusteErro@CursorColuna& (0+255),w,b
  6261  002A84  B4D8               	btfsc	status,2,c
  6262  002A86  EF47  F015         	goto	u13811
  6263  002A8A  EF49  F015         	goto	u13810
  6264  002A8E                     u13811:
  6265  002A8E  EF52  F015         	goto	l13494
  6266  002A92                     u13810:
  6267  002A92                     
  6268                           ; BSR set to: 0
  6269  002A92  0E0B               	movlw	11
  6270  002A94  19FB               	xorwf	App_HTAD_MenuAjusteErro@CursorColuna& (0+255),w,b
  6271  002A96  A4D8               	btfss	status,2,c
  6272  002A98  EF50  F015         	goto	u13821
  6273  002A9C  EF52  F015         	goto	u13820
  6274  002AA0                     u13821:
  6275  002AA0  EF60  F015         	goto	l13496
  6276  002AA4                     u13820:
  6277  002AA4                     l13494:
  6278                           
  6279                           ; BSR set to: 0
  6280                           ;App_HTAD.c: 260:                      incrementDigit(&objetoHTAD->erroSensorS1.positivo
      +                          ,CursorLinha,CursorColuna);
  6281  002AA4  0E13               	movlw	19
  6282  002AA6  25F5               	addwf	App_HTAD_MenuAjusteErro@objetoHTAD& (0+255),w,b
  6283  002AA8  6E18               	movwf	incrementDigit@valorSensor^0,c
  6284  002AAA  0E00               	movlw	0
  6285  002AAC  21F6               	addwfc	(App_HTAD_MenuAjusteErro@objetoHTAD+1)& (0+255),w,b
  6286  002AAE  6E19               	movwf	(incrementDigit@valorSensor+1)^0,c
  6287  002AB0  C0FC  F01A         	movff	App_HTAD_MenuAjusteErro@CursorLinha,incrementDigit@CursorLinha
  6288  002AB4  C0FB  F01B         	movff	App_HTAD_MenuAjusteErro@CursorColuna,incrementDigit@CursorColuna
  6289  002AB8  ECA3  F029         	call	_incrementDigit	;wreg free
  6290                           
  6291                           ;App_HTAD.c: 261:                 }
  6292  002ABC  EF30  F017         	goto	l1039
  6293  002AC0                     l13496:
  6294                           
  6295                           ; BSR set to: 0
  6296  002AC0  0E12               	movlw	18
  6297  002AC2  19FB               	xorwf	App_HTAD_MenuAjusteErro@CursorColuna& (0+255),w,b
  6298  002AC4  B4D8               	btfsc	status,2,c
  6299  002AC6  EF67  F015         	goto	u13831
  6300  002ACA  EF69  F015         	goto	u13830
  6301  002ACE                     u13831:
  6302  002ACE  EF72  F015         	goto	l13500
  6303  002AD2                     u13830:
  6304  002AD2                     
  6305                           ; BSR set to: 0
  6306  002AD2  0E13               	movlw	19
  6307  002AD4  19FB               	xorwf	App_HTAD_MenuAjusteErro@CursorColuna& (0+255),w,b
  6308  002AD6  A4D8               	btfss	status,2,c
  6309  002AD8  EF70  F015         	goto	u13841
  6310  002ADC  EF72  F015         	goto	u13840
  6311  002AE0                     u13841:
  6312  002AE0  EF1D  F016         	goto	l992
  6313  002AE4                     u13840:
  6314  002AE4                     l13500:
  6315                           
  6316                           ; BSR set to: 0
  6317                           ;App_HTAD.c: 263:                     incrementDigit(&objetoHTAD->erroSensorS1.negativo,
      +                          CursorLinha,CursorColuna);
  6318  002AE4  0E12               	movlw	18
  6319  002AE6  25F5               	addwf	App_HTAD_MenuAjusteErro@objetoHTAD& (0+255),w,b
  6320  002AE8  6E18               	movwf	incrementDigit@valorSensor^0,c
  6321  002AEA  0E00               	movlw	0
  6322  002AEC  21F6               	addwfc	(App_HTAD_MenuAjusteErro@objetoHTAD+1)& (0+255),w,b
  6323  002AEE  6E19               	movwf	(incrementDigit@valorSensor+1)^0,c
  6324  002AF0  C0FC  F01A         	movff	App_HTAD_MenuAjusteErro@CursorLinha,incrementDigit@CursorLinha
  6325  002AF4  C0FB  F01B         	movff	App_HTAD_MenuAjusteErro@CursorColuna,incrementDigit@CursorColuna
  6326  002AF8  ECA3  F029         	call	_incrementDigit	;wreg free
  6327  002AFC  EF30  F017         	goto	l1039
  6328  002B00                     l13502:
  6329                           
  6330                           ; BSR set to: 1
  6331                           ;App_HTAD.c: 267:                 if (CursorColuna == 10 || CursorColuna == 11) {
  6332  002B00  0E0A               	movlw	10
  6333  002B02  0100               	movlb	0	; () banked
  6334  002B04  19FB               	xorwf	App_HTAD_MenuAjusteErro@CursorColuna& (0+255),w,b
  6335  002B06  B4D8               	btfsc	status,2,c
  6336  002B08  EF88  F015         	goto	u13851
  6337  002B0C  EF8A  F015         	goto	u13850
  6338  002B10                     u13851:
  6339  002B10  EF93  F015         	goto	l13506
  6340  002B14                     u13850:
  6341  002B14                     
  6342                           ; BSR set to: 0
  6343  002B14  0E0B               	movlw	11
  6344  002B16  19FB               	xorwf	App_HTAD_MenuAjusteErro@CursorColuna& (0+255),w,b
  6345  002B18  A4D8               	btfss	status,2,c
  6346  002B1A  EF91  F015         	goto	u13861
  6347  002B1E  EF93  F015         	goto	u13860
  6348  002B22                     u13861:
  6349  002B22  EFA1  F015         	goto	l13508
  6350  002B26                     u13860:
  6351  002B26                     l13506:
  6352                           
  6353                           ; BSR set to: 0
  6354                           ;App_HTAD.c: 268:                      incrementDigit(&objetoHTAD->erroSensorS2.positivo
      +                          ,CursorLinha,CursorColuna);
  6355  002B26  0E15               	movlw	21
  6356  002B28  25F5               	addwf	App_HTAD_MenuAjusteErro@objetoHTAD& (0+255),w,b
  6357  002B2A  6E18               	movwf	incrementDigit@valorSensor^0,c
  6358  002B2C  0E00               	movlw	0
  6359  002B2E  21F6               	addwfc	(App_HTAD_MenuAjusteErro@objetoHTAD+1)& (0+255),w,b
  6360  002B30  6E19               	movwf	(incrementDigit@valorSensor+1)^0,c
  6361  002B32  C0FC  F01A         	movff	App_HTAD_MenuAjusteErro@CursorLinha,incrementDigit@CursorLinha
  6362  002B36  C0FB  F01B         	movff	App_HTAD_MenuAjusteErro@CursorColuna,incrementDigit@CursorColuna
  6363  002B3A  ECA3  F029         	call	_incrementDigit	;wreg free
  6364                           
  6365                           ;App_HTAD.c: 269:                 }
  6366  002B3E  EF30  F017         	goto	l1039
  6367  002B42                     l13508:
  6368                           
  6369                           ; BSR set to: 0
  6370  002B42  0E12               	movlw	18
  6371  002B44  19FB               	xorwf	App_HTAD_MenuAjusteErro@CursorColuna& (0+255),w,b
  6372  002B46  B4D8               	btfsc	status,2,c
  6373  002B48  EFA8  F015         	goto	u13871
  6374  002B4C  EFAA  F015         	goto	u13870
  6375  002B50                     u13871:
  6376  002B50  EFB3  F015         	goto	l13512
  6377  002B54                     u13870:
  6378  002B54                     
  6379                           ; BSR set to: 0
  6380  002B54  0E13               	movlw	19
  6381  002B56  19FB               	xorwf	App_HTAD_MenuAjusteErro@CursorColuna& (0+255),w,b
  6382  002B58  A4D8               	btfss	status,2,c
  6383  002B5A  EFB1  F015         	goto	u13881
  6384  002B5E  EFB3  F015         	goto	u13880
  6385  002B62                     u13881:
  6386  002B62  EF1D  F016         	goto	l992
  6387  002B66                     u13880:
  6388  002B66                     l13512:
  6389                           
  6390                           ; BSR set to: 0
  6391                           ;App_HTAD.c: 271:                     incrementDigit(&objetoHTAD->erroSensorS2.negativo,
      +                          CursorLinha,CursorColuna);
  6392  002B66  0E14               	movlw	20
  6393  002B68  25F5               	addwf	App_HTAD_MenuAjusteErro@objetoHTAD& (0+255),w,b
  6394  002B6A  6E18               	movwf	incrementDigit@valorSensor^0,c
  6395  002B6C  0E00               	movlw	0
  6396  002B6E  21F6               	addwfc	(App_HTAD_MenuAjusteErro@objetoHTAD+1)& (0+255),w,b
  6397  002B70  6E19               	movwf	(incrementDigit@valorSensor+1)^0,c
  6398  002B72  C0FC  F01A         	movff	App_HTAD_MenuAjusteErro@CursorLinha,incrementDigit@CursorLinha
  6399  002B76  C0FB  F01B         	movff	App_HTAD_MenuAjusteErro@CursorColuna,incrementDigit@CursorColuna
  6400  002B7A  ECA3  F029         	call	_incrementDigit	;wreg free
  6401  002B7E  EF30  F017         	goto	l1039
  6402  002B82                     l13514:
  6403                           
  6404                           ; BSR set to: 1
  6405                           ;App_HTAD.c: 275:                if (CursorColuna == 10 || CursorColuna == 11) {
  6406  002B82  0E0A               	movlw	10
  6407  002B84  0100               	movlb	0	; () banked
  6408  002B86  19FB               	xorwf	App_HTAD_MenuAjusteErro@CursorColuna& (0+255),w,b
  6409  002B88  B4D8               	btfsc	status,2,c
  6410  002B8A  EFC9  F015         	goto	u13891
  6411  002B8E  EFCB  F015         	goto	u13890
  6412  002B92                     u13891:
  6413  002B92  EFD4  F015         	goto	l13518
  6414  002B96                     u13890:
  6415  002B96                     
  6416                           ; BSR set to: 0
  6417  002B96  0E0B               	movlw	11
  6418  002B98  19FB               	xorwf	App_HTAD_MenuAjusteErro@CursorColuna& (0+255),w,b
  6419  002B9A  A4D8               	btfss	status,2,c
  6420  002B9C  EFD2  F015         	goto	u13901
  6421  002BA0  EFD4  F015         	goto	u13900
  6422  002BA4                     u13901:
  6423  002BA4  EFE2  F015         	goto	l13520
  6424  002BA8                     u13900:
  6425  002BA8                     l13518:
  6426                           
  6427                           ; BSR set to: 0
  6428                           ;App_HTAD.c: 276:                      incrementDigit(&objetoHTAD->erroSensorS3.positivo
      +                          ,CursorLinha,CursorColuna);
  6429  002BA8  0E17               	movlw	23
  6430  002BAA  25F5               	addwf	App_HTAD_MenuAjusteErro@objetoHTAD& (0+255),w,b
  6431  002BAC  6E18               	movwf	incrementDigit@valorSensor^0,c
  6432  002BAE  0E00               	movlw	0
  6433  002BB0  21F6               	addwfc	(App_HTAD_MenuAjusteErro@objetoHTAD+1)& (0+255),w,b
  6434  002BB2  6E19               	movwf	(incrementDigit@valorSensor+1)^0,c
  6435  002BB4  C0FC  F01A         	movff	App_HTAD_MenuAjusteErro@CursorLinha,incrementDigit@CursorLinha
  6436  002BB8  C0FB  F01B         	movff	App_HTAD_MenuAjusteErro@CursorColuna,incrementDigit@CursorColuna
  6437  002BBC  ECA3  F029         	call	_incrementDigit	;wreg free
  6438                           
  6439                           ;App_HTAD.c: 277:                 }
  6440  002BC0  EF30  F017         	goto	l1039
  6441  002BC4                     l13520:
  6442                           
  6443                           ; BSR set to: 0
  6444  002BC4  0E12               	movlw	18
  6445  002BC6  19FB               	xorwf	App_HTAD_MenuAjusteErro@CursorColuna& (0+255),w,b
  6446  002BC8  B4D8               	btfsc	status,2,c
  6447  002BCA  EFE9  F015         	goto	u13911
  6448  002BCE  EFEB  F015         	goto	u13910
  6449  002BD2                     u13911:
  6450  002BD2  EFF4  F015         	goto	l13524
  6451  002BD6                     u13910:
  6452  002BD6                     
  6453                           ; BSR set to: 0
  6454  002BD6  0E13               	movlw	19
  6455  002BD8  19FB               	xorwf	App_HTAD_MenuAjusteErro@CursorColuna& (0+255),w,b
  6456  002BDA  A4D8               	btfss	status,2,c
  6457  002BDC  EFF2  F015         	goto	u13921
  6458  002BE0  EFF4  F015         	goto	u13920
  6459  002BE4                     u13921:
  6460  002BE4  EF1D  F016         	goto	l992
  6461  002BE8                     u13920:
  6462  002BE8                     l13524:
  6463                           
  6464                           ; BSR set to: 0
  6465                           ;App_HTAD.c: 279:                     incrementDigit(&objetoHTAD->erroSensorS3.negativo,
      +                          CursorLinha,CursorColuna);
  6466  002BE8  0E16               	movlw	22
  6467  002BEA  25F5               	addwf	App_HTAD_MenuAjusteErro@objetoHTAD& (0+255),w,b
  6468  002BEC  6E18               	movwf	incrementDigit@valorSensor^0,c
  6469  002BEE  0E00               	movlw	0
  6470  002BF0  21F6               	addwfc	(App_HTAD_MenuAjusteErro@objetoHTAD+1)& (0+255),w,b
  6471  002BF2  6E19               	movwf	(incrementDigit@valorSensor+1)^0,c
  6472  002BF4  C0FC  F01A         	movff	App_HTAD_MenuAjusteErro@CursorLinha,incrementDigit@CursorLinha
  6473  002BF8  C0FB  F01B         	movff	App_HTAD_MenuAjusteErro@CursorColuna,incrementDigit@CursorColuna
  6474  002BFC  ECA3  F029         	call	_incrementDigit	;wreg free
  6475  002C00  EF30  F017         	goto	l1039
  6476  002C04                     l13528:
  6477                           
  6478                           ; BSR set to: 1
  6479  002C04  0100               	movlb	0	; () banked
  6480  002C06  51FC               	movf	App_HTAD_MenuAjusteErro@CursorLinha& (0+255),w,b
  6481  002C08  0101               	movlb	1	; () banked
  6482  002C0A  6FDD               	movwf	??_App_HTAD_MenuAjusteErro& (0+255),b
  6483  002C0C  6BDE               	clrf	(??_App_HTAD_MenuAjusteErro+1)& (0+255),b
  6484                           
  6485                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6486                           ; Switch size 1, requested type "simple"
  6487                           ; Number of cases is 1, Range of values is 0 to 0
  6488                           ; switch strategies available:
  6489                           ; Name         Instructions Cycles
  6490                           ; simple_byte            4     3 (average)
  6491                           ;	Chosen strategy is simple_byte
  6492  002C0E  51DE               	movf	(??_App_HTAD_MenuAjusteErro+1)& (0+255),w,b
  6493  002C10  0A00               	xorlw	0	; case 0
  6494  002C12  B4D8               	btfsc	status,2,c
  6495  002C14  EF0E  F016         	goto	l14110
  6496  002C18  EF30  F017         	goto	l1039
  6497  002C1C                     l14110:
  6498                           
  6499                           ; BSR set to: 1
  6500                           ; Switch size 1, requested type "simple"
  6501                           ; Number of cases is 3, Range of values is 1 to 3
  6502                           ; switch strategies available:
  6503                           ; Name         Instructions Cycles
  6504                           ; simple_byte           10     6 (average)
  6505                           ;	Chosen strategy is simple_byte
  6506  002C1C  51DD               	movf	??_App_HTAD_MenuAjusteErro& (0+255),w,b
  6507  002C1E  0A01               	xorlw	1	; case 1
  6508  002C20  B4D8               	btfsc	status,2,c
  6509  002C22  EF3F  F015         	goto	l13490
  6510  002C26  0A03               	xorlw	3	; case 2
  6511  002C28  B4D8               	btfsc	status,2,c
  6512  002C2A  EF80  F015         	goto	l13502
  6513  002C2E  0A01               	xorlw	1	; case 3
  6514  002C30  B4D8               	btfsc	status,2,c
  6515  002C32  EFC1  F015         	goto	l13514
  6516  002C36  EF30  F017         	goto	l1039
  6517  002C3A                     l992:
  6518                           
  6519                           ; BSR set to: 0
  6520                           ;App_HTAD.c: 283:             break;
  6521  002C3A  EF30  F017         	goto	l1039
  6522  002C3E                     l13530:
  6523                           
  6524                           ; BSR set to: 1
  6525                           ;App_HTAD.c: 288:                 if (CursorColuna == 10 || CursorColuna == 11) {
  6526  002C3E  0E0A               	movlw	10
  6527  002C40  0100               	movlb	0	; () banked
  6528  002C42  19FB               	xorwf	App_HTAD_MenuAjusteErro@CursorColuna& (0+255),w,b
  6529  002C44  B4D8               	btfsc	status,2,c
  6530  002C46  EF27  F016         	goto	u13931
  6531  002C4A  EF29  F016         	goto	u13930
  6532  002C4E                     u13931:
  6533  002C4E  EF32  F016         	goto	l13534
  6534  002C52                     u13930:
  6535  002C52                     
  6536                           ; BSR set to: 0
  6537  002C52  0E0B               	movlw	11
  6538  002C54  19FB               	xorwf	App_HTAD_MenuAjusteErro@CursorColuna& (0+255),w,b
  6539  002C56  A4D8               	btfss	status,2,c
  6540  002C58  EF30  F016         	goto	u13941
  6541  002C5C  EF32  F016         	goto	u13940
  6542  002C60                     u13941:
  6543  002C60  EF40  F016         	goto	l13536
  6544  002C64                     u13940:
  6545  002C64                     l13534:
  6546                           
  6547                           ; BSR set to: 0
  6548                           ;App_HTAD.c: 289:                      decrementDigit(&objetoHTAD->erroSensorS1.positivo
      +                          ,CursorLinha,CursorColuna);
  6549  002C64  0E13               	movlw	19
  6550  002C66  25F5               	addwf	App_HTAD_MenuAjusteErro@objetoHTAD& (0+255),w,b
  6551  002C68  6E18               	movwf	decrementDigit@valorSensor^0,c
  6552  002C6A  0E00               	movlw	0
  6553  002C6C  21F6               	addwfc	(App_HTAD_MenuAjusteErro@objetoHTAD+1)& (0+255),w,b
  6554  002C6E  6E19               	movwf	(decrementDigit@valorSensor+1)^0,c
  6555  002C70  C0FC  F01A         	movff	App_HTAD_MenuAjusteErro@CursorLinha,decrementDigit@CursorLinha
  6556  002C74  C0FB  F01B         	movff	App_HTAD_MenuAjusteErro@CursorColuna,decrementDigit@CursorColuna
  6557  002C78  EC23  F02A         	call	_decrementDigit	;wreg free
  6558                           
  6559                           ;App_HTAD.c: 290:                 }
  6560  002C7C  EF30  F017         	goto	l1039
  6561  002C80                     l13536:
  6562                           
  6563                           ; BSR set to: 0
  6564  002C80  0E12               	movlw	18
  6565  002C82  19FB               	xorwf	App_HTAD_MenuAjusteErro@CursorColuna& (0+255),w,b
  6566  002C84  B4D8               	btfsc	status,2,c
  6567  002C86  EF47  F016         	goto	u13951
  6568  002C8A  EF49  F016         	goto	u13950
  6569  002C8E                     u13951:
  6570  002C8E  EF52  F016         	goto	l13540
  6571  002C92                     u13950:
  6572  002C92                     
  6573                           ; BSR set to: 0
  6574  002C92  0E13               	movlw	19
  6575  002C94  19FB               	xorwf	App_HTAD_MenuAjusteErro@CursorColuna& (0+255),w,b
  6576  002C96  A4D8               	btfss	status,2,c
  6577  002C98  EF50  F016         	goto	u13961
  6578  002C9C  EF52  F016         	goto	u13960
  6579  002CA0                     u13961:
  6580  002CA0  EF30  F017         	goto	l1039
  6581  002CA4                     u13960:
  6582  002CA4                     l13540:
  6583                           
  6584                           ; BSR set to: 0
  6585                           ;App_HTAD.c: 292:                     decrementDigit(&objetoHTAD->erroSensorS1.negativo,
      +                          CursorLinha,CursorColuna);
  6586  002CA4  0E12               	movlw	18
  6587  002CA6  25F5               	addwf	App_HTAD_MenuAjusteErro@objetoHTAD& (0+255),w,b
  6588  002CA8  6E18               	movwf	decrementDigit@valorSensor^0,c
  6589  002CAA  0E00               	movlw	0
  6590  002CAC  21F6               	addwfc	(App_HTAD_MenuAjusteErro@objetoHTAD+1)& (0+255),w,b
  6591  002CAE  6E19               	movwf	(decrementDigit@valorSensor+1)^0,c
  6592  002CB0  C0FC  F01A         	movff	App_HTAD_MenuAjusteErro@CursorLinha,decrementDigit@CursorLinha
  6593  002CB4  C0FB  F01B         	movff	App_HTAD_MenuAjusteErro@CursorColuna,decrementDigit@CursorColuna
  6594  002CB8  EC23  F02A         	call	_decrementDigit	;wreg free
  6595  002CBC  EF30  F017         	goto	l1039
  6596  002CC0                     l13542:
  6597                           
  6598                           ; BSR set to: 1
  6599                           ;App_HTAD.c: 296:                 if (CursorColuna == 10 || CursorColuna == 11) {
  6600  002CC0  0E0A               	movlw	10
  6601  002CC2  0100               	movlb	0	; () banked
  6602  002CC4  19FB               	xorwf	App_HTAD_MenuAjusteErro@CursorColuna& (0+255),w,b
  6603  002CC6  B4D8               	btfsc	status,2,c
  6604  002CC8  EF68  F016         	goto	u13971
  6605  002CCC  EF6A  F016         	goto	u13970
  6606  002CD0                     u13971:
  6607  002CD0  EF73  F016         	goto	l13546
  6608  002CD4                     u13970:
  6609  002CD4                     
  6610                           ; BSR set to: 0
  6611  002CD4  0E0B               	movlw	11
  6612  002CD6  19FB               	xorwf	App_HTAD_MenuAjusteErro@CursorColuna& (0+255),w,b
  6613  002CD8  A4D8               	btfss	status,2,c
  6614  002CDA  EF71  F016         	goto	u13981
  6615  002CDE  EF73  F016         	goto	u13980
  6616  002CE2                     u13981:
  6617  002CE2  EF81  F016         	goto	l13548
  6618  002CE6                     u13980:
  6619  002CE6                     l13546:
  6620                           
  6621                           ; BSR set to: 0
  6622                           ;App_HTAD.c: 297:                      decrementDigit(&objetoHTAD->erroSensorS2.positivo
      +                          ,CursorLinha,CursorColuna);
  6623  002CE6  0E15               	movlw	21
  6624  002CE8  25F5               	addwf	App_HTAD_MenuAjusteErro@objetoHTAD& (0+255),w,b
  6625  002CEA  6E18               	movwf	decrementDigit@valorSensor^0,c
  6626  002CEC  0E00               	movlw	0
  6627  002CEE  21F6               	addwfc	(App_HTAD_MenuAjusteErro@objetoHTAD+1)& (0+255),w,b
  6628  002CF0  6E19               	movwf	(decrementDigit@valorSensor+1)^0,c
  6629  002CF2  C0FC  F01A         	movff	App_HTAD_MenuAjusteErro@CursorLinha,decrementDigit@CursorLinha
  6630  002CF6  C0FB  F01B         	movff	App_HTAD_MenuAjusteErro@CursorColuna,decrementDigit@CursorColuna
  6631  002CFA  EC23  F02A         	call	_decrementDigit	;wreg free
  6632                           
  6633                           ;App_HTAD.c: 298:                 }
  6634  002CFE  EF30  F017         	goto	l1039
  6635  002D02                     l13548:
  6636                           
  6637                           ; BSR set to: 0
  6638  002D02  0E12               	movlw	18
  6639  002D04  19FB               	xorwf	App_HTAD_MenuAjusteErro@CursorColuna& (0+255),w,b
  6640  002D06  B4D8               	btfsc	status,2,c
  6641  002D08  EF88  F016         	goto	u13991
  6642  002D0C  EF8A  F016         	goto	u13990
  6643  002D10                     u13991:
  6644  002D10  EF93  F016         	goto	l13552
  6645  002D14                     u13990:
  6646  002D14                     
  6647                           ; BSR set to: 0
  6648  002D14  0E13               	movlw	19
  6649  002D16  19FB               	xorwf	App_HTAD_MenuAjusteErro@CursorColuna& (0+255),w,b
  6650  002D18  A4D8               	btfss	status,2,c
  6651  002D1A  EF91  F016         	goto	u14001
  6652  002D1E  EF93  F016         	goto	u14000
  6653  002D22                     u14001:
  6654  002D22  EF30  F017         	goto	l1039
  6655  002D26                     u14000:
  6656  002D26                     l13552:
  6657                           
  6658                           ; BSR set to: 0
  6659                           ;App_HTAD.c: 300:                     decrementDigit(&objetoHTAD->erroSensorS2.negativo,
      +                          CursorLinha,CursorColuna);
  6660  002D26  0E14               	movlw	20
  6661  002D28  25F5               	addwf	App_HTAD_MenuAjusteErro@objetoHTAD& (0+255),w,b
  6662  002D2A  6E18               	movwf	decrementDigit@valorSensor^0,c
  6663  002D2C  0E00               	movlw	0
  6664  002D2E  21F6               	addwfc	(App_HTAD_MenuAjusteErro@objetoHTAD+1)& (0+255),w,b
  6665  002D30  6E19               	movwf	(decrementDigit@valorSensor+1)^0,c
  6666  002D32  C0FC  F01A         	movff	App_HTAD_MenuAjusteErro@CursorLinha,decrementDigit@CursorLinha
  6667  002D36  C0FB  F01B         	movff	App_HTAD_MenuAjusteErro@CursorColuna,decrementDigit@CursorColuna
  6668  002D3A  EC23  F02A         	call	_decrementDigit	;wreg free
  6669  002D3E  EF30  F017         	goto	l1039
  6670  002D42                     l13554:
  6671                           
  6672                           ; BSR set to: 1
  6673                           ;App_HTAD.c: 304:                if (CursorColuna == 10 || CursorColuna == 11) {
  6674  002D42  0E0A               	movlw	10
  6675  002D44  0100               	movlb	0	; () banked
  6676  002D46  19FB               	xorwf	App_HTAD_MenuAjusteErro@CursorColuna& (0+255),w,b
  6677  002D48  B4D8               	btfsc	status,2,c
  6678  002D4A  EFA9  F016         	goto	u14011
  6679  002D4E  EFAB  F016         	goto	u14010
  6680  002D52                     u14011:
  6681  002D52  EFB4  F016         	goto	l13558
  6682  002D56                     u14010:
  6683  002D56                     
  6684                           ; BSR set to: 0
  6685  002D56  0E0B               	movlw	11
  6686  002D58  19FB               	xorwf	App_HTAD_MenuAjusteErro@CursorColuna& (0+255),w,b
  6687  002D5A  A4D8               	btfss	status,2,c
  6688  002D5C  EFB2  F016         	goto	u14021
  6689  002D60  EFB4  F016         	goto	u14020
  6690  002D64                     u14021:
  6691  002D64  EFC2  F016         	goto	l13560
  6692  002D68                     u14020:
  6693  002D68                     l13558:
  6694                           
  6695                           ; BSR set to: 0
  6696                           ;App_HTAD.c: 305:                      decrementDigit(&objetoHTAD->erroSensorS3.positivo
      +                          ,CursorLinha,CursorColuna);
  6697  002D68  0E17               	movlw	23
  6698  002D6A  25F5               	addwf	App_HTAD_MenuAjusteErro@objetoHTAD& (0+255),w,b
  6699  002D6C  6E18               	movwf	decrementDigit@valorSensor^0,c
  6700  002D6E  0E00               	movlw	0
  6701  002D70  21F6               	addwfc	(App_HTAD_MenuAjusteErro@objetoHTAD+1)& (0+255),w,b
  6702  002D72  6E19               	movwf	(decrementDigit@valorSensor+1)^0,c
  6703  002D74  C0FC  F01A         	movff	App_HTAD_MenuAjusteErro@CursorLinha,decrementDigit@CursorLinha
  6704  002D78  C0FB  F01B         	movff	App_HTAD_MenuAjusteErro@CursorColuna,decrementDigit@CursorColuna
  6705  002D7C  EC23  F02A         	call	_decrementDigit	;wreg free
  6706                           
  6707                           ;App_HTAD.c: 306:                 }
  6708  002D80  EF30  F017         	goto	l1039
  6709  002D84                     l13560:
  6710                           
  6711                           ; BSR set to: 0
  6712  002D84  0E12               	movlw	18
  6713  002D86  19FB               	xorwf	App_HTAD_MenuAjusteErro@CursorColuna& (0+255),w,b
  6714  002D88  B4D8               	btfsc	status,2,c
  6715  002D8A  EFC9  F016         	goto	u14031
  6716  002D8E  EFCB  F016         	goto	u14030
  6717  002D92                     u14031:
  6718  002D92  EFD4  F016         	goto	l13564
  6719  002D96                     u14030:
  6720  002D96                     
  6721                           ; BSR set to: 0
  6722  002D96  0E13               	movlw	19
  6723  002D98  19FB               	xorwf	App_HTAD_MenuAjusteErro@CursorColuna& (0+255),w,b
  6724  002D9A  A4D8               	btfss	status,2,c
  6725  002D9C  EFD2  F016         	goto	u14041
  6726  002DA0  EFD4  F016         	goto	u14040
  6727  002DA4                     u14041:
  6728  002DA4  EF30  F017         	goto	l1039
  6729  002DA8                     u14040:
  6730  002DA8                     l13564:
  6731                           
  6732                           ; BSR set to: 0
  6733                           ;App_HTAD.c: 308:                     decrementDigit(&objetoHTAD->erroSensorS3.negativo,
      +                          CursorLinha,CursorColuna);
  6734  002DA8  0E16               	movlw	22
  6735  002DAA  25F5               	addwf	App_HTAD_MenuAjusteErro@objetoHTAD& (0+255),w,b
  6736  002DAC  6E18               	movwf	decrementDigit@valorSensor^0,c
  6737  002DAE  0E00               	movlw	0
  6738  002DB0  21F6               	addwfc	(App_HTAD_MenuAjusteErro@objetoHTAD+1)& (0+255),w,b
  6739  002DB2  6E19               	movwf	(decrementDigit@valorSensor+1)^0,c
  6740  002DB4  C0FC  F01A         	movff	App_HTAD_MenuAjusteErro@CursorLinha,decrementDigit@CursorLinha
  6741  002DB8  C0FB  F01B         	movff	App_HTAD_MenuAjusteErro@CursorColuna,decrementDigit@CursorColuna
  6742  002DBC  EC23  F02A         	call	_decrementDigit	;wreg free
  6743  002DC0  EF30  F017         	goto	l1039
  6744  002DC4                     l13568:
  6745                           
  6746                           ; BSR set to: 1
  6747  002DC4  0100               	movlb	0	; () banked
  6748  002DC6  51FC               	movf	App_HTAD_MenuAjusteErro@CursorLinha& (0+255),w,b
  6749  002DC8  0101               	movlb	1	; () banked
  6750  002DCA  6FDD               	movwf	??_App_HTAD_MenuAjusteErro& (0+255),b
  6751  002DCC  6BDE               	clrf	(??_App_HTAD_MenuAjusteErro+1)& (0+255),b
  6752                           
  6753                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6754                           ; Switch size 1, requested type "simple"
  6755                           ; Number of cases is 1, Range of values is 0 to 0
  6756                           ; switch strategies available:
  6757                           ; Name         Instructions Cycles
  6758                           ; simple_byte            4     3 (average)
  6759                           ;	Chosen strategy is simple_byte
  6760  002DCE  51DE               	movf	(??_App_HTAD_MenuAjusteErro+1)& (0+255),w,b
  6761  002DD0  0A00               	xorlw	0	; case 0
  6762  002DD2  B4D8               	btfsc	status,2,c
  6763  002DD4  EFEE  F016         	goto	l14112
  6764  002DD8  EF30  F017         	goto	l1039
  6765  002DDC                     l14112:
  6766                           
  6767                           ; BSR set to: 1
  6768                           ; Switch size 1, requested type "simple"
  6769                           ; Number of cases is 3, Range of values is 1 to 3
  6770                           ; switch strategies available:
  6771                           ; Name         Instructions Cycles
  6772                           ; simple_byte           10     6 (average)
  6773                           ;	Chosen strategy is simple_byte
  6774  002DDC  51DD               	movf	??_App_HTAD_MenuAjusteErro& (0+255),w,b
  6775  002DDE  0A01               	xorlw	1	; case 1
  6776  002DE0  B4D8               	btfsc	status,2,c
  6777  002DE2  EF1F  F016         	goto	l13530
  6778  002DE6  0A03               	xorlw	3	; case 2
  6779  002DE8  B4D8               	btfsc	status,2,c
  6780  002DEA  EF60  F016         	goto	l13542
  6781  002DEE  0A01               	xorlw	1	; case 3
  6782  002DF0  B4D8               	btfsc	status,2,c
  6783  002DF2  EFA1  F016         	goto	l13554
  6784  002DF6  EF30  F017         	goto	l1039
  6785  002DFA                     l13570:
  6786                           
  6787                           ; BSR set to: 1
  6788                           ;App_HTAD.c: 314:             moveCursor(&CursorLinha, &CursorColuna);
  6789  002DFA  0EFC               	movlw	low App_HTAD_MenuAjusteErro@CursorLinha
  6790  002DFC  6E18               	movwf	moveCursor@CursorLinha^0,c
  6791  002DFE  0E00               	movlw	high App_HTAD_MenuAjusteErro@CursorLinha
  6792  002E00  6E19               	movwf	(moveCursor@CursorLinha+1)^0,c
  6793  002E02  0EFB               	movlw	low App_HTAD_MenuAjusteErro@CursorColuna
  6794  002E04  6E1A               	movwf	moveCursor@CursorColuna^0,c
  6795  002E06  0E00               	movlw	high App_HTAD_MenuAjusteErro@CursorColuna
  6796  002E08  6E1B               	movwf	(moveCursor@CursorColuna+1)^0,c
  6797  002E0A  EC62  F02D         	call	_moveCursor	;wreg free
  6798                           
  6799                           ;App_HTAD.c: 315:             break;
  6800  002E0E  EF30  F017         	goto	l1039
  6801  002E12                     l13572:
  6802                           
  6803                           ; BSR set to: 1
  6804                           ;App_HTAD.c: 319:                  gravarDadosNaEEPROM();
  6805  002E12  EC1C  F037         	call	_gravarDadosNaEEPROM	;wreg free
  6806                           
  6807                           ;App_HTAD.c: 321:                  lerDadosDaEEPROM();
  6808  002E16  ECC5  F032         	call	_lerDadosDaEEPROM	;wreg free
  6809                           
  6810                           ;App_HTAD.c: 323:             break;
  6811  002E1A  EF30  F017         	goto	l1039
  6812  002E1E                     l13576:
  6813                           
  6814                           ; BSR set to: 1
  6815  002E1E  51F5               	movf	App_HTAD_MenuAjusteErro@key& (0+255),w,b
  6816  002E20  6FDD               	movwf	??_App_HTAD_MenuAjusteErro& (0+255),b
  6817  002E22  6BDE               	clrf	(??_App_HTAD_MenuAjusteErro+1)& (0+255),b
  6818                           
  6819                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6820                           ; Switch size 1, requested type "simple"
  6821                           ; Number of cases is 1, Range of values is 0 to 0
  6822                           ; switch strategies available:
  6823                           ; Name         Instructions Cycles
  6824                           ; simple_byte            4     3 (average)
  6825                           ;	Chosen strategy is simple_byte
  6826  002E24  51DE               	movf	(??_App_HTAD_MenuAjusteErro+1)& (0+255),w,b
  6827  002E26  0A00               	xorlw	0	; case 0
  6828  002E28  B4D8               	btfsc	status,2,c
  6829  002E2A  EF19  F017         	goto	l14114
  6830  002E2E  EF30  F017         	goto	l1039
  6831  002E32                     l14114:
  6832                           
  6833                           ; BSR set to: 1
  6834                           ; Switch size 1, requested type "simple"
  6835                           ; Number of cases is 5, Range of values is 0 to 4
  6836                           ; switch strategies available:
  6837                           ; Name         Instructions Cycles
  6838                           ; simple_byte           16     9 (average)
  6839                           ;	Chosen strategy is simple_byte
  6840  002E32  51DD               	movf	??_App_HTAD_MenuAjusteErro& (0+255),w,b
  6841  002E34  0A00               	xorlw	0	; case 0
  6842  002E36  B4D8               	btfsc	status,2,c
  6843  002E38  EF38  F015         	goto	l13486
  6844  002E3C  0A01               	xorlw	1	; case 1
  6845  002E3E  B4D8               	btfsc	status,2,c
  6846  002E40  EF02  F016         	goto	l13528
  6847  002E44  0A03               	xorlw	3	; case 2
  6848  002E46  B4D8               	btfsc	status,2,c
  6849  002E48  EFE2  F016         	goto	l13568
  6850  002E4C  0A01               	xorlw	1	; case 3
  6851  002E4E  B4D8               	btfsc	status,2,c
  6852  002E50  EFFD  F016         	goto	l13570
  6853  002E54  0A07               	xorlw	7	; case 4
  6854  002E56  B4D8               	btfsc	status,2,c
  6855  002E58  EF09  F017         	goto	l13572
  6856  002E5C  EF30  F017         	goto	l1039
  6857  002E60                     l1039:
  6858  002E60  0012               	return		;funcret
  6859  002E62                     __end_of_App_HTAD_MenuAjusteErro:
  6860                           	callstack 0
  6861                           
  6862 ;; *************** function _moveCursor *****************
  6863 ;; Defined at:
  6864 ;;		line 210 in file "App_HTAD.c"
  6865 ;; Parameters:    Size  Location     Type
  6866 ;;  CursorLinha     2   23[COMRAM] PTR unsigned char 
  6867 ;;		 -> App_HTAD_MenuAjusteErro@CursorLinha(1), 
  6868 ;;  CursorColuna    2   25[COMRAM] PTR unsigned char 
  6869 ;;		 -> App_HTAD_MenuAjusteErro@CursorColuna(1), 
  6870 ;; Auto vars:     Size  Location     Type
  6871 ;;		None
  6872 ;; Return value:  Size  Location     Type
  6873 ;;                  1    wreg      void 
  6874 ;; Registers used:
  6875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6876 ;; Tracked objects:
  6877 ;;		On entry : 0/0
  6878 ;;		On exit  : 0/0
  6879 ;;		Unchanged: 0/0
  6880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6881 ;;      Params:         4       0       0       0       0       0       0
  6882 ;;      Locals:         0       0       0       0       0       0       0
  6883 ;;      Temps:          1       0       0       0       0       0       0
  6884 ;;      Totals:         5       0       0       0       0       0       0
  6885 ;;Total ram usage:        5 bytes
  6886 ;; Hardware stack levels used: 1
  6887 ;; Hardware stack levels required when called: 5
  6888 ;; This function calls:
  6889 ;;		___awmod
  6890 ;; This function is called by:
  6891 ;;		_App_HTAD_MenuAjusteErro
  6892 ;; This function uses a non-reentrant model
  6893 ;;
  6894                           
  6895                           	psect	text26
  6896  005AC4                     __ptext26:
  6897                           	callstack 0
  6898  005AC4                     _moveCursor:
  6899                           	callstack 23
  6900  005AC4                     
  6901                           ;App_HTAD.c: 211:     if (*CursorColuna == 10) {
  6902  005AC4  C01A  FFD9         	movff	moveCursor@CursorColuna,fsr2l
  6903  005AC8  C01B  FFDA         	movff	moveCursor@CursorColuna+1,fsr2h
  6904  005ACC  0E0A               	movlw	10
  6905  005ACE  18DE               	xorwf	postinc2,w,c
  6906  005AD0  A4D8               	btfss	status,2,c
  6907  005AD2  EF6D  F02D         	goto	u13201
  6908  005AD6  EF6F  F02D         	goto	u13200
  6909  005ADA                     u13201:
  6910  005ADA  EF77  F02D         	goto	l12990
  6911  005ADE                     u13200:
  6912  005ADE                     
  6913                           ;App_HTAD.c: 212:         *CursorColuna = 11;
  6914  005ADE  C01A  FFD9         	movff	moveCursor@CursorColuna,fsr2l
  6915  005AE2  C01B  FFDA         	movff	moveCursor@CursorColuna+1,fsr2h
  6916  005AE6  0E0B               	movlw	11
  6917  005AE8  6EDF               	movwf	indf2,c
  6918                           
  6919                           ;App_HTAD.c: 213:     } else if (*CursorColuna == 11) {
  6920  005AEA  EFCB  F02D         	goto	l965
  6921  005AEE                     l12990:
  6922  005AEE  C01A  FFD9         	movff	moveCursor@CursorColuna,fsr2l
  6923  005AF2  C01B  FFDA         	movff	moveCursor@CursorColuna+1,fsr2h
  6924  005AF6  0E0B               	movlw	11
  6925  005AF8  18DE               	xorwf	postinc2,w,c
  6926  005AFA  A4D8               	btfss	status,2,c
  6927  005AFC  EF82  F02D         	goto	u13211
  6928  005B00  EF84  F02D         	goto	u13210
  6929  005B04                     u13211:
  6930  005B04  EF8C  F02D         	goto	l12994
  6931  005B08                     u13210:
  6932  005B08                     
  6933                           ;App_HTAD.c: 214:         *CursorColuna = 18;
  6934  005B08  C01A  FFD9         	movff	moveCursor@CursorColuna,fsr2l
  6935  005B0C  C01B  FFDA         	movff	moveCursor@CursorColuna+1,fsr2h
  6936  005B10  0E12               	movlw	18
  6937  005B12  6EDF               	movwf	indf2,c
  6938                           
  6939                           ;App_HTAD.c: 215:     } else if (*CursorColuna == 18) {
  6940  005B14  EFCB  F02D         	goto	l965
  6941  005B18                     l12994:
  6942  005B18  C01A  FFD9         	movff	moveCursor@CursorColuna,fsr2l
  6943  005B1C  C01B  FFDA         	movff	moveCursor@CursorColuna+1,fsr2h
  6944  005B20  0E12               	movlw	18
  6945  005B22  18DE               	xorwf	postinc2,w,c
  6946  005B24  A4D8               	btfss	status,2,c
  6947  005B26  EF97  F02D         	goto	u13221
  6948  005B2A  EF99  F02D         	goto	u13220
  6949  005B2E                     u13221:
  6950  005B2E  EFA1  F02D         	goto	l12998
  6951  005B32                     u13220:
  6952  005B32                     
  6953                           ;App_HTAD.c: 216:         *CursorColuna = 19;
  6954  005B32  C01A  FFD9         	movff	moveCursor@CursorColuna,fsr2l
  6955  005B36  C01B  FFDA         	movff	moveCursor@CursorColuna+1,fsr2h
  6956  005B3A  0E13               	movlw	19
  6957  005B3C  6EDF               	movwf	indf2,c
  6958                           
  6959                           ;App_HTAD.c: 217:     } else if (*CursorColuna == 19) {
  6960  005B3E  EFCB  F02D         	goto	l965
  6961  005B42                     l12998:
  6962  005B42  C01A  FFD9         	movff	moveCursor@CursorColuna,fsr2l
  6963  005B46  C01B  FFDA         	movff	moveCursor@CursorColuna+1,fsr2h
  6964  005B4A  0E13               	movlw	19
  6965  005B4C  18DE               	xorwf	postinc2,w,c
  6966  005B4E  A4D8               	btfss	status,2,c
  6967  005B50  EFAC  F02D         	goto	u13231
  6968  005B54  EFAE  F02D         	goto	u13230
  6969  005B58                     u13231:
  6970  005B58  EFCB  F02D         	goto	l961
  6971  005B5C                     u13230:
  6972  005B5C                     
  6973                           ;App_HTAD.c: 219:         *CursorLinha = (*CursorLinha % 3) + 1;
  6974  005B5C  C018  FFD9         	movff	moveCursor@CursorLinha,fsr2l
  6975  005B60  C019  FFDA         	movff	moveCursor@CursorLinha+1,fsr2h
  6976  005B64  50DF               	movf	indf2,w,c
  6977  005B66  6E1C               	movwf	??_moveCursor^0,c
  6978  005B68  501C               	movf	??_moveCursor^0,w,c
  6979  005B6A  6E12               	movwf	___awmod@dividend^0,c
  6980  005B6C  6A13               	clrf	(___awmod@dividend+1)^0,c
  6981  005B6E  0E00               	movlw	0
  6982  005B70  6E15               	movwf	(___awmod@divisor+1)^0,c
  6983  005B72  0E03               	movlw	3
  6984  005B74  6E14               	movwf	___awmod@divisor^0,c
  6985  005B76  EC19  F030         	call	___awmod	;wreg free
  6986  005B7A  2812               	incf	?___awmod^0,w,c
  6987  005B7C  C018  FFD9         	movff	moveCursor@CursorLinha,fsr2l
  6988  005B80  C019  FFDA         	movff	moveCursor@CursorLinha+1,fsr2h
  6989  005B84  6EDF               	movwf	indf2,c
  6990  005B86                     
  6991                           ;App_HTAD.c: 220:         *CursorColuna = 10;
  6992  005B86  C01A  FFD9         	movff	moveCursor@CursorColuna,fsr2l
  6993  005B8A  C01B  FFDA         	movff	moveCursor@CursorColuna+1,fsr2h
  6994  005B8E  0E0A               	movlw	10
  6995  005B90  6EDF               	movwf	indf2,c
  6996  005B92  EFCB  F02D         	goto	l965
  6997  005B96                     l961:
  6998  005B96                     l965:
  6999  005B96  0012               	return		;funcret
  7000  005B98                     __end_of_moveCursor:
  7001                           	callstack 0
  7002                           
  7003 ;; *************** function _incrementDigit *****************
  7004 ;; Defined at:
  7005 ;;		line 179 in file "App_HTAD.c"
  7006 ;; Parameters:    Size  Location     Type
  7007 ;;  valorSensor     2   23[COMRAM] PTR unsigned char 
  7008 ;;		 -> ObjetoHTAD.erroSensorS3(2), ObjetoHTAD.erroSensorS2(2), ObjetoHTAD.erroSensorS1(2), ObjetoHTAD(35), 
  7009 ;;  CursorLinha     1   25[COMRAM] unsigned char 
  7010 ;;  CursorColuna    1   26[COMRAM] unsigned char 
  7011 ;; Auto vars:     Size  Location     Type
  7012 ;;  digito2         2   30[COMRAM] int 
  7013 ;;  digito1         2   28[COMRAM] int 
  7014 ;; Return value:  Size  Location     Type
  7015 ;;                  1    wreg      void 
  7016 ;; Registers used:
  7017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7018 ;; Tracked objects:
  7019 ;;		On entry : 0/0
  7020 ;;		On exit  : 0/0
  7021 ;;		Unchanged: 0/0
  7022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7023 ;;      Params:         4       0       0       0       0       0       0
  7024 ;;      Locals:         4       0       0       0       0       0       0
  7025 ;;      Temps:          1       0       0       0       0       0       0
  7026 ;;      Totals:         9       0       0       0       0       0       0
  7027 ;;Total ram usage:        9 bytes
  7028 ;; Hardware stack levels used: 1
  7029 ;; Hardware stack levels required when called: 5
  7030 ;; This function calls:
  7031 ;;		___awdiv
  7032 ;;		___awmod
  7033 ;; This function is called by:
  7034 ;;		_App_HTAD_MenuAjusteErro
  7035 ;; This function uses a non-reentrant model
  7036 ;;
  7037                           
  7038                           	psect	text27
  7039  005346                     __ptext27:
  7040                           	callstack 0
  7041  005346                     _incrementDigit:
  7042                           	callstack 23
  7043  005346                     
  7044                           ;App_HTAD.c: 180:     int digito1, digito2;;App_HTAD.c: 182:     digito1 = (*valorSensor
      +                           / 10) % 10;
  7045  005346  0E00               	movlw	0
  7046  005348  6E0D               	movwf	(___awdiv@divisor+1)^0,c
  7047  00534A  0E0A               	movlw	10
  7048  00534C  6E0C               	movwf	___awdiv@divisor^0,c
  7049  00534E  C018  FFD9         	movff	incrementDigit@valorSensor,fsr2l
  7050  005352  C019  FFDA         	movff	incrementDigit@valorSensor+1,fsr2h
  7051  005356  50DF               	movf	indf2,w,c
  7052  005358  6E1C               	movwf	??_incrementDigit^0,c
  7053  00535A  501C               	movf	??_incrementDigit^0,w,c
  7054  00535C  6E0A               	movwf	___awdiv@dividend^0,c
  7055  00535E  6A0B               	clrf	(___awdiv@dividend+1)^0,c
  7056  005360  ECF8  F02E         	call	___awdiv	;wreg free
  7057  005364  C00A  F012         	movff	?___awdiv,___awmod@dividend
  7058  005368  C00B  F013         	movff	?___awdiv+1,___awmod@dividend+1
  7059  00536C  0E00               	movlw	0
  7060  00536E  6E15               	movwf	(___awmod@divisor+1)^0,c
  7061  005370  0E0A               	movlw	10
  7062  005372  6E14               	movwf	___awmod@divisor^0,c
  7063  005374  EC19  F030         	call	___awmod	;wreg free
  7064  005378  C012  F01D         	movff	?___awmod,incrementDigit@digito1
  7065  00537C  C013  F01E         	movff	?___awmod+1,incrementDigit@digito1+1
  7066                           
  7067                           ;App_HTAD.c: 183:     digito2 = *valorSensor % 10;
  7068  005380  C018  FFD9         	movff	incrementDigit@valorSensor,fsr2l
  7069  005384  C019  FFDA         	movff	incrementDigit@valorSensor+1,fsr2h
  7070  005388  50DF               	movf	indf2,w,c
  7071  00538A  6E1C               	movwf	??_incrementDigit^0,c
  7072  00538C  501C               	movf	??_incrementDigit^0,w,c
  7073  00538E  6E12               	movwf	___awmod@dividend^0,c
  7074  005390  6A13               	clrf	(___awmod@dividend+1)^0,c
  7075  005392  0E00               	movlw	0
  7076  005394  6E15               	movwf	(___awmod@divisor+1)^0,c
  7077  005396  0E0A               	movlw	10
  7078  005398  6E14               	movwf	___awmod@divisor^0,c
  7079  00539A  EC19  F030         	call	___awmod	;wreg free
  7080  00539E  C012  F01F         	movff	?___awmod,incrementDigit@digito2
  7081  0053A2  C013  F020         	movff	?___awmod+1,incrementDigit@digito2+1
  7082  0053A6                     
  7083                           ;App_HTAD.c: 185:     if (CursorColuna == 10 || CursorColuna == 18) {
  7084  0053A6  0E0A               	movlw	10
  7085  0053A8  181B               	xorwf	incrementDigit@CursorColuna^0,w,c
  7086  0053AA  B4D8               	btfsc	status,2,c
  7087  0053AC  EFDA  F029         	goto	u13121
  7088  0053B0  EFDC  F029         	goto	u13120
  7089  0053B4                     u13121:
  7090  0053B4  EFE5  F029         	goto	l12960
  7091  0053B8                     u13120:
  7092  0053B8  0E12               	movlw	18
  7093  0053BA  181B               	xorwf	incrementDigit@CursorColuna^0,w,c
  7094  0053BC  A4D8               	btfss	status,2,c
  7095  0053BE  EFE3  F029         	goto	u13131
  7096  0053C2  EFE5  F029         	goto	u13130
  7097  0053C6                     u13131:
  7098  0053C6  EFF7  F029         	goto	l12962
  7099  0053CA                     u13130:
  7100  0053CA                     l12960:
  7101                           
  7102                           ;App_HTAD.c: 186:         digito1 = (digito1 + 1) % 10;
  7103  0053CA  0E01               	movlw	1
  7104  0053CC  241D               	addwf	incrementDigit@digito1^0,w,c
  7105  0053CE  6E12               	movwf	___awmod@dividend^0,c
  7106  0053D0  0E00               	movlw	0
  7107  0053D2  201E               	addwfc	(incrementDigit@digito1+1)^0,w,c
  7108  0053D4  6E13               	movwf	(___awmod@dividend+1)^0,c
  7109  0053D6  0E00               	movlw	0
  7110  0053D8  6E15               	movwf	(___awmod@divisor+1)^0,c
  7111  0053DA  0E0A               	movlw	10
  7112  0053DC  6E14               	movwf	___awmod@divisor^0,c
  7113  0053DE  EC19  F030         	call	___awmod	;wreg free
  7114  0053E2  C012  F01D         	movff	?___awmod,incrementDigit@digito1
  7115  0053E6  C013  F01E         	movff	?___awmod+1,incrementDigit@digito1+1
  7116                           
  7117                           ;App_HTAD.c: 187:     } else if (CursorColuna == 11 || CursorColuna == 19) {
  7118  0053EA  EF19  F02A         	goto	l12968
  7119  0053EE                     l12962:
  7120  0053EE  0E0B               	movlw	11
  7121  0053F0  181B               	xorwf	incrementDigit@CursorColuna^0,w,c
  7122  0053F2  B4D8               	btfsc	status,2,c
  7123  0053F4  EFFE  F029         	goto	u13141
  7124  0053F8  EF00  F02A         	goto	u13140
  7125  0053FC                     u13141:
  7126  0053FC  EF09  F02A         	goto	l12966
  7127  005400                     u13140:
  7128  005400  0E13               	movlw	19
  7129  005402  181B               	xorwf	incrementDigit@CursorColuna^0,w,c
  7130  005404  A4D8               	btfss	status,2,c
  7131  005406  EF07  F02A         	goto	u13151
  7132  00540A  EF09  F02A         	goto	u13150
  7133  00540E                     u13151:
  7134  00540E  EF19  F02A         	goto	l12968
  7135  005412                     u13150:
  7136  005412                     l12966:
  7137                           
  7138                           ;App_HTAD.c: 188:         digito2 = (digito2 + 1) % 10;
  7139  005412  0E01               	movlw	1
  7140  005414  241F               	addwf	incrementDigit@digito2^0,w,c
  7141  005416  6E12               	movwf	___awmod@dividend^0,c
  7142  005418  0E00               	movlw	0
  7143  00541A  2020               	addwfc	(incrementDigit@digito2+1)^0,w,c
  7144  00541C  6E13               	movwf	(___awmod@dividend+1)^0,c
  7145  00541E  0E00               	movlw	0
  7146  005420  6E15               	movwf	(___awmod@divisor+1)^0,c
  7147  005422  0E0A               	movlw	10
  7148  005424  6E14               	movwf	___awmod@divisor^0,c
  7149  005426  EC19  F030         	call	___awmod	;wreg free
  7150  00542A  C012  F01F         	movff	?___awmod,incrementDigit@digito2
  7151  00542E  C013  F020         	movff	?___awmod+1,incrementDigit@digito2+1
  7152  005432                     l12968:
  7153                           
  7154                           ;App_HTAD.c: 191:     *valorSensor = digito1 * 10 + digito2;
  7155  005432  501D               	movf	incrementDigit@digito1^0,w,c
  7156  005434  0D0A               	mullw	10
  7157  005436  50F3               	movf	243,w,c
  7158  005438  241F               	addwf	incrementDigit@digito2^0,w,c
  7159  00543A  C018  FFD9         	movff	incrementDigit@valorSensor,fsr2l
  7160  00543E  C019  FFDA         	movff	incrementDigit@valorSensor+1,fsr2h
  7161  005442  6EDF               	movwf	indf2,c
  7162  005444  0012               	return		;funcret
  7163  005446                     __end_of_incrementDigit:
  7164                           	callstack 0
  7165                           
  7166 ;; *************** function _gravarDadosNaEEPROM *****************
  7167 ;; Defined at:
  7168 ;;		line 24 in file "App_HTAD.c"
  7169 ;; Parameters:    Size  Location     Type
  7170 ;;		None
  7171 ;; Auto vars:     Size  Location     Type
  7172 ;;  enderecoEEPR    1   12[COMRAM] unsigned char 
  7173 ;; Return value:  Size  Location     Type
  7174 ;;                  1    wreg      void 
  7175 ;; Registers used:
  7176 ;;		wreg, status,2, status,0, cstack
  7177 ;; Tracked objects:
  7178 ;;		On entry : 0/0
  7179 ;;		On exit  : 0/0
  7180 ;;		Unchanged: 0/0
  7181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7182 ;;      Params:         0       0       0       0       0       0       0
  7183 ;;      Locals:         1       0       0       0       0       0       0
  7184 ;;      Temps:          0       0       0       0       0       0       0
  7185 ;;      Totals:         1       0       0       0       0       0       0
  7186 ;;Total ram usage:        1 bytes
  7187 ;; Hardware stack levels used: 1
  7188 ;; Hardware stack levels required when called: 5
  7189 ;; This function calls:
  7190 ;;		_DATAEE_WriteByte
  7191 ;; This function is called by:
  7192 ;;		_App_HTAD_MenuAjusteErro
  7193 ;; This function uses a non-reentrant model
  7194 ;;
  7195                           
  7196                           	psect	text28
  7197  006E38                     __ptext28:
  7198                           	callstack 0
  7199  006E38                     _gravarDadosNaEEPROM:
  7200                           	callstack 23
  7201  006E38                     
  7202                           ;App_HTAD.c: 26:     uint8_t enderecoEEPROM = 0x01;
  7203  006E38  0E01               	movlw	1
  7204  006E3A  6E0D               	movwf	gravarDadosNaEEPROM@enderecoEEPROM^0,c
  7205  006E3C                     
  7206                           ;App_HTAD.c: 29:     DATAEE_WriteByte(enderecoEEPROM++, ObjetoHTAD.erroSensorS1.positivo
      +                           );
  7207  006E3C  C2B3  F00A         	movff	_ObjetoHTAD+19,DATAEE_WriteByte@bData
  7208  006E40  0E01               	movlw	1
  7209  006E42  EC34  F038         	call	_DATAEE_WriteByte
  7210  006E46  2A0D               	incf	gravarDadosNaEEPROM@enderecoEEPROM^0,f,c
  7211  006E48                     
  7212                           ;App_HTAD.c: 30:     DATAEE_WriteByte(enderecoEEPROM++, ObjetoHTAD.erroSensorS1.negativo
      +                          );
  7213  006E48  C2B2  F00A         	movff	_ObjetoHTAD+18,DATAEE_WriteByte@bData
  7214  006E4C  500D               	movf	gravarDadosNaEEPROM@enderecoEEPROM^0,w,c
  7215  006E4E  EC34  F038         	call	_DATAEE_WriteByte
  7216  006E52  2A0D               	incf	gravarDadosNaEEPROM@enderecoEEPROM^0,f,c
  7217  006E54                     
  7218                           ;App_HTAD.c: 31:     DATAEE_WriteByte(enderecoEEPROM++, ObjetoHTAD.erroSensorS2.positivo
      +                          );
  7219  006E54  C2B5  F00A         	movff	_ObjetoHTAD+21,DATAEE_WriteByte@bData
  7220  006E58  500D               	movf	gravarDadosNaEEPROM@enderecoEEPROM^0,w,c
  7221  006E5A  EC34  F038         	call	_DATAEE_WriteByte
  7222  006E5E  2A0D               	incf	gravarDadosNaEEPROM@enderecoEEPROM^0,f,c
  7223  006E60                     
  7224                           ;App_HTAD.c: 32:     DATAEE_WriteByte(enderecoEEPROM++, ObjetoHTAD.erroSensorS2.negativo
      +                          );
  7225  006E60  C2B4  F00A         	movff	_ObjetoHTAD+20,DATAEE_WriteByte@bData
  7226  006E64  500D               	movf	gravarDadosNaEEPROM@enderecoEEPROM^0,w,c
  7227  006E66  EC34  F038         	call	_DATAEE_WriteByte
  7228  006E6A  2A0D               	incf	gravarDadosNaEEPROM@enderecoEEPROM^0,f,c
  7229  006E6C                     
  7230                           ;App_HTAD.c: 33:     DATAEE_WriteByte(enderecoEEPROM++, ObjetoHTAD.erroSensorS3.positivo
      +                          );
  7231  006E6C  C2B7  F00A         	movff	_ObjetoHTAD+23,DATAEE_WriteByte@bData
  7232  006E70  500D               	movf	gravarDadosNaEEPROM@enderecoEEPROM^0,w,c
  7233  006E72  EC34  F038         	call	_DATAEE_WriteByte
  7234  006E76  2A0D               	incf	gravarDadosNaEEPROM@enderecoEEPROM^0,f,c
  7235  006E78                     
  7236                           ;App_HTAD.c: 34:     DATAEE_WriteByte(enderecoEEPROM++, ObjetoHTAD.erroSensorS3.negativo
      +                          );
  7237  006E78  C2B6  F00A         	movff	_ObjetoHTAD+22,DATAEE_WriteByte@bData
  7238  006E7C  500D               	movf	gravarDadosNaEEPROM@enderecoEEPROM^0,w,c
  7239  006E7E  EC34  F038         	call	_DATAEE_WriteByte
  7240  006E82  2A0D               	incf	gravarDadosNaEEPROM@enderecoEEPROM^0,f,c
  7241  006E84  0012               	return		;funcret
  7242  006E86                     __end_of_gravarDadosNaEEPROM:
  7243                           	callstack 0
  7244                           
  7245 ;; *************** function _decrementDigit *****************
  7246 ;; Defined at:
  7247 ;;		line 194 in file "App_HTAD.c"
  7248 ;; Parameters:    Size  Location     Type
  7249 ;;  valorSensor     2   23[COMRAM] PTR unsigned char 
  7250 ;;		 -> ObjetoHTAD.erroSensorS3(2), ObjetoHTAD.erroSensorS2(2), ObjetoHTAD.erroSensorS1(2), ObjetoHTAD(35), 
  7251 ;;  CursorLinha     1   25[COMRAM] unsigned char 
  7252 ;;  CursorColuna    1   26[COMRAM] unsigned char 
  7253 ;; Auto vars:     Size  Location     Type
  7254 ;;  digito2         2   30[COMRAM] int 
  7255 ;;  digito1         2   28[COMRAM] int 
  7256 ;; Return value:  Size  Location     Type
  7257 ;;                  1    wreg      void 
  7258 ;; Registers used:
  7259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7260 ;; Tracked objects:
  7261 ;;		On entry : 0/0
  7262 ;;		On exit  : 0/0
  7263 ;;		Unchanged: 0/0
  7264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7265 ;;      Params:         4       0       0       0       0       0       0
  7266 ;;      Locals:         4       0       0       0       0       0       0
  7267 ;;      Temps:          1       0       0       0       0       0       0
  7268 ;;      Totals:         9       0       0       0       0       0       0
  7269 ;;Total ram usage:        9 bytes
  7270 ;; Hardware stack levels used: 1
  7271 ;; Hardware stack levels required when called: 5
  7272 ;; This function calls:
  7273 ;;		___awdiv
  7274 ;;		___awmod
  7275 ;; This function is called by:
  7276 ;;		_App_HTAD_MenuAjusteErro
  7277 ;; This function uses a non-reentrant model
  7278 ;;
  7279                           
  7280                           	psect	text29
  7281  005446                     __ptext29:
  7282                           	callstack 0
  7283  005446                     _decrementDigit:
  7284                           	callstack 23
  7285  005446                     
  7286                           ;App_HTAD.c: 196:     int digito1, digito2;;App_HTAD.c: 198:     digito1 = (*valorSensor
      +                           / 10) % 10;
  7287  005446  0E00               	movlw	0
  7288  005448  6E0D               	movwf	(___awdiv@divisor+1)^0,c
  7289  00544A  0E0A               	movlw	10
  7290  00544C  6E0C               	movwf	___awdiv@divisor^0,c
  7291  00544E  C018  FFD9         	movff	decrementDigit@valorSensor,fsr2l
  7292  005452  C019  FFDA         	movff	decrementDigit@valorSensor+1,fsr2h
  7293  005456  50DF               	movf	indf2,w,c
  7294  005458  6E1C               	movwf	??_decrementDigit^0,c
  7295  00545A  501C               	movf	??_decrementDigit^0,w,c
  7296  00545C  6E0A               	movwf	___awdiv@dividend^0,c
  7297  00545E  6A0B               	clrf	(___awdiv@dividend+1)^0,c
  7298  005460  ECF8  F02E         	call	___awdiv	;wreg free
  7299  005464  C00A  F012         	movff	?___awdiv,___awmod@dividend
  7300  005468  C00B  F013         	movff	?___awdiv+1,___awmod@dividend+1
  7301  00546C  0E00               	movlw	0
  7302  00546E  6E15               	movwf	(___awmod@divisor+1)^0,c
  7303  005470  0E0A               	movlw	10
  7304  005472  6E14               	movwf	___awmod@divisor^0,c
  7305  005474  EC19  F030         	call	___awmod	;wreg free
  7306  005478  C012  F01D         	movff	?___awmod,decrementDigit@digito1
  7307  00547C  C013  F01E         	movff	?___awmod+1,decrementDigit@digito1+1
  7308                           
  7309                           ;App_HTAD.c: 199:     digito2 = *valorSensor % 10;
  7310  005480  C018  FFD9         	movff	decrementDigit@valorSensor,fsr2l
  7311  005484  C019  FFDA         	movff	decrementDigit@valorSensor+1,fsr2h
  7312  005488  50DF               	movf	indf2,w,c
  7313  00548A  6E1C               	movwf	??_decrementDigit^0,c
  7314  00548C  501C               	movf	??_decrementDigit^0,w,c
  7315  00548E  6E12               	movwf	___awmod@dividend^0,c
  7316  005490  6A13               	clrf	(___awmod@dividend+1)^0,c
  7317  005492  0E00               	movlw	0
  7318  005494  6E15               	movwf	(___awmod@divisor+1)^0,c
  7319  005496  0E0A               	movlw	10
  7320  005498  6E14               	movwf	___awmod@divisor^0,c
  7321  00549A  EC19  F030         	call	___awmod	;wreg free
  7322  00549E  C012  F01F         	movff	?___awmod,decrementDigit@digito2
  7323  0054A2  C013  F020         	movff	?___awmod+1,decrementDigit@digito2+1
  7324  0054A6                     
  7325                           ;App_HTAD.c: 201:     if (CursorColuna == 10 || CursorColuna == 18) {
  7326  0054A6  0E0A               	movlw	10
  7327  0054A8  181B               	xorwf	decrementDigit@CursorColuna^0,w,c
  7328  0054AA  B4D8               	btfsc	status,2,c
  7329  0054AC  EF5A  F02A         	goto	u13161
  7330  0054B0  EF5C  F02A         	goto	u13160
  7331  0054B4                     u13161:
  7332  0054B4  EF65  F02A         	goto	l12976
  7333  0054B8                     u13160:
  7334  0054B8  0E12               	movlw	18
  7335  0054BA  181B               	xorwf	decrementDigit@CursorColuna^0,w,c
  7336  0054BC  A4D8               	btfss	status,2,c
  7337  0054BE  EF63  F02A         	goto	u13171
  7338  0054C2  EF65  F02A         	goto	u13170
  7339  0054C6                     u13171:
  7340  0054C6  EF77  F02A         	goto	l12978
  7341  0054CA                     u13170:
  7342  0054CA                     l12976:
  7343                           
  7344                           ;App_HTAD.c: 202:         digito1 = (digito1 + 9) % 10;
  7345  0054CA  0E09               	movlw	9
  7346  0054CC  241D               	addwf	decrementDigit@digito1^0,w,c
  7347  0054CE  6E12               	movwf	___awmod@dividend^0,c
  7348  0054D0  0E00               	movlw	0
  7349  0054D2  201E               	addwfc	(decrementDigit@digito1+1)^0,w,c
  7350  0054D4  6E13               	movwf	(___awmod@dividend+1)^0,c
  7351  0054D6  0E00               	movlw	0
  7352  0054D8  6E15               	movwf	(___awmod@divisor+1)^0,c
  7353  0054DA  0E0A               	movlw	10
  7354  0054DC  6E14               	movwf	___awmod@divisor^0,c
  7355  0054DE  EC19  F030         	call	___awmod	;wreg free
  7356  0054E2  C012  F01D         	movff	?___awmod,decrementDigit@digito1
  7357  0054E6  C013  F01E         	movff	?___awmod+1,decrementDigit@digito1+1
  7358                           
  7359                           ;App_HTAD.c: 203:     } else if (CursorColuna == 11 || CursorColuna == 19) {
  7360  0054EA  EF99  F02A         	goto	l12984
  7361  0054EE                     l12978:
  7362  0054EE  0E0B               	movlw	11
  7363  0054F0  181B               	xorwf	decrementDigit@CursorColuna^0,w,c
  7364  0054F2  B4D8               	btfsc	status,2,c
  7365  0054F4  EF7E  F02A         	goto	u13181
  7366  0054F8  EF80  F02A         	goto	u13180
  7367  0054FC                     u13181:
  7368  0054FC  EF89  F02A         	goto	l12982
  7369  005500                     u13180:
  7370  005500  0E13               	movlw	19
  7371  005502  181B               	xorwf	decrementDigit@CursorColuna^0,w,c
  7372  005504  A4D8               	btfss	status,2,c
  7373  005506  EF87  F02A         	goto	u13191
  7374  00550A  EF89  F02A         	goto	u13190
  7375  00550E                     u13191:
  7376  00550E  EF99  F02A         	goto	l12984
  7377  005512                     u13190:
  7378  005512                     l12982:
  7379                           
  7380                           ;App_HTAD.c: 204:         digito2 = (digito2 + 9) % 10;
  7381  005512  0E09               	movlw	9
  7382  005514  241F               	addwf	decrementDigit@digito2^0,w,c
  7383  005516  6E12               	movwf	___awmod@dividend^0,c
  7384  005518  0E00               	movlw	0
  7385  00551A  2020               	addwfc	(decrementDigit@digito2+1)^0,w,c
  7386  00551C  6E13               	movwf	(___awmod@dividend+1)^0,c
  7387  00551E  0E00               	movlw	0
  7388  005520  6E15               	movwf	(___awmod@divisor+1)^0,c
  7389  005522  0E0A               	movlw	10
  7390  005524  6E14               	movwf	___awmod@divisor^0,c
  7391  005526  EC19  F030         	call	___awmod	;wreg free
  7392  00552A  C012  F01F         	movff	?___awmod,decrementDigit@digito2
  7393  00552E  C013  F020         	movff	?___awmod+1,decrementDigit@digito2+1
  7394  005532                     l12984:
  7395                           
  7396                           ;App_HTAD.c: 207:     *valorSensor = digito1 * 10 + digito2;
  7397  005532  501D               	movf	decrementDigit@digito1^0,w,c
  7398  005534  0D0A               	mullw	10
  7399  005536  50F3               	movf	243,w,c
  7400  005538  241F               	addwf	decrementDigit@digito2^0,w,c
  7401  00553A  C018  FFD9         	movff	decrementDigit@valorSensor,fsr2l
  7402  00553E  C019  FFDA         	movff	decrementDigit@valorSensor+1,fsr2h
  7403  005542  6EDF               	movwf	indf2,c
  7404  005544  0012               	return		;funcret
  7405  005546                     __end_of_decrementDigit:
  7406                           	callstack 0
  7407                           
  7408 ;; *************** function _sprintf *****************
  7409 ;; Defined at:
  7410 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  7411 ;; Parameters:    Size  Location     Type
  7412 ;;  s               2  137[BANK0 ] PTR unsigned char 
  7413 ;;		 -> App_HTAD_MenuAjusteErro@txt(20), App_HTAD_Home@txt(21), 
  7414 ;;  fmt             2  139[BANK0 ] PTR const unsigned char 
  7415 ;;		 -> STR_8(21), STR_7(25), STR_6(25), STR_5(25), 
  7416 ;;		 -> STR_4(23), STR_3(21), STR_2(21), STR_1(21), 
  7417 ;; Auto vars:     Size  Location     Type
  7418 ;;  f               6    2[BANK1 ] struct _IO_FILE
  7419 ;;  ap              2    0[BANK1 ] PTR void [1]
  7420 ;;		 -> ?_sprintf(2), 
  7421 ;;  ret             2    0        int 
  7422 ;; Return value:  Size  Location     Type
  7423 ;;                  2  137[BANK0 ] int 
  7424 ;; Registers used:
  7425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7426 ;; Tracked objects:
  7427 ;;		On entry : 0/0
  7428 ;;		On exit  : 0/0
  7429 ;;		Unchanged: 0/0
  7430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7431 ;;      Params:         0      12       0       0       0       0       0
  7432 ;;      Locals:         0       0       8       0       0       0       0
  7433 ;;      Temps:          0       0       0       0       0       0       0
  7434 ;;      Totals:         0      12       8       0       0       0       0
  7435 ;;Total ram usage:       20 bytes
  7436 ;; Hardware stack levels used: 1
  7437 ;; Hardware stack levels required when called: 11
  7438 ;; This function calls:
  7439 ;;		_vfprintf
  7440 ;; This function is called by:
  7441 ;;		_App_HTAD_Home
  7442 ;;		_App_HTAD_MenuAjusteErro
  7443 ;; This function uses a non-reentrant model
  7444 ;;
  7445                           
  7446                           	psect	text30
  7447  006C86                     __ptext30:
  7448                           	callstack 0
  7449  006C86                     _sprintf:
  7450                           	callstack 17
  7451  006C86  0EED               	movlw	low (?_sprintf+4)
  7452  006C88  0101               	movlb	1	; () banked
  7453  006C8A  6FD5               	movwf	sprintf@ap& (0+255),b
  7454  006C8C  0E00               	movlw	high (?_sprintf+4)
  7455  006C8E  6FD6               	movwf	(sprintf@ap+1)& (0+255),b
  7456  006C90  C0E9  F1D7         	movff	sprintf@s,sprintf@f
  7457  006C94  C0EA  F1D8         	movff	sprintf@s+1,sprintf@f+1
  7458  006C98                     
  7459                           ; BSR set to: 1
  7460  006C98  0E00               	movlw	0
  7461  006C9A  6FDA               	movwf	(sprintf@f+3)& (0+255),b
  7462  006C9C  0E00               	movlw	0
  7463  006C9E  6FD9               	movwf	(sprintf@f+2)& (0+255),b
  7464  006CA0                     
  7465                           ; BSR set to: 1
  7466  006CA0  0E00               	movlw	0
  7467  006CA2  6FDC               	movwf	(sprintf@f+5)& (0+255),b
  7468  006CA4  0E00               	movlw	0
  7469  006CA6  6FDB               	movwf	(sprintf@f+4)& (0+255),b
  7470  006CA8                     
  7471                           ; BSR set to: 1
  7472  006CA8  0ED7               	movlw	low sprintf@f
  7473  006CAA  0100               	movlb	0	; () banked
  7474  006CAC  6FE1               	movwf	vfprintf@fp& (0+255),b
  7475  006CAE  0E01               	movlw	high sprintf@f
  7476  006CB0  6FE2               	movwf	(vfprintf@fp+1)& (0+255),b
  7477  006CB2  C0EB  F0E3         	movff	sprintf@fmt,vfprintf@fmt
  7478  006CB6  C0EC  F0E4         	movff	sprintf@fmt+1,vfprintf@fmt+1
  7479  006CBA  0ED5               	movlw	low sprintf@ap
  7480  006CBC  6FE5               	movwf	vfprintf@ap& (0+255),b
  7481  006CBE  0E01               	movlw	high sprintf@ap
  7482  006CC0  6FE6               	movwf	(vfprintf@ap+1)& (0+255),b
  7483  006CC2  ECBC  F034         	call	_vfprintf	;wreg free
  7484  006CC6  0101               	movlb	1	; () banked
  7485  006CC8  51D9               	movf	(sprintf@f+2)& (0+255),w,b
  7486  006CCA  0100               	movlb	0	; () banked
  7487  006CCC  25E9               	addwf	sprintf@s& (0+255),w,b
  7488  006CCE  6ED9               	movwf	fsr2l,c
  7489  006CD0  0101               	movlb	1	; () banked
  7490  006CD2  51DA               	movf	(sprintf@f+3)& (0+255),w,b
  7491  006CD4  0100               	movlb	0	; () banked
  7492  006CD6  21EA               	addwfc	(sprintf@s+1)& (0+255),w,b
  7493  006CD8  6EDA               	movwf	fsr2h,c
  7494  006CDA  0E00               	movlw	0
  7495  006CDC  6EDF               	movwf	indf2,c
  7496  006CDE                     
  7497                           ; BSR set to: 0
  7498  006CDE  0012               	return		;funcret
  7499  006CE0                     __end_of_sprintf:
  7500                           	callstack 0
  7501                           
  7502 ;; *************** function _vfprintf *****************
  7503 ;; Defined at:
  7504 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7505 ;; Parameters:    Size  Location     Type
  7506 ;;  fp              2  129[BANK0 ] PTR struct _IO_FILE
  7507 ;;		 -> sprintf@f(6), 
  7508 ;;  fmt             2  131[BANK0 ] PTR const unsigned char 
  7509 ;;		 -> STR_8(21), STR_7(25), STR_6(25), STR_5(25), 
  7510 ;;		 -> STR_4(23), STR_3(21), STR_2(21), STR_1(21), 
  7511 ;;  ap              2  133[BANK0 ] PTR PTR void 
  7512 ;;		 -> sprintf@ap(2), 
  7513 ;; Auto vars:     Size  Location     Type
  7514 ;;  cfmt            2  135[BANK0 ] PTR unsigned char 
  7515 ;;		 -> STR_8(21), STR_7(25), STR_6(25), STR_5(25), 
  7516 ;;		 -> STR_4(23), STR_3(21), STR_2(21), STR_1(21), 
  7517 ;; Return value:  Size  Location     Type
  7518 ;;                  2  129[BANK0 ] int 
  7519 ;; Registers used:
  7520 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7521 ;; Tracked objects:
  7522 ;;		On entry : 0/0
  7523 ;;		On exit  : 0/0
  7524 ;;		Unchanged: 0/0
  7525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7526 ;;      Params:         0       6       0       0       0       0       0
  7527 ;;      Locals:         0       2       0       0       0       0       0
  7528 ;;      Temps:          0       0       0       0       0       0       0
  7529 ;;      Totals:         0       8       0       0       0       0       0
  7530 ;;Total ram usage:        8 bytes
  7531 ;; Hardware stack levels used: 1
  7532 ;; Hardware stack levels required when called: 10
  7533 ;; This function calls:
  7534 ;;		_vfpfcnvrt
  7535 ;; This function is called by:
  7536 ;;		_sprintf
  7537 ;; This function uses a non-reentrant model
  7538 ;;
  7539                           
  7540                           	psect	text31
  7541  006978                     __ptext31:
  7542                           	callstack 0
  7543  006978                     _vfprintf:
  7544                           	callstack 17
  7545  006978                     
  7546                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  7547  006978  C0E3  F0E7         	movff	vfprintf@fmt,vfprintf@cfmt
  7548  00697C  C0E4  F0E8         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7549  006980                     
  7550                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  7551  006980  0E00               	movlw	0
  7552  006982  0101               	movlb	1	; () banked
  7553  006984  6F86               	movwf	(_nout+1)& (0+255),b
  7554  006986  0E00               	movlw	0
  7555  006988  6F85               	movwf	_nout& (0+255),b
  7556                           
  7557                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  7558  00698A  EFDE  F034         	goto	l12892
  7559  00698E                     l12890:
  7560                           
  7561                           ; BSR set to: 1
  7562                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  7563  00698E  C0E1  F0BF         	movff	vfprintf@fp,vfpfcnvrt@fp
  7564  006992  C0E2  F0C0         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7565  006996  0EE7               	movlw	low vfprintf@cfmt
  7566  006998  0100               	movlb	0	; () banked
  7567  00699A  6FC1               	movwf	vfpfcnvrt@fmt& (0+255),b
  7568  00699C  0E00               	movlw	high vfprintf@cfmt
  7569  00699E  6FC2               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  7570  0069A0  C0E5  F0C3         	movff	vfprintf@ap,vfpfcnvrt@ap
  7571  0069A4  C0E6  F0C4         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  7572  0069A8  EC87  F00D         	call	_vfpfcnvrt	;wreg free
  7573  0069AC  0100               	movlb	0	; () banked
  7574  0069AE  51BF               	movf	?_vfpfcnvrt& (0+255),w,b
  7575  0069B0  0101               	movlb	1	; () banked
  7576  0069B2  2785               	addwf	_nout& (0+255),f,b
  7577  0069B4  0100               	movlb	0	; () banked
  7578  0069B6  51C0               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  7579  0069B8  0101               	movlb	1	; () banked
  7580  0069BA  2386               	addwfc	(_nout+1)& (0+255),f,b
  7581  0069BC                     l12892:
  7582                           
  7583                           ; BSR set to: 1
  7584                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  7585  0069BC  C0E7  FFF6         	movff	vfprintf@cfmt,tblptrl
  7586  0069C0  C0E8  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  7587  0069C4                     	if	0	;tblptru may be non-zero
  7588  0069C4                     	endif
  7589  0069C4                     	if	0	;tblptru may be non-zero
  7590  0069C4                     	endif
  7591  0069C4  0008               	tblrd		*
  7592  0069C6  50F5               	movf	tablat,w,c
  7593  0069C8  0900               	iorlw	0
  7594  0069CA  A4D8               	btfss	status,2,c
  7595  0069CC  EFEA  F034         	goto	u13081
  7596  0069D0  EFEC  F034         	goto	u13080
  7597  0069D4                     u13081:
  7598  0069D4  EFC7  F034         	goto	l12890
  7599  0069D8                     u13080:
  7600  0069D8                     
  7601                           ; BSR set to: 1
  7602                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  7603  0069D8  C185  F0E1         	movff	_nout,?_vfprintf
  7604  0069DC  C186  F0E2         	movff	_nout+1,?_vfprintf+1
  7605  0069E0                     
  7606                           ; BSR set to: 1
  7607  0069E0  0012               	return		;funcret
  7608  0069E2                     __end_of_vfprintf:
  7609                           	callstack 0
  7610                           
  7611 ;; *************** function _vfpfcnvrt *****************
  7612 ;; Defined at:
  7613 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7614 ;; Parameters:    Size  Location     Type
  7615 ;;  fp              2   95[BANK0 ] PTR struct _IO_FILE
  7616 ;;		 -> sprintf@f(6), 
  7617 ;;  fmt             2   97[BANK0 ] PTR PTR unsigned char 
  7618 ;;		 -> vfprintf@cfmt(2), 
  7619 ;;  ap              2   99[BANK0 ] PTR PTR void 
  7620 ;;		 -> sprintf@ap(2), 
  7621 ;; Auto vars:     Size  Location     Type
  7622 ;;  ll              8  105[BANK0 ] long long 
  7623 ;;  llu             8    0        unsigned long long 
  7624 ;;  f               4  121[BANK0 ] unsigned long long 
  7625 ;;  ct              3  125[BANK0 ] unsigned char [3]
  7626 ;;  vp              3    0        PTR void 
  7627 ;;  cp              3    0        PTR unsigned char 
  7628 ;;  done            2  113[BANK0 ] int 
  7629 ;;  i               2    0        int 
  7630 ;;  c               1  128[BANK0 ] unsigned char 
  7631 ;; Return value:  Size  Location     Type
  7632 ;;                  2   95[BANK0 ] int 
  7633 ;; Registers used:
  7634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7635 ;; Tracked objects:
  7636 ;;		On entry : 0/0
  7637 ;;		On exit  : 0/0
  7638 ;;		Unchanged: 0/0
  7639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7640 ;;      Params:         0       6       0       0       0       0       0
  7641 ;;      Locals:         0      24       0       0       0       0       0
  7642 ;;      Temps:          0       4       0       0       0       0       0
  7643 ;;      Totals:         0      34       0       0       0       0       0
  7644 ;;Total ram usage:       34 bytes
  7645 ;; Hardware stack levels used: 1
  7646 ;; Hardware stack levels required when called: 9
  7647 ;; This function calls:
  7648 ;;		_atoi
  7649 ;;		_ctoa
  7650 ;;		_dtoa
  7651 ;;		_efgtoa
  7652 ;;		_fputc
  7653 ;;		_isdigit
  7654 ;;		_isupper
  7655 ;;		_strncmp
  7656 ;;		_tolower
  7657 ;; This function is called by:
  7658 ;;		_vfprintf
  7659 ;; This function uses a non-reentrant model
  7660 ;;
  7661                           
  7662                           	psect	text32
  7663  001B0E                     __ptext32:
  7664                           	callstack 0
  7665  001B0E                     _vfpfcnvrt:
  7666                           	callstack 17
  7667  001B0E                     
  7668                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  7669  001B0E  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7670  001B12  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7671  001B16  CFDE FFF6          	movff	postinc2,tblptrl
  7672  001B1A  CFDD FFF7          	movff	postdec2,tblptrh
  7673  001B1E                     	if	0	;tblptru may be non-zero
  7674  001B1E                     	endif
  7675  001B1E                     	if	0	;tblptru may be non-zero
  7676  001B1E                     	endif
  7677  001B1E  0008               	tblrd		*
  7678  001B20  50F5               	movf	tablat,w,c
  7679  001B22  0A25               	xorlw	37
  7680  001B24  A4D8               	btfss	status,2,c
  7681  001B26  EF97  F00D         	goto	u12741
  7682  001B2A  EF99  F00D         	goto	u12740
  7683  001B2E                     u12741:
  7684  001B2E  EF1B  F011         	goto	l12804
  7685  001B32                     u12740:
  7686  001B32                     
  7687                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  7688  001B32  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7689  001B36  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7690  001B3A  2ADE               	incf	postinc2,f,c
  7691  001B3C  0E00               	movlw	0
  7692  001B3E  22DD               	addwfc	postdec2,f,c
  7693  001B40                     
  7694                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  7695  001B40  0E00               	movlw	0
  7696  001B42  0100               	movlb	0	; () banked
  7697  001B44  6FF8               	movwf	(_width+1)& (0+255),b
  7698  001B46  0E00               	movlw	0
  7699  001B48  6FF7               	movwf	_width& (0+255),b
  7700  001B4A  C0F7  F04F         	movff	_width,_flags
  7701  001B4E  C0F8  F050         	movff	_width+1,_flags+1
  7702  001B52                     
  7703                           ; BSR set to: 0
  7704                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  7705  001B52  684D               	setf	_prec^0,c
  7706  001B54  684E               	setf	(_prec+1)^0,c
  7707  001B56                     
  7708                           ; BSR set to: 0
  7709                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  7710  001B56  0E00               	movlw	0
  7711  001B58  6FD2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  7712  001B5A  0E00               	movlw	0
  7713  001B5C  6FD1               	movwf	vfpfcnvrt@done& (0+255),b
  7714                           
  7715                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  7716  001B5E  EFF7  F00D         	goto	l12690
  7717  001B62                     l12664:
  7718                           
  7719                           ; BSR set to: 0
  7720                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  7721  001B62  804F               	bsf	_flags^0,0,c
  7722  001B64                     l12666:
  7723                           
  7724                           ; BSR set to: 0
  7725                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  7726  001B64  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7727  001B68  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7728  001B6C  2ADE               	incf	postinc2,f,c
  7729  001B6E  0E00               	movlw	0
  7730  001B70  22DD               	addwfc	postdec2,f,c
  7731                           
  7732                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  7733  001B72  EFF7  F00D         	goto	l12690
  7734  001B76                     l12668:
  7735                           
  7736                           ; BSR set to: 0
  7737                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  7738  001B76  824F               	bsf	_flags^0,1,c
  7739  001B78  EFB2  F00D         	goto	l12666
  7740  001B7C                     l12672:
  7741                           
  7742                           ; BSR set to: 0
  7743                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  7744  001B7C  844F               	bsf	_flags^0,2,c
  7745  001B7E  EFB2  F00D         	goto	l12666
  7746  001B82                     l12676:
  7747                           
  7748                           ; BSR set to: 0
  7749                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  7750  001B82  864F               	bsf	_flags^0,3,c
  7751  001B84  EFB2  F00D         	goto	l12666
  7752  001B88                     l12680:
  7753                           
  7754                           ; BSR set to: 0
  7755                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  7756  001B88  884F               	bsf	_flags^0,4,c
  7757  001B8A  EFB2  F00D         	goto	l12666
  7758  001B8E                     l12684:
  7759                           
  7760                           ; BSR set to: 0
  7761                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  7762  001B8E  0E00               	movlw	0
  7763  001B90  6FD2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  7764  001B92  0E01               	movlw	1
  7765  001B94  6FD1               	movwf	vfpfcnvrt@done& (0+255),b
  7766                           
  7767                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  7768  001B96  EFF7  F00D         	goto	l12690
  7769  001B9A                     l12688:
  7770                           
  7771                           ; BSR set to: 0
  7772  001B9A  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7773  001B9E  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7774  001BA2  CFDE FFF6          	movff	postinc2,tblptrl
  7775  001BA6  CFDD FFF7          	movff	postdec2,tblptrh
  7776  001BAA                     	if	0	;tblptru may be non-zero
  7777  001BAA                     	endif
  7778  001BAA                     	if	0	;tblptru may be non-zero
  7779  001BAA                     	endif
  7780  001BAA  0008               	tblrd		*
  7781  001BAC  50F5               	movf	tablat,w,c
  7782  001BAE  6FC5               	movwf	??_vfpfcnvrt& (0+255),b
  7783  001BB0  6BC6               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  7784                           
  7785                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7786                           ; Switch size 1, requested type "simple"
  7787                           ; Number of cases is 1, Range of values is 0 to 0
  7788                           ; switch strategies available:
  7789                           ; Name         Instructions Cycles
  7790                           ; simple_byte            4     3 (average)
  7791                           ;	Chosen strategy is simple_byte
  7792  001BB2  51C6               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7793  001BB4  0A00               	xorlw	0	; case 0
  7794  001BB6  B4D8               	btfsc	status,2,c
  7795  001BB8  EFE0  F00D         	goto	l14116
  7796  001BBC  EFC7  F00D         	goto	l12684
  7797  001BC0                     l14116:
  7798                           
  7799                           ; BSR set to: 0
  7800                           ; Switch size 1, requested type "simple"
  7801                           ; Number of cases is 5, Range of values is 32 to 48
  7802                           ; switch strategies available:
  7803                           ; Name         Instructions Cycles
  7804                           ; simple_byte           16     9 (average)
  7805                           ;	Chosen strategy is simple_byte
  7806  001BC0  51C5               	movf	??_vfpfcnvrt& (0+255),w,b
  7807  001BC2  0A20               	xorlw	32	; case 32
  7808  001BC4  B4D8               	btfsc	status,2,c
  7809  001BC6  EFC1  F00D         	goto	l12676
  7810  001BCA  0A03               	xorlw	3	; case 35
  7811  001BCC  B4D8               	btfsc	status,2,c
  7812  001BCE  EFC4  F00D         	goto	l12680
  7813  001BD2  0A08               	xorlw	8	; case 43
  7814  001BD4  B4D8               	btfsc	status,2,c
  7815  001BD6  EFBE  F00D         	goto	l12672
  7816  001BDA  0A06               	xorlw	6	; case 45
  7817  001BDC  B4D8               	btfsc	status,2,c
  7818  001BDE  EFB1  F00D         	goto	l12664
  7819  001BE2  0A1D               	xorlw	29	; case 48
  7820  001BE4  B4D8               	btfsc	status,2,c
  7821  001BE6  EFBB  F00D         	goto	l12668
  7822  001BEA  EFC7  F00D         	goto	l12684
  7823  001BEE                     l12690:
  7824                           
  7825                           ; BSR set to: 0
  7826                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  7827  001BEE  51D1               	movf	vfpfcnvrt@done& (0+255),w,b
  7828  001BF0  11D2               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  7829  001BF2  B4D8               	btfsc	status,2,c
  7830  001BF4  EFFE  F00D         	goto	u12751
  7831  001BF8  EF00  F00E         	goto	u12750
  7832  001BFC                     u12751:
  7833  001BFC  EFCD  F00D         	goto	l12688
  7834  001C00                     u12750:
  7835  001C00                     
  7836                           ; BSR set to: 0
  7837                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  7838  001C00  A04F               	btfss	_flags^0,0,c
  7839  001C02  EF05  F00E         	goto	u12761
  7840  001C06  EF07  F00E         	goto	u12760
  7841  001C0A                     u12761:
  7842  001C0A  EF08  F00E         	goto	l12694
  7843  001C0E                     u12760:
  7844  001C0E                     
  7845                           ; BSR set to: 0
  7846                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  7847  001C0E  924F               	bcf	_flags^0,1,c
  7848  001C10                     l12694:
  7849                           
  7850                           ; BSR set to: 0
  7851                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  7852  001C10  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7853  001C14  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7854  001C18  CFDE FFF6          	movff	postinc2,tblptrl
  7855  001C1C  CFDD FFF7          	movff	postdec2,tblptrh
  7856  001C20                     	if	0	;tblptru may be non-zero
  7857  001C20                     	endif
  7858  001C20                     	if	0	;tblptru may be non-zero
  7859  001C20                     	endif
  7860  001C20  0008               	tblrd		*
  7861  001C22  50F5               	movf	tablat,w,c
  7862  001C24  0A2A               	xorlw	42
  7863  001C26  A4D8               	btfss	status,2,c
  7864  001C28  EF18  F00E         	goto	u12771
  7865  001C2C  EF1A  F00E         	goto	u12770
  7866  001C30                     u12771:
  7867  001C30  EF43  F00E         	goto	l12702
  7868  001C34                     u12770:
  7869  001C34                     
  7870                           ; BSR set to: 0
  7871                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  7872  001C34  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7873  001C38  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7874  001C3C  2ADE               	incf	postinc2,f,c
  7875  001C3E  0E00               	movlw	0
  7876  001C40  22DD               	addwfc	postdec2,f,c
  7877                           
  7878                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  7879  001C42  C0C3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7880  001C46  C0C4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7881  001C4A  CFDF F0C5          	movff	indf2,??_vfpfcnvrt
  7882  001C4E  0E02               	movlw	2
  7883  001C50  26DE               	addwf	postinc2,f,c
  7884  001C52  CFDF F0C6          	movff	indf2,??_vfpfcnvrt+1
  7885  001C56  0E00               	movlw	0
  7886  001C58  22DD               	addwfc	postdec2,f,c
  7887  001C5A  C0C5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7888  001C5E  C0C6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7889  001C62  CFDE F0F7          	movff	postinc2,_width
  7890  001C66  CFDD F0F8          	movff	postdec2,_width+1
  7891  001C6A                     
  7892                           ; BSR set to: 0
  7893                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  7894  001C6A  BFF8               	btfsc	(_width+1)& (0+255),7,b
  7895  001C6C  EF3C  F00E         	goto	u12780
  7896  001C70  EF3A  F00E         	goto	u12781
  7897  001C74                     u12781:
  7898  001C74  EF87  F00E         	goto	l12712
  7899  001C78                     u12780:
  7900  001C78                     
  7901                           ; BSR set to: 0
  7902                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  7903  001C78  804F               	bsf	_flags^0,0,c
  7904                           
  7905                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  7906  001C7A  6DF7               	negf	_width& (0+255),b
  7907  001C7C  1FF8               	comf	(_width+1)& (0+255),f,b
  7908  001C7E  B0D8               	btfsc	status,0,c
  7909  001C80  2BF8               	incf	(_width+1)& (0+255),f,b
  7910  001C82  EF87  F00E         	goto	l12712
  7911  001C86                     l12702:
  7912                           
  7913                           ; BSR set to: 0
  7914                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  7915  001C86  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7916  001C8A  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7917  001C8E  CFDE F011          	movff	postinc2,atoi@s
  7918  001C92  CFDD F012          	movff	postdec2,atoi@s+1
  7919  001C96  ECE0  F022         	call	_atoi	;wreg free
  7920  001C9A  C011  F0F7         	movff	?_atoi,_width
  7921  001C9E  C012  F0F8         	movff	?_atoi+1,_width+1
  7922                           
  7923                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7924  001CA2  EF5A  F00E         	goto	l12706
  7925  001CA6                     l12704:
  7926                           
  7927                           ; BSR set to: 0
  7928                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  7929  001CA6  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7930  001CAA  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7931  001CAE  2ADE               	incf	postinc2,f,c
  7932  001CB0  0E00               	movlw	0
  7933  001CB2  22DD               	addwfc	postdec2,f,c
  7934  001CB4                     l12706:
  7935  001CB4  0ED0               	movlw	208
  7936  001CB6  0100               	movlb	0	; () banked
  7937  001CB8  6FC5               	movwf	??_vfpfcnvrt& (0+255),b
  7938  001CBA  0EFF               	movlw	255
  7939  001CBC  6FC6               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7940  001CBE  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7941  001CC2  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7942  001CC6  CFDE FFF6          	movff	postinc2,tblptrl
  7943  001CCA  CFDD FFF7          	movff	postdec2,tblptrh
  7944  001CCE                     	if	0	;tblptru may be non-zero
  7945  001CCE                     	endif
  7946  001CCE                     	if	0	;tblptru may be non-zero
  7947  001CCE                     	endif
  7948  001CCE  0008               	tblrd		*
  7949  001CD0  50F5               	movf	tablat,w,c
  7950  001CD2  6FC7               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  7951  001CD4  6BC8               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  7952  001CD6  51C5               	movf	??_vfpfcnvrt& (0+255),w,b
  7953  001CD8  27C7               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  7954  001CDA  51C6               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7955  001CDC  23C8               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  7956  001CDE  51C8               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  7957  001CE0  E10A               	bnz	u12790
  7958  001CE2  0E0A               	movlw	10
  7959  001CE4  5DC7               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  7960  001CE6  A0D8               	btfss	status,0,c
  7961  001CE8  EF78  F00E         	goto	u12791
  7962  001CEC  EF7B  F00E         	goto	u12790
  7963  001CF0                     u12791:
  7964  001CF0  0E01               	movlw	1
  7965  001CF2  EF7C  F00E         	goto	u12800
  7966  001CF6                     u12790:
  7967  001CF6  0E00               	movlw	0
  7968  001CF8                     u12800:
  7969  001CF8  6FD3               	movwf	_vfpfcnvrt$3662& (0+255),b
  7970  001CFA  6BD4               	clrf	(_vfpfcnvrt$3662+1)& (0+255),b
  7971  001CFC                     
  7972                           ; BSR set to: 0
  7973  001CFC  51D3               	movf	_vfpfcnvrt$3662& (0+255),w,b
  7974  001CFE  11D4               	iorwf	(_vfpfcnvrt$3662+1)& (0+255),w,b
  7975  001D00  A4D8               	btfss	status,2,c
  7976  001D02  EF85  F00E         	goto	u12811
  7977  001D06  EF87  F00E         	goto	u12810
  7978  001D0A                     u12811:
  7979  001D0A  EF53  F00E         	goto	l12704
  7980  001D0E                     u12810:
  7981  001D0E                     l12712:
  7982                           
  7983                           ; BSR set to: 0
  7984                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  7985  001D0E  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7986  001D12  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7987  001D16  CFDE FFF6          	movff	postinc2,tblptrl
  7988  001D1A  CFDD FFF7          	movff	postdec2,tblptrh
  7989  001D1E                     	if	0	;tblptru may be non-zero
  7990  001D1E                     	endif
  7991  001D1E                     	if	0	;tblptru may be non-zero
  7992  001D1E                     	endif
  7993  001D1E  0008               	tblrd		*
  7994  001D20  50F5               	movf	tablat,w,c
  7995  001D22  0A2E               	xorlw	46
  7996  001D24  A4D8               	btfss	status,2,c
  7997  001D26  EF97  F00E         	goto	u12821
  7998  001D2A  EF99  F00E         	goto	u12820
  7999  001D2E                     u12821:
  8000  001D2E  EF17  F00F         	goto	l12732
  8001  001D32                     u12820:
  8002  001D32                     
  8003                           ; BSR set to: 0
  8004                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  8005  001D32  0E00               	movlw	0
  8006  001D34  6E4E               	movwf	(_prec+1)^0,c
  8007  001D36  0E00               	movlw	0
  8008  001D38  6E4D               	movwf	_prec^0,c
  8009  001D3A                     
  8010                           ; BSR set to: 0
  8011                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  8012  001D3A  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8013  001D3E  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8014  001D42  2ADE               	incf	postinc2,f,c
  8015  001D44  0E00               	movlw	0
  8016  001D46  22DD               	addwfc	postdec2,f,c
  8017  001D48                     
  8018                           ; BSR set to: 0
  8019                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  8020  001D48  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8021  001D4C  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8022  001D50  CFDE FFF6          	movff	postinc2,tblptrl
  8023  001D54  CFDD FFF7          	movff	postdec2,tblptrh
  8024  001D58                     	if	0	;tblptru may be non-zero
  8025  001D58                     	endif
  8026  001D58                     	if	0	;tblptru may be non-zero
  8027  001D58                     	endif
  8028  001D58  0008               	tblrd		*
  8029  001D5A  50F5               	movf	tablat,w,c
  8030  001D5C  0A2A               	xorlw	42
  8031  001D5E  A4D8               	btfss	status,2,c
  8032  001D60  EFB4  F00E         	goto	u12831
  8033  001D64  EFB6  F00E         	goto	u12830
  8034  001D68                     u12831:
  8035  001D68  EFD3  F00E         	goto	l12722
  8036  001D6C                     u12830:
  8037  001D6C                     
  8038                           ; BSR set to: 0
  8039                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  8040  001D6C  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8041  001D70  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8042  001D74  2ADE               	incf	postinc2,f,c
  8043  001D76  0E00               	movlw	0
  8044  001D78  22DD               	addwfc	postdec2,f,c
  8045                           
  8046                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  8047  001D7A  C0C3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8048  001D7E  C0C4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8049  001D82  CFDF F0C5          	movff	indf2,??_vfpfcnvrt
  8050  001D86  0E02               	movlw	2
  8051  001D88  26DE               	addwf	postinc2,f,c
  8052  001D8A  CFDF F0C6          	movff	indf2,??_vfpfcnvrt+1
  8053  001D8E  0E00               	movlw	0
  8054  001D90  22DD               	addwfc	postdec2,f,c
  8055  001D92  C0C5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8056  001D96  C0C6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8057  001D9A  CFDE F04D          	movff	postinc2,_prec
  8058  001D9E  CFDD F04E          	movff	postdec2,_prec+1
  8059                           
  8060                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  8061  001DA2  EF17  F00F         	goto	l12732
  8062  001DA6                     l12722:
  8063                           
  8064                           ; BSR set to: 0
  8065                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  8066  001DA6  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8067  001DAA  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8068  001DAE  CFDE F011          	movff	postinc2,atoi@s
  8069  001DB2  CFDD F012          	movff	postdec2,atoi@s+1
  8070  001DB6  ECE0  F022         	call	_atoi	;wreg free
  8071  001DBA  C011  F04D         	movff	?_atoi,_prec
  8072  001DBE  C012  F04E         	movff	?_atoi+1,_prec+1
  8073                           
  8074                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8075  001DC2  EFEA  F00E         	goto	l12726
  8076  001DC6                     l12724:
  8077                           
  8078                           ; BSR set to: 0
  8079                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  8080  001DC6  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8081  001DCA  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8082  001DCE  2ADE               	incf	postinc2,f,c
  8083  001DD0  0E00               	movlw	0
  8084  001DD2  22DD               	addwfc	postdec2,f,c
  8085  001DD4                     l12726:
  8086  001DD4  0ED0               	movlw	208
  8087  001DD6  0100               	movlb	0	; () banked
  8088  001DD8  6FC5               	movwf	??_vfpfcnvrt& (0+255),b
  8089  001DDA  0EFF               	movlw	255
  8090  001DDC  6FC6               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8091  001DDE  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8092  001DE2  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8093  001DE6  CFDE FFF6          	movff	postinc2,tblptrl
  8094  001DEA  CFDD FFF7          	movff	postdec2,tblptrh
  8095  001DEE                     	if	0	;tblptru may be non-zero
  8096  001DEE                     	endif
  8097  001DEE                     	if	0	;tblptru may be non-zero
  8098  001DEE                     	endif
  8099  001DEE  0008               	tblrd		*
  8100  001DF0  50F5               	movf	tablat,w,c
  8101  001DF2  6FC7               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  8102  001DF4  6BC8               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  8103  001DF6  51C5               	movf	??_vfpfcnvrt& (0+255),w,b
  8104  001DF8  27C7               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  8105  001DFA  51C6               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8106  001DFC  23C8               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  8107  001DFE  51C8               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  8108  001E00  E10A               	bnz	u12840
  8109  001E02  0E0A               	movlw	10
  8110  001E04  5DC7               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  8111  001E06  A0D8               	btfss	status,0,c
  8112  001E08  EF08  F00F         	goto	u12841
  8113  001E0C  EF0B  F00F         	goto	u12840
  8114  001E10                     u12841:
  8115  001E10  0E01               	movlw	1
  8116  001E12  EF0C  F00F         	goto	u12850
  8117  001E16                     u12840:
  8118  001E16  0E00               	movlw	0
  8119  001E18                     u12850:
  8120  001E18  6FD5               	movwf	_vfpfcnvrt$3663& (0+255),b
  8121  001E1A  6BD6               	clrf	(_vfpfcnvrt$3663+1)& (0+255),b
  8122  001E1C                     
  8123                           ; BSR set to: 0
  8124  001E1C  51D5               	movf	_vfpfcnvrt$3663& (0+255),w,b
  8125  001E1E  11D6               	iorwf	(_vfpfcnvrt$3663+1)& (0+255),w,b
  8126  001E20  A4D8               	btfss	status,2,c
  8127  001E22  EF15  F00F         	goto	u12861
  8128  001E26  EF17  F00F         	goto	u12860
  8129  001E2A                     u12861:
  8130  001E2A  EFE3  F00E         	goto	l12724
  8131  001E2E                     u12860:
  8132  001E2E                     l12732:
  8133                           
  8134                           ; BSR set to: 0
  8135                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  8136  001E2E  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8137  001E32  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8138  001E36  CFDE FFF6          	movff	postinc2,tblptrl
  8139  001E3A  CFDD FFF7          	movff	postdec2,tblptrh
  8140  001E3E                     	if	0	;tblptru may be non-zero
  8141  001E3E                     	endif
  8142  001E3E                     	if	0	;tblptru may be non-zero
  8143  001E3E                     	endif
  8144  001E3E  0008               	tblrd		*
  8145  001E40  50F5               	movf	tablat,w,c
  8146  001E42  6E10               	movwf	tolower@c^0,c
  8147  001E44  6A11               	clrf	(tolower@c+1)^0,c
  8148  001E46  EC88  F035         	call	_tolower	;wreg free
  8149  001E4A  5010               	movf	?_tolower^0,w,c
  8150  001E4C  0100               	movlb	0	; () banked
  8151  001E4E  6FDD               	movwf	vfpfcnvrt@ct& (0+255),b
  8152  001E50                     
  8153                           ; BSR set to: 0
  8154                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  8155  001E50  51DD               	movf	vfpfcnvrt@ct& (0+255),w,b
  8156  001E52  B4D8               	btfsc	status,2,c
  8157  001E54  EF2E  F00F         	goto	u12871
  8158  001E58  EF30  F00F         	goto	u12870
  8159  001E5C                     u12871:
  8160  001E5C  EF6A  F00F         	goto	l12742
  8161  001E60                     u12870:
  8162  001E60                     
  8163                           ; BSR set to: 0
  8164                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  8165  001E60  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8166  001E64  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8167  001E68  CFDE F0C5          	movff	postinc2,??_vfpfcnvrt
  8168  001E6C  CFDD F0C6          	movff	postdec2,??_vfpfcnvrt+1
  8169  001E70  0E01               	movlw	1
  8170  001E72  27C5               	addwf	??_vfpfcnvrt& (0+255),f,b
  8171  001E74  0E00               	movlw	0
  8172  001E76  23C6               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8173  001E78  C0C5  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8174  001E7C  C0C6  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8175  001E80                     	if	0	;tblptru may be non-zero
  8176  001E80                     	endif
  8177  001E80                     	if	0	;tblptru may be non-zero
  8178  001E80                     	endif
  8179  001E80  0008               	tblrd		*
  8180  001E82  50F5               	movf	tablat,w,c
  8181  001E84  6E10               	movwf	tolower@c^0,c
  8182  001E86  6A11               	clrf	(tolower@c+1)^0,c
  8183  001E88  EC88  F035         	call	_tolower	;wreg free
  8184  001E8C  5010               	movf	?_tolower^0,w,c
  8185  001E8E  0100               	movlb	0	; () banked
  8186  001E90  6FDE               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  8187  001E92                     
  8188                           ; BSR set to: 0
  8189                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  8190  001E92  51DE               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  8191  001E94  B4D8               	btfsc	status,2,c
  8192  001E96  EF4F  F00F         	goto	u12881
  8193  001E9A  EF51  F00F         	goto	u12880
  8194  001E9E                     u12881:
  8195  001E9E  EF6A  F00F         	goto	l12742
  8196  001EA2                     u12880:
  8197  001EA2                     
  8198                           ; BSR set to: 0
  8199                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  8200  001EA2  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8201  001EA6  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8202  001EAA  CFDE F0C5          	movff	postinc2,??_vfpfcnvrt
  8203  001EAE  CFDD F0C6          	movff	postdec2,??_vfpfcnvrt+1
  8204  001EB2  0E02               	movlw	2
  8205  001EB4  27C5               	addwf	??_vfpfcnvrt& (0+255),f,b
  8206  001EB6  0E00               	movlw	0
  8207  001EB8  23C6               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8208  001EBA  C0C5  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8209  001EBE  C0C6  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8210  001EC2                     	if	0	;tblptru may be non-zero
  8211  001EC2                     	endif
  8212  001EC2                     	if	0	;tblptru may be non-zero
  8213  001EC2                     	endif
  8214  001EC2  0008               	tblrd		*
  8215  001EC4  50F5               	movf	tablat,w,c
  8216  001EC6  6E10               	movwf	tolower@c^0,c
  8217  001EC8  6A11               	clrf	(tolower@c+1)^0,c
  8218  001ECA  EC88  F035         	call	_tolower	;wreg free
  8219  001ECE  5010               	movf	?_tolower^0,w,c
  8220  001ED0  0100               	movlb	0	; () banked
  8221  001ED2  6FDF               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  8222  001ED4                     l12742:
  8223                           
  8224                           ; BSR set to: 0
  8225                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  8226  001ED4  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8227  001ED8  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8228  001EDC  CFDE FFF6          	movff	postinc2,tblptrl
  8229  001EE0  CFDD FFF7          	movff	postdec2,tblptrh
  8230  001EE4                     	if	0	;tblptru may be non-zero
  8231  001EE4                     	endif
  8232  001EE4                     	if	0	;tblptru may be non-zero
  8233  001EE4                     	endif
  8234  001EE4  0008               	tblrd		*
  8235  001EE6  50F5               	movf	tablat,w,c
  8236  001EE8  0A63               	xorlw	99
  8237  001EEA  A4D8               	btfss	status,2,c
  8238  001EEC  EF7A  F00F         	goto	u12891
  8239  001EF0  EF7C  F00F         	goto	u12890
  8240  001EF4                     u12891:
  8241  001EF4  EFA3  F00F         	goto	l12750
  8242  001EF8                     u12890:
  8243  001EF8                     
  8244                           ; BSR set to: 0
  8245                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  8246  001EF8  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8247  001EFC  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8248  001F00  2ADE               	incf	postinc2,f,c
  8249  001F02  0E00               	movlw	0
  8250  001F04  22DD               	addwfc	postdec2,f,c
  8251                           
  8252                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8253  001F06  C0C3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8254  001F0A  C0C4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8255  001F0E  CFDF F0C5          	movff	indf2,??_vfpfcnvrt
  8256  001F12  0E02               	movlw	2
  8257  001F14  26DE               	addwf	postinc2,f,c
  8258  001F16  CFDF F0C6          	movff	indf2,??_vfpfcnvrt+1
  8259  001F1A  0E00               	movlw	0
  8260  001F1C  22DD               	addwfc	postdec2,f,c
  8261  001F1E  C0C5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8262  001F22  C0C6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8263  001F26  50DF               	movf	indf2,w,c
  8264  001F28  6FE0               	movwf	vfpfcnvrt@c& (0+255),b
  8265  001F2A                     
  8266                           ; BSR set to: 0
  8267                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  8268  001F2A  C0BF  F013         	movff	vfpfcnvrt@fp,ctoa@fp
  8269  001F2E  C0C0  F014         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  8270  001F32  C0E0  F015         	movff	vfpfcnvrt@c,ctoa@c
  8271  001F36  ECF7  F02C         	call	_ctoa	;wreg free
  8272  001F3A  C013  F0BF         	movff	?_ctoa,?_vfpfcnvrt
  8273  001F3E  C014  F0C0         	movff	?_ctoa+1,?_vfpfcnvrt+1
  8274  001F42  EF36  F011         	goto	l2499
  8275  001F46                     l12750:
  8276                           
  8277                           ; BSR set to: 0
  8278                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  8279  001F46  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8280  001F4A  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8281  001F4E  CFDE FFF6          	movff	postinc2,tblptrl
  8282  001F52  CFDD FFF7          	movff	postdec2,tblptrh
  8283  001F56                     	if	0	;tblptru may be non-zero
  8284  001F56                     	endif
  8285  001F56                     	if	0	;tblptru may be non-zero
  8286  001F56                     	endif
  8287  001F56  0008               	tblrd		*
  8288  001F58  50F5               	movf	tablat,w,c
  8289  001F5A  0A64               	xorlw	100
  8290  001F5C  B4D8               	btfsc	status,2,c
  8291  001F5E  EFB3  F00F         	goto	u12901
  8292  001F62  EFB5  F00F         	goto	u12900
  8293  001F66                     u12901:
  8294  001F66  EFC7  F00F         	goto	l12754
  8295  001F6A                     u12900:
  8296  001F6A                     
  8297                           ; BSR set to: 0
  8298  001F6A  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8299  001F6E  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8300  001F72  CFDE FFF6          	movff	postinc2,tblptrl
  8301  001F76  CFDD FFF7          	movff	postdec2,tblptrh
  8302  001F7A                     	if	0	;tblptru may be non-zero
  8303  001F7A                     	endif
  8304  001F7A                     	if	0	;tblptru may be non-zero
  8305  001F7A                     	endif
  8306  001F7A  0008               	tblrd		*
  8307  001F7C  50F5               	movf	tablat,w,c
  8308  001F7E  0A69               	xorlw	105
  8309  001F80  A4D8               	btfss	status,2,c
  8310  001F82  EFC5  F00F         	goto	u12911
  8311  001F86  EFC7  F00F         	goto	u12910
  8312  001F8A                     u12911:
  8313  001F8A  EF07  F010         	goto	l12760
  8314  001F8E                     u12910:
  8315  001F8E                     l12754:
  8316                           
  8317                           ; BSR set to: 0
  8318                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  8319  001F8E  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8320  001F92  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8321  001F96  2ADE               	incf	postinc2,f,c
  8322  001F98  0E00               	movlw	0
  8323  001F9A  22DD               	addwfc	postdec2,f,c
  8324                           
  8325                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  8326  001F9C  C0C3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8327  001FA0  C0C4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8328  001FA4  CFDF F0C5          	movff	indf2,??_vfpfcnvrt
  8329  001FA8  0E02               	movlw	2
  8330  001FAA  26DE               	addwf	postinc2,f,c
  8331  001FAC  CFDF F0C6          	movff	indf2,??_vfpfcnvrt+1
  8332  001FB0  0E00               	movlw	0
  8333  001FB2  22DD               	addwfc	postdec2,f,c
  8334  001FB4  C0C5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8335  001FB8  C0C6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8336  001FBC  CFDE F0C9          	movff	postinc2,vfpfcnvrt@ll
  8337  001FC0  CFDD F0CA          	movff	postdec2,vfpfcnvrt@ll+1
  8338  001FC4  0E00               	movlw	0
  8339  001FC6  BFCA               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  8340  001FC8  0EFF               	movlw	-1
  8341  001FCA  6FCB               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  8342  001FCC  6FCC               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  8343  001FCE  6FCD               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  8344  001FD0  6FCE               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  8345  001FD2  6FCF               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  8346  001FD4  6FD0               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  8347  001FD6                     
  8348                           ; BSR set to: 0
  8349                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  8350  001FD6  C0BF  F025         	movff	vfpfcnvrt@fp,dtoa@fp
  8351  001FDA  C0C0  F026         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  8352  001FDE  C0C9  F027         	movff	vfpfcnvrt@ll,dtoa@d
  8353  001FE2  C0CA  F028         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  8354  001FE6  C0CB  F029         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  8355  001FEA  C0CC  F02A         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  8356  001FEE  C0CD  F02B         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  8357  001FF2  C0CE  F02C         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  8358  001FF6  C0CF  F02D         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  8359  001FFA  C0D0  F02E         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  8360  001FFE  EC8C  F01F         	call	_dtoa	;wreg free
  8361  002002  C025  F0BF         	movff	?_dtoa,?_vfpfcnvrt
  8362  002006  C026  F0C0         	movff	?_dtoa+1,?_vfpfcnvrt+1
  8363  00200A  EF36  F011         	goto	l2499
  8364  00200E                     l12760:
  8365                           
  8366                           ; BSR set to: 0
  8367                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  8368  00200E  0E66               	movlw	102
  8369  002010  19DD               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  8370  002012  A4D8               	btfss	status,2,c
  8371  002014  EF0E  F010         	goto	u12921
  8372  002018  EF10  F010         	goto	u12920
  8373  00201C                     u12921:
  8374  00201C  EF50  F010         	goto	l12772
  8375  002020                     u12920:
  8376  002020                     
  8377                           ; BSR set to: 0
  8378                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  8379  002020  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8380  002024  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8381  002028  CFDE FFF6          	movff	postinc2,tblptrl
  8382  00202C  CFDD FFF7          	movff	postdec2,tblptrh
  8383  002030                     	if	0	;tblptru may be non-zero
  8384  002030                     	endif
  8385  002030                     	if	0	;tblptru may be non-zero
  8386  002030                     	endif
  8387  002030  0008               	tblrd		*
  8388  002032  CFF5 F0E0          	movff	tablat,vfpfcnvrt@c
  8389  002036                     
  8390                           ; BSR set to: 0
  8391                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  8392  002036  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8393  00203A  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8394  00203E  2ADE               	incf	postinc2,f,c
  8395  002040  0E00               	movlw	0
  8396  002042  22DD               	addwfc	postdec2,f,c
  8397  002044                     
  8398                           ; BSR set to: 0
  8399                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  8400  002044  C0C3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8401  002048  C0C4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8402  00204C  CFDF F0C5          	movff	indf2,??_vfpfcnvrt
  8403  002050  0E04               	movlw	4
  8404  002052  26DE               	addwf	postinc2,f,c
  8405  002054  CFDF F0C6          	movff	indf2,??_vfpfcnvrt+1
  8406  002058  0E00               	movlw	0
  8407  00205A  22DD               	addwfc	postdec2,f,c
  8408  00205C  C0C5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8409  002060  C0C6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8410  002064  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f
  8411  002068  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+1
  8412  00206C  CFDE F0DB          	movff	postinc2,vfpfcnvrt@f+2
  8413  002070  CFDE F0DC          	movff	postinc2,vfpfcnvrt@f+3
  8414  002074                     l12768:
  8415                           
  8416                           ; BSR set to: 0
  8417                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  8418  002074  C0BF  F07B         	movff	vfpfcnvrt@fp,efgtoa@fp
  8419  002078  C0C0  F07C         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  8420  00207C  C0D9  F07D         	movff	vfpfcnvrt@f,efgtoa@f
  8421  002080  C0DA  F07E         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  8422  002084  C0DB  F07F         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  8423  002088  C0DC  F080         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  8424  00208C  C0E0  F081         	movff	vfpfcnvrt@c,efgtoa@c
  8425  002090  EC76  F003         	call	_efgtoa	;wreg free
  8426  002094  C07B  F0BF         	movff	?_efgtoa,?_vfpfcnvrt
  8427  002098  C07C  F0C0         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  8428  00209C  EF36  F011         	goto	l2499
  8429  0020A0                     l12772:
  8430                           
  8431                           ; BSR set to: 0
  8432                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  8433  0020A0  0EDD               	movlw	low vfpfcnvrt@ct
  8434  0020A2  6E0A               	movwf	strncmp@_l^0,c
  8435  0020A4  0E00               	movlw	high vfpfcnvrt@ct
  8436  0020A6  6E0B               	movwf	(strncmp@_l+1)^0,c
  8437  0020A8  0EE7               	movlw	low STR_17
  8438  0020AA  6E0C               	movwf	strncmp@_r^0,c
  8439  0020AC  0E06               	movlw	high STR_17
  8440  0020AE  6E0D               	movwf	(strncmp@_r+1)^0,c
  8441  0020B0  0E00               	movlw	0
  8442  0020B2  6E0F               	movwf	(strncmp@n+1)^0,c
  8443  0020B4  0E02               	movlw	2
  8444  0020B6  6E0E               	movwf	strncmp@n^0,c
  8445  0020B8  EC8C  F02C         	call	_strncmp	;wreg free
  8446  0020BC  500A               	movf	?_strncmp^0,w,c
  8447  0020BE  100B               	iorwf	(?_strncmp+1)^0,w,c
  8448  0020C0  A4D8               	btfss	status,2,c
  8449  0020C2  EF65  F010         	goto	u12931
  8450  0020C6  EF67  F010         	goto	u12930
  8451  0020CA                     u12931:
  8452  0020CA  EFE3  F010         	goto	l12788
  8453  0020CE                     u12930:
  8454  0020CE                     
  8455                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  8456  0020CE  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8457  0020D2  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8458  0020D6  CFDE F0C5          	movff	postinc2,??_vfpfcnvrt
  8459  0020DA  CFDD F0C6          	movff	postdec2,??_vfpfcnvrt+1
  8460  0020DE  0E01               	movlw	1
  8461  0020E0  0100               	movlb	0	; () banked
  8462  0020E2  27C5               	addwf	??_vfpfcnvrt& (0+255),f,b
  8463  0020E4  0E00               	movlw	0
  8464  0020E6  23C6               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8465  0020E8  C0C5  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8466  0020EC  C0C6  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8467  0020F0                     	if	0	;tblptru may be non-zero
  8468  0020F0                     	endif
  8469  0020F0                     	if	0	;tblptru may be non-zero
  8470  0020F0                     	endif
  8471  0020F0  0008               	tblrd		*
  8472  0020F2  CFF5 F0E0          	movff	tablat,vfpfcnvrt@c
  8473  0020F6  0EBF               	movlw	191
  8474  0020F8  6FC5               	movwf	??_vfpfcnvrt& (0+255),b
  8475  0020FA  0EFF               	movlw	255
  8476  0020FC  6FC6               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8477  0020FE  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8478  002102  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8479  002106  CFDE FFF6          	movff	postinc2,tblptrl
  8480  00210A  CFDD FFF7          	movff	postdec2,tblptrh
  8481  00210E                     	if	0	;tblptru may be non-zero
  8482  00210E                     	endif
  8483  00210E                     	if	0	;tblptru may be non-zero
  8484  00210E                     	endif
  8485  00210E  0008               	tblrd		*
  8486  002110  50F5               	movf	tablat,w,c
  8487  002112  6FC7               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  8488  002114  6BC8               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  8489  002116  51C5               	movf	??_vfpfcnvrt& (0+255),w,b
  8490  002118  27C7               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  8491  00211A  51C6               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8492  00211C  23C8               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  8493  00211E  51C8               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  8494  002120  E10A               	bnz	u12940
  8495  002122  0E1A               	movlw	26
  8496  002124  5DC7               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  8497  002126  A0D8               	btfss	status,0,c
  8498  002128  EF98  F010         	goto	u12941
  8499  00212C  EF9B  F010         	goto	u12940
  8500  002130                     u12941:
  8501  002130  0E01               	movlw	1
  8502  002132  EF9C  F010         	goto	u12950
  8503  002136                     u12940:
  8504  002136  0E00               	movlw	0
  8505  002138                     u12950:
  8506  002138  6FD7               	movwf	_vfpfcnvrt$3669& (0+255),b
  8507  00213A  6BD8               	clrf	(_vfpfcnvrt$3669+1)& (0+255),b
  8508  00213C                     
  8509                           ; BSR set to: 0
  8510  00213C  51D7               	movf	_vfpfcnvrt$3669& (0+255),w,b
  8511  00213E  11D8               	iorwf	(_vfpfcnvrt$3669+1)& (0+255),w,b
  8512  002140  B4D8               	btfsc	status,2,c
  8513  002142  EFA5  F010         	goto	u12961
  8514  002146  EFA7  F010         	goto	u12960
  8515  00214A                     u12961:
  8516  00214A  EFC1  F010         	goto	l12782
  8517  00214E                     u12960:
  8518  00214E                     
  8519                           ; BSR set to: 0
  8520                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  8521  00214E  C0C3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8522  002152  C0C4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8523  002156  CFDF F0C5          	movff	indf2,??_vfpfcnvrt
  8524  00215A  0E04               	movlw	4
  8525  00215C  26DE               	addwf	postinc2,f,c
  8526  00215E  CFDF F0C6          	movff	indf2,??_vfpfcnvrt+1
  8527  002162  0E00               	movlw	0
  8528  002164  22DD               	addwfc	postdec2,f,c
  8529  002166  C0C5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8530  00216A  C0C6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8531  00216E  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f
  8532  002172  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+1
  8533  002176  CFDE F0DB          	movff	postinc2,vfpfcnvrt@f+2
  8534  00217A  CFDE F0DC          	movff	postinc2,vfpfcnvrt@f+3
  8535                           
  8536                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  8537  00217E  EFD9  F010         	goto	l2510
  8538  002182                     l12782:
  8539                           
  8540                           ; BSR set to: 0
  8541                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  8542  002182  C0C3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8543  002186  C0C4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8544  00218A  CFDF F0C5          	movff	indf2,??_vfpfcnvrt
  8545  00218E  0E04               	movlw	4
  8546  002190  26DE               	addwf	postinc2,f,c
  8547  002192  CFDF F0C6          	movff	indf2,??_vfpfcnvrt+1
  8548  002196  0E00               	movlw	0
  8549  002198  22DD               	addwfc	postdec2,f,c
  8550  00219A  C0C5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8551  00219E  C0C6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8552  0021A2  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f
  8553  0021A6  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+1
  8554  0021AA  CFDE F0DB          	movff	postinc2,vfpfcnvrt@f+2
  8555  0021AE  CFDE F0DC          	movff	postinc2,vfpfcnvrt@f+3
  8556  0021B2                     l2510:
  8557                           
  8558                           ; BSR set to: 0
  8559                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  8560  0021B2  0E02               	movlw	2
  8561  0021B4  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8562  0021B8  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8563  0021BC  26DE               	addwf	postinc2,f,c
  8564  0021BE  0E00               	movlw	0
  8565  0021C0  22DD               	addwfc	postdec2,f,c
  8566  0021C2  EF3A  F010         	goto	l12768
  8567  0021C6                     l12788:
  8568                           
  8569                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  8570  0021C6  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8571  0021CA  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8572  0021CE  CFDE FFF6          	movff	postinc2,tblptrl
  8573  0021D2  CFDD FFF7          	movff	postdec2,tblptrh
  8574  0021D6                     	if	0	;tblptru may be non-zero
  8575  0021D6                     	endif
  8576  0021D6                     	if	0	;tblptru may be non-zero
  8577  0021D6                     	endif
  8578  0021D6  0008               	tblrd		*
  8579  0021D8  50F5               	movf	tablat,w,c
  8580  0021DA  0A25               	xorlw	37
  8581  0021DC  A4D8               	btfss	status,2,c
  8582  0021DE  EFF3  F010         	goto	u12971
  8583  0021E2  EFF5  F010         	goto	u12970
  8584  0021E6                     u12971:
  8585  0021E6  EF0D  F011         	goto	l12798
  8586  0021EA                     u12970:
  8587  0021EA                     
  8588                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  8589  0021EA  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8590  0021EE  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8591  0021F2  2ADE               	incf	postinc2,f,c
  8592  0021F4  0E00               	movlw	0
  8593  0021F6  22DD               	addwfc	postdec2,f,c
  8594  0021F8                     
  8595                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  8596  0021F8  0E00               	movlw	0
  8597  0021FA  6E0B               	movwf	(fputc@c+1)^0,c
  8598  0021FC  0E25               	movlw	37
  8599  0021FE  6E0A               	movwf	fputc@c^0,c
  8600  002200  C0BF  F00C         	movff	vfpfcnvrt@fp,fputc@fp
  8601  002204  C0C0  F00D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8602  002208  ECCC  F02D         	call	_fputc	;wreg free
  8603  00220C                     l12794:
  8604                           
  8605                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  8606  00220C  0E00               	movlw	0
  8607  00220E  0100               	movlb	0	; () banked
  8608  002210  6FC0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  8609  002212  0E01               	movlw	1
  8610  002214  6FBF               	movwf	?_vfpfcnvrt& (0+255),b
  8611  002216  EF36  F011         	goto	l2499
  8612  00221A                     l12798:
  8613                           
  8614                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  8615  00221A  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8616  00221E  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8617  002222  2ADE               	incf	postinc2,f,c
  8618  002224  0E00               	movlw	0
  8619  002226  22DD               	addwfc	postdec2,f,c
  8620  002228                     
  8621                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  8622  002228  0E00               	movlw	0
  8623  00222A  0100               	movlb	0	; () banked
  8624  00222C  6FC0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  8625  00222E  0E00               	movlw	0
  8626  002230  6FBF               	movwf	?_vfpfcnvrt& (0+255),b
  8627  002232  EF36  F011         	goto	l2499
  8628  002236                     l12804:
  8629                           
  8630                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  8631  002236  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8632  00223A  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8633  00223E  CFDE FFF6          	movff	postinc2,tblptrl
  8634  002242  CFDD FFF7          	movff	postdec2,tblptrh
  8635  002246                     	if	0	;tblptru may be non-zero
  8636  002246                     	endif
  8637  002246                     	if	0	;tblptru may be non-zero
  8638  002246                     	endif
  8639  002246  0008               	tblrd		*
  8640  002248  50F5               	movf	tablat,w,c
  8641  00224A  6E0A               	movwf	fputc@c^0,c
  8642  00224C  6A0B               	clrf	(fputc@c+1)^0,c
  8643  00224E  C0BF  F00C         	movff	vfpfcnvrt@fp,fputc@fp
  8644  002252  C0C0  F00D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8645  002256  ECCC  F02D         	call	_fputc	;wreg free
  8646  00225A                     
  8647                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  8648  00225A  C0C1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8649  00225E  C0C2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8650  002262  2ADE               	incf	postinc2,f,c
  8651  002264  0E00               	movlw	0
  8652  002266  22DD               	addwfc	postdec2,f,c
  8653  002268  EF06  F011         	goto	l12794
  8654  00226C                     l2499:
  8655  00226C  0012               	return		;funcret
  8656  00226E                     __end_of_vfpfcnvrt:
  8657                           	callstack 0
  8658                           
  8659 ;; *************** function _strncmp *****************
  8660 ;; Defined at:
  8661 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  8662 ;; Parameters:    Size  Location     Type
  8663 ;;  _l              2    9[COMRAM] PTR const unsigned char 
  8664 ;;		 -> vfpfcnvrt@ct(3), 
  8665 ;;  _r              2   11[COMRAM] PTR const unsigned char 
  8666 ;;		 -> STR_19(3), 
  8667 ;;  n               2   13[COMRAM] unsigned int 
  8668 ;; Auto vars:     Size  Location     Type
  8669 ;;  r               2   18[COMRAM] PTR const unsigned char 
  8670 ;;		 -> STR_19(3), 
  8671 ;;  l               2   16[COMRAM] PTR const unsigned char 
  8672 ;;		 -> vfpfcnvrt@ct(3), 
  8673 ;; Return value:  Size  Location     Type
  8674 ;;                  2    9[COMRAM] int 
  8675 ;; Registers used:
  8676 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8677 ;; Tracked objects:
  8678 ;;		On entry : 0/0
  8679 ;;		On exit  : 0/0
  8680 ;;		Unchanged: 0/0
  8681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8682 ;;      Params:         6       0       0       0       0       0       0
  8683 ;;      Locals:         4       0       0       0       0       0       0
  8684 ;;      Temps:          1       0       0       0       0       0       0
  8685 ;;      Totals:        11       0       0       0       0       0       0
  8686 ;;Total ram usage:       11 bytes
  8687 ;; Hardware stack levels used: 1
  8688 ;; Hardware stack levels required when called: 4
  8689 ;; This function calls:
  8690 ;;		Nothing
  8691 ;; This function is called by:
  8692 ;;		_vfpfcnvrt
  8693 ;; This function uses a non-reentrant model
  8694 ;;
  8695                           
  8696                           	psect	text33
  8697  005918                     __ptext33:
  8698                           	callstack 0
  8699  005918                     _strncmp:
  8700                           	callstack 21
  8701  005918  C00A  F011         	movff	strncmp@_l,strncmp@l
  8702  00591C  C00B  F012         	movff	strncmp@_l+1,strncmp@l+1
  8703  005920  C00C  F013         	movff	strncmp@_r,strncmp@r
  8704  005924  C00D  F014         	movff	strncmp@_r+1,strncmp@r+1
  8705  005928  060E               	decf	strncmp@n^0,f,c
  8706  00592A  A0D8               	btfss	status,0,c
  8707  00592C  060F               	decf	(strncmp@n+1)^0,f,c
  8708  00592E  280E               	incf	strncmp@n^0,w,c
  8709  005930  E106               	bnz	u12621
  8710  005932  280F               	incf	(strncmp@n+1)^0,w,c
  8711  005934  A4D8               	btfss	status,2,c
  8712  005936  EF9F  F02C         	goto	u12621
  8713  00593A  EFA1  F02C         	goto	u12620
  8714  00593E                     u12621:
  8715  00593E  EFAE  F02C         	goto	l12580
  8716  005942                     u12620:
  8717  005942  0E00               	movlw	0
  8718  005944  6E0B               	movwf	(?_strncmp+1)^0,c
  8719  005946  0E00               	movlw	0
  8720  005948  6E0A               	movwf	?_strncmp^0,c
  8721  00594A  EFF6  F02C         	goto	l2638
  8722  00594E                     l12578:
  8723  00594E  4A11               	infsnz	strncmp@l^0,f,c
  8724  005950  2A12               	incf	(strncmp@l+1)^0,f,c
  8725  005952  4A13               	infsnz	strncmp@r^0,f,c
  8726  005954  2A14               	incf	(strncmp@r+1)^0,f,c
  8727  005956  060E               	decf	strncmp@n^0,f,c
  8728  005958  A0D8               	btfss	status,0,c
  8729  00595A  060F               	decf	(strncmp@n+1)^0,f,c
  8730  00595C                     l12580:
  8731  00595C  C011  FFD9         	movff	strncmp@l,fsr2l
  8732  005960  C012  FFDA         	movff	strncmp@l+1,fsr2h
  8733  005964  50DF               	movf	indf2,w,c
  8734  005966  B4D8               	btfsc	status,2,c
  8735  005968  EFB8  F02C         	goto	u12631
  8736  00596C  EFBA  F02C         	goto	u12630
  8737  005970                     u12631:
  8738  005970  EFE5  F02C         	goto	l12588
  8739  005974                     u12630:
  8740  005974  C013  FFF6         	movff	strncmp@r,tblptrl
  8741  005978  C014  FFF7         	movff	strncmp@r+1,tblptrh
  8742  00597C                     	if	0	;tblptru may be non-zero
  8743  00597C                     	endif
  8744  00597C                     	if	0	;tblptru may be non-zero
  8745  00597C                     	endif
  8746  00597C  0008               	tblrd		*
  8747  00597E  50F5               	movf	tablat,w,c
  8748  005980  0900               	iorlw	0
  8749  005982  B4D8               	btfsc	status,2,c
  8750  005984  EFC6  F02C         	goto	u12641
  8751  005988  EFC8  F02C         	goto	u12640
  8752  00598C                     u12641:
  8753  00598C  EFE5  F02C         	goto	l12588
  8754  005990                     u12640:
  8755  005990  500E               	movf	strncmp@n^0,w,c
  8756  005992  100F               	iorwf	(strncmp@n+1)^0,w,c
  8757  005994  B4D8               	btfsc	status,2,c
  8758  005996  EFCF  F02C         	goto	u12651
  8759  00599A  EFD1  F02C         	goto	u12650
  8760  00599E                     u12651:
  8761  00599E  EFE5  F02C         	goto	l12588
  8762  0059A2                     u12650:
  8763  0059A2  C011  FFD9         	movff	strncmp@l,fsr2l
  8764  0059A6  C012  FFDA         	movff	strncmp@l+1,fsr2h
  8765  0059AA  50DF               	movf	indf2,w,c
  8766  0059AC  6E10               	movwf	??_strncmp^0,c
  8767  0059AE  C013  FFF6         	movff	strncmp@r,tblptrl
  8768  0059B2  C014  FFF7         	movff	strncmp@r+1,tblptrh
  8769  0059B6                     	if	0	;tblptru may be non-zero
  8770  0059B6                     	endif
  8771  0059B6                     	if	0	;tblptru may be non-zero
  8772  0059B6                     	endif
  8773  0059B6  0008               	tblrd		*
  8774  0059B8  50F5               	movf	tablat,w,c
  8775  0059BA  1810               	xorwf	??_strncmp^0,w,c
  8776  0059BC  B4D8               	btfsc	status,2,c
  8777  0059BE  EFE3  F02C         	goto	u12661
  8778  0059C2  EFE5  F02C         	goto	u12660
  8779  0059C6                     u12661:
  8780  0059C6  EFA7  F02C         	goto	l12578
  8781  0059CA                     u12660:
  8782  0059CA                     l12588:
  8783  0059CA  C011  FFD9         	movff	strncmp@l,fsr2l
  8784  0059CE  C012  FFDA         	movff	strncmp@l+1,fsr2h
  8785  0059D2  50DF               	movf	indf2,w,c
  8786  0059D4  6E10               	movwf	??_strncmp^0,c
  8787  0059D6  C013  FFF6         	movff	strncmp@r,tblptrl
  8788  0059DA  C014  FFF7         	movff	strncmp@r+1,tblptrh
  8789  0059DE                     	if	0	;tblptru may be non-zero
  8790  0059DE                     	endif
  8791  0059DE                     	if	0	;tblptru may be non-zero
  8792  0059DE                     	endif
  8793  0059DE  0008               	tblrd		*
  8794  0059E0  50F5               	movf	tablat,w,c
  8795  0059E2  5C10               	subwf	??_strncmp^0,w,c
  8796  0059E4  6E0A               	movwf	?_strncmp^0,c
  8797  0059E6  6A0B               	clrf	(?_strncmp+1)^0,c
  8798  0059E8  A0D8               	btfss	status,0,c
  8799  0059EA  060B               	decf	(?_strncmp+1)^0,f,c
  8800  0059EC                     l2638:
  8801  0059EC  0012               	return		;funcret
  8802  0059EE                     __end_of_strncmp:
  8803                           	callstack 0
  8804                           
  8805 ;; *************** function _efgtoa *****************
  8806 ;; Defined at:
  8807 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  8808 ;; Parameters:    Size  Location     Type
  8809 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  8810 ;;		 -> sprintf@f(6), 
  8811 ;;  f               4   29[BANK0 ] PTR struct _IO_FILE
  8812 ;;  c               1   33[BANK0 ] unsigned char 
  8813 ;; Auto vars:     Size  Location     Type
  8814 ;;  u               4   91[BANK0 ] unsigned char 
  8815 ;;  g               4   83[BANK0 ] unsigned char 
  8816 ;;  l               4   77[BANK0 ] unsigned char 
  8817 ;;  h               4   73[BANK0 ] unsigned char 
  8818 ;;  ou              4   59[BANK0 ] unsigned char 
  8819 ;;  n               2   89[BANK0 ] int 
  8820 ;;  e               2   87[BANK0 ] int 
  8821 ;;  i               2   81[BANK0 ] int 
  8822 ;;  w               2   69[BANK0 ] int 
  8823 ;;  p               2   67[BANK0 ] int 
  8824 ;;  sign            2   65[BANK0 ] int 
  8825 ;;  d               2   63[BANK0 ] int 
  8826 ;;  m               2   57[BANK0 ] int 
  8827 ;;  ne              2   55[BANK0 ] int 
  8828 ;;  pp              2   53[BANK0 ] int 
  8829 ;;  t               2   51[BANK0 ] int 
  8830 ;;  mode            1   72[BANK0 ] unsigned char 
  8831 ;;  nmode           1   71[BANK0 ] unsigned char 
  8832 ;; Return value:  Size  Location     Type
  8833 ;;                  2   27[BANK0 ] int 
  8834 ;; Registers used:
  8835 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8836 ;; Tracked objects:
  8837 ;;		On entry : 0/0
  8838 ;;		On exit  : 0/0
  8839 ;;		Unchanged: 0/0
  8840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8841 ;;      Params:         0       7       0       0       0       0       0
  8842 ;;      Locals:         0      56       0       0       0       0       0
  8843 ;;      Temps:          0       5       0       0       0       0       0
  8844 ;;      Totals:         0      68       0       0       0       0       0
  8845 ;;Total ram usage:       68 bytes
  8846 ;; Hardware stack levels used: 1
  8847 ;; Hardware stack levels required when called: 8
  8848 ;; This function calls:
  8849 ;;		___awdiv
  8850 ;;		___awmod
  8851 ;;		___fladd
  8852 ;;		___fldiv
  8853 ;;		___fleq
  8854 ;;		___flge
  8855 ;;		___flmul
  8856 ;;		___flneg
  8857 ;;		___flsub
  8858 ;;		___fltol
  8859 ;;		___fpclassifyf
  8860 ;;		_floorf
  8861 ;;		_isupper
  8862 ;;		_pad
  8863 ;;		_strcpy
  8864 ;;		_tolower
  8865 ;; This function is called by:
  8866 ;;		_vfpfcnvrt
  8867 ;; This function uses a non-reentrant model
  8868 ;;
  8869                           
  8870                           	psect	text34
  8871  0006EC                     __ptext34:
  8872                           	callstack 0
  8873  0006EC                     _efgtoa:
  8874                           	callstack 17
  8875  0006EC                     
  8876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  8877  0006EC  0E00               	movlw	0
  8878  0006EE  0100               	movlb	0	; () banked
  8879  0006F0  6FA2               	movwf	(efgtoa@sign+1)& (0+255),b
  8880  0006F2  0E00               	movlw	0
  8881  0006F4  6FA1               	movwf	efgtoa@sign& (0+255),b
  8882  0006F6                     
  8883                           ; BSR set to: 0
  8884                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  8885  0006F6  C07D  F0B3         	movff	efgtoa@f,efgtoa@g
  8886  0006FA  C07E  F0B4         	movff	efgtoa@f+1,efgtoa@g+1
  8887  0006FE  C07F  F0B5         	movff	efgtoa@f+2,efgtoa@g+2
  8888  000702  C080  F0B6         	movff	efgtoa@f+3,efgtoa@g+3
  8889  000706                     
  8890                           ; BSR set to: 0
  8891                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  8892  000706  BFB6               	btfsc	(efgtoa@g+3)& (0+255),7,b
  8893  000708  EF8A  F003         	goto	u12010
  8894  00070C  EF88  F003         	goto	u12011
  8895  000710                     u12011:
  8896  000710  EFA0  F003         	goto	l12232
  8897  000714                     u12010:
  8898  000714                     
  8899                           ; BSR set to: 0
  8900                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  8901  000714  0E00               	movlw	0
  8902  000716  6FA2               	movwf	(efgtoa@sign+1)& (0+255),b
  8903  000718  0E01               	movlw	1
  8904  00071A  6FA1               	movwf	efgtoa@sign& (0+255),b
  8905  00071C                     
  8906                           ; BSR set to: 0
  8907                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  8908  00071C  C0B3  F00A         	movff	efgtoa@g,___flneg@f1
  8909  000720  C0B4  F00B         	movff	efgtoa@g+1,___flneg@f1+1
  8910  000724  C0B5  F00C         	movff	efgtoa@g+2,___flneg@f1+2
  8911  000728  C0B6  F00D         	movff	efgtoa@g+3,___flneg@f1+3
  8912  00072C  ECEB  F038         	call	___flneg	;wreg free
  8913  000730  C00A  F0B3         	movff	?___flneg,efgtoa@g
  8914  000734  C00B  F0B4         	movff	?___flneg+1,efgtoa@g+1
  8915  000738  C00C  F0B5         	movff	?___flneg+2,efgtoa@g+2
  8916  00073C  C00D  F0B6         	movff	?___flneg+3,efgtoa@g+3
  8917  000740                     l12232:
  8918                           
  8919                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  8920  000740  0E00               	movlw	0
  8921  000742  0100               	movlb	0	; () banked
  8922  000744  6FBA               	movwf	(efgtoa@n+1)& (0+255),b
  8923  000746  0E00               	movlw	0
  8924  000748  6FB9               	movwf	efgtoa@n& (0+255),b
  8925  00074A                     
  8926                           ; BSR set to: 0
  8927                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  8928  00074A  C0F7  F0A5         	movff	_width,efgtoa@w
  8929  00074E  C0F8  F0A6         	movff	_width+1,efgtoa@w+1
  8930  000752                     
  8931                           ; BSR set to: 0
  8932                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  8933  000752  51A1               	movf	efgtoa@sign& (0+255),w,b
  8934  000754  11A2               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8935  000756  A4D8               	btfss	status,2,c
  8936  000758  EFB0  F003         	goto	u12021
  8937  00075C  EFB2  F003         	goto	u12020
  8938  000760                     u12021:
  8939  000760  EFB9  F003         	goto	l12240
  8940  000764                     u12020:
  8941  000764                     
  8942                           ; BSR set to: 0
  8943  000764  A44F               	btfss	_flags^0,2,c
  8944  000766  EFB7  F003         	goto	u12031
  8945  00076A  EFB9  F003         	goto	u12030
  8946  00076E                     u12031:
  8947  00076E  EFD3  F003         	goto	l12252
  8948  000772                     u12030:
  8949  000772                     l12240:
  8950                           
  8951                           ; BSR set to: 0
  8952                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  8953  000772  51A1               	movf	efgtoa@sign& (0+255),w,b
  8954  000774  11A2               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8955  000776  A4D8               	btfss	status,2,c
  8956  000778  EFC0  F003         	goto	u12041
  8957  00077C  EFC2  F003         	goto	u12040
  8958  000780                     u12041:
  8959  000780  EFC8  F003         	goto	l12244
  8960  000784                     u12040:
  8961  000784                     
  8962                           ; BSR set to: 0
  8963  000784  0E00               	movlw	0
  8964  000786  6F88               	movwf	(_efgtoa$3637+1)& (0+255),b
  8965  000788  0E2B               	movlw	43
  8966  00078A  6F87               	movwf	_efgtoa$3637& (0+255),b
  8967  00078C  EFCC  F003         	goto	l12246
  8968  000790                     l12244:
  8969                           
  8970                           ; BSR set to: 0
  8971  000790  0E00               	movlw	0
  8972  000792  6F88               	movwf	(_efgtoa$3637+1)& (0+255),b
  8973  000794  0E2D               	movlw	45
  8974  000796  6F87               	movwf	_efgtoa$3637& (0+255),b
  8975  000798                     l12246:
  8976                           
  8977                           ; BSR set to: 0
  8978  000798  C087  F250         	movff	_efgtoa$3637,_dbuf
  8979  00079C                     
  8980                           ; BSR set to: 0
  8981                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  8982  00079C  4BB9               	infsnz	efgtoa@n& (0+255),f,b
  8983  00079E  2BBA               	incf	(efgtoa@n+1)& (0+255),f,b
  8984  0007A0                     
  8985                           ; BSR set to: 0
  8986                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  8987  0007A0  07A5               	decf	efgtoa@w& (0+255),f,b
  8988  0007A2  A0D8               	btfss	status,0,c
  8989  0007A4  07A6               	decf	(efgtoa@w+1)& (0+255),f,b
  8990  0007A6                     l12252:
  8991                           
  8992                           ; BSR set to: 0
  8993                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8994  0007A6  C0B3  F00A         	movff	efgtoa@g,___fpclassifyf@x
  8995  0007AA  C0B4  F00B         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8996  0007AE  C0B5  F00C         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8997  0007B2  C0B6  F00D         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8998  0007B6  ECA3  F02A         	call	___fpclassifyf	;wreg free
  8999  0007BA  040A               	decf	?___fpclassifyf^0,w,c
  9000  0007BC  100B               	iorwf	(?___fpclassifyf+1)^0,w,c
  9001  0007BE  A4D8               	btfss	status,2,c
  9002  0007C0  EFE4  F003         	goto	u12051
  9003  0007C4  EFE6  F003         	goto	u12050
  9004  0007C8                     u12051:
  9005  0007C8  EF3D  F004         	goto	l12270
  9006  0007CC                     u12050:
  9007  0007CC  0EBF               	movlw	191
  9008  0007CE  0100               	movlb	0	; () banked
  9009  0007D0  6F82               	movwf	??_efgtoa& (0+255),b
  9010  0007D2  0EFF               	movlw	255
  9011  0007D4  6F83               	movwf	(??_efgtoa+1)& (0+255),b
  9012  0007D6  5181               	movf	efgtoa@c& (0+255),w,b
  9013  0007D8  6F84               	movwf	(??_efgtoa+2)& (0+255),b
  9014  0007DA  6B85               	clrf	(??_efgtoa+3)& (0+255),b
  9015  0007DC  5182               	movf	??_efgtoa& (0+255),w,b
  9016  0007DE  2784               	addwf	(??_efgtoa+2)& (0+255),f,b
  9017  0007E0  5183               	movf	(??_efgtoa+1)& (0+255),w,b
  9018  0007E2  2385               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9019  0007E4  5185               	movf	(??_efgtoa+3)& (0+255),w,b
  9020  0007E6  E10A               	bnz	u12060
  9021  0007E8  0E1A               	movlw	26
  9022  0007EA  5D84               	subwf	(??_efgtoa+2)& (0+255),w,b
  9023  0007EC  A0D8               	btfss	status,0,c
  9024  0007EE  EFFB  F003         	goto	u12061
  9025  0007F2  EFFE  F003         	goto	u12060
  9026  0007F6                     u12061:
  9027  0007F6  0E01               	movlw	1
  9028  0007F8  EFFF  F003         	goto	u12070
  9029  0007FC                     u12060:
  9030  0007FC  0E00               	movlw	0
  9031  0007FE                     u12070:
  9032  0007FE  6F89               	movwf	_efgtoa$3638& (0+255),b
  9033  000800  6B8A               	clrf	(_efgtoa$3638+1)& (0+255),b
  9034  000802                     
  9035                           ; BSR set to: 0
  9036  000802  5189               	movf	_efgtoa$3638& (0+255),w,b
  9037  000804  118A               	iorwf	(_efgtoa$3638+1)& (0+255),w,b
  9038  000806  B4D8               	btfsc	status,2,c
  9039  000808  EF08  F004         	goto	u12081
  9040  00080C  EF0A  F004         	goto	u12080
  9041  000810                     u12081:
  9042  000810  EF18  F004         	goto	l12262
  9043  000814                     u12080:
  9044  000814                     
  9045                           ; BSR set to: 0
  9046                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  9047  000814  0E50               	movlw	low _dbuf
  9048  000816  25B9               	addwf	efgtoa@n& (0+255),w,b
  9049  000818  6E0A               	movwf	strcpy@dest^0,c
  9050  00081A  0E02               	movlw	high _dbuf
  9051  00081C  21BA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9052  00081E  6E0B               	movwf	(strcpy@dest+1)^0,c
  9053  000820  0ED7               	movlw	low STR_9
  9054  000822  6E0C               	movwf	strcpy@src^0,c
  9055  000824  0E06               	movlw	high STR_9
  9056  000826  6E0D               	movwf	(strcpy@src+1)^0,c
  9057  000828  ECE7  F035         	call	_strcpy	;wreg free
  9058                           
  9059                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  9060  00082C  EF24  F004         	goto	l12264
  9061  000830                     l12262:
  9062                           
  9063                           ; BSR set to: 0
  9064                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  9065  000830  0E50               	movlw	low _dbuf
  9066  000832  25B9               	addwf	efgtoa@n& (0+255),w,b
  9067  000834  6E0A               	movwf	strcpy@dest^0,c
  9068  000836  0E02               	movlw	high _dbuf
  9069  000838  21BA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9070  00083A  6E0B               	movwf	(strcpy@dest+1)^0,c
  9071  00083C  0EDF               	movlw	low STR_10
  9072  00083E  6E0C               	movwf	strcpy@src^0,c
  9073  000840  0E06               	movlw	high STR_10
  9074  000842  6E0D               	movwf	(strcpy@src+1)^0,c
  9075  000844  ECE7  F035         	call	_strcpy	;wreg free
  9076  000848                     l12264:
  9077                           
  9078                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  9079  000848  0100               	movlb	0	; () banked
  9080  00084A  0EFD               	movlw	253
  9081  00084C  27A5               	addwf	efgtoa@w& (0+255),f,b
  9082  00084E  0EFF               	movlw	255
  9083  000850  23A6               	addwfc	(efgtoa@w+1)& (0+255),f,b
  9084  000852                     l12266:
  9085                           
  9086                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  9087  000852  C07B  F01A         	movff	efgtoa@fp,pad@fp
  9088  000856  C07C  F01B         	movff	efgtoa@fp+1,pad@fp+1
  9089  00085A  0E50               	movlw	low _dbuf
  9090  00085C  6E1C               	movwf	pad@buf^0,c
  9091  00085E  0E02               	movlw	high _dbuf
  9092  000860  6E1D               	movwf	(pad@buf+1)^0,c
  9093  000862  C0A5  F01E         	movff	efgtoa@w,pad@p
  9094  000866  C0A6  F01F         	movff	efgtoa@w+1,pad@p+1
  9095  00086A  EC5A  F02F         	call	_pad	;wreg free
  9096  00086E  C01A  F07B         	movff	?_pad,?_efgtoa
  9097  000872  C01B  F07C         	movff	?_pad+1,?_efgtoa+1
  9098  000876  EFA2  F009         	goto	l2385
  9099  00087A                     l12270:
  9100                           
  9101                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9102  00087A  C0B3  F00A         	movff	efgtoa@g,___fpclassifyf@x
  9103  00087E  C0B4  F00B         	movff	efgtoa@g+1,___fpclassifyf@x+1
  9104  000882  C0B5  F00C         	movff	efgtoa@g+2,___fpclassifyf@x+2
  9105  000886  C0B6  F00D         	movff	efgtoa@g+3,___fpclassifyf@x+3
  9106  00088A  ECA3  F02A         	call	___fpclassifyf	;wreg free
  9107  00088E  500A               	movf	?___fpclassifyf^0,w,c
  9108  000890  100B               	iorwf	(?___fpclassifyf+1)^0,w,c
  9109  000892  A4D8               	btfss	status,2,c
  9110  000894  EF4E  F004         	goto	u12091
  9111  000898  EF50  F004         	goto	u12090
  9112  00089C                     u12091:
  9113  00089C  EF90  F004         	goto	l12288
  9114  0008A0                     u12090:
  9115  0008A0  0EBF               	movlw	191
  9116  0008A2  0100               	movlb	0	; () banked
  9117  0008A4  6F82               	movwf	??_efgtoa& (0+255),b
  9118  0008A6  0EFF               	movlw	255
  9119  0008A8  6F83               	movwf	(??_efgtoa+1)& (0+255),b
  9120  0008AA  5181               	movf	efgtoa@c& (0+255),w,b
  9121  0008AC  6F84               	movwf	(??_efgtoa+2)& (0+255),b
  9122  0008AE  6B85               	clrf	(??_efgtoa+3)& (0+255),b
  9123  0008B0  5182               	movf	??_efgtoa& (0+255),w,b
  9124  0008B2  2784               	addwf	(??_efgtoa+2)& (0+255),f,b
  9125  0008B4  5183               	movf	(??_efgtoa+1)& (0+255),w,b
  9126  0008B6  2385               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9127  0008B8  5185               	movf	(??_efgtoa+3)& (0+255),w,b
  9128  0008BA  E10A               	bnz	u12100
  9129  0008BC  0E1A               	movlw	26
  9130  0008BE  5D84               	subwf	(??_efgtoa+2)& (0+255),w,b
  9131  0008C0  A0D8               	btfss	status,0,c
  9132  0008C2  EF65  F004         	goto	u12101
  9133  0008C6  EF68  F004         	goto	u12100
  9134  0008CA                     u12101:
  9135  0008CA  0E01               	movlw	1
  9136  0008CC  EF69  F004         	goto	u12110
  9137  0008D0                     u12100:
  9138  0008D0  0E00               	movlw	0
  9139  0008D2                     u12110:
  9140  0008D2  6F8B               	movwf	_efgtoa$3642& (0+255),b
  9141  0008D4  6B8C               	clrf	(_efgtoa$3642+1)& (0+255),b
  9142  0008D6                     
  9143                           ; BSR set to: 0
  9144  0008D6  518B               	movf	_efgtoa$3642& (0+255),w,b
  9145  0008D8  118C               	iorwf	(_efgtoa$3642+1)& (0+255),w,b
  9146  0008DA  B4D8               	btfsc	status,2,c
  9147  0008DC  EF72  F004         	goto	u12121
  9148  0008E0  EF74  F004         	goto	u12120
  9149  0008E4                     u12121:
  9150  0008E4  EF82  F004         	goto	l12280
  9151  0008E8                     u12120:
  9152  0008E8                     
  9153                           ; BSR set to: 0
  9154                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  9155  0008E8  0E50               	movlw	low _dbuf
  9156  0008EA  25B9               	addwf	efgtoa@n& (0+255),w,b
  9157  0008EC  6E0A               	movwf	strcpy@dest^0,c
  9158  0008EE  0E02               	movlw	high _dbuf
  9159  0008F0  21BA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9160  0008F2  6E0B               	movwf	(strcpy@dest+1)^0,c
  9161  0008F4  0EDB               	movlw	low STR_13
  9162  0008F6  6E0C               	movwf	strcpy@src^0,c
  9163  0008F8  0E06               	movlw	high STR_13
  9164  0008FA  6E0D               	movwf	(strcpy@src+1)^0,c
  9165  0008FC  ECE7  F035         	call	_strcpy	;wreg free
  9166                           
  9167                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  9168  000900  EF24  F004         	goto	l12264
  9169  000904                     l12280:
  9170                           
  9171                           ; BSR set to: 0
  9172                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  9173  000904  0E50               	movlw	low _dbuf
  9174  000906  25B9               	addwf	efgtoa@n& (0+255),w,b
  9175  000908  6E0A               	movwf	strcpy@dest^0,c
  9176  00090A  0E02               	movlw	high _dbuf
  9177  00090C  21BA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9178  00090E  6E0B               	movwf	(strcpy@dest+1)^0,c
  9179  000910  0EE3               	movlw	low STR_14
  9180  000912  6E0C               	movwf	strcpy@src^0,c
  9181  000914  0E06               	movlw	high STR_14
  9182  000916  6E0D               	movwf	(strcpy@src+1)^0,c
  9183  000918  ECE7  F035         	call	_strcpy	;wreg free
  9184  00091C  EF24  F004         	goto	l12264
  9185  000920                     l12288:
  9186                           
  9187                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  9188  000920  0E00               	movlw	0
  9189  000922  0100               	movlb	0	; () banked
  9190  000924  6FBB               	movwf	efgtoa@u& (0+255),b
  9191  000926  0E00               	movlw	0
  9192  000928  6FBC               	movwf	(efgtoa@u+1)& (0+255),b
  9193  00092A  0E80               	movlw	128
  9194  00092C  6FBD               	movwf	(efgtoa@u+2)& (0+255),b
  9195  00092E  0E3F               	movlw	63
  9196  000930  6FBE               	movwf	(efgtoa@u+3)& (0+255),b
  9197                           
  9198                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  9199  000932  0E00               	movlw	0
  9200  000934  6FB8               	movwf	(efgtoa@e+1)& (0+255),b
  9201  000936  0E00               	movlw	0
  9202  000938  6FB7               	movwf	efgtoa@e& (0+255),b
  9203  00093A                     
  9204                           ; BSR set to: 0
  9205                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  9206  00093A  C0B3  F00A         	movff	efgtoa@g,___fleq@ff1
  9207  00093E  C0B4  F00B         	movff	efgtoa@g+1,___fleq@ff1+1
  9208  000942  C0B5  F00C         	movff	efgtoa@g+2,___fleq@ff1+2
  9209  000946  C0B6  F00D         	movff	efgtoa@g+3,___fleq@ff1+3
  9210  00094A  0E00               	movlw	0
  9211  00094C  6E0E               	movwf	___fleq@ff2^0,c
  9212  00094E  0E00               	movlw	0
  9213  000950  6E0F               	movwf	(___fleq@ff2+1)^0,c
  9214  000952  0E00               	movlw	0
  9215  000954  6E10               	movwf	(___fleq@ff2+2)^0,c
  9216  000956  0E00               	movlw	0
  9217  000958  6E11               	movwf	(___fleq@ff2+3)^0,c
  9218  00095A  ECCA  F031         	call	___fleq	;wreg free
  9219  00095E  B0D8               	btfsc	status,0,c
  9220  000960  EFB4  F004         	goto	u12131
  9221  000964  EFB6  F004         	goto	u12130
  9222  000968                     u12131:
  9223  000968  EF39  F005         	goto	l12306
  9224  00096C                     u12130:
  9225  00096C  EFD5  F004         	goto	l12298
  9226  000970                     l12294:
  9227                           
  9228                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  9229  000970  C0BB  F00A         	movff	efgtoa@u,___flmul@b
  9230  000974  C0BC  F00B         	movff	efgtoa@u+1,___flmul@b+1
  9231  000978  C0BD  F00C         	movff	efgtoa@u+2,___flmul@b+2
  9232  00097C  C0BE  F00D         	movff	efgtoa@u+3,___flmul@b+3
  9233  000980  0E00               	movlw	0
  9234  000982  6E0E               	movwf	___flmul@a^0,c
  9235  000984  0E00               	movlw	0
  9236  000986  6E0F               	movwf	(___flmul@a+1)^0,c
  9237  000988  0E20               	movlw	32
  9238  00098A  6E10               	movwf	(___flmul@a+2)^0,c
  9239  00098C  0E41               	movlw	65
  9240  00098E  6E11               	movwf	(___flmul@a+3)^0,c
  9241  000990  ECA9  F01B         	call	___flmul	;wreg free
  9242  000994  C00A  F0BB         	movff	?___flmul,efgtoa@u
  9243  000998  C00B  F0BC         	movff	?___flmul+1,efgtoa@u+1
  9244  00099C  C00C  F0BD         	movff	?___flmul+2,efgtoa@u+2
  9245  0009A0  C00D  F0BE         	movff	?___flmul+3,efgtoa@u+3
  9246  0009A4                     
  9247                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  9248  0009A4  0100               	movlb	0	; () banked
  9249  0009A6  4BB7               	infsnz	efgtoa@e& (0+255),f,b
  9250  0009A8  2BB8               	incf	(efgtoa@e+1)& (0+255),f,b
  9251  0009AA                     l12298:
  9252                           
  9253                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  9254  0009AA  C0B3  F023         	movff	efgtoa@g,___flge@ff1
  9255  0009AE  C0B4  F024         	movff	efgtoa@g+1,___flge@ff1+1
  9256  0009B2  C0B5  F025         	movff	efgtoa@g+2,___flge@ff1+2
  9257  0009B6  C0B6  F026         	movff	efgtoa@g+3,___flge@ff1+3
  9258  0009BA  0E00               	movlw	0
  9259  0009BC  6E0E               	movwf	___flmul@a^0,c
  9260  0009BE  0E00               	movlw	0
  9261  0009C0  6E0F               	movwf	(___flmul@a+1)^0,c
  9262  0009C2  0E20               	movlw	32
  9263  0009C4  6E10               	movwf	(___flmul@a+2)^0,c
  9264  0009C6  0E41               	movlw	65
  9265  0009C8  6E11               	movwf	(___flmul@a+3)^0,c
  9266  0009CA  C0BB  F00A         	movff	efgtoa@u,___flmul@b
  9267  0009CE  C0BC  F00B         	movff	efgtoa@u+1,___flmul@b+1
  9268  0009D2  C0BD  F00C         	movff	efgtoa@u+2,___flmul@b+2
  9269  0009D6  C0BE  F00D         	movff	efgtoa@u+3,___flmul@b+3
  9270  0009DA  ECA9  F01B         	call	___flmul	;wreg free
  9271  0009DE  C00A  F027         	movff	?___flmul,___flge@ff2
  9272  0009E2  C00B  F028         	movff	?___flmul+1,___flge@ff2+1
  9273  0009E6  C00C  F029         	movff	?___flmul+2,___flge@ff2+2
  9274  0009EA  C00D  F02A         	movff	?___flmul+3,___flge@ff2+3
  9275  0009EE  EC21  F029         	call	___flge	;wreg free
  9276  0009F2  B0D8               	btfsc	status,0,c
  9277  0009F4  EFFE  F004         	goto	u12141
  9278  0009F8  EF00  F005         	goto	u12140
  9279  0009FC                     u12141:
  9280  0009FC  EFB8  F004         	goto	l12294
  9281  000A00                     u12140:
  9282  000A00  EF20  F005         	goto	l12304
  9283  000A04                     l12300:
  9284                           
  9285                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  9286  000A04  C0BB  F03B         	movff	efgtoa@u,___fldiv@b
  9287  000A08  C0BC  F03C         	movff	efgtoa@u+1,___fldiv@b+1
  9288  000A0C  C0BD  F03D         	movff	efgtoa@u+2,___fldiv@b+2
  9289  000A10  C0BE  F03E         	movff	efgtoa@u+3,___fldiv@b+3
  9290  000A14  0E00               	movlw	0
  9291  000A16  6E3F               	movwf	___fldiv@a^0,c
  9292  000A18  0E00               	movlw	0
  9293  000A1A  6E40               	movwf	(___fldiv@a+1)^0,c
  9294  000A1C  0E20               	movlw	32
  9295  000A1E  6E41               	movwf	(___fldiv@a+2)^0,c
  9296  000A20  0E41               	movlw	65
  9297  000A22  6E42               	movwf	(___fldiv@a+3)^0,c
  9298  000A24  ECBE  F01D         	call	___fldiv	;wreg free
  9299  000A28  C03B  F0BB         	movff	?___fldiv,efgtoa@u
  9300  000A2C  C03C  F0BC         	movff	?___fldiv+1,efgtoa@u+1
  9301  000A30  C03D  F0BD         	movff	?___fldiv+2,efgtoa@u+2
  9302  000A34  C03E  F0BE         	movff	?___fldiv+3,efgtoa@u+3
  9303  000A38                     
  9304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  9305  000A38  0100               	movlb	0	; () banked
  9306  000A3A  07B7               	decf	efgtoa@e& (0+255),f,b
  9307  000A3C  A0D8               	btfss	status,0,c
  9308  000A3E  07B8               	decf	(efgtoa@e+1)& (0+255),f,b
  9309  000A40                     l12304:
  9310                           
  9311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  9312  000A40  C0B3  F023         	movff	efgtoa@g,___flge@ff1
  9313  000A44  C0B4  F024         	movff	efgtoa@g+1,___flge@ff1+1
  9314  000A48  C0B5  F025         	movff	efgtoa@g+2,___flge@ff1+2
  9315  000A4C  C0B6  F026         	movff	efgtoa@g+3,___flge@ff1+3
  9316  000A50  C0BB  F027         	movff	efgtoa@u,___flge@ff2
  9317  000A54  C0BC  F028         	movff	efgtoa@u+1,___flge@ff2+1
  9318  000A58  C0BD  F029         	movff	efgtoa@u+2,___flge@ff2+2
  9319  000A5C  C0BE  F02A         	movff	efgtoa@u+3,___flge@ff2+3
  9320  000A60  EC21  F029         	call	___flge	;wreg free
  9321  000A64  A0D8               	btfss	status,0,c
  9322  000A66  EF37  F005         	goto	u12151
  9323  000A6A  EF39  F005         	goto	u12150
  9324  000A6E                     u12151:
  9325  000A6E  EF02  F005         	goto	l12300
  9326  000A72                     u12150:
  9327  000A72                     l12306:
  9328                           
  9329                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  9330  000A72  C081  F010         	movff	efgtoa@c,tolower@c
  9331  000A76  6A11               	clrf	(tolower@c+1)^0,c
  9332  000A78  EC88  F035         	call	_tolower	;wreg free
  9333  000A7C  5010               	movf	?_tolower^0,w,c
  9334  000A7E  0100               	movlb	0	; () banked
  9335  000A80  6FA8               	movwf	efgtoa@mode& (0+255),b
  9336  000A82                     
  9337                           ; BSR set to: 0
  9338                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  9339  000A82  C0A8  F0A7         	movff	efgtoa@mode,efgtoa@nmode
  9340  000A86                     
  9341                           ; BSR set to: 0
  9342                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  9343  000A86  0E67               	movlw	103
  9344  000A88  19A8               	xorwf	efgtoa@mode& (0+255),w,b
  9345  000A8A  A4D8               	btfss	status,2,c
  9346  000A8C  EF4A  F005         	goto	u12161
  9347  000A90  EF4C  F005         	goto	u12160
  9348  000A94                     u12161:
  9349  000A94  EF72  F005         	goto	l12320
  9350  000A98                     u12160:
  9351  000A98                     
  9352                           ; BSR set to: 0
  9353                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  9354  000A98  504D               	movf	_prec^0,w,c
  9355  000A9A  104E               	iorwf	(_prec+1)^0,w,c
  9356  000A9C  A4D8               	btfss	status,2,c
  9357  000A9E  EF53  F005         	goto	u12171
  9358  000AA2  EF55  F005         	goto	u12170
  9359  000AA6                     u12171:
  9360  000AA6  EF59  F005         	goto	l12316
  9361  000AAA                     u12170:
  9362  000AAA                     
  9363                           ; BSR set to: 0
  9364                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  9365  000AAA  0E00               	movlw	0
  9366  000AAC  6E4E               	movwf	(_prec+1)^0,c
  9367  000AAE  0E01               	movlw	1
  9368  000AB0  6E4D               	movwf	_prec^0,c
  9369  000AB2                     l12316:
  9370                           
  9371                           ; BSR set to: 0
  9372                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  9373  000AB2  BE4E               	btfsc	(_prec+1)^0,7,c
  9374  000AB4  EF66  F005         	goto	u12180
  9375  000AB8  504E               	movf	(_prec+1)^0,w,c
  9376  000ABA  E106               	bnz	u12181
  9377  000ABC  044D               	decf	_prec^0,w,c
  9378  000ABE  B0D8               	btfsc	status,0,c
  9379  000AC0  EF64  F005         	goto	u12181
  9380  000AC4  EF66  F005         	goto	u12180
  9381  000AC8                     u12181:
  9382  000AC8  EF6C  F005         	goto	l2403
  9383  000ACC                     u12180:
  9384  000ACC                     l12318:
  9385                           
  9386                           ; BSR set to: 0
  9387  000ACC  0E00               	movlw	0
  9388  000ACE  6FA4               	movwf	(efgtoa@p+1)& (0+255),b
  9389  000AD0  0E06               	movlw	6
  9390  000AD2  6FA3               	movwf	efgtoa@p& (0+255),b
  9391  000AD4  EF7B  F005         	goto	l12326
  9392  000AD8                     l2403:
  9393                           
  9394                           ; BSR set to: 0
  9395  000AD8  C04D  F0A3         	movff	_prec,efgtoa@p
  9396  000ADC  C04E  F0A4         	movff	_prec+1,efgtoa@p+1
  9397  000AE0  EF7B  F005         	goto	l12326
  9398  000AE4                     l12320:
  9399                           
  9400                           ; BSR set to: 0
  9401                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  9402  000AE4  BE4E               	btfsc	(_prec+1)^0,7,c
  9403  000AE6  EF77  F005         	goto	u12191
  9404  000AEA  EF79  F005         	goto	u12190
  9405  000AEE                     u12191:
  9406  000AEE  EF66  F005         	goto	l12318
  9407  000AF2                     u12190:
  9408  000AF2  EF6C  F005         	goto	l2403
  9409  000AF6                     l12326:
  9410                           
  9411                           ; BSR set to: 0
  9412                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  9413  000AF6  0E67               	movlw	103
  9414  000AF8  19A8               	xorwf	efgtoa@mode& (0+255),w,b
  9415  000AFA  A4D8               	btfss	status,2,c
  9416  000AFC  EF82  F005         	goto	u12201
  9417  000B00  EF84  F005         	goto	u12200
  9418  000B04                     u12201:
  9419  000B04  EFB3  F005         	goto	l12336
  9420  000B08                     u12200:
  9421  000B08                     
  9422                           ; BSR set to: 0
  9423                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  9424  000B08  AFB8               	btfss	(efgtoa@e+1)& (0+255),7,b
  9425  000B0A  EF92  F005         	goto	u12210
  9426  000B0E  0EFC               	movlw	252
  9427  000B10  5DB7               	subwf	efgtoa@e& (0+255),w,b
  9428  000B12  0EFF               	movlw	255
  9429  000B14  59B8               	subwfb	(efgtoa@e+1)& (0+255),w,b
  9430  000B16  A0D8               	btfss	status,0,c
  9431  000B18  EF90  F005         	goto	u12211
  9432  000B1C  EF92  F005         	goto	u12210
  9433  000B20                     u12211:
  9434  000B20  EFB1  F005         	goto	l12334
  9435  000B24                     u12210:
  9436  000B24                     
  9437                           ; BSR set to: 0
  9438  000B24  0EFF               	movlw	255
  9439  000B26  6F82               	movwf	??_efgtoa& (0+255),b
  9440  000B28  0EFF               	movlw	255
  9441  000B2A  6F83               	movwf	(??_efgtoa+1)& (0+255),b
  9442  000B2C  C0A3  F084         	movff	efgtoa@p,??_efgtoa+2
  9443  000B30  C0A4  F085         	movff	efgtoa@p+1,??_efgtoa+3
  9444  000B34  5182               	movf	??_efgtoa& (0+255),w,b
  9445  000B36  2784               	addwf	(??_efgtoa+2)& (0+255),f,b
  9446  000B38  5183               	movf	(??_efgtoa+1)& (0+255),w,b
  9447  000B3A  2385               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9448  000B3C  51B7               	movf	efgtoa@e& (0+255),w,b
  9449  000B3E  5D84               	subwf	(??_efgtoa+2)& (0+255),w,b
  9450  000B40  5185               	movf	(??_efgtoa+3)& (0+255),w,b
  9451  000B42  0A80               	xorlw	128
  9452  000B44  6F86               	movwf	(??_efgtoa+4)& (0+255),b
  9453  000B46  51B8               	movf	(efgtoa@e+1)& (0+255),w,b
  9454  000B48  0A80               	xorlw	128
  9455  000B4A  5986               	subwfb	(??_efgtoa+4)& (0+255),w,b
  9456  000B4C  A0D8               	btfss	status,0,c
  9457  000B4E  EFAB  F005         	goto	u12221
  9458  000B52  EFAD  F005         	goto	u12220
  9459  000B56                     u12221:
  9460  000B56  EFB1  F005         	goto	l12334
  9461  000B5A                     u12220:
  9462  000B5A                     
  9463                           ; BSR set to: 0
  9464                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  9465  000B5A  0E66               	movlw	102
  9466  000B5C  6FA7               	movwf	efgtoa@nmode& (0+255),b
  9467                           
  9468                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  9469  000B5E  EFB3  F005         	goto	l12336
  9470  000B62                     l12334:
  9471                           
  9472                           ; BSR set to: 0
  9473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  9474  000B62  0E65               	movlw	101
  9475  000B64  6FA7               	movwf	efgtoa@nmode& (0+255),b
  9476  000B66                     l12336:
  9477                           
  9478                           ; BSR set to: 0
  9479                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  9480  000B66  C0A3  F099         	movff	efgtoa@p,efgtoa@m
  9481  000B6A  C0A4  F09A         	movff	efgtoa@p+1,efgtoa@m+1
  9482  000B6E                     
  9483                           ; BSR set to: 0
  9484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  9485  000B6E  0E67               	movlw	103
  9486  000B70  19A8               	xorwf	efgtoa@mode& (0+255),w,b
  9487  000B72  A4D8               	btfss	status,2,c
  9488  000B74  EFBE  F005         	goto	u12231
  9489  000B78  EFC0  F005         	goto	u12230
  9490  000B7C                     u12231:
  9491  000B7C  EFD0  F005         	goto	l12344
  9492  000B80                     u12230:
  9493  000B80                     
  9494                           ; BSR set to: 0
  9495  000B80  0E66               	movlw	102
  9496  000B82  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  9497  000B84  A4D8               	btfss	status,2,c
  9498  000B86  EFC7  F005         	goto	u12241
  9499  000B8A  EFC9  F005         	goto	u12240
  9500  000B8E                     u12241:
  9501  000B8E  EFD2  F005         	goto	l12346
  9502  000B92                     u12240:
  9503  000B92                     
  9504                           ; BSR set to: 0
  9505  000B92  BFB8               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9506  000B94  EFD0  F005         	goto	u12250
  9507  000B98  EFCE  F005         	goto	u12251
  9508  000B9C                     u12251:
  9509  000B9C  EFD2  F005         	goto	l12346
  9510  000BA0                     u12250:
  9511  000BA0                     l12344:
  9512                           
  9513                           ; BSR set to: 0
  9514                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  9515  000BA0  4B99               	infsnz	efgtoa@m& (0+255),f,b
  9516  000BA2  2B9A               	incf	(efgtoa@m+1)& (0+255),f,b
  9517  000BA4                     l12346:
  9518                           
  9519                           ; BSR set to: 0
  9520                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  9521  000BA4  0E66               	movlw	102
  9522  000BA6  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  9523  000BA8  A4D8               	btfss	status,2,c
  9524  000BAA  EFD9  F005         	goto	u12261
  9525  000BAE  EFDB  F005         	goto	u12260
  9526  000BB2                     u12261:
  9527  000BB2  EFFB  F005         	goto	l12356
  9528  000BB6                     u12260:
  9529  000BB6                     
  9530                           ; BSR set to: 0
  9531                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  9532  000BB6  BFB8               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9533  000BB8  EFE2  F005         	goto	u12270
  9534  000BBC  EFE0  F005         	goto	u12271
  9535  000BC0                     u12271:
  9536  000BC0  EFEE  F005         	goto	l12352
  9537  000BC4                     u12270:
  9538  000BC4                     
  9539                           ; BSR set to: 0
  9540                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  9541  000BC4  0E00               	movlw	0
  9542  000BC6  6FBB               	movwf	efgtoa@u& (0+255),b
  9543  000BC8  0E00               	movlw	0
  9544  000BCA  6FBC               	movwf	(efgtoa@u+1)& (0+255),b
  9545  000BCC  0E80               	movlw	128
  9546  000BCE  6FBD               	movwf	(efgtoa@u+2)& (0+255),b
  9547  000BD0  0E3F               	movlw	63
  9548  000BD2  6FBE               	movwf	(efgtoa@u+3)& (0+255),b
  9549                           
  9550                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  9551  000BD4  0E00               	movlw	0
  9552  000BD6  6FB8               	movwf	(efgtoa@e+1)& (0+255),b
  9553  000BD8  0E00               	movlw	0
  9554  000BDA  6FB7               	movwf	efgtoa@e& (0+255),b
  9555  000BDC                     l12352:
  9556                           
  9557                           ; BSR set to: 0
  9558                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  9559  000BDC  0E67               	movlw	103
  9560  000BDE  19A8               	xorwf	efgtoa@mode& (0+255),w,b
  9561  000BE0  B4D8               	btfsc	status,2,c
  9562  000BE2  EFF5  F005         	goto	u12281
  9563  000BE6  EFF7  F005         	goto	u12280
  9564  000BEA                     u12281:
  9565  000BEA  EFFB  F005         	goto	l12356
  9566  000BEE                     u12280:
  9567  000BEE                     
  9568                           ; BSR set to: 0
  9569                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  9570  000BEE  51B7               	movf	efgtoa@e& (0+255),w,b
  9571  000BF0  2799               	addwf	efgtoa@m& (0+255),f,b
  9572  000BF2  51B8               	movf	(efgtoa@e+1)& (0+255),w,b
  9573  000BF4  239A               	addwfc	(efgtoa@m+1)& (0+255),f,b
  9574  000BF6                     l12356:
  9575                           
  9576                           ; BSR set to: 0
  9577                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  9578  000BF6  0E00               	movlw	0
  9579  000BF8  6FB2               	movwf	(efgtoa@i+1)& (0+255),b
  9580  000BFA  0E00               	movlw	0
  9581  000BFC  6FB1               	movwf	efgtoa@i& (0+255),b
  9582  000BFE                     
  9583                           ; BSR set to: 0
  9584                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  9585  000BFE  C0B3  F0A9         	movff	efgtoa@g,efgtoa@h
  9586  000C02  C0B4  F0AA         	movff	efgtoa@g+1,efgtoa@h+1
  9587  000C06  C0B5  F0AB         	movff	efgtoa@g+2,efgtoa@h+2
  9588  000C0A  C0B6  F0AC         	movff	efgtoa@g+3,efgtoa@h+3
  9589  000C0E                     
  9590                           ; BSR set to: 0
  9591                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  9592  000C0E  C0BB  F09B         	movff	efgtoa@u,efgtoa@ou
  9593  000C12  C0BC  F09C         	movff	efgtoa@u+1,efgtoa@ou+1
  9594  000C16  C0BD  F09D         	movff	efgtoa@u+2,efgtoa@ou+2
  9595  000C1A  C0BE  F09E         	movff	efgtoa@u+3,efgtoa@ou+3
  9596                           
  9597                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  9598  000C1E  EF8C  F006         	goto	l12370
  9599  000C22                     l12362:
  9600                           
  9601                           ; BSR set to: 0
  9602                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  9603  000C22  C0A9  F03B         	movff	efgtoa@h,___fldiv@b
  9604  000C26  C0AA  F03C         	movff	efgtoa@h+1,___fldiv@b+1
  9605  000C2A  C0AB  F03D         	movff	efgtoa@h+2,___fldiv@b+2
  9606  000C2E  C0AC  F03E         	movff	efgtoa@h+3,___fldiv@b+3
  9607  000C32  C0BB  F03F         	movff	efgtoa@u,___fldiv@a
  9608  000C36  C0BC  F040         	movff	efgtoa@u+1,___fldiv@a+1
  9609  000C3A  C0BD  F041         	movff	efgtoa@u+2,___fldiv@a+2
  9610  000C3E  C0BE  F042         	movff	efgtoa@u+3,___fldiv@a+3
  9611  000C42  ECBE  F01D         	call	___fldiv	;wreg free
  9612  000C46  C03B  F06D         	movff	?___fldiv,floorf@x
  9613  000C4A  C03C  F06E         	movff	?___fldiv+1,floorf@x+1
  9614  000C4E  C03D  F06F         	movff	?___fldiv+2,floorf@x+2
  9615  000C52  C03E  F070         	movff	?___fldiv+3,floorf@x+3
  9616  000C56  ECFB  F020         	call	_floorf	;wreg free
  9617  000C5A  C06D  F0AD         	movff	?_floorf,efgtoa@l
  9618  000C5E  C06E  F0AE         	movff	?_floorf+1,efgtoa@l+1
  9619  000C62  C06F  F0AF         	movff	?_floorf+2,efgtoa@l+2
  9620  000C66  C070  F0B0         	movff	?_floorf+3,efgtoa@l+3
  9621                           
  9622                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  9623  000C6A  C0AD  F023         	movff	efgtoa@l,___fltol@f1
  9624  000C6E  C0AE  F024         	movff	efgtoa@l+1,___fltol@f1+1
  9625  000C72  C0AF  F025         	movff	efgtoa@l+2,___fltol@f1+2
  9626  000C76  C0B0  F026         	movff	efgtoa@l+3,___fltol@f1+3
  9627  000C7A  EC1B  F028         	call	___fltol	;wreg free
  9628  000C7E  C023  F09F         	movff	?___fltol,efgtoa@d
  9629  000C82  C024  F0A0         	movff	?___fltol+1,efgtoa@d+1
  9630  000C86                     
  9631                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  9632  000C86  C0A9  F033         	movff	efgtoa@h,___flsub@b
  9633  000C8A  C0AA  F034         	movff	efgtoa@h+1,___flsub@b+1
  9634  000C8E  C0AB  F035         	movff	efgtoa@h+2,___flsub@b+2
  9635  000C92  C0AC  F036         	movff	efgtoa@h+3,___flsub@b+3
  9636  000C96  C0BB  F00E         	movff	efgtoa@u,___flmul@a
  9637  000C9A  C0BC  F00F         	movff	efgtoa@u+1,___flmul@a+1
  9638  000C9E  C0BD  F010         	movff	efgtoa@u+2,___flmul@a+2
  9639  000CA2  C0BE  F011         	movff	efgtoa@u+3,___flmul@a+3
  9640  000CA6  C0AD  F00A         	movff	efgtoa@l,___flmul@b
  9641  000CAA  C0AE  F00B         	movff	efgtoa@l+1,___flmul@b+1
  9642  000CAE  C0AF  F00C         	movff	efgtoa@l+2,___flmul@b+2
  9643  000CB2  C0B0  F00D         	movff	efgtoa@l+3,___flmul@b+3
  9644  000CB6  ECA9  F01B         	call	___flmul	;wreg free
  9645  000CBA  C00A  F037         	movff	?___flmul,___flsub@a
  9646  000CBE  C00B  F038         	movff	?___flmul+1,___flsub@a+1
  9647  000CC2  C00C  F039         	movff	?___flmul+2,___flsub@a+2
  9648  000CC6  C00D  F03A         	movff	?___flmul+3,___flsub@a+3
  9649  000CCA  EC8D  F037         	call	___flsub	;wreg free
  9650  000CCE  C033  F0A9         	movff	?___flsub,efgtoa@h
  9651  000CD2  C034  F0AA         	movff	?___flsub+1,efgtoa@h+1
  9652  000CD6  C035  F0AB         	movff	?___flsub+2,efgtoa@h+2
  9653  000CDA  C036  F0AC         	movff	?___flsub+3,efgtoa@h+3
  9654  000CDE                     
  9655                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  9656  000CDE  C0BB  F03B         	movff	efgtoa@u,___fldiv@b
  9657  000CE2  C0BC  F03C         	movff	efgtoa@u+1,___fldiv@b+1
  9658  000CE6  C0BD  F03D         	movff	efgtoa@u+2,___fldiv@b+2
  9659  000CEA  C0BE  F03E         	movff	efgtoa@u+3,___fldiv@b+3
  9660  000CEE  0E00               	movlw	0
  9661  000CF0  6E3F               	movwf	___fldiv@a^0,c
  9662  000CF2  0E00               	movlw	0
  9663  000CF4  6E40               	movwf	(___fldiv@a+1)^0,c
  9664  000CF6  0E20               	movlw	32
  9665  000CF8  6E41               	movwf	(___fldiv@a+2)^0,c
  9666  000CFA  0E41               	movlw	65
  9667  000CFC  6E42               	movwf	(___fldiv@a+3)^0,c
  9668  000CFE  ECBE  F01D         	call	___fldiv	;wreg free
  9669  000D02  C03B  F0BB         	movff	?___fldiv,efgtoa@u
  9670  000D06  C03C  F0BC         	movff	?___fldiv+1,efgtoa@u+1
  9671  000D0A  C03D  F0BD         	movff	?___fldiv+2,efgtoa@u+2
  9672  000D0E  C03E  F0BE         	movff	?___fldiv+3,efgtoa@u+3
  9673  000D12                     
  9674                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  9675  000D12  0100               	movlb	0	; () banked
  9676  000D14  4BB1               	infsnz	efgtoa@i& (0+255),f,b
  9677  000D16  2BB2               	incf	(efgtoa@i+1)& (0+255),f,b
  9678  000D18                     l12370:
  9679                           
  9680                           ; BSR set to: 0
  9681                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  9682  000D18  5199               	movf	efgtoa@m& (0+255),w,b
  9683  000D1A  5DB1               	subwf	efgtoa@i& (0+255),w,b
  9684  000D1C  51B2               	movf	(efgtoa@i+1)& (0+255),w,b
  9685  000D1E  0A80               	xorlw	128
  9686  000D20  6F82               	movwf	??_efgtoa& (0+255),b
  9687  000D22  519A               	movf	(efgtoa@m+1)& (0+255),w,b
  9688  000D24  0A80               	xorlw	128
  9689  000D26  5982               	subwfb	??_efgtoa& (0+255),w,b
  9690  000D28  A0D8               	btfss	status,0,c
  9691  000D2A  EF99  F006         	goto	u12291
  9692  000D2E  EF9B  F006         	goto	u12290
  9693  000D32                     u12291:
  9694  000D32  EF11  F006         	goto	l12362
  9695  000D36                     u12290:
  9696  000D36                     
  9697                           ; BSR set to: 0
  9698                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  9699  000D36  C0BB  F00A         	movff	efgtoa@u,___flmul@b
  9700  000D3A  C0BC  F00B         	movff	efgtoa@u+1,___flmul@b+1
  9701  000D3E  C0BD  F00C         	movff	efgtoa@u+2,___flmul@b+2
  9702  000D42  C0BE  F00D         	movff	efgtoa@u+3,___flmul@b+3
  9703  000D46  0E00               	movlw	0
  9704  000D48  6E0E               	movwf	___flmul@a^0,c
  9705  000D4A  0E00               	movlw	0
  9706  000D4C  6E0F               	movwf	(___flmul@a+1)^0,c
  9707  000D4E  0EA0               	movlw	160
  9708  000D50  6E10               	movwf	(___flmul@a+2)^0,c
  9709  000D52  0E40               	movlw	64
  9710  000D54  6E11               	movwf	(___flmul@a+3)^0,c
  9711  000D56  ECA9  F01B         	call	___flmul	;wreg free
  9712  000D5A  C00A  F0AD         	movff	?___flmul,efgtoa@l
  9713  000D5E  C00B  F0AE         	movff	?___flmul+1,efgtoa@l+1
  9714  000D62  C00C  F0AF         	movff	?___flmul+2,efgtoa@l+2
  9715  000D66  C00D  F0B0         	movff	?___flmul+3,efgtoa@l+3
  9716  000D6A                     
  9717                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  9718  000D6A  C0A9  F023         	movff	efgtoa@h,___flge@ff1
  9719  000D6E  C0AA  F024         	movff	efgtoa@h+1,___flge@ff1+1
  9720  000D72  C0AB  F025         	movff	efgtoa@h+2,___flge@ff1+2
  9721  000D76  C0AC  F026         	movff	efgtoa@h+3,___flge@ff1+3
  9722  000D7A  C0AD  F027         	movff	efgtoa@l,___flge@ff2
  9723  000D7E  C0AE  F028         	movff	efgtoa@l+1,___flge@ff2+1
  9724  000D82  C0AF  F029         	movff	efgtoa@l+2,___flge@ff2+2
  9725  000D86  C0B0  F02A         	movff	efgtoa@l+3,___flge@ff2+3
  9726  000D8A  EC21  F029         	call	___flge	;wreg free
  9727  000D8E  B0D8               	btfsc	status,0,c
  9728  000D90  EFCC  F006         	goto	u12301
  9729  000D94  EFCE  F006         	goto	u12300
  9730  000D98                     u12301:
  9731  000D98  EFD9  F006         	goto	l12378
  9732  000D9C                     u12300:
  9733  000D9C                     
  9734                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  9735  000D9C  0E00               	movlw	0
  9736  000D9E  0100               	movlb	0	; () banked
  9737  000DA0  6FAD               	movwf	efgtoa@l& (0+255),b
  9738  000DA2  0E00               	movlw	0
  9739  000DA4  6FAE               	movwf	(efgtoa@l+1)& (0+255),b
  9740  000DA6  0E00               	movlw	0
  9741  000DA8  6FAF               	movwf	(efgtoa@l+2)& (0+255),b
  9742  000DAA  0E00               	movlw	0
  9743  000DAC  6FB0               	movwf	(efgtoa@l+3)& (0+255),b
  9744                           
  9745                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  9746  000DAE  EF02  F007         	goto	l12384
  9747  000DB2                     l12378:
  9748                           
  9749                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  9750  000DB2  C0A9  F00A         	movff	efgtoa@h,___fleq@ff1
  9751  000DB6  C0AA  F00B         	movff	efgtoa@h+1,___fleq@ff1+1
  9752  000DBA  C0AB  F00C         	movff	efgtoa@h+2,___fleq@ff1+2
  9753  000DBE  C0AC  F00D         	movff	efgtoa@h+3,___fleq@ff1+3
  9754  000DC2  C0AD  F00E         	movff	efgtoa@l,___fleq@ff2
  9755  000DC6  C0AE  F00F         	movff	efgtoa@l+1,___fleq@ff2+1
  9756  000DCA  C0AF  F010         	movff	efgtoa@l+2,___fleq@ff2+2
  9757  000DCE  C0B0  F011         	movff	efgtoa@l+3,___fleq@ff2+3
  9758  000DD2  ECCA  F031         	call	___fleq	;wreg free
  9759  000DD6  A0D8               	btfss	status,0,c
  9760  000DD8  EFF0  F006         	goto	u12311
  9761  000DDC  EFF2  F006         	goto	u12310
  9762  000DE0                     u12311:
  9763  000DE0  EF02  F007         	goto	l12384
  9764  000DE4                     u12310:
  9765  000DE4  0100               	movlb	0	; () banked
  9766  000DE6  B19F               	btfsc	efgtoa@d& (0+255),0,b
  9767  000DE8  EFF8  F006         	goto	u12321
  9768  000DEC  EFFA  F006         	goto	u12320
  9769  000DF0                     u12321:
  9770  000DF0  EF02  F007         	goto	l12384
  9771  000DF4                     u12320:
  9772  000DF4                     
  9773                           ; BSR set to: 0
  9774                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  9775  000DF4  0E00               	movlw	0
  9776  000DF6  6FAD               	movwf	efgtoa@l& (0+255),b
  9777  000DF8  0E00               	movlw	0
  9778  000DFA  6FAE               	movwf	(efgtoa@l+1)& (0+255),b
  9779  000DFC  0E00               	movlw	0
  9780  000DFE  6FAF               	movwf	(efgtoa@l+2)& (0+255),b
  9781  000E00  0E00               	movlw	0
  9782  000E02  6FB0               	movwf	(efgtoa@l+3)& (0+255),b
  9783  000E04                     l12384:
  9784                           
  9785                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  9786  000E04  C0B3  F023         	movff	efgtoa@g,___fladd@b
  9787  000E08  C0B4  F024         	movff	efgtoa@g+1,___fladd@b+1
  9788  000E0C  C0B5  F025         	movff	efgtoa@g+2,___fladd@b+2
  9789  000E10  C0B6  F026         	movff	efgtoa@g+3,___fladd@b+3
  9790  000E14  C0AD  F027         	movff	efgtoa@l,___fladd@a
  9791  000E18  C0AE  F028         	movff	efgtoa@l+1,___fladd@a+1
  9792  000E1C  C0AF  F029         	movff	efgtoa@l+2,___fladd@a+2
  9793  000E20  C0B0  F02A         	movff	efgtoa@l+3,___fladd@a+3
  9794  000E24  EC31  F017         	call	___fladd	;wreg free
  9795  000E28  C023  F0A9         	movff	?___fladd,efgtoa@h
  9796  000E2C  C024  F0AA         	movff	?___fladd+1,efgtoa@h+1
  9797  000E30  C025  F0AB         	movff	?___fladd+2,efgtoa@h+2
  9798  000E34  C026  F0AC         	movff	?___fladd+3,efgtoa@h+3
  9799  000E38                     
  9800                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  9801  000E38  C0A9  F023         	movff	efgtoa@h,___flge@ff1
  9802  000E3C  C0AA  F024         	movff	efgtoa@h+1,___flge@ff1+1
  9803  000E40  C0AB  F025         	movff	efgtoa@h+2,___flge@ff1+2
  9804  000E44  C0AC  F026         	movff	efgtoa@h+3,___flge@ff1+3
  9805  000E48  0E00               	movlw	0
  9806  000E4A  6E0E               	movwf	___flmul@a^0,c
  9807  000E4C  0E00               	movlw	0
  9808  000E4E  6E0F               	movwf	(___flmul@a+1)^0,c
  9809  000E50  0E20               	movlw	32
  9810  000E52  6E10               	movwf	(___flmul@a+2)^0,c
  9811  000E54  0E41               	movlw	65
  9812  000E56  6E11               	movwf	(___flmul@a+3)^0,c
  9813  000E58  C09B  F00A         	movff	efgtoa@ou,___flmul@b
  9814  000E5C  C09C  F00B         	movff	efgtoa@ou+1,___flmul@b+1
  9815  000E60  C09D  F00C         	movff	efgtoa@ou+2,___flmul@b+2
  9816  000E64  C09E  F00D         	movff	efgtoa@ou+3,___flmul@b+3
  9817  000E68  ECA9  F01B         	call	___flmul	;wreg free
  9818  000E6C  C00A  F027         	movff	?___flmul,___flge@ff2
  9819  000E70  C00B  F028         	movff	?___flmul+1,___flge@ff2+1
  9820  000E74  C00C  F029         	movff	?___flmul+2,___flge@ff2+2
  9821  000E78  C00D  F02A         	movff	?___flmul+3,___flge@ff2+3
  9822  000E7C  EC21  F029         	call	___flge	;wreg free
  9823  000E80  A0D8               	btfss	status,0,c
  9824  000E82  EF45  F007         	goto	u12331
  9825  000E86  EF47  F007         	goto	u12330
  9826  000E8A                     u12331:
  9827  000E8A  EF70  F007         	goto	l12396
  9828  000E8E                     u12330:
  9829  000E8E                     
  9830                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  9831  000E8E  0100               	movlb	0	; () banked
  9832  000E90  4BB7               	infsnz	efgtoa@e& (0+255),f,b
  9833  000E92  2BB8               	incf	(efgtoa@e+1)& (0+255),f,b
  9834  000E94                     
  9835                           ; BSR set to: 0
  9836                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  9837  000E94  C09B  F00A         	movff	efgtoa@ou,___flmul@b
  9838  000E98  C09C  F00B         	movff	efgtoa@ou+1,___flmul@b+1
  9839  000E9C  C09D  F00C         	movff	efgtoa@ou+2,___flmul@b+2
  9840  000EA0  C09E  F00D         	movff	efgtoa@ou+3,___flmul@b+3
  9841  000EA4  0E00               	movlw	0
  9842  000EA6  6E0E               	movwf	___flmul@a^0,c
  9843  000EA8  0E00               	movlw	0
  9844  000EAA  6E0F               	movwf	(___flmul@a+1)^0,c
  9845  000EAC  0E20               	movlw	32
  9846  000EAE  6E10               	movwf	(___flmul@a+2)^0,c
  9847  000EB0  0E41               	movlw	65
  9848  000EB2  6E11               	movwf	(___flmul@a+3)^0,c
  9849  000EB4  ECA9  F01B         	call	___flmul	;wreg free
  9850  000EB8  C00A  F09B         	movff	?___flmul,efgtoa@ou
  9851  000EBC  C00B  F09C         	movff	?___flmul+1,efgtoa@ou+1
  9852  000EC0  C00C  F09D         	movff	?___flmul+2,efgtoa@ou+2
  9853  000EC4  C00D  F09E         	movff	?___flmul+3,efgtoa@ou+3
  9854  000EC8                     
  9855                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  9856  000EC8  0E66               	movlw	102
  9857  000ECA  0100               	movlb	0	; () banked
  9858  000ECC  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  9859  000ECE  A4D8               	btfss	status,2,c
  9860  000ED0  EF6C  F007         	goto	u12341
  9861  000ED4  EF6E  F007         	goto	u12340
  9862  000ED8                     u12341:
  9863  000ED8  EF70  F007         	goto	l12396
  9864  000EDC                     u12340:
  9865  000EDC                     
  9866                           ; BSR set to: 0
  9867                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  9868  000EDC  4B99               	infsnz	efgtoa@m& (0+255),f,b
  9869  000EDE  2B9A               	incf	(efgtoa@m+1)& (0+255),f,b
  9870  000EE0                     l12396:
  9871                           
  9872                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  9873  000EE0  C09B  F0BB         	movff	efgtoa@ou,efgtoa@u
  9874  000EE4  C09C  F0BC         	movff	efgtoa@ou+1,efgtoa@u+1
  9875  000EE8  C09D  F0BD         	movff	efgtoa@ou+2,efgtoa@u+2
  9876  000EEC  C09E  F0BE         	movff	efgtoa@ou+3,efgtoa@u+3
  9877  000EF0                     
  9878                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  9879  000EF0  0E65               	movlw	101
  9880  000EF2  0100               	movlb	0	; () banked
  9881  000EF4  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  9882  000EF6  B4D8               	btfsc	status,2,c
  9883  000EF8  EF80  F007         	goto	u12351
  9884  000EFC  EF82  F007         	goto	u12350
  9885  000F00                     u12351:
  9886  000F00  EF88  F007         	goto	l12402
  9887  000F04                     u12350:
  9888  000F04                     
  9889                           ; BSR set to: 0
  9890  000F04  C0B7  F097         	movff	efgtoa@e,efgtoa@ne
  9891  000F08  C0B8  F098         	movff	efgtoa@e+1,efgtoa@ne+1
  9892  000F0C  EF8C  F007         	goto	l2431
  9893  000F10                     l12402:
  9894                           
  9895                           ; BSR set to: 0
  9896  000F10  0E00               	movlw	0
  9897  000F12  6F98               	movwf	(efgtoa@ne+1)& (0+255),b
  9898  000F14  0E00               	movlw	0
  9899  000F16  6F97               	movwf	efgtoa@ne& (0+255),b
  9900  000F18                     l2431:
  9901                           
  9902                           ; BSR set to: 0
  9903                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  9904  000F18  0E00               	movlw	0
  9905  000F1A  6F96               	movwf	(efgtoa@pp+1)& (0+255),b
  9906  000F1C  0E00               	movlw	0
  9907  000F1E  6F95               	movwf	efgtoa@pp& (0+255),b
  9908                           
  9909                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  9910  000F20  0E00               	movlw	0
  9911  000F22  6F94               	movwf	(efgtoa@t+1)& (0+255),b
  9912  000F24  0E00               	movlw	0
  9913  000F26  6F93               	movwf	efgtoa@t& (0+255),b
  9914                           
  9915                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  9916  000F28  0E00               	movlw	0
  9917  000F2A  6FB2               	movwf	(efgtoa@i+1)& (0+255),b
  9918  000F2C  0E00               	movlw	0
  9919  000F2E  6FB1               	movwf	efgtoa@i& (0+255),b
  9920                           
  9921                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  9922  000F30  EF88  F008         	goto	l12452
  9923  000F34                     l12404:
  9924                           
  9925                           ; BSR set to: 0
  9926                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  9927  000F34  C0A9  F03B         	movff	efgtoa@h,___fldiv@b
  9928  000F38  C0AA  F03C         	movff	efgtoa@h+1,___fldiv@b+1
  9929  000F3C  C0AB  F03D         	movff	efgtoa@h+2,___fldiv@b+2
  9930  000F40  C0AC  F03E         	movff	efgtoa@h+3,___fldiv@b+3
  9931  000F44  C0BB  F03F         	movff	efgtoa@u,___fldiv@a
  9932  000F48  C0BC  F040         	movff	efgtoa@u+1,___fldiv@a+1
  9933  000F4C  C0BD  F041         	movff	efgtoa@u+2,___fldiv@a+2
  9934  000F50  C0BE  F042         	movff	efgtoa@u+3,___fldiv@a+3
  9935  000F54  ECBE  F01D         	call	___fldiv	;wreg free
  9936  000F58  C03B  F06D         	movff	?___fldiv,floorf@x
  9937  000F5C  C03C  F06E         	movff	?___fldiv+1,floorf@x+1
  9938  000F60  C03D  F06F         	movff	?___fldiv+2,floorf@x+2
  9939  000F64  C03E  F070         	movff	?___fldiv+3,floorf@x+3
  9940  000F68  ECFB  F020         	call	_floorf	;wreg free
  9941  000F6C  C06D  F0AD         	movff	?_floorf,efgtoa@l
  9942  000F70  C06E  F0AE         	movff	?_floorf+1,efgtoa@l+1
  9943  000F74  C06F  F0AF         	movff	?_floorf+2,efgtoa@l+2
  9944  000F78  C070  F0B0         	movff	?_floorf+3,efgtoa@l+3
  9945                           
  9946                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  9947  000F7C  C0AD  F023         	movff	efgtoa@l,___fltol@f1
  9948  000F80  C0AE  F024         	movff	efgtoa@l+1,___fltol@f1+1
  9949  000F84  C0AF  F025         	movff	efgtoa@l+2,___fltol@f1+2
  9950  000F88  C0B0  F026         	movff	efgtoa@l+3,___fltol@f1+3
  9951  000F8C  EC1B  F028         	call	___fltol	;wreg free
  9952  000F90  C023  F09F         	movff	?___fltol,efgtoa@d
  9953  000F94  C024  F0A0         	movff	?___fltol+1,efgtoa@d+1
  9954  000F98                     
  9955                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  9956  000F98  B84F               	btfsc	_flags^0,4,c
  9957  000F9A  EFD1  F007         	goto	u12361
  9958  000F9E  EFD3  F007         	goto	u12360
  9959  000FA2                     u12361:
  9960  000FA2  EFF1  F007         	goto	l12416
  9961  000FA6                     u12360:
  9962  000FA6  0100               	movlb	0	; () banked
  9963  000FA8  519F               	movf	efgtoa@d& (0+255),w,b
  9964  000FAA  11A0               	iorwf	(efgtoa@d+1)& (0+255),w,b
  9965  000FAC  A4D8               	btfss	status,2,c
  9966  000FAE  EFDB  F007         	goto	u12371
  9967  000FB2  EFDD  F007         	goto	u12370
  9968  000FB6                     u12371:
  9969  000FB6  EFF1  F007         	goto	l12416
  9970  000FBA                     u12370:
  9971  000FBA                     
  9972                           ; BSR set to: 0
  9973  000FBA  0E67               	movlw	103
  9974  000FBC  19A8               	xorwf	efgtoa@mode& (0+255),w,b
  9975  000FBE  A4D8               	btfss	status,2,c
  9976  000FC0  EFE4  F007         	goto	u12381
  9977  000FC4  EFE6  F007         	goto	u12380
  9978  000FC8                     u12381:
  9979  000FC8  EFF1  F007         	goto	l12416
  9980  000FCC                     u12380:
  9981  000FCC                     
  9982                           ; BSR set to: 0
  9983  000FCC  BF98               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9984  000FCE  EFED  F007         	goto	u12390
  9985  000FD2  EFEB  F007         	goto	u12391
  9986  000FD6                     u12391:
  9987  000FD6  EFF1  F007         	goto	l12416
  9988  000FDA                     u12390:
  9989  000FDA                     
  9990                           ; BSR set to: 0
  9991                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  9992  000FDA  4B93               	infsnz	efgtoa@t& (0+255),f,b
  9993  000FDC  2B94               	incf	(efgtoa@t+1)& (0+255),f,b
  9994                           
  9995                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  9996  000FDE  EF3C  F008         	goto	l12444
  9997  000FE2                     l12416:
  9998                           
  9999                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
 10000  000FE2  0100               	movlb	0	; () banked
 10001  000FE4  5195               	movf	efgtoa@pp& (0+255),w,b
 10002  000FE6  1196               	iorwf	(efgtoa@pp+1)& (0+255),w,b
 10003  000FE8  A4D8               	btfss	status,2,c
 10004  000FEA  EFF9  F007         	goto	u12401
 10005  000FEE  EFFB  F007         	goto	u12400
 10006  000FF2                     u12401:
 10007  000FF2  EF25  F008         	goto	l12436
 10008  000FF6                     u12400:
 10009  000FF6                     
 10010                           ; BSR set to: 0
 10011  000FF6  BF98               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 10012  000FF8  EF02  F008         	goto	u12410
 10013  000FFC  EF00  F008         	goto	u12411
 10014  001000                     u12411:
 10015  001000  EF25  F008         	goto	l12436
 10016  001004                     u12410:
 10017  001004                     
 10018                           ; BSR set to: 0
 10019                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
 10020  001004  0E50               	movlw	low _dbuf
 10021  001006  25B9               	addwf	efgtoa@n& (0+255),w,b
 10022  001008  6ED9               	movwf	fsr2l,c
 10023  00100A  0E02               	movlw	high _dbuf
 10024  00100C  21BA               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10025  00100E  6EDA               	movwf	fsr2h,c
 10026  001010  0E2E               	movlw	46
 10027  001012  6EDF               	movwf	indf2,c
 10028  001014                     
 10029                           ; BSR set to: 0
 10030  001014  4BB9               	infsnz	efgtoa@n& (0+255),f,b
 10031  001016  2BBA               	incf	(efgtoa@n+1)& (0+255),f,b
 10032  001018                     
 10033                           ; BSR set to: 0
 10034                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
 10035  001018  07A5               	decf	efgtoa@w& (0+255),f,b
 10036  00101A  A0D8               	btfss	status,0,c
 10037  00101C  07A6               	decf	(efgtoa@w+1)& (0+255),f,b
 10038  00101E                     
 10039                           ; BSR set to: 0
 10040                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
 10041  00101E  0E00               	movlw	0
 10042  001020  6F96               	movwf	(efgtoa@pp+1)& (0+255),b
 10043  001022  0E01               	movlw	1
 10044  001024  6F95               	movwf	efgtoa@pp& (0+255),b
 10045  001026  EF25  F008         	goto	l12436
 10046  00102A                     l12428:
 10047                           
 10048                           ; BSR set to: 0
 10049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
 10050  00102A  0E50               	movlw	low _dbuf
 10051  00102C  25B9               	addwf	efgtoa@n& (0+255),w,b
 10052  00102E  6ED9               	movwf	fsr2l,c
 10053  001030  0E02               	movlw	high _dbuf
 10054  001032  21BA               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10055  001034  6EDA               	movwf	fsr2h,c
 10056  001036  0E30               	movlw	48
 10057  001038  6EDF               	movwf	indf2,c
 10058  00103A                     
 10059                           ; BSR set to: 0
 10060  00103A  4BB9               	infsnz	efgtoa@n& (0+255),f,b
 10061  00103C  2BBA               	incf	(efgtoa@n+1)& (0+255),f,b
 10062  00103E                     
 10063                           ; BSR set to: 0
 10064                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
 10065  00103E  07A5               	decf	efgtoa@w& (0+255),f,b
 10066  001040  A0D8               	btfss	status,0,c
 10067  001042  07A6               	decf	(efgtoa@w+1)& (0+255),f,b
 10068  001044                     
 10069                           ; BSR set to: 0
 10070                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
 10071  001044  0793               	decf	efgtoa@t& (0+255),f,b
 10072  001046  A0D8               	btfss	status,0,c
 10073  001048  0794               	decf	(efgtoa@t+1)& (0+255),f,b
 10074  00104A                     l12436:
 10075                           
 10076                           ; BSR set to: 0
 10077                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
 10078  00104A  5193               	movf	efgtoa@t& (0+255),w,b
 10079  00104C  1194               	iorwf	(efgtoa@t+1)& (0+255),w,b
 10080  00104E  A4D8               	btfss	status,2,c
 10081  001050  EF2C  F008         	goto	u12421
 10082  001054  EF2E  F008         	goto	u12420
 10083  001058                     u12421:
 10084  001058  EF15  F008         	goto	l12428
 10085  00105C                     u12420:
 10086  00105C                     
 10087                           ; BSR set to: 0
 10088                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
 10089  00105C  0E50               	movlw	low _dbuf
 10090  00105E  25B9               	addwf	efgtoa@n& (0+255),w,b
 10091  001060  6ED9               	movwf	fsr2l,c
 10092  001062  0E02               	movlw	high _dbuf
 10093  001064  21BA               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10094  001066  6EDA               	movwf	fsr2h,c
 10095  001068  519F               	movf	efgtoa@d& (0+255),w,b
 10096  00106A  0F30               	addlw	48
 10097  00106C  6EDF               	movwf	indf2,c
 10098  00106E                     
 10099                           ; BSR set to: 0
 10100  00106E  4BB9               	infsnz	efgtoa@n& (0+255),f,b
 10101  001070  2BBA               	incf	(efgtoa@n+1)& (0+255),f,b
 10102  001072                     
 10103                           ; BSR set to: 0
 10104                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
 10105  001072  07A5               	decf	efgtoa@w& (0+255),f,b
 10106  001074  A0D8               	btfss	status,0,c
 10107  001076  07A6               	decf	(efgtoa@w+1)& (0+255),f,b
 10108  001078                     l12444:
 10109                           
 10110                           ; BSR set to: 0
 10111                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
 10112  001078  C0A9  F033         	movff	efgtoa@h,___flsub@b
 10113  00107C  C0AA  F034         	movff	efgtoa@h+1,___flsub@b+1
 10114  001080  C0AB  F035         	movff	efgtoa@h+2,___flsub@b+2
 10115  001084  C0AC  F036         	movff	efgtoa@h+3,___flsub@b+3
 10116  001088  C0BB  F00E         	movff	efgtoa@u,___flmul@a
 10117  00108C  C0BC  F00F         	movff	efgtoa@u+1,___flmul@a+1
 10118  001090  C0BD  F010         	movff	efgtoa@u+2,___flmul@a+2
 10119  001094  C0BE  F011         	movff	efgtoa@u+3,___flmul@a+3
 10120  001098  C0AD  F00A         	movff	efgtoa@l,___flmul@b
 10121  00109C  C0AE  F00B         	movff	efgtoa@l+1,___flmul@b+1
 10122  0010A0  C0AF  F00C         	movff	efgtoa@l+2,___flmul@b+2
 10123  0010A4  C0B0  F00D         	movff	efgtoa@l+3,___flmul@b+3
 10124  0010A8  ECA9  F01B         	call	___flmul	;wreg free
 10125  0010AC  C00A  F037         	movff	?___flmul,___flsub@a
 10126  0010B0  C00B  F038         	movff	?___flmul+1,___flsub@a+1
 10127  0010B4  C00C  F039         	movff	?___flmul+2,___flsub@a+2
 10128  0010B8  C00D  F03A         	movff	?___flmul+3,___flsub@a+3
 10129  0010BC  EC8D  F037         	call	___flsub	;wreg free
 10130  0010C0  C033  F0A9         	movff	?___flsub,efgtoa@h
 10131  0010C4  C034  F0AA         	movff	?___flsub+1,efgtoa@h+1
 10132  0010C8  C035  F0AB         	movff	?___flsub+2,efgtoa@h+2
 10133  0010CC  C036  F0AC         	movff	?___flsub+3,efgtoa@h+3
 10134  0010D0                     
 10135                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
 10136  0010D0  C0BB  F03B         	movff	efgtoa@u,___fldiv@b
 10137  0010D4  C0BC  F03C         	movff	efgtoa@u+1,___fldiv@b+1
 10138  0010D8  C0BD  F03D         	movff	efgtoa@u+2,___fldiv@b+2
 10139  0010DC  C0BE  F03E         	movff	efgtoa@u+3,___fldiv@b+3
 10140  0010E0  0E00               	movlw	0
 10141  0010E2  6E3F               	movwf	___fldiv@a^0,c
 10142  0010E4  0E00               	movlw	0
 10143  0010E6  6E40               	movwf	(___fldiv@a+1)^0,c
 10144  0010E8  0E20               	movlw	32
 10145  0010EA  6E41               	movwf	(___fldiv@a+2)^0,c
 10146  0010EC  0E41               	movlw	65
 10147  0010EE  6E42               	movwf	(___fldiv@a+3)^0,c
 10148  0010F0  ECBE  F01D         	call	___fldiv	;wreg free
 10149  0010F4  C03B  F0BB         	movff	?___fldiv,efgtoa@u
 10150  0010F8  C03C  F0BC         	movff	?___fldiv+1,efgtoa@u+1
 10151  0010FC  C03D  F0BD         	movff	?___fldiv+2,efgtoa@u+2
 10152  001100  C03E  F0BE         	movff	?___fldiv+3,efgtoa@u+3
 10153  001104                     
 10154                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
 10155  001104  0100               	movlb	0	; () banked
 10156  001106  0797               	decf	efgtoa@ne& (0+255),f,b
 10157  001108  A0D8               	btfss	status,0,c
 10158  00110A  0798               	decf	(efgtoa@ne+1)& (0+255),f,b
 10159  00110C                     
 10160                           ; BSR set to: 0
 10161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
 10162  00110C  4BB1               	infsnz	efgtoa@i& (0+255),f,b
 10163  00110E  2BB2               	incf	(efgtoa@i+1)& (0+255),f,b
 10164  001110                     l12452:
 10165                           
 10166                           ; BSR set to: 0
 10167                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
 10168  001110  5199               	movf	efgtoa@m& (0+255),w,b
 10169  001112  5DB1               	subwf	efgtoa@i& (0+255),w,b
 10170  001114  51B2               	movf	(efgtoa@i+1)& (0+255),w,b
 10171  001116  0A80               	xorlw	128
 10172  001118  6F82               	movwf	??_efgtoa& (0+255),b
 10173  00111A  519A               	movf	(efgtoa@m+1)& (0+255),w,b
 10174  00111C  0A80               	xorlw	128
 10175  00111E  5982               	subwfb	??_efgtoa& (0+255),w,b
 10176  001120  B0D8               	btfsc	status,0,c
 10177  001122  EF95  F008         	goto	u12431
 10178  001126  EF97  F008         	goto	u12430
 10179  00112A                     u12431:
 10180  00112A  EFA5  F008         	goto	l12456
 10181  00112E                     u12430:
 10182  00112E                     
 10183                           ; BSR set to: 0
 10184  00112E  BFBA               	btfsc	(efgtoa@n+1)& (0+255),7,b
 10185  001130  EFA3  F008         	goto	u12441
 10186  001134  51BA               	movf	(efgtoa@n+1)& (0+255),w,b
 10187  001136  E109               	bnz	u12440
 10188  001138  0E4B               	movlw	75
 10189  00113A  5DB9               	subwf	efgtoa@n& (0+255),w,b
 10190  00113C  A0D8               	btfss	status,0,c
 10191  00113E  EFA3  F008         	goto	u12441
 10192  001142  EFA5  F008         	goto	u12440
 10193  001146                     u12441:
 10194  001146  EF9A  F007         	goto	l12404
 10195  00114A                     u12440:
 10196  00114A                     l12456:
 10197                           
 10198                           ; BSR set to: 0
 10199                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
 10200  00114A  5195               	movf	efgtoa@pp& (0+255),w,b
 10201  00114C  1196               	iorwf	(efgtoa@pp+1)& (0+255),w,b
 10202  00114E  A4D8               	btfss	status,2,c
 10203  001150  EFAC  F008         	goto	u12451
 10204  001154  EFAE  F008         	goto	u12450
 10205  001158                     u12451:
 10206  001158  EFBF  F008         	goto	l12464
 10207  00115C                     u12450:
 10208  00115C                     
 10209                           ; BSR set to: 0
 10210  00115C  A84F               	btfss	_flags^0,4,c
 10211  00115E  EFB3  F008         	goto	u12461
 10212  001162  EFB5  F008         	goto	u12460
 10213  001166                     u12461:
 10214  001166  EFBF  F008         	goto	l12464
 10215  00116A                     u12460:
 10216  00116A                     
 10217                           ; BSR set to: 0
 10218                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
 10219  00116A  0E50               	movlw	low _dbuf
 10220  00116C  25B9               	addwf	efgtoa@n& (0+255),w,b
 10221  00116E  6ED9               	movwf	fsr2l,c
 10222  001170  0E02               	movlw	high _dbuf
 10223  001172  21BA               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10224  001174  6EDA               	movwf	fsr2h,c
 10225  001176  0E2E               	movlw	46
 10226  001178  6EDF               	movwf	indf2,c
 10227  00117A                     
 10228                           ; BSR set to: 0
 10229  00117A  4BB9               	infsnz	efgtoa@n& (0+255),f,b
 10230  00117C  2BBA               	incf	(efgtoa@n+1)& (0+255),f,b
 10231  00117E                     l12464:
 10232                           
 10233                           ; BSR set to: 0
 10234                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
 10235  00117E  0E50               	movlw	low _dbuf
 10236  001180  25B9               	addwf	efgtoa@n& (0+255),w,b
 10237  001182  6ED9               	movwf	fsr2l,c
 10238  001184  0E02               	movlw	high _dbuf
 10239  001186  21BA               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10240  001188  6EDA               	movwf	fsr2h,c
 10241  00118A  0E00               	movlw	0
 10242  00118C  6EDF               	movwf	indf2,c
 10243  00118E                     
 10244                           ; BSR set to: 0
 10245                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
 10246  00118E  0E65               	movlw	101
 10247  001190  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
 10248  001192  A4D8               	btfss	status,2,c
 10249  001194  EFCE  F008         	goto	u12471
 10250  001198  EFD0  F008         	goto	u12470
 10251  00119C                     u12471:
 10252  00119C  EF29  F004         	goto	l12266
 10253  0011A0                     u12470:
 10254  0011A0                     
 10255                           ; BSR set to: 0
 10256                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
 10257  0011A0  0E00               	movlw	0
 10258  0011A2  6FB2               	movwf	(efgtoa@i+1)& (0+255),b
 10259  0011A4  0E4F               	movlw	79
 10260  0011A6  6FB1               	movwf	efgtoa@i& (0+255),b
 10261  0011A8                     
 10262                           ; BSR set to: 0
 10263                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
 10264  0011A8  0E50               	movlw	low _dbuf
 10265  0011AA  25B1               	addwf	efgtoa@i& (0+255),w,b
 10266  0011AC  6ED9               	movwf	fsr2l,c
 10267  0011AE  0E02               	movlw	high _dbuf
 10268  0011B0  21B2               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10269  0011B2  6EDA               	movwf	fsr2h,c
 10270  0011B4  0E00               	movlw	0
 10271  0011B6  6EDF               	movwf	indf2,c
 10272  0011B8                     
 10273                           ; BSR set to: 0
 10274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
 10275  0011B8  0E00               	movlw	0
 10276  0011BA  6FA2               	movwf	(efgtoa@sign+1)& (0+255),b
 10277  0011BC  0E00               	movlw	0
 10278  0011BE  6FA1               	movwf	efgtoa@sign& (0+255),b
 10279  0011C0                     
 10280                           ; BSR set to: 0
 10281                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
 10282  0011C0  BFB8               	btfsc	(efgtoa@e+1)& (0+255),7,b
 10283  0011C2  EFE7  F008         	goto	u12480
 10284  0011C6  EFE5  F008         	goto	u12481
 10285  0011CA                     u12481:
 10286  0011CA  EFEF  F008         	goto	l12480
 10287  0011CE                     u12480:
 10288  0011CE                     
 10289                           ; BSR set to: 0
 10290                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
 10291  0011CE  0E00               	movlw	0
 10292  0011D0  6FA2               	movwf	(efgtoa@sign+1)& (0+255),b
 10293  0011D2  0E01               	movlw	1
 10294  0011D4  6FA1               	movwf	efgtoa@sign& (0+255),b
 10295  0011D6                     
 10296                           ; BSR set to: 0
 10297                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
 10298  0011D6  6DB7               	negf	efgtoa@e& (0+255),b
 10299  0011D8  1FB8               	comf	(efgtoa@e+1)& (0+255),f,b
 10300  0011DA  B0D8               	btfsc	status,0,c
 10301  0011DC  2BB8               	incf	(efgtoa@e+1)& (0+255),f,b
 10302  0011DE                     l12480:
 10303                           
 10304                           ; BSR set to: 0
 10305                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
 10306  0011DE  0E00               	movlw	0
 10307  0011E0  6FA4               	movwf	(efgtoa@p+1)& (0+255),b
 10308  0011E2  0E02               	movlw	2
 10309  0011E4  6FA3               	movwf	efgtoa@p& (0+255),b
 10310                           
 10311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
 10312  0011E6  EF20  F009         	goto	l12492
 10313  0011EA                     l12482:
 10314                           
 10315                           ; BSR set to: 0
 10316                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
 10317  0011EA  07B1               	decf	efgtoa@i& (0+255),f,b
 10318  0011EC  A0D8               	btfss	status,0,c
 10319  0011EE  07B2               	decf	(efgtoa@i+1)& (0+255),f,b
 10320  0011F0                     
 10321                           ; BSR set to: 0
 10322                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
 10323  0011F0  0E50               	movlw	low _dbuf
 10324  0011F2  25B1               	addwf	efgtoa@i& (0+255),w,b
 10325  0011F4  6ED9               	movwf	fsr2l,c
 10326  0011F6  0E02               	movlw	high _dbuf
 10327  0011F8  21B2               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10328  0011FA  6EDA               	movwf	fsr2h,c
 10329  0011FC  C0B7  F012         	movff	efgtoa@e,___awmod@dividend
 10330  001200  C0B8  F013         	movff	efgtoa@e+1,___awmod@dividend+1
 10331  001204  0E00               	movlw	0
 10332  001206  6E15               	movwf	(___awmod@divisor+1)^0,c
 10333  001208  0E0A               	movlw	10
 10334  00120A  6E14               	movwf	___awmod@divisor^0,c
 10335  00120C  EC19  F030         	call	___awmod	;wreg free
 10336  001210  5012               	movf	?___awmod^0,w,c
 10337  001212  0F30               	addlw	48
 10338  001214  6EDF               	movwf	indf2,c
 10339  001216                     
 10340                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
 10341  001216  C0B7  F00A         	movff	efgtoa@e,___awdiv@dividend
 10342  00121A  C0B8  F00B         	movff	efgtoa@e+1,___awdiv@dividend+1
 10343  00121E  0E00               	movlw	0
 10344  001220  6E0D               	movwf	(___awdiv@divisor+1)^0,c
 10345  001222  0E0A               	movlw	10
 10346  001224  6E0C               	movwf	___awdiv@divisor^0,c
 10347  001226  ECF8  F02E         	call	___awdiv	;wreg free
 10348  00122A  C00A  F0B7         	movff	?___awdiv,efgtoa@e
 10349  00122E  C00B  F0B8         	movff	?___awdiv+1,efgtoa@e+1
 10350  001232                     
 10351                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
 10352  001232  0100               	movlb	0	; () banked
 10353  001234  07A3               	decf	efgtoa@p& (0+255),f,b
 10354  001236  A0D8               	btfss	status,0,c
 10355  001238  07A4               	decf	(efgtoa@p+1)& (0+255),f,b
 10356  00123A                     
 10357                           ; BSR set to: 0
 10358                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
 10359  00123A  07A5               	decf	efgtoa@w& (0+255),f,b
 10360  00123C  A0D8               	btfss	status,0,c
 10361  00123E  07A6               	decf	(efgtoa@w+1)& (0+255),f,b
 10362  001240                     l12492:
 10363                           
 10364                           ; BSR set to: 0
 10365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
 10366  001240  51B7               	movf	efgtoa@e& (0+255),w,b
 10367  001242  11B8               	iorwf	(efgtoa@e+1)& (0+255),w,b
 10368  001244  A4D8               	btfss	status,2,c
 10369  001246  EF27  F009         	goto	u12491
 10370  00124A  EF29  F009         	goto	u12490
 10371  00124E                     u12491:
 10372  00124E  EFF5  F008         	goto	l12482
 10373  001252                     u12490:
 10374  001252                     
 10375                           ; BSR set to: 0
 10376  001252  BFA4               	btfsc	(efgtoa@p+1)& (0+255),7,b
 10377  001254  EF36  F009         	goto	u12500
 10378  001258  51A4               	movf	(efgtoa@p+1)& (0+255),w,b
 10379  00125A  E106               	bnz	u12501
 10380  00125C  05A3               	decf	efgtoa@p& (0+255),w,b
 10381  00125E  B0D8               	btfsc	status,0,c
 10382  001260  EF34  F009         	goto	u12501
 10383  001264  EF36  F009         	goto	u12500
 10384  001268                     u12501:
 10385  001268  EFF5  F008         	goto	l12482
 10386  00126C                     u12500:
 10387  00126C                     
 10388                           ; BSR set to: 0
 10389                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
 10390  00126C  07B1               	decf	efgtoa@i& (0+255),f,b
 10391  00126E  A0D8               	btfss	status,0,c
 10392  001270  07B2               	decf	(efgtoa@i+1)& (0+255),f,b
 10393  001272                     
 10394                           ; BSR set to: 0
 10395                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
 10396  001272  51A1               	movf	efgtoa@sign& (0+255),w,b
 10397  001274  11A2               	iorwf	(efgtoa@sign+1)& (0+255),w,b
 10398  001276  A4D8               	btfss	status,2,c
 10399  001278  EF40  F009         	goto	u12511
 10400  00127C  EF42  F009         	goto	u12510
 10401  001280                     u12511:
 10402  001280  EF48  F009         	goto	l12502
 10403  001284                     u12510:
 10404  001284                     
 10405                           ; BSR set to: 0
 10406  001284  0E00               	movlw	0
 10407  001286  6F8E               	movwf	(_efgtoa$3646+1)& (0+255),b
 10408  001288  0E2B               	movlw	43
 10409  00128A  6F8D               	movwf	_efgtoa$3646& (0+255),b
 10410  00128C  EF4C  F009         	goto	l12504
 10411  001290                     l12502:
 10412                           
 10413                           ; BSR set to: 0
 10414  001290  0E00               	movlw	0
 10415  001292  6F8E               	movwf	(_efgtoa$3646+1)& (0+255),b
 10416  001294  0E2D               	movlw	45
 10417  001296  6F8D               	movwf	_efgtoa$3646& (0+255),b
 10418  001298                     l12504:
 10419                           
 10420                           ; BSR set to: 0
 10421  001298  0E50               	movlw	low _dbuf
 10422  00129A  25B1               	addwf	efgtoa@i& (0+255),w,b
 10423  00129C  6ED9               	movwf	fsr2l,c
 10424  00129E  0E02               	movlw	high _dbuf
 10425  0012A0  21B2               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10426  0012A2  6EDA               	movwf	fsr2h,c
 10427  0012A4  C08D  FFDF         	movff	_efgtoa$3646,indf2
 10428  0012A8                     
 10429                           ; BSR set to: 0
 10430                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
 10431  0012A8  07A5               	decf	efgtoa@w& (0+255),f,b
 10432  0012AA  A0D8               	btfss	status,0,c
 10433  0012AC  07A6               	decf	(efgtoa@w+1)& (0+255),f,b
 10434  0012AE                     
 10435                           ; BSR set to: 0
 10436                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 10437  0012AE  07B1               	decf	efgtoa@i& (0+255),f,b
 10438  0012B0  A0D8               	btfss	status,0,c
 10439  0012B2  07B2               	decf	(efgtoa@i+1)& (0+255),f,b
 10440  0012B4                     
 10441                           ; BSR set to: 0
 10442  0012B4  0EBF               	movlw	191
 10443  0012B6  6F82               	movwf	??_efgtoa& (0+255),b
 10444  0012B8  0EFF               	movlw	255
 10445  0012BA  6F83               	movwf	(??_efgtoa+1)& (0+255),b
 10446  0012BC  5181               	movf	efgtoa@c& (0+255),w,b
 10447  0012BE  6F84               	movwf	(??_efgtoa+2)& (0+255),b
 10448  0012C0  6B85               	clrf	(??_efgtoa+3)& (0+255),b
 10449  0012C2  5182               	movf	??_efgtoa& (0+255),w,b
 10450  0012C4  2784               	addwf	(??_efgtoa+2)& (0+255),f,b
 10451  0012C6  5183               	movf	(??_efgtoa+1)& (0+255),w,b
 10452  0012C8  2385               	addwfc	(??_efgtoa+3)& (0+255),f,b
 10453  0012CA  5185               	movf	(??_efgtoa+3)& (0+255),w,b
 10454  0012CC  E10A               	bnz	u12520
 10455  0012CE  0E1A               	movlw	26
 10456  0012D0  5D84               	subwf	(??_efgtoa+2)& (0+255),w,b
 10457  0012D2  A0D8               	btfss	status,0,c
 10458  0012D4  EF6E  F009         	goto	u12521
 10459  0012D8  EF71  F009         	goto	u12520
 10460  0012DC                     u12521:
 10461  0012DC  0E01               	movlw	1
 10462  0012DE  EF72  F009         	goto	u12530
 10463  0012E2                     u12520:
 10464  0012E2  0E00               	movlw	0
 10465  0012E4                     u12530:
 10466  0012E4  6F91               	movwf	_efgtoa$3648& (0+255),b
 10467  0012E6  6B92               	clrf	(_efgtoa$3648+1)& (0+255),b
 10468  0012E8                     
 10469                           ; BSR set to: 0
 10470  0012E8  5191               	movf	_efgtoa$3648& (0+255),w,b
 10471  0012EA  1192               	iorwf	(_efgtoa$3648+1)& (0+255),w,b
 10472  0012EC  A4D8               	btfss	status,2,c
 10473  0012EE  EF7B  F009         	goto	u12541
 10474  0012F2  EF7D  F009         	goto	u12540
 10475  0012F6                     u12541:
 10476  0012F6  EF83  F009         	goto	l12518
 10477  0012FA                     u12540:
 10478  0012FA                     
 10479                           ; BSR set to: 0
 10480  0012FA  0E00               	movlw	0
 10481  0012FC  6F90               	movwf	(_efgtoa$3647+1)& (0+255),b
 10482  0012FE  0E65               	movlw	101
 10483  001300  6F8F               	movwf	_efgtoa$3647& (0+255),b
 10484  001302  EF87  F009         	goto	l12520
 10485  001306                     l12518:
 10486                           
 10487                           ; BSR set to: 0
 10488  001306  0E00               	movlw	0
 10489  001308  6F90               	movwf	(_efgtoa$3647+1)& (0+255),b
 10490  00130A  0E45               	movlw	69
 10491  00130C  6F8F               	movwf	_efgtoa$3647& (0+255),b
 10492  00130E                     l12520:
 10493                           
 10494                           ; BSR set to: 0
 10495  00130E  0E50               	movlw	low _dbuf
 10496  001310  25B1               	addwf	efgtoa@i& (0+255),w,b
 10497  001312  6ED9               	movwf	fsr2l,c
 10498  001314  0E02               	movlw	high _dbuf
 10499  001316  21B2               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10500  001318  6EDA               	movwf	fsr2h,c
 10501  00131A  C08F  FFDF         	movff	_efgtoa$3647,indf2
 10502  00131E                     
 10503                           ; BSR set to: 0
 10504                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
 10505  00131E  07A5               	decf	efgtoa@w& (0+255),f,b
 10506  001320  A0D8               	btfss	status,0,c
 10507  001322  07A6               	decf	(efgtoa@w+1)& (0+255),f,b
 10508  001324                     
 10509                           ; BSR set to: 0
 10510                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
 10511  001324  0E50               	movlw	low _dbuf
 10512  001326  25B9               	addwf	efgtoa@n& (0+255),w,b
 10513  001328  6E0A               	movwf	strcpy@dest^0,c
 10514  00132A  0E02               	movlw	high _dbuf
 10515  00132C  21BA               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10516  00132E  6E0B               	movwf	(strcpy@dest+1)^0,c
 10517  001330  0E50               	movlw	low _dbuf
 10518  001332  25B1               	addwf	efgtoa@i& (0+255),w,b
 10519  001334  6E0C               	movwf	strcpy@src^0,c
 10520  001336  0E02               	movlw	high _dbuf
 10521  001338  21B2               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10522  00133A  6E0D               	movwf	(strcpy@src+1)^0,c
 10523  00133C  ECE7  F035         	call	_strcpy	;wreg free
 10524  001340  EF29  F004         	goto	l12266
 10525  001344                     l2385:
 10526  001344  0012               	return		;funcret
 10527  001346                     __end_of_efgtoa:
 10528                           	callstack 0
 10529                           
 10530 ;; *************** function _tolower *****************
 10531 ;; Defined at:
 10532 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
 10533 ;; Parameters:    Size  Location     Type
 10534 ;;  c               2   15[COMRAM] int 
 10535 ;; Auto vars:     Size  Location     Type
 10536 ;;		None
 10537 ;; Return value:  Size  Location     Type
 10538 ;;                  2   15[COMRAM] int 
 10539 ;; Registers used:
 10540 ;;		wreg, status,2, status,0
 10541 ;; Tracked objects:
 10542 ;;		On entry : 0/0
 10543 ;;		On exit  : 0/0
 10544 ;;		Unchanged: 0/0
 10545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10546 ;;      Params:         2       0       0       0       0       0       0
 10547 ;;      Locals:         2       0       0       0       0       0       0
 10548 ;;      Temps:          4       0       0       0       0       0       0
 10549 ;;      Totals:         8       0       0       0       0       0       0
 10550 ;;Total ram usage:        8 bytes
 10551 ;; Hardware stack levels used: 1
 10552 ;; Hardware stack levels required when called: 5
 10553 ;; This function calls:
 10554 ;;		_isupper
 10555 ;; This function is called by:
 10556 ;;		_efgtoa
 10557 ;;		_vfpfcnvrt
 10558 ;; This function uses a non-reentrant model
 10559 ;;
 10560                           
 10561                           	psect	text35
 10562  006B10                     __ptext35:
 10563                           	callstack 0
 10564  006B10                     _tolower:
 10565                           	callstack 20
 10566  006B10  0EBF               	movlw	191
 10567  006B12  6E12               	movwf	??_tolower^0,c
 10568  006B14  0EFF               	movlw	255
 10569  006B16  6E13               	movwf	(??_tolower+1)^0,c
 10570  006B18  C010  F014         	movff	tolower@c,??_tolower+2
 10571  006B1C  C011  F015         	movff	tolower@c+1,??_tolower+3
 10572  006B20  5012               	movf	??_tolower^0,w,c
 10573  006B22  2614               	addwf	(??_tolower+2)^0,f,c
 10574  006B24  5013               	movf	(??_tolower+1)^0,w,c
 10575  006B26  2215               	addwfc	(??_tolower+3)^0,f,c
 10576  006B28  5015               	movf	(??_tolower+3)^0,w,c
 10577  006B2A  E10A               	bnz	u11620
 10578  006B2C  0E1A               	movlw	26
 10579  006B2E  5C14               	subwf	(??_tolower+2)^0,w,c
 10580  006B30  A0D8               	btfss	status,0,c
 10581  006B32  EF9D  F035         	goto	u11621
 10582  006B36  EFA0  F035         	goto	u11620
 10583  006B3A                     u11621:
 10584  006B3A  0E01               	movlw	1
 10585  006B3C  EFA1  F035         	goto	u11630
 10586  006B40                     u11620:
 10587  006B40  0E00               	movlw	0
 10588  006B42                     u11630:
 10589  006B42  6E16               	movwf	_tolower$3799^0,c
 10590  006B44  6A17               	clrf	(_tolower$3799+1)^0,c
 10591  006B46  5016               	movf	_tolower$3799^0,w,c
 10592  006B48  1017               	iorwf	(_tolower$3799+1)^0,w,c
 10593  006B4A  B4D8               	btfsc	status,2,c
 10594  006B4C  EFAA  F035         	goto	u11641
 10595  006B50  EFAC  F035         	goto	u11640
 10596  006B54                     u11641:
 10597  006B54  EFB3  F035         	goto	l2648
 10598  006B58                     u11640:
 10599  006B58  0E20               	movlw	32
 10600  006B5A  1010               	iorwf	tolower@c^0,w,c
 10601  006B5C  6E10               	movwf	?_tolower^0,c
 10602  006B5E  5011               	movf	(tolower@c+1)^0,w,c
 10603  006B60  6E11               	movwf	(?_tolower+1)^0,c
 10604  006B62  EFB7  F035         	goto	l2653
 10605  006B66                     l2648:
 10606  006B66  C010  F010         	movff	tolower@c,?_tolower
 10607  006B6A  C011  F011         	movff	tolower@c+1,?_tolower+1
 10608  006B6E                     l2653:
 10609  006B6E  0012               	return		;funcret
 10610  006B70                     __end_of_tolower:
 10611                           	callstack 0
 10612                           
 10613 ;; *************** function _isupper *****************
 10614 ;; Defined at:
 10615 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
 10616 ;; Parameters:    Size  Location     Type
 10617 ;;  c               2    9[COMRAM] int 
 10618 ;; Auto vars:     Size  Location     Type
 10619 ;;		None
 10620 ;; Return value:  Size  Location     Type
 10621 ;;                  2    9[COMRAM] int 
 10622 ;; Registers used:
 10623 ;;		wreg, status,2, status,0
 10624 ;; Tracked objects:
 10625 ;;		On entry : 0/0
 10626 ;;		On exit  : 0/0
 10627 ;;		Unchanged: 0/0
 10628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10629 ;;      Params:         2       0       0       0       0       0       0
 10630 ;;      Locals:         0       0       0       0       0       0       0
 10631 ;;      Temps:          4       0       0       0       0       0       0
 10632 ;;      Totals:         6       0       0       0       0       0       0
 10633 ;;Total ram usage:        6 bytes
 10634 ;; Hardware stack levels used: 1
 10635 ;; Hardware stack levels required when called: 4
 10636 ;; This function calls:
 10637 ;;		Nothing
 10638 ;; This function is called by:
 10639 ;;		_efgtoa
 10640 ;;		_vfpfcnvrt
 10641 ;;		_tolower
 10642 ;; This function uses a non-reentrant model
 10643 ;;
 10644                           
 10645                           	psect	text36
 10646  00719E                     __ptext36:
 10647                           	callstack 0
 10648  00719E                     _isupper:
 10649                           	callstack 20
 10650  00719E  0EBF               	movlw	191
 10651  0071A0  6E0C               	movwf	??_isupper^0,c
 10652  0071A2  0EFF               	movlw	255
 10653  0071A4  6E0D               	movwf	(??_isupper+1)^0,c
 10654  0071A6  C00A  F00E         	movff	isupper@c,??_isupper+2
 10655  0071AA  C00B  F00F         	movff	isupper@c+1,??_isupper+3
 10656  0071AE  500C               	movf	??_isupper^0,w,c
 10657  0071B0  260E               	addwf	(??_isupper+2)^0,f,c
 10658  0071B2  500D               	movf	(??_isupper+1)^0,w,c
 10659  0071B4  220F               	addwfc	(??_isupper+3)^0,f,c
 10660  0071B6  500F               	movf	(??_isupper+3)^0,w,c
 10661  0071B8  E10A               	bnz	u10600
 10662  0071BA  0E1A               	movlw	26
 10663  0071BC  5C0E               	subwf	(??_isupper+2)^0,w,c
 10664  0071BE  A0D8               	btfss	status,0,c
 10665  0071C0  EFE4  F038         	goto	u10601
 10666  0071C4  EFE7  F038         	goto	u10600
 10667  0071C8                     u10601:
 10668  0071C8  0E01               	movlw	1
 10669  0071CA  EFE8  F038         	goto	u10610
 10670  0071CE                     u10600:
 10671  0071CE  0E00               	movlw	0
 10672  0071D0                     u10610:
 10673  0071D0  6E0A               	movwf	?_isupper^0,c
 10674  0071D2  6A0B               	clrf	(?_isupper+1)^0,c
 10675  0071D4  0012               	return		;funcret
 10676  0071D6                     __end_of_isupper:
 10677                           	callstack 0
 10678                           
 10679 ;; *************** function _strcpy *****************
 10680 ;; Defined at:
 10681 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
 10682 ;; Parameters:    Size  Location     Type
 10683 ;;  dest            2    9[COMRAM] PTR unsigned char 
 10684 ;;		 -> dbuf(80), 
 10685 ;;  src             2   11[COMRAM] PTR const unsigned char 
 10686 ;;		 -> STR_14(4), STR_13(4), STR_10(4), STR_9(4), 
 10687 ;;		 -> dbuf(80), 
 10688 ;; Auto vars:     Size  Location     Type
 10689 ;;  d               2   17[COMRAM] PTR unsigned char 
 10690 ;;		 -> dbuf(80), 
 10691 ;;  s               2   15[COMRAM] PTR const unsigned char 
 10692 ;;		 -> STR_14(4), STR_13(4), STR_10(4), STR_9(4), 
 10693 ;;		 -> dbuf(80), 
 10694 ;; Return value:  Size  Location     Type
 10695 ;;                  2    9[COMRAM] PTR unsigned char 
 10696 ;; Registers used:
 10697 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10698 ;; Tracked objects:
 10699 ;;		On entry : 0/0
 10700 ;;		On exit  : 0/0
 10701 ;;		Unchanged: 0/0
 10702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10703 ;;      Params:         4       0       0       0       0       0       0
 10704 ;;      Locals:         4       0       0       0       0       0       0
 10705 ;;      Temps:          2       0       0       0       0       0       0
 10706 ;;      Totals:        10       0       0       0       0       0       0
 10707 ;;Total ram usage:       10 bytes
 10708 ;; Hardware stack levels used: 1
 10709 ;; Hardware stack levels required when called: 4
 10710 ;; This function calls:
 10711 ;;		Nothing
 10712 ;; This function is called by:
 10713 ;;		_efgtoa
 10714 ;; This function uses a non-reentrant model
 10715 ;;
 10716                           
 10717                           	psect	text37
 10718  006BCE                     __ptext37:
 10719                           	callstack 0
 10720  006BCE                     _strcpy:
 10721                           	callstack 20
 10722  006BCE  C00C  F010         	movff	strcpy@src,strcpy@s
 10723  006BD2  C00D  F011         	movff	strcpy@src+1,strcpy@s+1
 10724  006BD6  C00A  F012         	movff	strcpy@dest,strcpy@d
 10725  006BDA  C00B  F013         	movff	strcpy@dest+1,strcpy@d+1
 10726  006BDE                     l12008:
 10727  006BDE  5010               	movf	strcpy@s^0,w,c
 10728  006BE0  6E0E               	movwf	??_strcpy^0,c
 10729  006BE2  5011               	movf	(strcpy@s+1)^0,w,c
 10730  006BE4  6E0F               	movwf	(??_strcpy+1)^0,c
 10731  006BE6  4A10               	infsnz	strcpy@s^0,f,c
 10732  006BE8  2A11               	incf	(strcpy@s+1)^0,f,c
 10733  006BEA  C00E  FFF6         	movff	??_strcpy,tblptrl
 10734  006BEE  C00F  FFF7         	movff	??_strcpy+1,tblptrh
 10735  006BF2  6AF8               	clrf	tblptru,c
 10736  006BF4  C012  FFD9         	movff	strcpy@d,fsr2l
 10737  006BF8  C013  FFDA         	movff	strcpy@d+1,fsr2h
 10738  006BFC  4A12               	infsnz	strcpy@d^0,f,c
 10739  006BFE  2A13               	incf	(strcpy@d+1)^0,f,c
 10740  006C00  0E05               	movlw	(high __ramtop+-1)
 10741  006C02  64F7               	cpfsgt	tblptrh,c
 10742  006C04  D003               	bra	u11607
 10743  006C06  0008               	tblrd		*
 10744  006C08  50F5               	movf	tablat,w,c
 10745  006C0A  D005               	bra	u11600
 10746  006C0C                     u11607:
 10747  006C0C  CFF6 FFE9          	movff	tblptrl,fsr0l
 10748  006C10  CFF7 FFEA          	movff	tblptrh,fsr0h
 10749  006C14  50EF               	movf	indf0,w,c
 10750  006C16                     u11600:
 10751  006C16  6EDF               	movwf	indf2,c
 10752  006C18  50DF               	movf	indf2,w,c
 10753  006C1A  A4D8               	btfss	status,2,c
 10754  006C1C  EF12  F036         	goto	u11611
 10755  006C20  EF14  F036         	goto	u11610
 10756  006C24                     u11611:
 10757  006C24  EFEF  F035         	goto	l12008
 10758  006C28                     u11610:
 10759  006C28  0012               	return		;funcret
 10760  006C2A                     __end_of_strcpy:
 10761                           	callstack 0
 10762                           
 10763 ;; *************** function _floorf *****************
 10764 ;; Defined at:
 10765 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
 10766 ;; Parameters:    Size  Location     Type
 10767 ;;  x               4   13[BANK0 ] float 
 10768 ;; Auto vars:     Size  Location     Type
 10769 ;;  u               4   23[BANK0 ] struct .
 10770 ;;  m               4   17[BANK0 ] unsigned long 
 10771 ;;  e               2   21[BANK0 ] int 
 10772 ;; Return value:  Size  Location     Type
 10773 ;;                  4   13[BANK0 ] float 
 10774 ;; Registers used:
 10775 ;;		wreg, status,2, status,0
 10776 ;; Tracked objects:
 10777 ;;		On entry : 0/0
 10778 ;;		On exit  : 0/0
 10779 ;;		Unchanged: 0/0
 10780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10781 ;;      Params:         0       4       0       0       0       0       0
 10782 ;;      Locals:         0      10       0       0       0       0       0
 10783 ;;      Temps:          6       0       0       0       0       0       0
 10784 ;;      Totals:         6      14       0       0       0       0       0
 10785 ;;Total ram usage:       20 bytes
 10786 ;; Hardware stack levels used: 1
 10787 ;; Hardware stack levels required when called: 4
 10788 ;; This function calls:
 10789 ;;		Nothing
 10790 ;; This function is called by:
 10791 ;;		_efgtoa
 10792 ;; This function uses a non-reentrant model
 10793 ;;
 10794                           
 10795                           	psect	text38
 10796  0041F6                     __ptext38:
 10797                           	callstack 0
 10798  0041F6                     _floorf:
 10799                           	callstack 20
 10800  0041F6  C159  F077         	movff	floorf@F527,floorf@u
 10801  0041FA  C15A  F078         	movff	floorf@F527+1,floorf@u+1
 10802  0041FE  C15B  F079         	movff	floorf@F527+2,floorf@u+2
 10803  004202  C15C  F07A         	movff	floorf@F527+3,floorf@u+3
 10804  004206  C06D  F077         	movff	floorf@x,floorf@u
 10805  00420A  C06E  F078         	movff	floorf@x+1,floorf@u+1
 10806  00420E  C06F  F079         	movff	floorf@x+2,floorf@u+2
 10807  004212  C070  F07A         	movff	floorf@x+3,floorf@u+3
 10808  004216  0E81               	movlw	129
 10809  004218  6E47               	movwf	??_floorf^0,c
 10810  00421A  0EFF               	movlw	255
 10811  00421C  6E48               	movwf	(??_floorf+1)^0,c
 10812  00421E  C077  F049         	movff	floorf@u,??_floorf+2
 10813  004222  C078  F04A         	movff	floorf@u+1,??_floorf+3
 10814  004226  C079  F04B         	movff	floorf@u+2,??_floorf+4
 10815  00422A  C07A  F04C         	movff	floorf@u+3,??_floorf+5
 10816  00422E  0E18               	movlw	24
 10817  004230  EF1F  F021         	goto	u11650
 10818  004234                     u11655:
 10819  004234  90D8               	bcf	status,0,c
 10820  004236  324C               	rrcf	(??_floorf+5)^0,f,c
 10821  004238  324B               	rrcf	(??_floorf+4)^0,f,c
 10822  00423A  324A               	rrcf	(??_floorf+3)^0,f,c
 10823  00423C  3249               	rrcf	(??_floorf+2)^0,f,c
 10824  00423E                     u11650:
 10825  00423E  2EE8               	decfsz	wreg,f,c
 10826  004240  EF1A  F021         	goto	u11655
 10827  004244  5049               	movf	(??_floorf+2)^0,w,c
 10828  004246  2447               	addwf	??_floorf^0,w,c
 10829  004248  0100               	movlb	0	; () banked
 10830  00424A  6F75               	movwf	floorf@e& (0+255),b
 10831  00424C  0E00               	movlw	0
 10832  00424E  2048               	addwfc	(??_floorf+1)^0,w,c
 10833  004250  6F76               	movwf	(floorf@e+1)& (0+255),b
 10834  004252  BF76               	btfsc	(floorf@e+1)& (0+255),7,b
 10835  004254  EF35  F021         	goto	u11661
 10836  004258  5176               	movf	(floorf@e+1)& (0+255),w,b
 10837  00425A  E109               	bnz	u11660
 10838  00425C  0E17               	movlw	23
 10839  00425E  5D75               	subwf	floorf@e& (0+255),w,b
 10840  004260  A0D8               	btfss	status,0,c
 10841  004262  EF35  F021         	goto	u11661
 10842  004266  EF37  F021         	goto	u11660
 10843  00426A                     u11661:
 10844  00426A  EF41  F021         	goto	l12026
 10845  00426E                     u11660:
 10846  00426E                     l12024:
 10847                           
 10848                           ; BSR set to: 0
 10849  00426E  C06D  F06D         	movff	floorf@x,?_floorf
 10850  004272  C06E  F06E         	movff	floorf@x+1,?_floorf+1
 10851  004276  C06F  F06F         	movff	floorf@x+2,?_floorf+2
 10852  00427A  C070  F070         	movff	floorf@x+3,?_floorf+3
 10853  00427E  EF05  F022         	goto	l2572
 10854  004282                     l12026:
 10855                           
 10856                           ; BSR set to: 0
 10857  004282  BF76               	btfsc	(floorf@e+1)& (0+255),7,b
 10858  004284  EF46  F021         	goto	u11671
 10859  004288  EF48  F021         	goto	u11670
 10860  00428C                     u11671:
 10861  00428C  EFB9  F021         	goto	l12036
 10862  004290                     u11670:
 10863  004290                     
 10864                           ; BSR set to: 0
 10865  004290  C075  F047         	movff	floorf@e,??_floorf
 10866  004294  0EFF               	movlw	255
 10867  004296  6E48               	movwf	(??_floorf+1)^0,c
 10868  004298  0EFF               	movlw	255
 10869  00429A  6E49               	movwf	(??_floorf+2)^0,c
 10870  00429C  0E7F               	movlw	127
 10871  00429E  6E4A               	movwf	(??_floorf+3)^0,c
 10872  0042A0  0E00               	movlw	0
 10873  0042A2  6E4B               	movwf	(??_floorf+4)^0,c
 10874  0042A4                     u11685:
 10875  0042A4  6647               	tstfsz	??_floorf^0,c
 10876  0042A6  EF57  F021         	goto	u11686
 10877  0042AA  EF5F  F021         	goto	u11687
 10878  0042AE                     u11686:
 10879  0042AE  344B               	rlcf	(??_floorf+4)^0,w,c
 10880  0042B0  324B               	rrcf	(??_floorf+4)^0,f,c
 10881  0042B2  324A               	rrcf	(??_floorf+3)^0,f,c
 10882  0042B4  3249               	rrcf	(??_floorf+2)^0,f,c
 10883  0042B6  3248               	rrcf	(??_floorf+1)^0,f,c
 10884  0042B8  2E47               	decfsz	??_floorf^0,f,c
 10885  0042BA  EF52  F021         	goto	u11685
 10886  0042BE                     u11687:
 10887  0042BE  C048  F071         	movff	??_floorf+1,floorf@m
 10888  0042C2  C049  F072         	movff	??_floorf+2,floorf@m+1
 10889  0042C6  C04A  F073         	movff	??_floorf+3,floorf@m+2
 10890  0042CA  C04B  F074         	movff	??_floorf+4,floorf@m+3
 10891  0042CE  0100               	movlb	0	; () banked
 10892  0042D0  5171               	movf	floorf@m& (0+255),w,b
 10893  0042D2  1577               	andwf	floorf@u& (0+255),w,b
 10894  0042D4  6E47               	movwf	??_floorf^0,c
 10895  0042D6  5172               	movf	(floorf@m+1)& (0+255),w,b
 10896  0042D8  1578               	andwf	(floorf@u+1)& (0+255),w,b
 10897  0042DA  6E48               	movwf	(??_floorf+1)^0,c
 10898  0042DC  5173               	movf	(floorf@m+2)& (0+255),w,b
 10899  0042DE  1579               	andwf	(floorf@u+2)& (0+255),w,b
 10900  0042E0  6E49               	movwf	(??_floorf+2)^0,c
 10901  0042E2  5174               	movf	(floorf@m+3)& (0+255),w,b
 10902  0042E4  157A               	andwf	(floorf@u+3)& (0+255),w,b
 10903  0042E6  6E4A               	movwf	(??_floorf+3)^0,c
 10904  0042E8  5047               	movf	??_floorf^0,w,c
 10905  0042EA  1048               	iorwf	(??_floorf+1)^0,w,c
 10906  0042EC  1049               	iorwf	(??_floorf+2)^0,w,c
 10907  0042EE  104A               	iorwf	(??_floorf+3)^0,w,c
 10908  0042F0  A4D8               	btfss	status,2,c
 10909  0042F2  EF7D  F021         	goto	u11691
 10910  0042F6  EF7F  F021         	goto	u11690
 10911  0042FA                     u11691:
 10912  0042FA  EF81  F021         	goto	l12032
 10913  0042FE                     u11690:
 10914  0042FE  EF37  F021         	goto	l12024
 10915  004302                     l12032:
 10916                           
 10917                           ; BSR set to: 0
 10918  004302  C077  F047         	movff	floorf@u,??_floorf
 10919  004306  C078  F048         	movff	floorf@u+1,??_floorf+1
 10920  00430A  C079  F049         	movff	floorf@u+2,??_floorf+2
 10921  00430E  C07A  F04A         	movff	floorf@u+3,??_floorf+3
 10922  004312  0E20               	movlw	32
 10923  004314  EF91  F021         	goto	u11700
 10924  004318                     u11705:
 10925  004318  90D8               	bcf	status,0,c
 10926  00431A  324A               	rrcf	(??_floorf+3)^0,f,c
 10927  00431C  3249               	rrcf	(??_floorf+2)^0,f,c
 10928  00431E  3248               	rrcf	(??_floorf+1)^0,f,c
 10929  004320  3247               	rrcf	??_floorf^0,f,c
 10930  004322                     u11700:
 10931  004322  2EE8               	decfsz	wreg,f,c
 10932  004324  EF8C  F021         	goto	u11705
 10933  004328  5047               	movf	??_floorf^0,w,c
 10934  00432A  1048               	iorwf	(??_floorf+1)^0,w,c
 10935  00432C  1049               	iorwf	(??_floorf+2)^0,w,c
 10936  00432E  104A               	iorwf	(??_floorf+3)^0,w,c
 10937  004330  B4D8               	btfsc	status,2,c
 10938  004332  EF9D  F021         	goto	u11711
 10939  004336  EF9F  F021         	goto	u11710
 10940  00433A                     u11711:
 10941  00433A  EFA7  F021         	goto	l2575
 10942  00433E                     u11710:
 10943  00433E                     
 10944                           ; BSR set to: 0
 10945  00433E  5171               	movf	floorf@m& (0+255),w,b
 10946  004340  2777               	addwf	floorf@u& (0+255),f,b
 10947  004342  5172               	movf	(floorf@m+1)& (0+255),w,b
 10948  004344  2378               	addwfc	(floorf@u+1)& (0+255),f,b
 10949  004346  5173               	movf	(floorf@m+2)& (0+255),w,b
 10950  004348  2379               	addwfc	(floorf@u+2)& (0+255),f,b
 10951  00434A  5174               	movf	(floorf@m+3)& (0+255),w,b
 10952  00434C  237A               	addwfc	(floorf@u+3)& (0+255),f,b
 10953  00434E                     l2575:
 10954                           
 10955                           ; BSR set to: 0
 10956  00434E  1D71               	comf	floorf@m& (0+255),w,b
 10957  004350  6E47               	movwf	??_floorf^0,c
 10958  004352  1D72               	comf	(floorf@m+1)& (0+255),w,b
 10959  004354  6E48               	movwf	(??_floorf+1)^0,c
 10960  004356  1D73               	comf	(floorf@m+2)& (0+255),w,b
 10961  004358  6E49               	movwf	(??_floorf+2)^0,c
 10962  00435A  1D74               	comf	(floorf@m+3)& (0+255),w,b
 10963  00435C  6E4A               	movwf	(??_floorf+3)^0,c
 10964  00435E  5047               	movf	??_floorf^0,w,c
 10965  004360  1777               	andwf	floorf@u& (0+255),f,b
 10966  004362  5048               	movf	(??_floorf+1)^0,w,c
 10967  004364  1778               	andwf	(floorf@u+1)& (0+255),f,b
 10968  004366  5049               	movf	(??_floorf+2)^0,w,c
 10969  004368  1779               	andwf	(floorf@u+2)& (0+255),f,b
 10970  00436A  504A               	movf	(??_floorf+3)^0,w,c
 10971  00436C  177A               	andwf	(floorf@u+3)& (0+255),f,b
 10972  00436E  EFFD  F021         	goto	l12044
 10973  004372                     l12036:
 10974                           
 10975                           ; BSR set to: 0
 10976  004372  C077  F047         	movff	floorf@u,??_floorf
 10977  004376  C078  F048         	movff	floorf@u+1,??_floorf+1
 10978  00437A  C079  F049         	movff	floorf@u+2,??_floorf+2
 10979  00437E  C07A  F04A         	movff	floorf@u+3,??_floorf+3
 10980  004382  0E20               	movlw	32
 10981  004384  EFC9  F021         	goto	u11720
 10982  004388                     u11725:
 10983  004388  90D8               	bcf	status,0,c
 10984  00438A  324A               	rrcf	(??_floorf+3)^0,f,c
 10985  00438C  3249               	rrcf	(??_floorf+2)^0,f,c
 10986  00438E  3248               	rrcf	(??_floorf+1)^0,f,c
 10987  004390  3247               	rrcf	??_floorf^0,f,c
 10988  004392                     u11720:
 10989  004392  2EE8               	decfsz	wreg,f,c
 10990  004394  EFC4  F021         	goto	u11725
 10991  004398  5047               	movf	??_floorf^0,w,c
 10992  00439A  1048               	iorwf	(??_floorf+1)^0,w,c
 10993  00439C  1049               	iorwf	(??_floorf+2)^0,w,c
 10994  00439E  104A               	iorwf	(??_floorf+3)^0,w,c
 10995  0043A0  A4D8               	btfss	status,2,c
 10996  0043A2  EFD5  F021         	goto	u11731
 10997  0043A6  EFD7  F021         	goto	u11730
 10998  0043AA                     u11731:
 10999  0043AA  EFE1  F021         	goto	l12040
 11000  0043AE                     u11730:
 11001  0043AE                     
 11002                           ; BSR set to: 0
 11003  0043AE  0E00               	movlw	0
 11004  0043B0  6F77               	movwf	floorf@u& (0+255),b
 11005  0043B2  0E00               	movlw	0
 11006  0043B4  6F78               	movwf	(floorf@u+1)& (0+255),b
 11007  0043B6  0E00               	movlw	0
 11008  0043B8  6F79               	movwf	(floorf@u+2)& (0+255),b
 11009  0043BA  0E00               	movlw	0
 11010  0043BC  6F7A               	movwf	(floorf@u+3)& (0+255),b
 11011  0043BE  EFFD  F021         	goto	l12044
 11012  0043C2                     l12040:
 11013                           
 11014                           ; BSR set to: 0
 11015  0043C2  90D8               	bcf	status,0,c
 11016  0043C4  3577               	rlcf	floorf@u& (0+255),w,b
 11017  0043C6  6E47               	movwf	??_floorf^0,c
 11018  0043C8  3578               	rlcf	(floorf@u+1)& (0+255),w,b
 11019  0043CA  6E48               	movwf	(??_floorf+1)^0,c
 11020  0043CC  3579               	rlcf	(floorf@u+2)& (0+255),w,b
 11021  0043CE  6E49               	movwf	(??_floorf+2)^0,c
 11022  0043D0  357A               	rlcf	(floorf@u+3)& (0+255),w,b
 11023  0043D2  6E4A               	movwf	(??_floorf+3)^0,c
 11024  0043D4  5047               	movf	??_floorf^0,w,c
 11025  0043D6  1048               	iorwf	(??_floorf+1)^0,w,c
 11026  0043D8  1049               	iorwf	(??_floorf+2)^0,w,c
 11027  0043DA  104A               	iorwf	(??_floorf+3)^0,w,c
 11028  0043DC  B4D8               	btfsc	status,2,c
 11029  0043DE  EFF3  F021         	goto	u11741
 11030  0043E2  EFF5  F021         	goto	u11740
 11031  0043E6                     u11741:
 11032  0043E6  EFFD  F021         	goto	l12044
 11033  0043EA                     u11740:
 11034  0043EA                     
 11035                           ; BSR set to: 0
 11036  0043EA  0E00               	movlw	0
 11037  0043EC  6F77               	movwf	floorf@u& (0+255),b
 11038  0043EE  0E00               	movlw	0
 11039  0043F0  6F78               	movwf	(floorf@u+1)& (0+255),b
 11040  0043F2  0E80               	movlw	128
 11041  0043F4  6F79               	movwf	(floorf@u+2)& (0+255),b
 11042  0043F6  0EBF               	movlw	191
 11043  0043F8  6F7A               	movwf	(floorf@u+3)& (0+255),b
 11044  0043FA                     l12044:
 11045                           
 11046                           ; BSR set to: 0
 11047  0043FA  C077  F06D         	movff	floorf@u,?_floorf
 11048  0043FE  C078  F06E         	movff	floorf@u+1,?_floorf+1
 11049  004402  C079  F06F         	movff	floorf@u+2,?_floorf+2
 11050  004406  C07A  F070         	movff	floorf@u+3,?_floorf+3
 11051  00440A                     l2572:
 11052                           
 11053                           ; BSR set to: 0
 11054  00440A  0012               	return		;funcret
 11055  00440C                     __end_of_floorf:
 11056                           	callstack 0
 11057                           
 11058 ;; *************** function ___fpclassifyf *****************
 11059 ;; Defined at:
 11060 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
 11061 ;; Parameters:    Size  Location     Type
 11062 ;;  x               4    9[COMRAM] float 
 11063 ;; Auto vars:     Size  Location     Type
 11064 ;;  u               4   19[COMRAM] struct .
 11065 ;;  e               2   17[COMRAM] int 
 11066 ;; Return value:  Size  Location     Type
 11067 ;;                  2    9[COMRAM] int 
 11068 ;; Registers used:
 11069 ;;		wreg, status,2, status,0
 11070 ;; Tracked objects:
 11071 ;;		On entry : 0/0
 11072 ;;		On exit  : 0/0
 11073 ;;		Unchanged: 0/0
 11074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11075 ;;      Params:         4       0       0       0       0       0       0
 11076 ;;      Locals:         6       0       0       0       0       0       0
 11077 ;;      Temps:          4       0       0       0       0       0       0
 11078 ;;      Totals:        14       0       0       0       0       0       0
 11079 ;;Total ram usage:       14 bytes
 11080 ;; Hardware stack levels used: 1
 11081 ;; Hardware stack levels required when called: 4
 11082 ;; This function calls:
 11083 ;;		Nothing
 11084 ;; This function is called by:
 11085 ;;		_efgtoa
 11086 ;; This function uses a non-reentrant model
 11087 ;;
 11088                           
 11089                           	psect	text39
 11090  005546                     __ptext39:
 11091                           	callstack 0
 11092  005546                     ___fpclassifyf:
 11093                           	callstack 20
 11094  005546  C15D  F014         	movff	___fpclassifyf@F465,___fpclassifyf@u
 11095  00554A  C15E  F015         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 11096  00554E  C15F  F016         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 11097  005552  C160  F017         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 11098  005556  C00A  F014         	movff	___fpclassifyf@x,___fpclassifyf@u
 11099  00555A  C00B  F015         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 11100  00555E  C00C  F016         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 11101  005562  C00D  F017         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 11102  005566  C014  F00E         	movff	___fpclassifyf@u,??___fpclassifyf
 11103  00556A  C015  F00F         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11104  00556E  C016  F010         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11105  005572  C017  F011         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11106  005576  0E18               	movlw	24
 11107  005578  EFC3  F02A         	goto	u11530
 11108  00557C                     u11535:
 11109  00557C  90D8               	bcf	status,0,c
 11110  00557E  3211               	rrcf	(??___fpclassifyf+3)^0,f,c
 11111  005580  3210               	rrcf	(??___fpclassifyf+2)^0,f,c
 11112  005582  320F               	rrcf	(??___fpclassifyf+1)^0,f,c
 11113  005584  320E               	rrcf	??___fpclassifyf^0,f,c
 11114  005586                     u11530:
 11115  005586  2EE8               	decfsz	wreg,f,c
 11116  005588  EFBE  F02A         	goto	u11535
 11117  00558C  500E               	movf	??___fpclassifyf^0,w,c
 11118  00558E  6E12               	movwf	___fpclassifyf@e^0,c
 11119  005590  6A13               	clrf	(___fpclassifyf@e+1)^0,c
 11120  005592  5012               	movf	___fpclassifyf@e^0,w,c
 11121  005594  1013               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11122  005596  A4D8               	btfss	status,2,c
 11123  005598  EFD0  F02A         	goto	u11541
 11124  00559C  EFD2  F02A         	goto	u11540
 11125  0055A0                     u11541:
 11126  0055A0  EFF2  F02A         	goto	l11996
 11127  0055A4                     u11540:
 11128  0055A4  90D8               	bcf	status,0,c
 11129  0055A6  3414               	rlcf	___fpclassifyf@u^0,w,c
 11130  0055A8  6E0E               	movwf	??___fpclassifyf^0,c
 11131  0055AA  3415               	rlcf	(___fpclassifyf@u+1)^0,w,c
 11132  0055AC  6E0F               	movwf	(??___fpclassifyf+1)^0,c
 11133  0055AE  3416               	rlcf	(___fpclassifyf@u+2)^0,w,c
 11134  0055B0  6E10               	movwf	(??___fpclassifyf+2)^0,c
 11135  0055B2  3417               	rlcf	(___fpclassifyf@u+3)^0,w,c
 11136  0055B4  6E11               	movwf	(??___fpclassifyf+3)^0,c
 11137  0055B6  500E               	movf	??___fpclassifyf^0,w,c
 11138  0055B8  100F               	iorwf	(??___fpclassifyf+1)^0,w,c
 11139  0055BA  1010               	iorwf	(??___fpclassifyf+2)^0,w,c
 11140  0055BC  1011               	iorwf	(??___fpclassifyf+3)^0,w,c
 11141  0055BE  A4D8               	btfss	status,2,c
 11142  0055C0  EFE4  F02A         	goto	u11551
 11143  0055C4  EFE6  F02A         	goto	u11550
 11144  0055C8                     u11551:
 11145  0055C8  EFEC  F02A         	goto	l11992
 11146  0055CC                     u11550:
 11147  0055CC  0E00               	movlw	0
 11148  0055CE  6E0B               	movwf	(?___fpclassifyf+1)^0,c
 11149  0055D0  0E02               	movlw	2
 11150  0055D2  6E0A               	movwf	?___fpclassifyf^0,c
 11151  0055D4  EF21  F02B         	goto	l2527
 11152  0055D8                     l11992:
 11153  0055D8  0E00               	movlw	0
 11154  0055DA  6E0B               	movwf	(?___fpclassifyf+1)^0,c
 11155  0055DC  0E03               	movlw	3
 11156  0055DE  6E0A               	movwf	?___fpclassifyf^0,c
 11157  0055E0  EF21  F02B         	goto	l2527
 11158  0055E4                     l11996:
 11159  0055E4  2812               	incf	___fpclassifyf@e^0,w,c
 11160  0055E6  1013               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11161  0055E8  A4D8               	btfss	status,2,c
 11162  0055EA  EFF9  F02A         	goto	u11561
 11163  0055EE  EFFB  F02A         	goto	u11560
 11164  0055F2                     u11561:
 11165  0055F2  EF1D  F02B         	goto	l12002
 11166  0055F6                     u11560:
 11167  0055F6  C014  F00E         	movff	___fpclassifyf@u,??___fpclassifyf
 11168  0055FA  C015  F00F         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11169  0055FE  C016  F010         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11170  005602  C017  F011         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11171  005606  0E09               	movlw	9
 11172  005608                     u11575:
 11173  005608  90D8               	bcf	status,0,c
 11174  00560A  360E               	rlcf	??___fpclassifyf^0,f,c
 11175  00560C  360F               	rlcf	(??___fpclassifyf+1)^0,f,c
 11176  00560E  3610               	rlcf	(??___fpclassifyf+2)^0,f,c
 11177  005610  3611               	rlcf	(??___fpclassifyf+3)^0,f,c
 11178  005612  2EE8               	decfsz	wreg,f,c
 11179  005614  EF04  F02B         	goto	u11575
 11180  005618  500E               	movf	??___fpclassifyf^0,w,c
 11181  00561A  100F               	iorwf	(??___fpclassifyf+1)^0,w,c
 11182  00561C  1010               	iorwf	(??___fpclassifyf+2)^0,w,c
 11183  00561E  1011               	iorwf	(??___fpclassifyf+3)^0,w,c
 11184  005620  B4D8               	btfsc	status,2,c
 11185  005622  EF15  F02B         	goto	u11581
 11186  005626  EF18  F02B         	goto	u11580
 11187  00562A                     u11581:
 11188  00562A  0E01               	movlw	1
 11189  00562C  EF19  F02B         	goto	u11590
 11190  005630                     u11580:
 11191  005630  0E00               	movlw	0
 11192  005632                     u11590:
 11193  005632  6E0A               	movwf	?___fpclassifyf^0,c
 11194  005634  6A0B               	clrf	(?___fpclassifyf+1)^0,c
 11195  005636  EF21  F02B         	goto	l2527
 11196  00563A                     l12002:
 11197  00563A  0E00               	movlw	0
 11198  00563C  6E0B               	movwf	(?___fpclassifyf+1)^0,c
 11199  00563E  0E04               	movlw	4
 11200  005640  6E0A               	movwf	?___fpclassifyf^0,c
 11201  005642                     l2527:
 11202  005642  0012               	return		;funcret
 11203  005644                     __end_of___fpclassifyf:
 11204                           	callstack 0
 11205                           
 11206 ;; *************** function ___fltol *****************
 11207 ;; Defined at:
 11208 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
 11209 ;; Parameters:    Size  Location     Type
 11210 ;;  f1              4   34[COMRAM] int 
 11211 ;; Auto vars:     Size  Location     Type
 11212 ;;  exp1            1   43[COMRAM] unsigned char 
 11213 ;;  sign1           1   42[COMRAM] unsigned char 
 11214 ;; Return value:  Size  Location     Type
 11215 ;;                  4   34[COMRAM] long 
 11216 ;; Registers used:
 11217 ;;		wreg, status,2, status,0
 11218 ;; Tracked objects:
 11219 ;;		On entry : 0/0
 11220 ;;		On exit  : 0/0
 11221 ;;		Unchanged: 0/0
 11222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11223 ;;      Params:         4       0       0       0       0       0       0
 11224 ;;      Locals:         2       0       0       0       0       0       0
 11225 ;;      Temps:          4       0       0       0       0       0       0
 11226 ;;      Totals:        10       0       0       0       0       0       0
 11227 ;;Total ram usage:       10 bytes
 11228 ;; Hardware stack levels used: 1
 11229 ;; Hardware stack levels required when called: 4
 11230 ;; This function calls:
 11231 ;;		Nothing
 11232 ;; This function is called by:
 11233 ;;		_convertFloatToBuffer
 11234 ;;		_DirectNet_Run
 11235 ;;		_efgtoa
 11236 ;;		_Convert_ftochar
 11237 ;; This function uses a non-reentrant model
 11238 ;;
 11239                           
 11240                           	psect	text40
 11241  005036                     __ptext40:
 11242                           	callstack 0
 11243  005036                     ___fltol:
 11244                           	callstack 23
 11245  005036  3425               	rlcf	(___fltol@f1+2)^0,w,c
 11246  005038  3426               	rlcf	(___fltol@f1+3)^0,w,c
 11247  00503A  6E2C               	movwf	___fltol@exp1^0,c
 11248  00503C  502C               	movf	___fltol@exp1^0,w,c
 11249  00503E  A4D8               	btfss	status,2,c
 11250  005040  EF24  F028         	goto	u11411
 11251  005044  EF26  F028         	goto	u11410
 11252  005048                     u11411:
 11253  005048  EF30  F028         	goto	l11920
 11254  00504C                     u11410:
 11255  00504C                     l11916:
 11256  00504C  0E00               	movlw	0
 11257  00504E  6E23               	movwf	?___fltol^0,c
 11258  005050  0E00               	movlw	0
 11259  005052  6E24               	movwf	(?___fltol+1)^0,c
 11260  005054  0E00               	movlw	0
 11261  005056  6E25               	movwf	(?___fltol+2)^0,c
 11262  005058  0E00               	movlw	0
 11263  00505A  6E26               	movwf	(?___fltol+3)^0,c
 11264  00505C  EF9D  F028         	goto	l1896
 11265  005060                     l11920:
 11266  005060  C023  F027         	movff	___fltol@f1,??___fltol
 11267  005064  C024  F028         	movff	___fltol@f1+1,??___fltol+1
 11268  005068  C025  F029         	movff	___fltol@f1+2,??___fltol+2
 11269  00506C  C026  F02A         	movff	___fltol@f1+3,??___fltol+3
 11270  005070  0E20               	movlw	32
 11271  005072  EF40  F028         	goto	u11420
 11272  005076                     u11425:
 11273  005076  90D8               	bcf	status,0,c
 11274  005078  322A               	rrcf	(??___fltol+3)^0,f,c
 11275  00507A  3229               	rrcf	(??___fltol+2)^0,f,c
 11276  00507C  3228               	rrcf	(??___fltol+1)^0,f,c
 11277  00507E  3227               	rrcf	??___fltol^0,f,c
 11278  005080                     u11420:
 11279  005080  2EE8               	decfsz	wreg,f,c
 11280  005082  EF3B  F028         	goto	u11425
 11281  005086  5027               	movf	??___fltol^0,w,c
 11282  005088  6E2B               	movwf	___fltol@sign1^0,c
 11283  00508A  8E25               	bsf	(___fltol@f1+2)^0,7,c
 11284  00508C  0EFF               	movlw	255
 11285  00508E  1623               	andwf	___fltol@f1^0,f,c
 11286  005090  0EFF               	movlw	255
 11287  005092  1624               	andwf	(___fltol@f1+1)^0,f,c
 11288  005094  0EFF               	movlw	255
 11289  005096  1625               	andwf	(___fltol@f1+2)^0,f,c
 11290  005098  0E00               	movlw	0
 11291  00509A  1626               	andwf	(___fltol@f1+3)^0,f,c
 11292  00509C  0E96               	movlw	150
 11293  00509E  5E2C               	subwf	___fltol@exp1^0,f,c
 11294  0050A0  BE2C               	btfsc	___fltol@exp1^0,7,c
 11295  0050A2  EF57  F028         	goto	u11430
 11296  0050A6  EF55  F028         	goto	u11431
 11297  0050AA                     u11431:
 11298  0050AA  EF6D  F028         	goto	l11940
 11299  0050AE                     u11430:
 11300  0050AE  502C               	movf	___fltol@exp1^0,w,c
 11301  0050B0  0A80               	xorlw	128
 11302  0050B2  0F97               	addlw	151
 11303  0050B4  B0D8               	btfsc	status,0,c
 11304  0050B6  EF5F  F028         	goto	u11441
 11305  0050BA  EF61  F028         	goto	u11440
 11306  0050BE                     u11441:
 11307  0050BE  EF63  F028         	goto	l11936
 11308  0050C2                     u11440:
 11309  0050C2  EF26  F028         	goto	l11916
 11310  0050C6                     l11936:
 11311  0050C6  90D8               	bcf	status,0,c
 11312  0050C8  3226               	rrcf	(___fltol@f1+3)^0,f,c
 11313  0050CA  3225               	rrcf	(___fltol@f1+2)^0,f,c
 11314  0050CC  3224               	rrcf	(___fltol@f1+1)^0,f,c
 11315  0050CE  3223               	rrcf	___fltol@f1^0,f,c
 11316  0050D0  3E2C               	incfsz	___fltol@exp1^0,f,c
 11317  0050D2  EF63  F028         	goto	l11936
 11318  0050D6  EF85  F028         	goto	l11950
 11319  0050DA                     l11940:
 11320  0050DA  0E1F               	movlw	31
 11321  0050DC  642C               	cpfsgt	___fltol@exp1^0,c
 11322  0050DE  EF73  F028         	goto	u11451
 11323  0050E2  EF75  F028         	goto	u11450
 11324  0050E6                     u11451:
 11325  0050E6  EF7D  F028         	goto	l11948
 11326  0050EA                     u11450:
 11327  0050EA  EF26  F028         	goto	l11916
 11328  0050EE                     l11946:
 11329  0050EE  90D8               	bcf	status,0,c
 11330  0050F0  3623               	rlcf	___fltol@f1^0,f,c
 11331  0050F2  3624               	rlcf	(___fltol@f1+1)^0,f,c
 11332  0050F4  3625               	rlcf	(___fltol@f1+2)^0,f,c
 11333  0050F6  3626               	rlcf	(___fltol@f1+3)^0,f,c
 11334  0050F8  062C               	decf	___fltol@exp1^0,f,c
 11335  0050FA                     l11948:
 11336  0050FA  502C               	movf	___fltol@exp1^0,w,c
 11337  0050FC  A4D8               	btfss	status,2,c
 11338  0050FE  EF83  F028         	goto	u11461
 11339  005102  EF85  F028         	goto	u11460
 11340  005106                     u11461:
 11341  005106  EF77  F028         	goto	l11946
 11342  00510A                     u11460:
 11343  00510A                     l11950:
 11344  00510A  502B               	movf	___fltol@sign1^0,w,c
 11345  00510C  B4D8               	btfsc	status,2,c
 11346  00510E  EF8B  F028         	goto	u11471
 11347  005112  EF8D  F028         	goto	u11470
 11348  005116                     u11471:
 11349  005116  EF95  F028         	goto	l11954
 11350  00511A                     u11470:
 11351  00511A  1E26               	comf	(___fltol@f1+3)^0,f,c
 11352  00511C  1E25               	comf	(___fltol@f1+2)^0,f,c
 11353  00511E  1E24               	comf	(___fltol@f1+1)^0,f,c
 11354  005120  6C23               	negf	___fltol@f1^0,c
 11355  005122  0E00               	movlw	0
 11356  005124  2224               	addwfc	(___fltol@f1+1)^0,f,c
 11357  005126  2225               	addwfc	(___fltol@f1+2)^0,f,c
 11358  005128  2226               	addwfc	(___fltol@f1+3)^0,f,c
 11359  00512A                     l11954:
 11360  00512A  C023  F023         	movff	___fltol@f1,?___fltol
 11361  00512E  C024  F024         	movff	___fltol@f1+1,?___fltol+1
 11362  005132  C025  F025         	movff	___fltol@f1+2,?___fltol+2
 11363  005136  C026  F026         	movff	___fltol@f1+3,?___fltol+3
 11364  00513A                     l1896:
 11365  00513A  0012               	return		;funcret
 11366  00513C                     __end_of___fltol:
 11367                           	callstack 0
 11368                           
 11369 ;; *************** function ___flneg *****************
 11370 ;; Defined at:
 11371 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
 11372 ;; Parameters:    Size  Location     Type
 11373 ;;  f1              4    9[COMRAM] long 
 11374 ;; Auto vars:     Size  Location     Type
 11375 ;;		None
 11376 ;; Return value:  Size  Location     Type
 11377 ;;                  4    9[COMRAM] long 
 11378 ;; Registers used:
 11379 ;;		wreg, status,2, status,0
 11380 ;; Tracked objects:
 11381 ;;		On entry : 0/0
 11382 ;;		On exit  : 0/0
 11383 ;;		Unchanged: 0/0
 11384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11385 ;;      Params:         4       0       0       0       0       0       0
 11386 ;;      Locals:         0       0       0       0       0       0       0
 11387 ;;      Temps:          0       0       0       0       0       0       0
 11388 ;;      Totals:         4       0       0       0       0       0       0
 11389 ;;Total ram usage:        4 bytes
 11390 ;; Hardware stack levels used: 1
 11391 ;; Hardware stack levels required when called: 4
 11392 ;; This function calls:
 11393 ;;		Nothing
 11394 ;; This function is called by:
 11395 ;;		_efgtoa
 11396 ;; This function uses a non-reentrant model
 11397 ;;
 11398                           
 11399                           	psect	text41
 11400  0071D6                     __ptext41:
 11401                           	callstack 0
 11402  0071D6                     ___flneg:
 11403                           	callstack 20
 11404  0071D6  500A               	movf	___flneg@f1^0,w,c
 11405  0071D8  100B               	iorwf	(___flneg@f1+1)^0,w,c
 11406  0071DA  100C               	iorwf	(___flneg@f1+2)^0,w,c
 11407  0071DC  100D               	iorwf	(___flneg@f1+3)^0,w,c
 11408  0071DE  B4D8               	btfsc	status,2,c
 11409  0071E0  EFF4  F038         	goto	u11401
 11410  0071E4  EFF6  F038         	goto	u11400
 11411  0071E8                     u11401:
 11412  0071E8  EFFE  F038         	goto	l11910
 11413  0071EC                     u11400:
 11414  0071EC  0E00               	movlw	0
 11415  0071EE  1A0A               	xorwf	___flneg@f1^0,f,c
 11416  0071F0  0E00               	movlw	0
 11417  0071F2  1A0B               	xorwf	(___flneg@f1+1)^0,f,c
 11418  0071F4  0E00               	movlw	0
 11419  0071F6  1A0C               	xorwf	(___flneg@f1+2)^0,f,c
 11420  0071F8  0E80               	movlw	128
 11421  0071FA  1A0D               	xorwf	(___flneg@f1+3)^0,f,c
 11422  0071FC                     l11910:
 11423  0071FC  C00A  F00A         	movff	___flneg@f1,?___flneg
 11424  007200  C00B  F00B         	movff	___flneg@f1+1,?___flneg+1
 11425  007204  C00C  F00C         	movff	___flneg@f1+2,?___flneg+2
 11426  007208  C00D  F00D         	movff	___flneg@f1+3,?___flneg+3
 11427  00720C  0012               	return		;funcret
 11428  00720E                     __end_of___flneg:
 11429                           	callstack 0
 11430                           
 11431 ;; *************** function ___flge *****************
 11432 ;; Defined at:
 11433 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
 11434 ;; Parameters:    Size  Location     Type
 11435 ;;  ff1             4   34[COMRAM] long 
 11436 ;;  ff2             4   38[COMRAM] long 
 11437 ;; Auto vars:     Size  Location     Type
 11438 ;;		None
 11439 ;; Return value:  Size  Location     Type
 11440 ;;		None               void
 11441 ;; Registers used:
 11442 ;;		wreg, status,2, status,0
 11443 ;; Tracked objects:
 11444 ;;		On entry : 0/0
 11445 ;;		On exit  : 0/0
 11446 ;;		Unchanged: 0/0
 11447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11448 ;;      Params:         8       0       0       0       0       0       0
 11449 ;;      Locals:         0       0       0       0       0       0       0
 11450 ;;      Temps:          4       0       0       0       0       0       0
 11451 ;;      Totals:        12       0       0       0       0       0       0
 11452 ;;Total ram usage:       12 bytes
 11453 ;; Hardware stack levels used: 1
 11454 ;; Hardware stack levels required when called: 4
 11455 ;; This function calls:
 11456 ;;		Nothing
 11457 ;; This function is called by:
 11458 ;;		_efgtoa
 11459 ;; This function uses a non-reentrant model
 11460 ;;
 11461                           
 11462                           	psect	text42
 11463  005242                     __ptext42:
 11464                           	callstack 0
 11465  005242                     ___flge:
 11466                           	callstack 20
 11467  005242  0E00               	movlw	0
 11468  005244  1423               	andwf	___flge@ff1^0,w,c
 11469  005246  6E2B               	movwf	??___flge^0,c
 11470  005248  0E00               	movlw	0
 11471  00524A  1424               	andwf	(___flge@ff1+1)^0,w,c
 11472  00524C  6E2C               	movwf	(??___flge+1)^0,c
 11473  00524E  0E80               	movlw	128
 11474  005250  1425               	andwf	(___flge@ff1+2)^0,w,c
 11475  005252  6E2D               	movwf	(??___flge+2)^0,c
 11476  005254  0E7F               	movlw	127
 11477  005256  1426               	andwf	(___flge@ff1+3)^0,w,c
 11478  005258  6E2E               	movwf	(??___flge+3)^0,c
 11479  00525A  502B               	movf	??___flge^0,w,c
 11480  00525C  102C               	iorwf	(??___flge+1)^0,w,c
 11481  00525E  102D               	iorwf	(??___flge+2)^0,w,c
 11482  005260  102E               	iorwf	(??___flge+3)^0,w,c
 11483  005262  A4D8               	btfss	status,2,c
 11484  005264  EF36  F029         	goto	u11351
 11485  005268  EF38  F029         	goto	u11350
 11486  00526C                     u11351:
 11487  00526C  EF40  F029         	goto	l11888
 11488  005270                     u11350:
 11489  005270  0E00               	movlw	0
 11490  005272  6E23               	movwf	___flge@ff1^0,c
 11491  005274  0E00               	movlw	0
 11492  005276  6E24               	movwf	(___flge@ff1+1)^0,c
 11493  005278  0E00               	movlw	0
 11494  00527A  6E25               	movwf	(___flge@ff1+2)^0,c
 11495  00527C  0E00               	movlw	0
 11496  00527E  6E26               	movwf	(___flge@ff1+3)^0,c
 11497  005280                     l11888:
 11498  005280  0E00               	movlw	0
 11499  005282  1427               	andwf	___flge@ff2^0,w,c
 11500  005284  6E2B               	movwf	??___flge^0,c
 11501  005286  0E00               	movlw	0
 11502  005288  1428               	andwf	(___flge@ff2+1)^0,w,c
 11503  00528A  6E2C               	movwf	(??___flge+1)^0,c
 11504  00528C  0E80               	movlw	128
 11505  00528E  1429               	andwf	(___flge@ff2+2)^0,w,c
 11506  005290  6E2D               	movwf	(??___flge+2)^0,c
 11507  005292  0E7F               	movlw	127
 11508  005294  142A               	andwf	(___flge@ff2+3)^0,w,c
 11509  005296  6E2E               	movwf	(??___flge+3)^0,c
 11510  005298  502B               	movf	??___flge^0,w,c
 11511  00529A  102C               	iorwf	(??___flge+1)^0,w,c
 11512  00529C  102D               	iorwf	(??___flge+2)^0,w,c
 11513  00529E  102E               	iorwf	(??___flge+3)^0,w,c
 11514  0052A0  A4D8               	btfss	status,2,c
 11515  0052A2  EF55  F029         	goto	u11361
 11516  0052A6  EF57  F029         	goto	u11360
 11517  0052AA                     u11361:
 11518  0052AA  EF5F  F029         	goto	l11892
 11519  0052AE                     u11360:
 11520  0052AE  0E00               	movlw	0
 11521  0052B0  6E27               	movwf	___flge@ff2^0,c
 11522  0052B2  0E00               	movlw	0
 11523  0052B4  6E28               	movwf	(___flge@ff2+1)^0,c
 11524  0052B6  0E00               	movlw	0
 11525  0052B8  6E29               	movwf	(___flge@ff2+2)^0,c
 11526  0052BA  0E00               	movlw	0
 11527  0052BC  6E2A               	movwf	(___flge@ff2+3)^0,c
 11528  0052BE                     l11892:
 11529  0052BE  AE26               	btfss	(___flge@ff1+3)^0,7,c
 11530  0052C0  EF64  F029         	goto	u11371
 11531  0052C4  EF66  F029         	goto	u11370
 11532  0052C8                     u11371:
 11533  0052C8  EF6F  F029         	goto	l11896
 11534  0052CC                     u11370:
 11535  0052CC  6C23               	negf	___flge@ff1^0,c
 11536  0052CE  1E24               	comf	(___flge@ff1+1)^0,f,c
 11537  0052D0  B0D8               	btfsc	status,0,c
 11538  0052D2  2A24               	incf	(___flge@ff1+1)^0,f,c
 11539  0052D4  1E25               	comf	(___flge@ff1+2)^0,f,c
 11540  0052D6  B0D8               	btfsc	status,0,c
 11541  0052D8  2A25               	incf	(___flge@ff1+2)^0,f,c
 11542  0052DA  0E80               	movlw	128
 11543  0052DC  5626               	subfwb	(___flge@ff1+3)^0,f,c
 11544  0052DE                     l11896:
 11545  0052DE  AE2A               	btfss	(___flge@ff2+3)^0,7,c
 11546  0052E0  EF74  F029         	goto	u11381
 11547  0052E4  EF76  F029         	goto	u11380
 11548  0052E8                     u11381:
 11549  0052E8  EF7F  F029         	goto	l1864
 11550  0052EC                     u11380:
 11551  0052EC  6C27               	negf	___flge@ff2^0,c
 11552  0052EE  1E28               	comf	(___flge@ff2+1)^0,f,c
 11553  0052F0  B0D8               	btfsc	status,0,c
 11554  0052F2  2A28               	incf	(___flge@ff2+1)^0,f,c
 11555  0052F4  1E29               	comf	(___flge@ff2+2)^0,f,c
 11556  0052F6  B0D8               	btfsc	status,0,c
 11557  0052F8  2A29               	incf	(___flge@ff2+2)^0,f,c
 11558  0052FA  0E80               	movlw	128
 11559  0052FC  562A               	subfwb	(___flge@ff2+3)^0,f,c
 11560  0052FE                     l1864:
 11561  0052FE  0E00               	movlw	0
 11562  005300  1A23               	xorwf	___flge@ff1^0,f,c
 11563  005302  0E00               	movlw	0
 11564  005304  1A24               	xorwf	(___flge@ff1+1)^0,f,c
 11565  005306  0E00               	movlw	0
 11566  005308  1A25               	xorwf	(___flge@ff1+2)^0,f,c
 11567  00530A  0E80               	movlw	128
 11568  00530C  1A26               	xorwf	(___flge@ff1+3)^0,f,c
 11569  00530E  0E00               	movlw	0
 11570  005310  1A27               	xorwf	___flge@ff2^0,f,c
 11571  005312  0E00               	movlw	0
 11572  005314  1A28               	xorwf	(___flge@ff2+1)^0,f,c
 11573  005316  0E00               	movlw	0
 11574  005318  1A29               	xorwf	(___flge@ff2+2)^0,f,c
 11575  00531A  0E80               	movlw	128
 11576  00531C  1A2A               	xorwf	(___flge@ff2+3)^0,f,c
 11577  00531E  5027               	movf	___flge@ff2^0,w,c
 11578  005320  5C23               	subwf	___flge@ff1^0,w,c
 11579  005322  5028               	movf	(___flge@ff2+1)^0,w,c
 11580  005324  5824               	subwfb	(___flge@ff1+1)^0,w,c
 11581  005326  5029               	movf	(___flge@ff2+2)^0,w,c
 11582  005328  5825               	subwfb	(___flge@ff1+2)^0,w,c
 11583  00532A  502A               	movf	(___flge@ff2+3)^0,w,c
 11584  00532C  5826               	subwfb	(___flge@ff1+3)^0,w,c
 11585  00532E  B0D8               	btfsc	status,0,c
 11586  005330  EF9C  F029         	goto	u11391
 11587  005334  EF9E  F029         	goto	u11390
 11588  005338                     u11391:
 11589  005338  EFA1  F029         	goto	l11902
 11590  00533C                     u11390:
 11591  00533C  90D8               	bcf	status,0,c
 11592  00533E  EFA2  F029         	goto	l1869
 11593  005342                     l11902:
 11594  005342  80D8               	bsf	status,0,c
 11595  005344                     l1869:
 11596  005344  0012               	return		;funcret
 11597  005346                     __end_of___flge:
 11598                           	callstack 0
 11599                           
 11600 ;; *************** function ___fleq *****************
 11601 ;; Defined at:
 11602 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
 11603 ;; Parameters:    Size  Location     Type
 11604 ;;  ff1             4    9[COMRAM] long 
 11605 ;;  ff2             4   13[COMRAM] long 
 11606 ;; Auto vars:     Size  Location     Type
 11607 ;;		None
 11608 ;; Return value:  Size  Location     Type
 11609 ;;		None               void
 11610 ;; Registers used:
 11611 ;;		wreg, status,2, status,0
 11612 ;; Tracked objects:
 11613 ;;		On entry : 0/0
 11614 ;;		On exit  : 0/0
 11615 ;;		Unchanged: 0/0
 11616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11617 ;;      Params:         8       0       0       0       0       0       0
 11618 ;;      Locals:         0       0       0       0       0       0       0
 11619 ;;      Temps:          4       0       0       0       0       0       0
 11620 ;;      Totals:        12       0       0       0       0       0       0
 11621 ;;Total ram usage:       12 bytes
 11622 ;; Hardware stack levels used: 1
 11623 ;; Hardware stack levels required when called: 4
 11624 ;; This function calls:
 11625 ;;		Nothing
 11626 ;; This function is called by:
 11627 ;;		_efgtoa
 11628 ;; This function uses a non-reentrant model
 11629 ;;
 11630                           
 11631                           	psect	text43
 11632  006394                     __ptext43:
 11633                           	callstack 0
 11634  006394                     ___fleq:
 11635                           	callstack 20
 11636  006394  0E00               	movlw	0
 11637  006396  140A               	andwf	___fleq@ff1^0,w,c
 11638  006398  6E12               	movwf	??___fleq^0,c
 11639  00639A  0E00               	movlw	0
 11640  00639C  140B               	andwf	(___fleq@ff1+1)^0,w,c
 11641  00639E  6E13               	movwf	(??___fleq+1)^0,c
 11642  0063A0  0E80               	movlw	128
 11643  0063A2  140C               	andwf	(___fleq@ff1+2)^0,w,c
 11644  0063A4  6E14               	movwf	(??___fleq+2)^0,c
 11645  0063A6  0E7F               	movlw	127
 11646  0063A8  140D               	andwf	(___fleq@ff1+3)^0,w,c
 11647  0063AA  6E15               	movwf	(??___fleq+3)^0,c
 11648  0063AC  5012               	movf	??___fleq^0,w,c
 11649  0063AE  1013               	iorwf	(??___fleq+1)^0,w,c
 11650  0063B0  1014               	iorwf	(??___fleq+2)^0,w,c
 11651  0063B2  1015               	iorwf	(??___fleq+3)^0,w,c
 11652  0063B4  A4D8               	btfss	status,2,c
 11653  0063B6  EFDF  F031         	goto	u11321
 11654  0063BA  EFE1  F031         	goto	u11320
 11655  0063BE                     u11321:
 11656  0063BE  EFE9  F031         	goto	l11872
 11657  0063C2                     u11320:
 11658  0063C2  0E00               	movlw	0
 11659  0063C4  6E0A               	movwf	___fleq@ff1^0,c
 11660  0063C6  0E00               	movlw	0
 11661  0063C8  6E0B               	movwf	(___fleq@ff1+1)^0,c
 11662  0063CA  0E00               	movlw	0
 11663  0063CC  6E0C               	movwf	(___fleq@ff1+2)^0,c
 11664  0063CE  0E00               	movlw	0
 11665  0063D0  6E0D               	movwf	(___fleq@ff1+3)^0,c
 11666  0063D2                     l11872:
 11667  0063D2  0E00               	movlw	0
 11668  0063D4  140E               	andwf	___fleq@ff2^0,w,c
 11669  0063D6  6E12               	movwf	??___fleq^0,c
 11670  0063D8  0E00               	movlw	0
 11671  0063DA  140F               	andwf	(___fleq@ff2+1)^0,w,c
 11672  0063DC  6E13               	movwf	(??___fleq+1)^0,c
 11673  0063DE  0E80               	movlw	128
 11674  0063E0  1410               	andwf	(___fleq@ff2+2)^0,w,c
 11675  0063E2  6E14               	movwf	(??___fleq+2)^0,c
 11676  0063E4  0E7F               	movlw	127
 11677  0063E6  1411               	andwf	(___fleq@ff2+3)^0,w,c
 11678  0063E8  6E15               	movwf	(??___fleq+3)^0,c
 11679  0063EA  5012               	movf	??___fleq^0,w,c
 11680  0063EC  1013               	iorwf	(??___fleq+1)^0,w,c
 11681  0063EE  1014               	iorwf	(??___fleq+2)^0,w,c
 11682  0063F0  1015               	iorwf	(??___fleq+3)^0,w,c
 11683  0063F2  A4D8               	btfss	status,2,c
 11684  0063F4  EFFE  F031         	goto	u11331
 11685  0063F8  EF00  F032         	goto	u11330
 11686  0063FC                     u11331:
 11687  0063FC  EF08  F032         	goto	l11876
 11688  006400                     u11330:
 11689  006400  0E00               	movlw	0
 11690  006402  6E0E               	movwf	___fleq@ff2^0,c
 11691  006404  0E00               	movlw	0
 11692  006406  6E0F               	movwf	(___fleq@ff2+1)^0,c
 11693  006408  0E00               	movlw	0
 11694  00640A  6E10               	movwf	(___fleq@ff2+2)^0,c
 11695  00640C  0E00               	movlw	0
 11696  00640E  6E11               	movwf	(___fleq@ff2+3)^0,c
 11697  006410                     l11876:
 11698  006410  500E               	movf	___fleq@ff2^0,w,c
 11699  006412  180A               	xorwf	___fleq@ff1^0,w,c
 11700  006414  E10F               	bnz	u11340
 11701  006416  500F               	movf	(___fleq@ff2+1)^0,w,c
 11702  006418  180B               	xorwf	(___fleq@ff1+1)^0,w,c
 11703  00641A  E10C               	bnz	u11340
 11704  00641C  5010               	movf	(___fleq@ff2+2)^0,w,c
 11705  00641E  180C               	xorwf	(___fleq@ff1+2)^0,w,c
 11706  006420  E109               	bnz	u11340
 11707  006422  5011               	movf	(___fleq@ff2+3)^0,w,c
 11708  006424  180D               	xorwf	(___fleq@ff1+3)^0,w,c
 11709  006426  B4D8               	btfsc	status,2,c
 11710  006428  EF18  F032         	goto	u11341
 11711  00642C  EF1A  F032         	goto	u11340
 11712  006430                     u11341:
 11713  006430  EF1D  F032         	goto	l11880
 11714  006434                     u11340:
 11715  006434  90D8               	bcf	status,0,c
 11716  006436  EF1E  F032         	goto	l1858
 11717  00643A                     l11880:
 11718  00643A  80D8               	bsf	status,0,c
 11719  00643C                     l1858:
 11720  00643C  0012               	return		;funcret
 11721  00643E                     __end_of___fleq:
 11722                           	callstack 0
 11723                           
 11724 ;; *************** function ___awmod *****************
 11725 ;; Defined at:
 11726 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 11727 ;; Parameters:    Size  Location     Type
 11728 ;;  dividend        2   17[COMRAM] int 
 11729 ;;  divisor         2   19[COMRAM] int 
 11730 ;; Auto vars:     Size  Location     Type
 11731 ;;  sign            1   22[COMRAM] unsigned char 
 11732 ;;  counter         1   21[COMRAM] unsigned char 
 11733 ;; Return value:  Size  Location     Type
 11734 ;;                  2   17[COMRAM] int 
 11735 ;; Registers used:
 11736 ;;		wreg, status,2, status,0
 11737 ;; Tracked objects:
 11738 ;;		On entry : 0/0
 11739 ;;		On exit  : 0/0
 11740 ;;		Unchanged: 0/0
 11741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11742 ;;      Params:         4       0       0       0       0       0       0
 11743 ;;      Locals:         2       0       0       0       0       0       0
 11744 ;;      Temps:          0       0       0       0       0       0       0
 11745 ;;      Totals:         6       0       0       0       0       0       0
 11746 ;;Total ram usage:        6 bytes
 11747 ;; Hardware stack levels used: 1
 11748 ;; Hardware stack levels required when called: 4
 11749 ;; This function calls:
 11750 ;;		Nothing
 11751 ;; This function is called by:
 11752 ;;		_incrementDigit
 11753 ;;		_decrementDigit
 11754 ;;		_moveCursor
 11755 ;;		_convertFloatToBuffer
 11756 ;;		_efgtoa
 11757 ;; This function uses a non-reentrant model
 11758 ;;
 11759                           
 11760                           	psect	text44
 11761  006032                     __ptext44:
 11762                           	callstack 0
 11763  006032                     ___awmod:
 11764                           	callstack 23
 11765  006032  0E00               	movlw	0
 11766  006034  6E17               	movwf	___awmod@sign^0,c
 11767  006036  BE13               	btfsc	(___awmod@dividend+1)^0,7,c
 11768  006038  EF22  F030         	goto	u11260
 11769  00603C  EF20  F030         	goto	u11261
 11770  006040                     u11261:
 11771  006040  EF28  F030         	goto	l11840
 11772  006044                     u11260:
 11773  006044  6C12               	negf	___awmod@dividend^0,c
 11774  006046  1E13               	comf	(___awmod@dividend+1)^0,f,c
 11775  006048  B0D8               	btfsc	status,0,c
 11776  00604A  2A13               	incf	(___awmod@dividend+1)^0,f,c
 11777  00604C  0E01               	movlw	1
 11778  00604E  6E17               	movwf	___awmod@sign^0,c
 11779  006050                     l11840:
 11780  006050  BE15               	btfsc	(___awmod@divisor+1)^0,7,c
 11781  006052  EF2F  F030         	goto	u11270
 11782  006056  EF2D  F030         	goto	u11271
 11783  00605A                     u11271:
 11784  00605A  EF33  F030         	goto	l11844
 11785  00605E                     u11270:
 11786  00605E  6C14               	negf	___awmod@divisor^0,c
 11787  006060  1E15               	comf	(___awmod@divisor+1)^0,f,c
 11788  006062  B0D8               	btfsc	status,0,c
 11789  006064  2A15               	incf	(___awmod@divisor+1)^0,f,c
 11790  006066                     l11844:
 11791  006066  5014               	movf	___awmod@divisor^0,w,c
 11792  006068  1015               	iorwf	(___awmod@divisor+1)^0,w,c
 11793  00606A  B4D8               	btfsc	status,2,c
 11794  00606C  EF3A  F030         	goto	u11281
 11795  006070  EF3C  F030         	goto	u11280
 11796  006074                     u11281:
 11797  006074  EF60  F030         	goto	l11860
 11798  006078                     u11280:
 11799  006078  0E01               	movlw	1
 11800  00607A  6E16               	movwf	___awmod@counter^0,c
 11801  00607C  EF44  F030         	goto	l11850
 11802  006080                     l11848:
 11803  006080  90D8               	bcf	status,0,c
 11804  006082  3614               	rlcf	___awmod@divisor^0,f,c
 11805  006084  3615               	rlcf	(___awmod@divisor+1)^0,f,c
 11806  006086  2A16               	incf	___awmod@counter^0,f,c
 11807  006088                     l11850:
 11808  006088  AE15               	btfss	(___awmod@divisor+1)^0,7,c
 11809  00608A  EF49  F030         	goto	u11291
 11810  00608E  EF4B  F030         	goto	u11290
 11811  006092                     u11291:
 11812  006092  EF40  F030         	goto	l11848
 11813  006096                     u11290:
 11814  006096                     l11852:
 11815  006096  5014               	movf	___awmod@divisor^0,w,c
 11816  006098  5C12               	subwf	___awmod@dividend^0,w,c
 11817  00609A  5015               	movf	(___awmod@divisor+1)^0,w,c
 11818  00609C  5813               	subwfb	(___awmod@dividend+1)^0,w,c
 11819  00609E  A0D8               	btfss	status,0,c
 11820  0060A0  EF54  F030         	goto	u11301
 11821  0060A4  EF56  F030         	goto	u11300
 11822  0060A8                     u11301:
 11823  0060A8  EF5A  F030         	goto	l11856
 11824  0060AC                     u11300:
 11825  0060AC  5014               	movf	___awmod@divisor^0,w,c
 11826  0060AE  5E12               	subwf	___awmod@dividend^0,f,c
 11827  0060B0  5015               	movf	(___awmod@divisor+1)^0,w,c
 11828  0060B2  5A13               	subwfb	(___awmod@dividend+1)^0,f,c
 11829  0060B4                     l11856:
 11830  0060B4  90D8               	bcf	status,0,c
 11831  0060B6  3215               	rrcf	(___awmod@divisor+1)^0,f,c
 11832  0060B8  3214               	rrcf	___awmod@divisor^0,f,c
 11833  0060BA  2E16               	decfsz	___awmod@counter^0,f,c
 11834  0060BC  EF4B  F030         	goto	l11852
 11835  0060C0                     l11860:
 11836  0060C0  5017               	movf	___awmod@sign^0,w,c
 11837  0060C2  B4D8               	btfsc	status,2,c
 11838  0060C4  EF66  F030         	goto	u11311
 11839  0060C8  EF68  F030         	goto	u11310
 11840  0060CC                     u11311:
 11841  0060CC  EF6C  F030         	goto	l11864
 11842  0060D0                     u11310:
 11843  0060D0  6C12               	negf	___awmod@dividend^0,c
 11844  0060D2  1E13               	comf	(___awmod@dividend+1)^0,f,c
 11845  0060D4  B0D8               	btfsc	status,0,c
 11846  0060D6  2A13               	incf	(___awmod@dividend+1)^0,f,c
 11847  0060D8                     l11864:
 11848  0060D8  C012  F012         	movff	___awmod@dividend,?___awmod
 11849  0060DC  C013  F013         	movff	___awmod@dividend+1,?___awmod+1
 11850  0060E0  0012               	return		;funcret
 11851  0060E2                     __end_of___awmod:
 11852                           	callstack 0
 11853                           
 11854 ;; *************** function ___awdiv *****************
 11855 ;; Defined at:
 11856 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 11857 ;; Parameters:    Size  Location     Type
 11858 ;;  dividend        2    9[COMRAM] int 
 11859 ;;  divisor         2   11[COMRAM] int 
 11860 ;; Auto vars:     Size  Location     Type
 11861 ;;  quotient        2   15[COMRAM] int 
 11862 ;;  sign            1   14[COMRAM] unsigned char 
 11863 ;;  counter         1   13[COMRAM] unsigned char 
 11864 ;; Return value:  Size  Location     Type
 11865 ;;                  2    9[COMRAM] int 
 11866 ;; Registers used:
 11867 ;;		wreg, status,2, status,0
 11868 ;; Tracked objects:
 11869 ;;		On entry : 0/0
 11870 ;;		On exit  : 0/0
 11871 ;;		Unchanged: 0/0
 11872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11873 ;;      Params:         4       0       0       0       0       0       0
 11874 ;;      Locals:         4       0       0       0       0       0       0
 11875 ;;      Temps:          0       0       0       0       0       0       0
 11876 ;;      Totals:         8       0       0       0       0       0       0
 11877 ;;Total ram usage:        8 bytes
 11878 ;; Hardware stack levels used: 1
 11879 ;; Hardware stack levels required when called: 4
 11880 ;; This function calls:
 11881 ;;		Nothing
 11882 ;; This function is called by:
 11883 ;;		_incrementDigit
 11884 ;;		_decrementDigit
 11885 ;;		_convertFloatToBuffer
 11886 ;;		_efgtoa
 11887 ;; This function uses a non-reentrant model
 11888 ;;
 11889                           
 11890                           	psect	text45
 11891  005DF0                     __ptext45:
 11892                           	callstack 0
 11893  005DF0                     ___awdiv:
 11894                           	callstack 23
 11895  005DF0  0E00               	movlw	0
 11896  005DF2  6E0F               	movwf	___awdiv@sign^0,c
 11897  005DF4  BE0D               	btfsc	(___awdiv@divisor+1)^0,7,c
 11898  005DF6  EF01  F02F         	goto	u11200
 11899  005DFA  EFFF  F02E         	goto	u11201
 11900  005DFE                     u11201:
 11901  005DFE  EF07  F02F         	goto	l11796
 11902  005E02                     u11200:
 11903  005E02  6C0C               	negf	___awdiv@divisor^0,c
 11904  005E04  1E0D               	comf	(___awdiv@divisor+1)^0,f,c
 11905  005E06  B0D8               	btfsc	status,0,c
 11906  005E08  2A0D               	incf	(___awdiv@divisor+1)^0,f,c
 11907  005E0A  0E01               	movlw	1
 11908  005E0C  6E0F               	movwf	___awdiv@sign^0,c
 11909  005E0E                     l11796:
 11910  005E0E  BE0B               	btfsc	(___awdiv@dividend+1)^0,7,c
 11911  005E10  EF0E  F02F         	goto	u11210
 11912  005E14  EF0C  F02F         	goto	u11211
 11913  005E18                     u11211:
 11914  005E18  EF14  F02F         	goto	l11802
 11915  005E1C                     u11210:
 11916  005E1C  6C0A               	negf	___awdiv@dividend^0,c
 11917  005E1E  1E0B               	comf	(___awdiv@dividend+1)^0,f,c
 11918  005E20  B0D8               	btfsc	status,0,c
 11919  005E22  2A0B               	incf	(___awdiv@dividend+1)^0,f,c
 11920  005E24  0E01               	movlw	1
 11921  005E26  1A0F               	xorwf	___awdiv@sign^0,f,c
 11922  005E28                     l11802:
 11923  005E28  0E00               	movlw	0
 11924  005E2A  6E11               	movwf	(___awdiv@quotient+1)^0,c
 11925  005E2C  0E00               	movlw	0
 11926  005E2E  6E10               	movwf	___awdiv@quotient^0,c
 11927  005E30  500C               	movf	___awdiv@divisor^0,w,c
 11928  005E32  100D               	iorwf	(___awdiv@divisor+1)^0,w,c
 11929  005E34  B4D8               	btfsc	status,2,c
 11930  005E36  EF1F  F02F         	goto	u11221
 11931  005E3A  EF21  F02F         	goto	u11220
 11932  005E3E                     u11221:
 11933  005E3E  EF49  F02F         	goto	l11824
 11934  005E42                     u11220:
 11935  005E42  0E01               	movlw	1
 11936  005E44  6E0E               	movwf	___awdiv@counter^0,c
 11937  005E46  EF29  F02F         	goto	l11810
 11938  005E4A                     l11808:
 11939  005E4A  90D8               	bcf	status,0,c
 11940  005E4C  360C               	rlcf	___awdiv@divisor^0,f,c
 11941  005E4E  360D               	rlcf	(___awdiv@divisor+1)^0,f,c
 11942  005E50  2A0E               	incf	___awdiv@counter^0,f,c
 11943  005E52                     l11810:
 11944  005E52  AE0D               	btfss	(___awdiv@divisor+1)^0,7,c
 11945  005E54  EF2E  F02F         	goto	u11231
 11946  005E58  EF30  F02F         	goto	u11230
 11947  005E5C                     u11231:
 11948  005E5C  EF25  F02F         	goto	l11808
 11949  005E60                     u11230:
 11950  005E60                     l11812:
 11951  005E60  90D8               	bcf	status,0,c
 11952  005E62  3610               	rlcf	___awdiv@quotient^0,f,c
 11953  005E64  3611               	rlcf	(___awdiv@quotient+1)^0,f,c
 11954  005E66  500C               	movf	___awdiv@divisor^0,w,c
 11955  005E68  5C0A               	subwf	___awdiv@dividend^0,w,c
 11956  005E6A  500D               	movf	(___awdiv@divisor+1)^0,w,c
 11957  005E6C  580B               	subwfb	(___awdiv@dividend+1)^0,w,c
 11958  005E6E  A0D8               	btfss	status,0,c
 11959  005E70  EF3C  F02F         	goto	u11241
 11960  005E74  EF3E  F02F         	goto	u11240
 11961  005E78                     u11241:
 11962  005E78  EF43  F02F         	goto	l11820
 11963  005E7C                     u11240:
 11964  005E7C  500C               	movf	___awdiv@divisor^0,w,c
 11965  005E7E  5E0A               	subwf	___awdiv@dividend^0,f,c
 11966  005E80  500D               	movf	(___awdiv@divisor+1)^0,w,c
 11967  005E82  5A0B               	subwfb	(___awdiv@dividend+1)^0,f,c
 11968  005E84  8010               	bsf	___awdiv@quotient^0,0,c
 11969  005E86                     l11820:
 11970  005E86  90D8               	bcf	status,0,c
 11971  005E88  320D               	rrcf	(___awdiv@divisor+1)^0,f,c
 11972  005E8A  320C               	rrcf	___awdiv@divisor^0,f,c
 11973  005E8C  2E0E               	decfsz	___awdiv@counter^0,f,c
 11974  005E8E  EF30  F02F         	goto	l11812
 11975  005E92                     l11824:
 11976  005E92  500F               	movf	___awdiv@sign^0,w,c
 11977  005E94  B4D8               	btfsc	status,2,c
 11978  005E96  EF4F  F02F         	goto	u11251
 11979  005E9A  EF51  F02F         	goto	u11250
 11980  005E9E                     u11251:
 11981  005E9E  EF55  F02F         	goto	l11828
 11982  005EA2                     u11250:
 11983  005EA2  6C10               	negf	___awdiv@quotient^0,c
 11984  005EA4  1E11               	comf	(___awdiv@quotient+1)^0,f,c
 11985  005EA6  B0D8               	btfsc	status,0,c
 11986  005EA8  2A11               	incf	(___awdiv@quotient+1)^0,f,c
 11987  005EAA                     l11828:
 11988  005EAA  C010  F00A         	movff	___awdiv@quotient,?___awdiv
 11989  005EAE  C011  F00B         	movff	___awdiv@quotient+1,?___awdiv+1
 11990  005EB2  0012               	return		;funcret
 11991  005EB4                     __end_of___awdiv:
 11992                           	callstack 0
 11993                           
 11994 ;; *************** function _dtoa *****************
 11995 ;; Defined at:
 11996 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 11997 ;; Parameters:    Size  Location     Type
 11998 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
 11999 ;;		 -> sprintf@f(6), 
 12000 ;;  d               8   38[COMRAM] long long 
 12001 ;; Auto vars:     Size  Location     Type
 12002 ;;  n               8   62[COMRAM] long long 
 12003 ;;  i               2   70[COMRAM] int 
 12004 ;;  s               2   60[COMRAM] int 
 12005 ;;  w               2   58[COMRAM] int 
 12006 ;;  p               2   56[COMRAM] int 
 12007 ;; Return value:  Size  Location     Type
 12008 ;;                  2   36[COMRAM] int 
 12009 ;; Registers used:
 12010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12011 ;; Tracked objects:
 12012 ;;		On entry : 0/0
 12013 ;;		On exit  : 0/0
 12014 ;;		Unchanged: 0/0
 12015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12016 ;;      Params:        10       0       0       0       0       0       0
 12017 ;;      Locals:        18       0       0       0       0       0       0
 12018 ;;      Temps:          8       0       0       0       0       0       0
 12019 ;;      Totals:        36       0       0       0       0       0       0
 12020 ;;Total ram usage:       36 bytes
 12021 ;; Hardware stack levels used: 1
 12022 ;; Hardware stack levels required when called: 8
 12023 ;; This function calls:
 12024 ;;		___aodiv
 12025 ;;		___aomod
 12026 ;;		_abs
 12027 ;;		_pad
 12028 ;; This function is called by:
 12029 ;;		_vfpfcnvrt
 12030 ;; This function uses a non-reentrant model
 12031 ;;
 12032                           
 12033                           	psect	text46
 12034  003F18                     __ptext46:
 12035                           	callstack 0
 12036  003F18                     _dtoa:
 12037                           	callstack 17
 12038  003F18                     
 12039                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
 12040  003F18  C027  F03F         	movff	dtoa@d,dtoa@n
 12041  003F1C  C028  F040         	movff	dtoa@d+1,dtoa@n+1
 12042  003F20  C029  F041         	movff	dtoa@d+2,dtoa@n+2
 12043  003F24  C02A  F042         	movff	dtoa@d+3,dtoa@n+3
 12044  003F28  C02B  F043         	movff	dtoa@d+4,dtoa@n+4
 12045  003F2C  C02C  F044         	movff	dtoa@d+5,dtoa@n+5
 12046  003F30  C02D  F045         	movff	dtoa@d+6,dtoa@n+6
 12047  003F34  C02E  F046         	movff	dtoa@d+7,dtoa@n+7
 12048  003F38                     
 12049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
 12050  003F38  BE46               	btfsc	(dtoa@n+7)^0,7,c
 12051  003F3A  EFA1  F01F         	goto	u11861
 12052  003F3E  EFA4  F01F         	goto	u11860
 12053  003F42                     u11861:
 12054  003F42  0E01               	movlw	1
 12055  003F44  EFA5  F01F         	goto	u11870
 12056  003F48                     u11860:
 12057  003F48  0E00               	movlw	0
 12058  003F4A                     u11870:
 12059  003F4A  6E3D               	movwf	dtoa@s^0,c
 12060  003F4C  6A3E               	clrf	(dtoa@s+1)^0,c
 12061                           
 12062                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 12063  003F4E  503D               	movf	dtoa@s^0,w,c
 12064  003F50  103E               	iorwf	(dtoa@s+1)^0,w,c
 12065  003F52  B4D8               	btfsc	status,2,c
 12066  003F54  EFAE  F01F         	goto	u11881
 12067  003F58  EFB0  F01F         	goto	u11880
 12068  003F5C                     u11881:
 12069  003F5C  EFC0  F01F         	goto	l12166
 12070  003F60                     u11880:
 12071  003F60                     
 12072                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 12073  003F60  1E46               	comf	(dtoa@n+7)^0,f,c
 12074  003F62  1E45               	comf	(dtoa@n+6)^0,f,c
 12075  003F64  1E44               	comf	(dtoa@n+5)^0,f,c
 12076  003F66  1E43               	comf	(dtoa@n+4)^0,f,c
 12077  003F68  1E42               	comf	(dtoa@n+3)^0,f,c
 12078  003F6A  1E41               	comf	(dtoa@n+2)^0,f,c
 12079  003F6C  1E40               	comf	(dtoa@n+1)^0,f,c
 12080  003F6E  6C3F               	negf	dtoa@n^0,c
 12081  003F70  0E00               	movlw	0
 12082  003F72  2240               	addwfc	(dtoa@n+1)^0,f,c
 12083  003F74  2241               	addwfc	(dtoa@n+2)^0,f,c
 12084  003F76  2242               	addwfc	(dtoa@n+3)^0,f,c
 12085  003F78  2243               	addwfc	(dtoa@n+4)^0,f,c
 12086  003F7A  2244               	addwfc	(dtoa@n+5)^0,f,c
 12087  003F7C  2245               	addwfc	(dtoa@n+6)^0,f,c
 12088  003F7E  2246               	addwfc	(dtoa@n+7)^0,f,c
 12089  003F80                     l12166:
 12090                           
 12091                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 12092  003F80  BE4E               	btfsc	(_prec+1)^0,7,c
 12093  003F82  EFC5  F01F         	goto	u11891
 12094  003F86  EFC7  F01F         	goto	u11890
 12095  003F8A                     u11891:
 12096  003F8A  EFC8  F01F         	goto	l12170
 12097  003F8E                     u11890:
 12098  003F8E                     
 12099                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 12100  003F8E  924F               	bcf	_flags^0,1,c
 12101  003F90                     l12170:
 12102                           
 12103                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 12104  003F90  BE4E               	btfsc	(_prec+1)^0,7,c
 12105  003F92  EFD5  F01F         	goto	u11900
 12106  003F96  504E               	movf	(_prec+1)^0,w,c
 12107  003F98  E106               	bnz	u11901
 12108  003F9A  044D               	decf	_prec^0,w,c
 12109  003F9C  B0D8               	btfsc	status,0,c
 12110  003F9E  EFD3  F01F         	goto	u11901
 12111  003FA2  EFD5  F01F         	goto	u11900
 12112  003FA6                     u11901:
 12113  003FA6  EFDB  F01F         	goto	l2347
 12114  003FAA                     u11900:
 12115  003FAA  0E00               	movlw	0
 12116  003FAC  6E3A               	movwf	(dtoa@p+1)^0,c
 12117  003FAE  0E01               	movlw	1
 12118  003FB0  6E39               	movwf	dtoa@p^0,c
 12119  003FB2  EFDF  F01F         	goto	l2349
 12120  003FB6                     l2347:
 12121  003FB6  C04D  F039         	movff	_prec,dtoa@p
 12122  003FBA  C04E  F03A         	movff	_prec+1,dtoa@p+1
 12123  003FBE                     l2349:
 12124                           
 12125                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 12126  003FBE  C0F7  F03B         	movff	_width,dtoa@w
 12127  003FC2  C0F8  F03C         	movff	_width+1,dtoa@w+1
 12128  003FC6                     
 12129                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 12130  003FC6  503D               	movf	dtoa@s^0,w,c
 12131  003FC8  103E               	iorwf	(dtoa@s+1)^0,w,c
 12132  003FCA  A4D8               	btfss	status,2,c
 12133  003FCC  EFEA  F01F         	goto	u11911
 12134  003FD0  EFEC  F01F         	goto	u11910
 12135  003FD4                     u11911:
 12136  003FD4  EFF3  F01F         	goto	l12178
 12137  003FD8                     u11910:
 12138  003FD8  A44F               	btfss	_flags^0,2,c
 12139  003FDA  EFF1  F01F         	goto	u11921
 12140  003FDE  EFF3  F01F         	goto	u11920
 12141  003FE2                     u11921:
 12142  003FE2  EFF6  F01F         	goto	l12180
 12143  003FE6                     u11920:
 12144  003FE6                     l12178:
 12145                           
 12146                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
 12147  003FE6  063B               	decf	dtoa@w^0,f,c
 12148  003FE8  A0D8               	btfss	status,0,c
 12149  003FEA  063C               	decf	(dtoa@w+1)^0,f,c
 12150  003FEC                     l12180:
 12151                           
 12152                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 12153  003FEC  0E00               	movlw	0
 12154  003FEE  6E48               	movwf	(dtoa@i+1)^0,c
 12155  003FF0  0E4F               	movlw	79
 12156  003FF2  6E47               	movwf	dtoa@i^0,c
 12157  003FF4                     
 12158                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 12159  003FF4  0E00               	movlw	0
 12160  003FF6  0102               	movlb	2	; () banked
 12161  003FF8  6F9F               	movwf	(_dbuf+79)& (0+255),b
 12162                           
 12163                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12164  003FFA  EF7B  F020         	goto	l12194
 12165  003FFE                     l12184:
 12166                           
 12167                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
 12168  003FFE  0647               	decf	dtoa@i^0,f,c
 12169  004000  A0D8               	btfss	status,0,c
 12170  004002  0648               	decf	(dtoa@i+1)^0,f,c
 12171  004004                     
 12172                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 12173  004004  0E50               	movlw	low _dbuf
 12174  004006  2447               	addwf	dtoa@i^0,w,c
 12175  004008  6ED9               	movwf	fsr2l,c
 12176  00400A  0E02               	movlw	high _dbuf
 12177  00400C  2048               	addwfc	(dtoa@i+1)^0,w,c
 12178  00400E  6EDA               	movwf	fsr2h,c
 12179  004010  C03F  F00A         	movff	dtoa@n,___aomod@dividend
 12180  004014  C040  F00B         	movff	dtoa@n+1,___aomod@dividend+1
 12181  004018  C041  F00C         	movff	dtoa@n+2,___aomod@dividend+2
 12182  00401C  C042  F00D         	movff	dtoa@n+3,___aomod@dividend+3
 12183  004020  C043  F00E         	movff	dtoa@n+4,___aomod@dividend+4
 12184  004024  C044  F00F         	movff	dtoa@n+5,___aomod@dividend+5
 12185  004028  C045  F010         	movff	dtoa@n+6,___aomod@dividend+6
 12186  00402C  C046  F011         	movff	dtoa@n+7,___aomod@dividend+7
 12187  004030  0E0A               	movlw	10
 12188  004032  6E12               	movwf	___aomod@divisor^0,c
 12189  004034  0E00               	movlw	0
 12190  004036  6E13               	movwf	(___aomod@divisor+1)^0,c
 12191  004038  0E00               	movlw	0
 12192  00403A  6E14               	movwf	(___aomod@divisor+2)^0,c
 12193  00403C  0E00               	movlw	0
 12194  00403E  6E15               	movwf	(___aomod@divisor+3)^0,c
 12195  004040  0E00               	movlw	0
 12196  004042  6E16               	movwf	(___aomod@divisor+4)^0,c
 12197  004044  0E00               	movlw	0
 12198  004046  6E17               	movwf	(___aomod@divisor+5)^0,c
 12199  004048  0E00               	movlw	0
 12200  00404A  6E18               	movwf	(___aomod@divisor+6)^0,c
 12201  00404C  0E00               	movlw	0
 12202  00404E  6E19               	movwf	(___aomod@divisor+7)^0,c
 12203  004050  EC6C  F024         	call	___aomod	;wreg free
 12204  004054  C00A  F02F         	movff	?___aomod,??_dtoa
 12205  004058  C00B  F030         	movff	?___aomod+1,??_dtoa+1
 12206  00405C  C00C  F031         	movff	?___aomod+2,??_dtoa+2
 12207  004060  C00D  F032         	movff	?___aomod+3,??_dtoa+3
 12208  004064  C00E  F033         	movff	?___aomod+4,??_dtoa+4
 12209  004068  C00F  F034         	movff	?___aomod+5,??_dtoa+5
 12210  00406C  C010  F035         	movff	?___aomod+6,??_dtoa+6
 12211  004070  C011  F036         	movff	?___aomod+7,??_dtoa+7
 12212  004074  C02F  F01C         	movff	??_dtoa,abs@a
 12213  004078  C031  F01D         	movff	??_dtoa+2,abs@a+1
 12214  00407C  ECF4  F037         	call	_abs	;wreg free
 12215  004080  501C               	movf	?_abs^0,w,c
 12216  004082  0F30               	addlw	48
 12217  004084  6EDF               	movwf	indf2,c
 12218  004086                     
 12219                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
 12220  004086  0639               	decf	dtoa@p^0,f,c
 12221  004088  A0D8               	btfss	status,0,c
 12222  00408A  063A               	decf	(dtoa@p+1)^0,f,c
 12223  00408C                     
 12224                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
 12225  00408C  063B               	decf	dtoa@w^0,f,c
 12226  00408E  A0D8               	btfss	status,0,c
 12227  004090  063C               	decf	(dtoa@w+1)^0,f,c
 12228  004092                     
 12229                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 12230  004092  C03F  F00A         	movff	dtoa@n,___aodiv@dividend
 12231  004096  C040  F00B         	movff	dtoa@n+1,___aodiv@dividend+1
 12232  00409A  C041  F00C         	movff	dtoa@n+2,___aodiv@dividend+2
 12233  00409E  C042  F00D         	movff	dtoa@n+3,___aodiv@dividend+3
 12234  0040A2  C043  F00E         	movff	dtoa@n+4,___aodiv@dividend+4
 12235  0040A6  C044  F00F         	movff	dtoa@n+5,___aodiv@dividend+5
 12236  0040AA  C045  F010         	movff	dtoa@n+6,___aodiv@dividend+6
 12237  0040AE  C046  F011         	movff	dtoa@n+7,___aodiv@dividend+7
 12238  0040B2  0E0A               	movlw	10
 12239  0040B4  6E12               	movwf	___aodiv@divisor^0,c
 12240  0040B6  0E00               	movlw	0
 12241  0040B8  6E13               	movwf	(___aodiv@divisor+1)^0,c
 12242  0040BA  0E00               	movlw	0
 12243  0040BC  6E14               	movwf	(___aodiv@divisor+2)^0,c
 12244  0040BE  0E00               	movlw	0
 12245  0040C0  6E15               	movwf	(___aodiv@divisor+3)^0,c
 12246  0040C2  0E00               	movlw	0
 12247  0040C4  6E16               	movwf	(___aodiv@divisor+4)^0,c
 12248  0040C6  0E00               	movlw	0
 12249  0040C8  6E17               	movwf	(___aodiv@divisor+5)^0,c
 12250  0040CA  0E00               	movlw	0
 12251  0040CC  6E18               	movwf	(___aodiv@divisor+6)^0,c
 12252  0040CE  0E00               	movlw	0
 12253  0040D0  6E19               	movwf	(___aodiv@divisor+7)^0,c
 12254  0040D2  ECA8  F023         	call	___aodiv	;wreg free
 12255  0040D6  C00A  F03F         	movff	?___aodiv,dtoa@n
 12256  0040DA  C00B  F040         	movff	?___aodiv+1,dtoa@n+1
 12257  0040DE  C00C  F041         	movff	?___aodiv+2,dtoa@n+2
 12258  0040E2  C00D  F042         	movff	?___aodiv+3,dtoa@n+3
 12259  0040E6  C00E  F043         	movff	?___aodiv+4,dtoa@n+4
 12260  0040EA  C00F  F044         	movff	?___aodiv+5,dtoa@n+5
 12261  0040EE  C010  F045         	movff	?___aodiv+6,dtoa@n+6
 12262  0040F2  C011  F046         	movff	?___aodiv+7,dtoa@n+7
 12263  0040F6                     l12194:
 12264                           
 12265                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12266  0040F6  BE48               	btfsc	(dtoa@i+1)^0,7,c
 12267  0040F8  EF86  F020         	goto	u11931
 12268  0040FC  5048               	movf	(dtoa@i+1)^0,w,c
 12269  0040FE  E108               	bnz	u11930
 12270  004100  0447               	decf	dtoa@i^0,w,c
 12271  004102  A0D8               	btfss	status,0,c
 12272  004104  EF86  F020         	goto	u11931
 12273  004108  EF88  F020         	goto	u11930
 12274  00410C                     u11931:
 12275  00410C  EFB8  F020         	goto	l12204
 12276  004110                     u11930:
 12277  004110  503F               	movf	dtoa@n^0,w,c
 12278  004112  1040               	iorwf	(dtoa@n+1)^0,w,c
 12279  004114  1041               	iorwf	(dtoa@n+2)^0,w,c
 12280  004116  1042               	iorwf	(dtoa@n+3)^0,w,c
 12281  004118  1043               	iorwf	(dtoa@n+4)^0,w,c
 12282  00411A  1044               	iorwf	(dtoa@n+5)^0,w,c
 12283  00411C  1045               	iorwf	(dtoa@n+6)^0,w,c
 12284  00411E  1046               	iorwf	(dtoa@n+7)^0,w,c
 12285  004120  A4D8               	btfss	status,2,c
 12286  004122  EF95  F020         	goto	u11941
 12287  004126  EF97  F020         	goto	u11940
 12288  00412A                     u11941:
 12289  00412A  EFFF  F01F         	goto	l12184
 12290  00412E                     u11940:
 12291  00412E  BE3A               	btfsc	(dtoa@p+1)^0,7,c
 12292  004130  EFA4  F020         	goto	u11950
 12293  004134  503A               	movf	(dtoa@p+1)^0,w,c
 12294  004136  E106               	bnz	u11951
 12295  004138  0439               	decf	dtoa@p^0,w,c
 12296  00413A  B0D8               	btfsc	status,0,c
 12297  00413C  EFA2  F020         	goto	u11951
 12298  004140  EFA4  F020         	goto	u11950
 12299  004144                     u11951:
 12300  004144  EFFF  F01F         	goto	l12184
 12301  004148                     u11950:
 12302  004148  BE3C               	btfsc	(dtoa@w+1)^0,7,c
 12303  00414A  EFAF  F020         	goto	u11961
 12304  00414E  503C               	movf	(dtoa@w+1)^0,w,c
 12305  004150  E108               	bnz	u11960
 12306  004152  043B               	decf	dtoa@w^0,w,c
 12307  004154  A0D8               	btfss	status,0,c
 12308  004156  EFAF  F020         	goto	u11961
 12309  00415A  EFB1  F020         	goto	u11960
 12310  00415E                     u11961:
 12311  00415E  EFB8  F020         	goto	l12204
 12312  004162                     u11960:
 12313  004162  B24F               	btfsc	_flags^0,1,c
 12314  004164  EFB6  F020         	goto	u11971
 12315  004168  EFB8  F020         	goto	u11970
 12316  00416C                     u11971:
 12317  00416C  EFFF  F01F         	goto	l12184
 12318  004170                     u11970:
 12319  004170                     l12204:
 12320                           
 12321                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 12322  004170  503D               	movf	dtoa@s^0,w,c
 12323  004172  103E               	iorwf	(dtoa@s+1)^0,w,c
 12324  004174  A4D8               	btfss	status,2,c
 12325  004176  EFBF  F020         	goto	u11981
 12326  00417A  EFC1  F020         	goto	u11980
 12327  00417E                     u11981:
 12328  00417E  EFC8  F020         	goto	l12208
 12329  004182                     u11980:
 12330  004182  A44F               	btfss	_flags^0,2,c
 12331  004184  EFC6  F020         	goto	u11991
 12332  004188  EFC8  F020         	goto	u11990
 12333  00418C                     u11991:
 12334  00418C  EFE6  F020         	goto	l12218
 12335  004190                     u11990:
 12336  004190                     l12208:
 12337                           
 12338                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
 12339  004190  0647               	decf	dtoa@i^0,f,c
 12340  004192  A0D8               	btfss	status,0,c
 12341  004194  0648               	decf	(dtoa@i+1)^0,f,c
 12342  004196                     
 12343                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 12344  004196  503D               	movf	dtoa@s^0,w,c
 12345  004198  103E               	iorwf	(dtoa@s+1)^0,w,c
 12346  00419A  A4D8               	btfss	status,2,c
 12347  00419C  EFD2  F020         	goto	u12001
 12348  0041A0  EFD4  F020         	goto	u12000
 12349  0041A4                     u12001:
 12350  0041A4  EFDA  F020         	goto	l12214
 12351  0041A8                     u12000:
 12352  0041A8  0E00               	movlw	0
 12353  0041AA  6E38               	movwf	(_dtoa$3613+1)^0,c
 12354  0041AC  0E2B               	movlw	43
 12355  0041AE  6E37               	movwf	_dtoa$3613^0,c
 12356  0041B0  EFDE  F020         	goto	l12216
 12357  0041B4                     l12214:
 12358  0041B4  0E00               	movlw	0
 12359  0041B6  6E38               	movwf	(_dtoa$3613+1)^0,c
 12360  0041B8  0E2D               	movlw	45
 12361  0041BA  6E37               	movwf	_dtoa$3613^0,c
 12362  0041BC                     l12216:
 12363  0041BC  0E50               	movlw	low _dbuf
 12364  0041BE  2447               	addwf	dtoa@i^0,w,c
 12365  0041C0  6ED9               	movwf	fsr2l,c
 12366  0041C2  0E02               	movlw	high _dbuf
 12367  0041C4  2048               	addwfc	(dtoa@i+1)^0,w,c
 12368  0041C6  6EDA               	movwf	fsr2h,c
 12369  0041C8  C037  FFDF         	movff	_dtoa$3613,indf2
 12370  0041CC                     l12218:
 12371                           
 12372                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 12373  0041CC  C025  F01A         	movff	dtoa@fp,pad@fp
 12374  0041D0  C026  F01B         	movff	dtoa@fp+1,pad@fp+1
 12375  0041D4  0E50               	movlw	low _dbuf
 12376  0041D6  2447               	addwf	dtoa@i^0,w,c
 12377  0041D8  6E1C               	movwf	pad@buf^0,c
 12378  0041DA  0E02               	movlw	high _dbuf
 12379  0041DC  2048               	addwfc	(dtoa@i+1)^0,w,c
 12380  0041DE  6E1D               	movwf	(pad@buf+1)^0,c
 12381  0041E0  C03B  F01E         	movff	dtoa@w,pad@p
 12382  0041E4  C03C  F01F         	movff	dtoa@w+1,pad@p+1
 12383  0041E8  EC5A  F02F         	call	_pad	;wreg free
 12384  0041EC  C01A  F025         	movff	?_pad,?_dtoa
 12385  0041F0  C01B  F026         	movff	?_pad+1,?_dtoa+1
 12386  0041F4  0012               	return		;funcret
 12387  0041F6                     __end_of_dtoa:
 12388                           	callstack 0
 12389                           
 12390 ;; *************** function _pad *****************
 12391 ;; Defined at:
 12392 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 12393 ;; Parameters:    Size  Location     Type
 12394 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
 12395 ;;		 -> sprintf@f(6), 
 12396 ;;  buf             2   27[COMRAM] PTR unsigned char 
 12397 ;;		 -> dbuf(80), 
 12398 ;;  p               2   29[COMRAM] int 
 12399 ;; Auto vars:     Size  Location     Type
 12400 ;;  w               2   34[COMRAM] int 
 12401 ;;  i               2   32[COMRAM] int 
 12402 ;; Return value:  Size  Location     Type
 12403 ;;                  2   25[COMRAM] int 
 12404 ;; Registers used:
 12405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12406 ;; Tracked objects:
 12407 ;;		On entry : 0/0
 12408 ;;		On exit  : 0/0
 12409 ;;		Unchanged: 0/0
 12410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12411 ;;      Params:         6       0       0       0       0       0       0
 12412 ;;      Locals:         4       0       0       0       0       0       0
 12413 ;;      Temps:          1       0       0       0       0       0       0
 12414 ;;      Totals:        11       0       0       0       0       0       0
 12415 ;;Total ram usage:       11 bytes
 12416 ;; Hardware stack levels used: 1
 12417 ;; Hardware stack levels required when called: 7
 12418 ;; This function calls:
 12419 ;;		_fputc
 12420 ;;		_fputs
 12421 ;;		_strlen
 12422 ;; This function is called by:
 12423 ;;		_dtoa
 12424 ;;		_efgtoa
 12425 ;; This function uses a non-reentrant model
 12426 ;;
 12427                           
 12428                           	psect	text47
 12429  005EB4                     __ptext47:
 12430                           	callstack 0
 12431  005EB4                     _pad:
 12432                           	callstack 17
 12433  005EB4                     
 12434                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 12435  005EB4  A04F               	btfss	_flags^0,0,c
 12436  005EB6  EF5F  F02F         	goto	u11481
 12437  005EBA  EF61  F02F         	goto	u11480
 12438  005EBE                     u11481:
 12439  005EBE  EF6B  F02F         	goto	l11962
 12440  005EC2                     u11480:
 12441  005EC2                     
 12442                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 12443  005EC2  C01C  F013         	movff	pad@buf,fputs@s
 12444  005EC6  C01D  F014         	movff	pad@buf+1,fputs@s+1
 12445  005ECA  C01A  F015         	movff	pad@fp,fputs@fp
 12446  005ECE  C01B  F016         	movff	pad@fp+1,fputs@fp+1
 12447  005ED2  ECB0  F037         	call	_fputs	;wreg free
 12448  005ED6                     l11962:
 12449                           
 12450                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 12451  005ED6  BE1F               	btfsc	(pad@p+1)^0,7,c
 12452  005ED8  EF70  F02F         	goto	u11491
 12453  005EDC  EF72  F02F         	goto	u11490
 12454  005EE0                     u11491:
 12455  005EE0  EF78  F02F         	goto	l11966
 12456  005EE4                     u11490:
 12457  005EE4  C01E  F023         	movff	pad@p,pad@w
 12458  005EE8  C01F  F024         	movff	pad@p+1,pad@w+1
 12459  005EEC  EF7C  F02F         	goto	l2320
 12460  005EF0                     l11966:
 12461  005EF0  0E00               	movlw	0
 12462  005EF2  6E24               	movwf	(pad@w+1)^0,c
 12463  005EF4  0E00               	movlw	0
 12464  005EF6  6E23               	movwf	pad@w^0,c
 12465  005EF8                     l2320:
 12466                           
 12467                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 12468  005EF8  0E00               	movlw	0
 12469  005EFA  6E22               	movwf	(pad@i+1)^0,c
 12470  005EFC  0E00               	movlw	0
 12471  005EFE  6E21               	movwf	pad@i^0,c
 12472                           
 12473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12474  005F00  EF8E  F02F         	goto	l11972
 12475  005F04                     l11968:
 12476                           
 12477                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 12478  005F04  0E00               	movlw	0
 12479  005F06  6E0B               	movwf	(fputc@c+1)^0,c
 12480  005F08  0E20               	movlw	32
 12481  005F0A  6E0A               	movwf	fputc@c^0,c
 12482  005F0C  C01A  F00C         	movff	pad@fp,fputc@fp
 12483  005F10  C01B  F00D         	movff	pad@fp+1,fputc@fp+1
 12484  005F14  ECCC  F02D         	call	_fputc	;wreg free
 12485  005F18                     
 12486                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
 12487  005F18  4A21               	infsnz	pad@i^0,f,c
 12488  005F1A  2A22               	incf	(pad@i+1)^0,f,c
 12489  005F1C                     l11972:
 12490                           
 12491                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12492  005F1C  5023               	movf	pad@w^0,w,c
 12493  005F1E  5C21               	subwf	pad@i^0,w,c
 12494  005F20  5022               	movf	(pad@i+1)^0,w,c
 12495  005F22  0A80               	xorlw	128
 12496  005F24  6E20               	movwf	??_pad^0,c
 12497  005F26  5024               	movf	(pad@w+1)^0,w,c
 12498  005F28  0A80               	xorlw	128
 12499  005F2A  5820               	subwfb	??_pad^0,w,c
 12500  005F2C  A0D8               	btfss	status,0,c
 12501  005F2E  EF9B  F02F         	goto	u11501
 12502  005F32  EF9D  F02F         	goto	u11500
 12503  005F36                     u11501:
 12504  005F36  EF82  F02F         	goto	l11968
 12505  005F3A                     u11500:
 12506  005F3A                     
 12507                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 12508  005F3A  B04F               	btfsc	_flags^0,0,c
 12509  005F3C  EFA2  F02F         	goto	u11511
 12510  005F40  EFA4  F02F         	goto	u11510
 12511  005F44                     u11511:
 12512  005F44  EFAE  F02F         	goto	l11976
 12513  005F48                     u11510:
 12514  005F48                     
 12515                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 12516  005F48  C01C  F013         	movff	pad@buf,fputs@s
 12517  005F4C  C01D  F014         	movff	pad@buf+1,fputs@s+1
 12518  005F50  C01A  F015         	movff	pad@fp,fputs@fp
 12519  005F54  C01B  F016         	movff	pad@fp+1,fputs@fp+1
 12520  005F58  ECB0  F037         	call	_fputs	;wreg free
 12521  005F5C                     l11976:
 12522                           
 12523                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 12524  005F5C  C01C  F00A         	movff	pad@buf,strlen@s
 12525  005F60  C01D  F00B         	movff	pad@buf+1,strlen@s+1
 12526  005F64  EC3F  F039         	call	_strlen	;wreg free
 12527  005F68  5023               	movf	pad@w^0,w,c
 12528  005F6A  240A               	addwf	?_strlen^0,w,c
 12529  005F6C  6E1A               	movwf	?_pad^0,c
 12530  005F6E  5024               	movf	(pad@w+1)^0,w,c
 12531  005F70  200B               	addwfc	(?_strlen+1)^0,w,c
 12532  005F72  6E1B               	movwf	(?_pad+1)^0,c
 12533  005F74  0012               	return		;funcret
 12534  005F76                     __end_of_pad:
 12535                           	callstack 0
 12536                           
 12537 ;; *************** function _strlen *****************
 12538 ;; Defined at:
 12539 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
 12540 ;; Parameters:    Size  Location     Type
 12541 ;;  s               2    9[COMRAM] PTR const unsigned char 
 12542 ;;		 -> dbuf(80), 
 12543 ;; Auto vars:     Size  Location     Type
 12544 ;;  a               2   11[COMRAM] PTR const unsigned char 
 12545 ;;		 -> dbuf(80), 
 12546 ;; Return value:  Size  Location     Type
 12547 ;;                  2    9[COMRAM] unsigned int 
 12548 ;; Registers used:
 12549 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12550 ;; Tracked objects:
 12551 ;;		On entry : 0/0
 12552 ;;		On exit  : 0/0
 12553 ;;		Unchanged: 0/0
 12554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12555 ;;      Params:         2       0       0       0       0       0       0
 12556 ;;      Locals:         2       0       0       0       0       0       0
 12557 ;;      Temps:          0       0       0       0       0       0       0
 12558 ;;      Totals:         4       0       0       0       0       0       0
 12559 ;;Total ram usage:        4 bytes
 12560 ;; Hardware stack levels used: 1
 12561 ;; Hardware stack levels required when called: 4
 12562 ;; This function calls:
 12563 ;;		Nothing
 12564 ;; This function is called by:
 12565 ;;		_pad
 12566 ;; This function uses a non-reentrant model
 12567 ;;
 12568                           
 12569                           	psect	text48
 12570  00727E                     __ptext48:
 12571                           	callstack 0
 12572  00727E                     _strlen:
 12573                           	callstack 19
 12574  00727E  C00A  F00C         	movff	strlen@s,strlen@a
 12575  007282  C00B  F00D         	movff	strlen@s+1,strlen@a+1
 12576  007286  EF47  F039         	goto	l11384
 12577  00728A                     l11382:
 12578  00728A  4A0A               	infsnz	strlen@s^0,f,c
 12579  00728C  2A0B               	incf	(strlen@s+1)^0,f,c
 12580  00728E                     l11384:
 12581  00728E  C00A  FFD9         	movff	strlen@s,fsr2l
 12582  007292  C00B  FFDA         	movff	strlen@s+1,fsr2h
 12583  007296  50DF               	movf	indf2,w,c
 12584  007298  A4D8               	btfss	status,2,c
 12585  00729A  EF51  F039         	goto	u10591
 12586  00729E  EF53  F039         	goto	u10590
 12587  0072A2                     u10591:
 12588  0072A2  EF45  F039         	goto	l11382
 12589  0072A6                     u10590:
 12590  0072A6  500C               	movf	strlen@a^0,w,c
 12591  0072A8  5C0A               	subwf	strlen@s^0,w,c
 12592  0072AA  6E0A               	movwf	?_strlen^0,c
 12593  0072AC  500D               	movf	(strlen@a+1)^0,w,c
 12594  0072AE  580B               	subwfb	(strlen@s+1)^0,w,c
 12595  0072B0  6E0B               	movwf	(?_strlen+1)^0,c
 12596  0072B2  0012               	return		;funcret
 12597  0072B4                     __end_of_strlen:
 12598                           	callstack 0
 12599                           
 12600 ;; *************** function _fputs *****************
 12601 ;; Defined at:
 12602 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
 12603 ;; Parameters:    Size  Location     Type
 12604 ;;  s               2   18[COMRAM] PTR const unsigned char 
 12605 ;;		 -> dbuf(80), 
 12606 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
 12607 ;;		 -> sprintf@f(6), 
 12608 ;; Auto vars:     Size  Location     Type
 12609 ;;  i               2   23[COMRAM] int 
 12610 ;;  c               1   22[COMRAM] unsigned char 
 12611 ;; Return value:  Size  Location     Type
 12612 ;;                  2   18[COMRAM] int 
 12613 ;; Registers used:
 12614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12615 ;; Tracked objects:
 12616 ;;		On entry : 0/0
 12617 ;;		On exit  : 0/0
 12618 ;;		Unchanged: 0/0
 12619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12620 ;;      Params:         4       0       0       0       0       0       0
 12621 ;;      Locals:         3       0       0       0       0       0       0
 12622 ;;      Temps:          0       0       0       0       0       0       0
 12623 ;;      Totals:         7       0       0       0       0       0       0
 12624 ;;Total ram usage:        7 bytes
 12625 ;; Hardware stack levels used: 1
 12626 ;; Hardware stack levels required when called: 6
 12627 ;; This function calls:
 12628 ;;		_fputc
 12629 ;; This function is called by:
 12630 ;;		_pad
 12631 ;; This function uses a non-reentrant model
 12632 ;;
 12633                           
 12634                           	psect	text49
 12635  006F60                     __ptext49:
 12636                           	callstack 0
 12637  006F60                     _fputs:
 12638                           	callstack 17
 12639  006F60  0E00               	movlw	0
 12640  006F62  6E19               	movwf	(fputs@i+1)^0,c
 12641  006F64  0E00               	movlw	0
 12642  006F66  6E18               	movwf	fputs@i^0,c
 12643  006F68  EFC1  F037         	goto	l11378
 12644  006F6C                     l11374:
 12645  006F6C  C017  F00A         	movff	fputs@c,fputc@c
 12646  006F70  6A0B               	clrf	(fputc@c+1)^0,c
 12647  006F72  C015  F00C         	movff	fputs@fp,fputc@fp
 12648  006F76  C016  F00D         	movff	fputs@fp+1,fputc@fp+1
 12649  006F7A  ECCC  F02D         	call	_fputc	;wreg free
 12650  006F7E  4A18               	infsnz	fputs@i^0,f,c
 12651  006F80  2A19               	incf	(fputs@i+1)^0,f,c
 12652  006F82                     l11378:
 12653  006F82  5018               	movf	fputs@i^0,w,c
 12654  006F84  2413               	addwf	fputs@s^0,w,c
 12655  006F86  6ED9               	movwf	fsr2l,c
 12656  006F88  5019               	movf	(fputs@i+1)^0,w,c
 12657  006F8A  2014               	addwfc	(fputs@s+1)^0,w,c
 12658  006F8C  6EDA               	movwf	fsr2h,c
 12659  006F8E  50DF               	movf	indf2,w,c
 12660  006F90  6E17               	movwf	fputs@c^0,c
 12661  006F92  5017               	movf	fputs@c^0,w,c
 12662  006F94  A4D8               	btfss	status,2,c
 12663  006F96  EFCF  F037         	goto	u10581
 12664  006F9A  EFD1  F037         	goto	u10580
 12665  006F9E                     u10581:
 12666  006F9E  EFB6  F037         	goto	l11374
 12667  006FA2                     u10580:
 12668  006FA2  0012               	return		;funcret
 12669  006FA4                     __end_of_fputs:
 12670                           	callstack 0
 12671                           
 12672 ;; *************** function _abs *****************
 12673 ;; Defined at:
 12674 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
 12675 ;; Parameters:    Size  Location     Type
 12676 ;;  a               2   27[COMRAM] int 
 12677 ;; Auto vars:     Size  Location     Type
 12678 ;;		None
 12679 ;; Return value:  Size  Location     Type
 12680 ;;                  2   27[COMRAM] int 
 12681 ;; Registers used:
 12682 ;;		wreg, status,2, status,0
 12683 ;; Tracked objects:
 12684 ;;		On entry : 0/0
 12685 ;;		On exit  : 0/0
 12686 ;;		Unchanged: 0/0
 12687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12688 ;;      Params:         2       0       0       0       0       0       0
 12689 ;;      Locals:         0       0       0       0       0       0       0
 12690 ;;      Temps:          2       0       0       0       0       0       0
 12691 ;;      Totals:         4       0       0       0       0       0       0
 12692 ;;Total ram usage:        4 bytes
 12693 ;; Hardware stack levels used: 1
 12694 ;; Hardware stack levels required when called: 4
 12695 ;; This function calls:
 12696 ;;		Nothing
 12697 ;; This function is called by:
 12698 ;;		_dtoa
 12699 ;; This function uses a non-reentrant model
 12700 ;;
 12701                           
 12702                           	psect	text50
 12703  006FE8                     __ptext50:
 12704                           	callstack 0
 12705  006FE8                     _abs:
 12706                           	callstack 20
 12707  006FE8  BE1D               	btfsc	(abs@a+1)^0,7,c
 12708  006FEA  EF01  F038         	goto	u11520
 12709  006FEE  501D               	movf	(abs@a+1)^0,w,c
 12710  006FF0  E106               	bnz	u11521
 12711  006FF2  041C               	decf	abs@a^0,w,c
 12712  006FF4  B0D8               	btfsc	status,0,c
 12713  006FF6  EFFF  F037         	goto	u11521
 12714  006FFA  EF01  F038         	goto	u11520
 12715  006FFE                     u11521:
 12716  006FFE  EF0F  F038         	goto	l2532
 12717  007002                     u11520:
 12718  007002  C01C  F01E         	movff	abs@a,??_abs
 12719  007006  C01D  F01F         	movff	abs@a+1,??_abs+1
 12720  00700A  1E1E               	comf	??_abs^0,f,c
 12721  00700C  1E1F               	comf	(??_abs+1)^0,f,c
 12722  00700E  4A1E               	infsnz	??_abs^0,f,c
 12723  007010  2A1F               	incf	(??_abs+1)^0,f,c
 12724  007012  C01E  F01C         	movff	??_abs,?_abs
 12725  007016  C01F  F01D         	movff	??_abs+1,?_abs+1
 12726  00701A  EF13  F038         	goto	l2535
 12727  00701E                     l2532:
 12728  00701E  C01C  F01C         	movff	abs@a,?_abs
 12729  007022  C01D  F01D         	movff	abs@a+1,?_abs+1
 12730  007026                     l2535:
 12731  007026  0012               	return		;funcret
 12732  007028                     __end_of_abs:
 12733                           	callstack 0
 12734                           
 12735 ;; *************** function ___aomod *****************
 12736 ;; Defined at:
 12737 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
 12738 ;; Parameters:    Size  Location     Type
 12739 ;;  dividend        8    9[COMRAM] long long 
 12740 ;;  divisor         8   17[COMRAM] long long 
 12741 ;; Auto vars:     Size  Location     Type
 12742 ;;  sign            1   26[COMRAM] unsigned char 
 12743 ;;  counter         1   25[COMRAM] unsigned char 
 12744 ;; Return value:  Size  Location     Type
 12745 ;;                  8    9[COMRAM] long long 
 12746 ;; Registers used:
 12747 ;;		wreg, status,2, status,0
 12748 ;; Tracked objects:
 12749 ;;		On entry : 0/0
 12750 ;;		On exit  : 0/0
 12751 ;;		Unchanged: 0/0
 12752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12753 ;;      Params:        16       0       0       0       0       0       0
 12754 ;;      Locals:         2       0       0       0       0       0       0
 12755 ;;      Temps:          0       0       0       0       0       0       0
 12756 ;;      Totals:        18       0       0       0       0       0       0
 12757 ;;Total ram usage:       18 bytes
 12758 ;; Hardware stack levels used: 1
 12759 ;; Hardware stack levels required when called: 4
 12760 ;; This function calls:
 12761 ;;		Nothing
 12762 ;; This function is called by:
 12763 ;;		_dtoa
 12764 ;; This function uses a non-reentrant model
 12765 ;;
 12766                           
 12767                           	psect	text51
 12768  0048D8                     __ptext51:
 12769                           	callstack 0
 12770  0048D8                     ___aomod:
 12771                           	callstack 20
 12772  0048D8  0E00               	movlw	0
 12773  0048DA  6E1B               	movwf	___aomod@sign^0,c
 12774  0048DC  BE11               	btfsc	(___aomod@dividend+7)^0,7,c
 12775  0048DE  EF75  F024         	goto	u10720
 12776  0048E2  EF73  F024         	goto	u10721
 12777  0048E6                     u10721:
 12778  0048E6  EF87  F024         	goto	l11486
 12779  0048EA                     u10720:
 12780  0048EA  1E11               	comf	(___aomod@dividend+7)^0,f,c
 12781  0048EC  1E10               	comf	(___aomod@dividend+6)^0,f,c
 12782  0048EE  1E0F               	comf	(___aomod@dividend+5)^0,f,c
 12783  0048F0  1E0E               	comf	(___aomod@dividend+4)^0,f,c
 12784  0048F2  1E0D               	comf	(___aomod@dividend+3)^0,f,c
 12785  0048F4  1E0C               	comf	(___aomod@dividend+2)^0,f,c
 12786  0048F6  1E0B               	comf	(___aomod@dividend+1)^0,f,c
 12787  0048F8  6C0A               	negf	___aomod@dividend^0,c
 12788  0048FA  0E00               	movlw	0
 12789  0048FC  220B               	addwfc	(___aomod@dividend+1)^0,f,c
 12790  0048FE  220C               	addwfc	(___aomod@dividend+2)^0,f,c
 12791  004900  220D               	addwfc	(___aomod@dividend+3)^0,f,c
 12792  004902  220E               	addwfc	(___aomod@dividend+4)^0,f,c
 12793  004904  220F               	addwfc	(___aomod@dividend+5)^0,f,c
 12794  004906  2210               	addwfc	(___aomod@dividend+6)^0,f,c
 12795  004908  2211               	addwfc	(___aomod@dividend+7)^0,f,c
 12796  00490A  0E01               	movlw	1
 12797  00490C  6E1B               	movwf	___aomod@sign^0,c
 12798  00490E                     l11486:
 12799  00490E  BE19               	btfsc	(___aomod@divisor+7)^0,7,c
 12800  004910  EF8E  F024         	goto	u10730
 12801  004914  EF8C  F024         	goto	u10731
 12802  004918                     u10731:
 12803  004918  EF9E  F024         	goto	l11490
 12804  00491C                     u10730:
 12805  00491C  1E19               	comf	(___aomod@divisor+7)^0,f,c
 12806  00491E  1E18               	comf	(___aomod@divisor+6)^0,f,c
 12807  004920  1E17               	comf	(___aomod@divisor+5)^0,f,c
 12808  004922  1E16               	comf	(___aomod@divisor+4)^0,f,c
 12809  004924  1E15               	comf	(___aomod@divisor+3)^0,f,c
 12810  004926  1E14               	comf	(___aomod@divisor+2)^0,f,c
 12811  004928  1E13               	comf	(___aomod@divisor+1)^0,f,c
 12812  00492A  6C12               	negf	___aomod@divisor^0,c
 12813  00492C  0E00               	movlw	0
 12814  00492E  2213               	addwfc	(___aomod@divisor+1)^0,f,c
 12815  004930  2214               	addwfc	(___aomod@divisor+2)^0,f,c
 12816  004932  2215               	addwfc	(___aomod@divisor+3)^0,f,c
 12817  004934  2216               	addwfc	(___aomod@divisor+4)^0,f,c
 12818  004936  2217               	addwfc	(___aomod@divisor+5)^0,f,c
 12819  004938  2218               	addwfc	(___aomod@divisor+6)^0,f,c
 12820  00493A  2219               	addwfc	(___aomod@divisor+7)^0,f,c
 12821  00493C                     l11490:
 12822  00493C  5012               	movf	___aomod@divisor^0,w,c
 12823  00493E  1013               	iorwf	(___aomod@divisor+1)^0,w,c
 12824  004940  1014               	iorwf	(___aomod@divisor+2)^0,w,c
 12825  004942  1015               	iorwf	(___aomod@divisor+3)^0,w,c
 12826  004944  1016               	iorwf	(___aomod@divisor+4)^0,w,c
 12827  004946  1017               	iorwf	(___aomod@divisor+5)^0,w,c
 12828  004948  1018               	iorwf	(___aomod@divisor+6)^0,w,c
 12829  00494A  1019               	iorwf	(___aomod@divisor+7)^0,w,c
 12830  00494C  B4D8               	btfsc	status,2,c
 12831  00494E  EFAB  F024         	goto	u10741
 12832  004952  EFAD  F024         	goto	u10740
 12833  004956                     u10741:
 12834  004956  EFF5  F024         	goto	l11506
 12835  00495A                     u10740:
 12836  00495A  0E01               	movlw	1
 12837  00495C  6E1A               	movwf	___aomod@counter^0,c
 12838  00495E  EFBB  F024         	goto	l11496
 12839  004962                     l11494:
 12840  004962  90D8               	bcf	status,0,c
 12841  004964  3612               	rlcf	___aomod@divisor^0,f,c
 12842  004966  3613               	rlcf	(___aomod@divisor+1)^0,f,c
 12843  004968  3614               	rlcf	(___aomod@divisor+2)^0,f,c
 12844  00496A  3615               	rlcf	(___aomod@divisor+3)^0,f,c
 12845  00496C  3616               	rlcf	(___aomod@divisor+4)^0,f,c
 12846  00496E  3617               	rlcf	(___aomod@divisor+5)^0,f,c
 12847  004970  3618               	rlcf	(___aomod@divisor+6)^0,f,c
 12848  004972  3619               	rlcf	(___aomod@divisor+7)^0,f,c
 12849  004974  2A1A               	incf	___aomod@counter^0,f,c
 12850  004976                     l11496:
 12851  004976  AE19               	btfss	(___aomod@divisor+7)^0,7,c
 12852  004978  EFC0  F024         	goto	u10751
 12853  00497C  EFC2  F024         	goto	u10750
 12854  004980                     u10751:
 12855  004980  EFB1  F024         	goto	l11494
 12856  004984                     u10750:
 12857  004984                     l11498:
 12858  004984  5012               	movf	___aomod@divisor^0,w,c
 12859  004986  5C0A               	subwf	___aomod@dividend^0,w,c
 12860  004988  5013               	movf	(___aomod@divisor+1)^0,w,c
 12861  00498A  580B               	subwfb	(___aomod@dividend+1)^0,w,c
 12862  00498C  5014               	movf	(___aomod@divisor+2)^0,w,c
 12863  00498E  580C               	subwfb	(___aomod@dividend+2)^0,w,c
 12864  004990  5015               	movf	(___aomod@divisor+3)^0,w,c
 12865  004992  580D               	subwfb	(___aomod@dividend+3)^0,w,c
 12866  004994  5016               	movf	(___aomod@divisor+4)^0,w,c
 12867  004996  580E               	subwfb	(___aomod@dividend+4)^0,w,c
 12868  004998  5017               	movf	(___aomod@divisor+5)^0,w,c
 12869  00499A  580F               	subwfb	(___aomod@dividend+5)^0,w,c
 12870  00499C  5018               	movf	(___aomod@divisor+6)^0,w,c
 12871  00499E  5810               	subwfb	(___aomod@dividend+6)^0,w,c
 12872  0049A0  5019               	movf	(___aomod@divisor+7)^0,w,c
 12873  0049A2  5811               	subwfb	(___aomod@dividend+7)^0,w,c
 12874  0049A4  A0D8               	btfss	status,0,c
 12875  0049A6  EFD7  F024         	goto	u10761
 12876  0049AA  EFD9  F024         	goto	u10760
 12877  0049AE                     u10761:
 12878  0049AE  EFE9  F024         	goto	l11502
 12879  0049B2                     u10760:
 12880  0049B2  5012               	movf	___aomod@divisor^0,w,c
 12881  0049B4  5E0A               	subwf	___aomod@dividend^0,f,c
 12882  0049B6  5013               	movf	(___aomod@divisor+1)^0,w,c
 12883  0049B8  5A0B               	subwfb	(___aomod@dividend+1)^0,f,c
 12884  0049BA  5014               	movf	(___aomod@divisor+2)^0,w,c
 12885  0049BC  5A0C               	subwfb	(___aomod@dividend+2)^0,f,c
 12886  0049BE  5015               	movf	(___aomod@divisor+3)^0,w,c
 12887  0049C0  5A0D               	subwfb	(___aomod@dividend+3)^0,f,c
 12888  0049C2  5016               	movf	(___aomod@divisor+4)^0,w,c
 12889  0049C4  5A0E               	subwfb	(___aomod@dividend+4)^0,f,c
 12890  0049C6  5017               	movf	(___aomod@divisor+5)^0,w,c
 12891  0049C8  5A0F               	subwfb	(___aomod@dividend+5)^0,f,c
 12892  0049CA  5018               	movf	(___aomod@divisor+6)^0,w,c
 12893  0049CC  5A10               	subwfb	(___aomod@dividend+6)^0,f,c
 12894  0049CE  5019               	movf	(___aomod@divisor+7)^0,w,c
 12895  0049D0  5A11               	subwfb	(___aomod@dividend+7)^0,f,c
 12896  0049D2                     l11502:
 12897  0049D2  90D8               	bcf	status,0,c
 12898  0049D4  3219               	rrcf	(___aomod@divisor+7)^0,f,c
 12899  0049D6  3218               	rrcf	(___aomod@divisor+6)^0,f,c
 12900  0049D8  3217               	rrcf	(___aomod@divisor+5)^0,f,c
 12901  0049DA  3216               	rrcf	(___aomod@divisor+4)^0,f,c
 12902  0049DC  3215               	rrcf	(___aomod@divisor+3)^0,f,c
 12903  0049DE  3214               	rrcf	(___aomod@divisor+2)^0,f,c
 12904  0049E0  3213               	rrcf	(___aomod@divisor+1)^0,f,c
 12905  0049E2  3212               	rrcf	___aomod@divisor^0,f,c
 12906  0049E4  2E1A               	decfsz	___aomod@counter^0,f,c
 12907  0049E6  EFC2  F024         	goto	l11498
 12908  0049EA                     l11506:
 12909  0049EA  501B               	movf	___aomod@sign^0,w,c
 12910  0049EC  B4D8               	btfsc	status,2,c
 12911  0049EE  EFFB  F024         	goto	u10771
 12912  0049F2  EFFD  F024         	goto	u10770
 12913  0049F6                     u10771:
 12914  0049F6  EF0D  F025         	goto	l11510
 12915  0049FA                     u10770:
 12916  0049FA  1E11               	comf	(___aomod@dividend+7)^0,f,c
 12917  0049FC  1E10               	comf	(___aomod@dividend+6)^0,f,c
 12918  0049FE  1E0F               	comf	(___aomod@dividend+5)^0,f,c
 12919  004A00  1E0E               	comf	(___aomod@dividend+4)^0,f,c
 12920  004A02  1E0D               	comf	(___aomod@dividend+3)^0,f,c
 12921  004A04  1E0C               	comf	(___aomod@dividend+2)^0,f,c
 12922  004A06  1E0B               	comf	(___aomod@dividend+1)^0,f,c
 12923  004A08  6C0A               	negf	___aomod@dividend^0,c
 12924  004A0A  0E00               	movlw	0
 12925  004A0C  220B               	addwfc	(___aomod@dividend+1)^0,f,c
 12926  004A0E  220C               	addwfc	(___aomod@dividend+2)^0,f,c
 12927  004A10  220D               	addwfc	(___aomod@dividend+3)^0,f,c
 12928  004A12  220E               	addwfc	(___aomod@dividend+4)^0,f,c
 12929  004A14  220F               	addwfc	(___aomod@dividend+5)^0,f,c
 12930  004A16  2210               	addwfc	(___aomod@dividend+6)^0,f,c
 12931  004A18  2211               	addwfc	(___aomod@dividend+7)^0,f,c
 12932  004A1A                     l11510:
 12933  004A1A  C00A  F00A         	movff	___aomod@dividend,?___aomod
 12934  004A1E  C00B  F00B         	movff	___aomod@dividend+1,?___aomod+1
 12935  004A22  C00C  F00C         	movff	___aomod@dividend+2,?___aomod+2
 12936  004A26  C00D  F00D         	movff	___aomod@dividend+3,?___aomod+3
 12937  004A2A  C00E  F00E         	movff	___aomod@dividend+4,?___aomod+4
 12938  004A2E  C00F  F00F         	movff	___aomod@dividend+5,?___aomod+5
 12939  004A32  C010  F010         	movff	___aomod@dividend+6,?___aomod+6
 12940  004A36  C011  F011         	movff	___aomod@dividend+7,?___aomod+7
 12941  004A3A  0012               	return		;funcret
 12942  004A3C                     __end_of___aomod:
 12943                           	callstack 0
 12944                           
 12945 ;; *************** function ___aodiv *****************
 12946 ;; Defined at:
 12947 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
 12948 ;; Parameters:    Size  Location     Type
 12949 ;;  dividend        8    9[COMRAM] long long 
 12950 ;;  divisor         8   17[COMRAM] long long 
 12951 ;; Auto vars:     Size  Location     Type
 12952 ;;  quotient        8   27[COMRAM] long long 
 12953 ;;  sign            1   26[COMRAM] unsigned char 
 12954 ;;  counter         1   25[COMRAM] unsigned char 
 12955 ;; Return value:  Size  Location     Type
 12956 ;;                  8    9[COMRAM] long long 
 12957 ;; Registers used:
 12958 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12959 ;; Tracked objects:
 12960 ;;		On entry : 0/0
 12961 ;;		On exit  : 0/0
 12962 ;;		Unchanged: 0/0
 12963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12964 ;;      Params:        16       0       0       0       0       0       0
 12965 ;;      Locals:        10       0       0       0       0       0       0
 12966 ;;      Temps:          0       0       0       0       0       0       0
 12967 ;;      Totals:        26       0       0       0       0       0       0
 12968 ;;Total ram usage:       26 bytes
 12969 ;; Hardware stack levels used: 1
 12970 ;; Hardware stack levels required when called: 4
 12971 ;; This function calls:
 12972 ;;		Nothing
 12973 ;; This function is called by:
 12974 ;;		_dtoa
 12975 ;; This function uses a non-reentrant model
 12976 ;;
 12977                           
 12978                           	psect	text52
 12979  004750                     __ptext52:
 12980                           	callstack 0
 12981  004750                     ___aodiv:
 12982                           	callstack 20
 12983  004750  0E00               	movlw	0
 12984  004752  6E1B               	movwf	___aodiv@sign^0,c
 12985  004754  BE19               	btfsc	(___aodiv@divisor+7)^0,7,c
 12986  004756  EFB1  F023         	goto	u10650
 12987  00475A  EFAF  F023         	goto	u10651
 12988  00475E                     u10651:
 12989  00475E  EFC3  F023         	goto	l11442
 12990  004762                     u10650:
 12991  004762  1E19               	comf	(___aodiv@divisor+7)^0,f,c
 12992  004764  1E18               	comf	(___aodiv@divisor+6)^0,f,c
 12993  004766  1E17               	comf	(___aodiv@divisor+5)^0,f,c
 12994  004768  1E16               	comf	(___aodiv@divisor+4)^0,f,c
 12995  00476A  1E15               	comf	(___aodiv@divisor+3)^0,f,c
 12996  00476C  1E14               	comf	(___aodiv@divisor+2)^0,f,c
 12997  00476E  1E13               	comf	(___aodiv@divisor+1)^0,f,c
 12998  004770  6C12               	negf	___aodiv@divisor^0,c
 12999  004772  0E00               	movlw	0
 13000  004774  2213               	addwfc	(___aodiv@divisor+1)^0,f,c
 13001  004776  2214               	addwfc	(___aodiv@divisor+2)^0,f,c
 13002  004778  2215               	addwfc	(___aodiv@divisor+3)^0,f,c
 13003  00477A  2216               	addwfc	(___aodiv@divisor+4)^0,f,c
 13004  00477C  2217               	addwfc	(___aodiv@divisor+5)^0,f,c
 13005  00477E  2218               	addwfc	(___aodiv@divisor+6)^0,f,c
 13006  004780  2219               	addwfc	(___aodiv@divisor+7)^0,f,c
 13007  004782  0E01               	movlw	1
 13008  004784  6E1B               	movwf	___aodiv@sign^0,c
 13009  004786                     l11442:
 13010  004786  BE11               	btfsc	(___aodiv@dividend+7)^0,7,c
 13011  004788  EFCA  F023         	goto	u10660
 13012  00478C  EFC8  F023         	goto	u10661
 13013  004790                     u10661:
 13014  004790  EFDC  F023         	goto	l11448
 13015  004794                     u10660:
 13016  004794  1E11               	comf	(___aodiv@dividend+7)^0,f,c
 13017  004796  1E10               	comf	(___aodiv@dividend+6)^0,f,c
 13018  004798  1E0F               	comf	(___aodiv@dividend+5)^0,f,c
 13019  00479A  1E0E               	comf	(___aodiv@dividend+4)^0,f,c
 13020  00479C  1E0D               	comf	(___aodiv@dividend+3)^0,f,c
 13021  00479E  1E0C               	comf	(___aodiv@dividend+2)^0,f,c
 13022  0047A0  1E0B               	comf	(___aodiv@dividend+1)^0,f,c
 13023  0047A2  6C0A               	negf	___aodiv@dividend^0,c
 13024  0047A4  0E00               	movlw	0
 13025  0047A6  220B               	addwfc	(___aodiv@dividend+1)^0,f,c
 13026  0047A8  220C               	addwfc	(___aodiv@dividend+2)^0,f,c
 13027  0047AA  220D               	addwfc	(___aodiv@dividend+3)^0,f,c
 13028  0047AC  220E               	addwfc	(___aodiv@dividend+4)^0,f,c
 13029  0047AE  220F               	addwfc	(___aodiv@dividend+5)^0,f,c
 13030  0047B0  2210               	addwfc	(___aodiv@dividend+6)^0,f,c
 13031  0047B2  2211               	addwfc	(___aodiv@dividend+7)^0,f,c
 13032  0047B4  0E01               	movlw	1
 13033  0047B6  1A1B               	xorwf	___aodiv@sign^0,f,c
 13034  0047B8                     l11448:
 13035  0047B8  EE20  F01C         	lfsr	2,___aodiv@quotient
 13036  0047BC  0E07               	movlw	7
 13037  0047BE                     u10671:
 13038  0047BE  6ADE               	clrf	postinc2,c
 13039  0047C0  06E8               	decf	wreg,f,c
 13040  0047C2  E2FD               	bc	u10671
 13041  0047C4  5012               	movf	___aodiv@divisor^0,w,c
 13042  0047C6  1013               	iorwf	(___aodiv@divisor+1)^0,w,c
 13043  0047C8  1014               	iorwf	(___aodiv@divisor+2)^0,w,c
 13044  0047CA  1015               	iorwf	(___aodiv@divisor+3)^0,w,c
 13045  0047CC  1016               	iorwf	(___aodiv@divisor+4)^0,w,c
 13046  0047CE  1017               	iorwf	(___aodiv@divisor+5)^0,w,c
 13047  0047D0  1018               	iorwf	(___aodiv@divisor+6)^0,w,c
 13048  0047D2  1019               	iorwf	(___aodiv@divisor+7)^0,w,c
 13049  0047D4  B4D8               	btfsc	status,2,c
 13050  0047D6  EFEF  F023         	goto	u10681
 13051  0047DA  EFF1  F023         	goto	u10680
 13052  0047DE                     u10681:
 13053  0047DE  EF43  F024         	goto	l11470
 13054  0047E2                     u10680:
 13055  0047E2  0E01               	movlw	1
 13056  0047E4  6E1A               	movwf	___aodiv@counter^0,c
 13057  0047E6  EFFF  F023         	goto	l11456
 13058  0047EA                     l11454:
 13059  0047EA  90D8               	bcf	status,0,c
 13060  0047EC  3612               	rlcf	___aodiv@divisor^0,f,c
 13061  0047EE  3613               	rlcf	(___aodiv@divisor+1)^0,f,c
 13062  0047F0  3614               	rlcf	(___aodiv@divisor+2)^0,f,c
 13063  0047F2  3615               	rlcf	(___aodiv@divisor+3)^0,f,c
 13064  0047F4  3616               	rlcf	(___aodiv@divisor+4)^0,f,c
 13065  0047F6  3617               	rlcf	(___aodiv@divisor+5)^0,f,c
 13066  0047F8  3618               	rlcf	(___aodiv@divisor+6)^0,f,c
 13067  0047FA  3619               	rlcf	(___aodiv@divisor+7)^0,f,c
 13068  0047FC  2A1A               	incf	___aodiv@counter^0,f,c
 13069  0047FE                     l11456:
 13070  0047FE  AE19               	btfss	(___aodiv@divisor+7)^0,7,c
 13071  004800  EF04  F024         	goto	u10691
 13072  004804  EF06  F024         	goto	u10690
 13073  004808                     u10691:
 13074  004808  EFF5  F023         	goto	l11454
 13075  00480C                     u10690:
 13076  00480C                     l11458:
 13077  00480C  90D8               	bcf	status,0,c
 13078  00480E  361C               	rlcf	___aodiv@quotient^0,f,c
 13079  004810  361D               	rlcf	(___aodiv@quotient+1)^0,f,c
 13080  004812  361E               	rlcf	(___aodiv@quotient+2)^0,f,c
 13081  004814  361F               	rlcf	(___aodiv@quotient+3)^0,f,c
 13082  004816  3620               	rlcf	(___aodiv@quotient+4)^0,f,c
 13083  004818  3621               	rlcf	(___aodiv@quotient+5)^0,f,c
 13084  00481A  3622               	rlcf	(___aodiv@quotient+6)^0,f,c
 13085  00481C  3623               	rlcf	(___aodiv@quotient+7)^0,f,c
 13086  00481E  5012               	movf	___aodiv@divisor^0,w,c
 13087  004820  5C0A               	subwf	___aodiv@dividend^0,w,c
 13088  004822  5013               	movf	(___aodiv@divisor+1)^0,w,c
 13089  004824  580B               	subwfb	(___aodiv@dividend+1)^0,w,c
 13090  004826  5014               	movf	(___aodiv@divisor+2)^0,w,c
 13091  004828  580C               	subwfb	(___aodiv@dividend+2)^0,w,c
 13092  00482A  5015               	movf	(___aodiv@divisor+3)^0,w,c
 13093  00482C  580D               	subwfb	(___aodiv@dividend+3)^0,w,c
 13094  00482E  5016               	movf	(___aodiv@divisor+4)^0,w,c
 13095  004830  580E               	subwfb	(___aodiv@dividend+4)^0,w,c
 13096  004832  5017               	movf	(___aodiv@divisor+5)^0,w,c
 13097  004834  580F               	subwfb	(___aodiv@dividend+5)^0,w,c
 13098  004836  5018               	movf	(___aodiv@divisor+6)^0,w,c
 13099  004838  5810               	subwfb	(___aodiv@dividend+6)^0,w,c
 13100  00483A  5019               	movf	(___aodiv@divisor+7)^0,w,c
 13101  00483C  5811               	subwfb	(___aodiv@dividend+7)^0,w,c
 13102  00483E  A0D8               	btfss	status,0,c
 13103  004840  EF24  F024         	goto	u10701
 13104  004844  EF26  F024         	goto	u10700
 13105  004848                     u10701:
 13106  004848  EF37  F024         	goto	l11466
 13107  00484C                     u10700:
 13108  00484C  5012               	movf	___aodiv@divisor^0,w,c
 13109  00484E  5E0A               	subwf	___aodiv@dividend^0,f,c
 13110  004850  5013               	movf	(___aodiv@divisor+1)^0,w,c
 13111  004852  5A0B               	subwfb	(___aodiv@dividend+1)^0,f,c
 13112  004854  5014               	movf	(___aodiv@divisor+2)^0,w,c
 13113  004856  5A0C               	subwfb	(___aodiv@dividend+2)^0,f,c
 13114  004858  5015               	movf	(___aodiv@divisor+3)^0,w,c
 13115  00485A  5A0D               	subwfb	(___aodiv@dividend+3)^0,f,c
 13116  00485C  5016               	movf	(___aodiv@divisor+4)^0,w,c
 13117  00485E  5A0E               	subwfb	(___aodiv@dividend+4)^0,f,c
 13118  004860  5017               	movf	(___aodiv@divisor+5)^0,w,c
 13119  004862  5A0F               	subwfb	(___aodiv@dividend+5)^0,f,c
 13120  004864  5018               	movf	(___aodiv@divisor+6)^0,w,c
 13121  004866  5A10               	subwfb	(___aodiv@dividend+6)^0,f,c
 13122  004868  5019               	movf	(___aodiv@divisor+7)^0,w,c
 13123  00486A  5A11               	subwfb	(___aodiv@dividend+7)^0,f,c
 13124  00486C  801C               	bsf	___aodiv@quotient^0,0,c
 13125  00486E                     l11466:
 13126  00486E  90D8               	bcf	status,0,c
 13127  004870  3219               	rrcf	(___aodiv@divisor+7)^0,f,c
 13128  004872  3218               	rrcf	(___aodiv@divisor+6)^0,f,c
 13129  004874  3217               	rrcf	(___aodiv@divisor+5)^0,f,c
 13130  004876  3216               	rrcf	(___aodiv@divisor+4)^0,f,c
 13131  004878  3215               	rrcf	(___aodiv@divisor+3)^0,f,c
 13132  00487A  3214               	rrcf	(___aodiv@divisor+2)^0,f,c
 13133  00487C  3213               	rrcf	(___aodiv@divisor+1)^0,f,c
 13134  00487E  3212               	rrcf	___aodiv@divisor^0,f,c
 13135  004880  2E1A               	decfsz	___aodiv@counter^0,f,c
 13136  004882  EF06  F024         	goto	l11458
 13137  004886                     l11470:
 13138  004886  501B               	movf	___aodiv@sign^0,w,c
 13139  004888  B4D8               	btfsc	status,2,c
 13140  00488A  EF49  F024         	goto	u10711
 13141  00488E  EF4B  F024         	goto	u10710
 13142  004892                     u10711:
 13143  004892  EF5B  F024         	goto	l11474
 13144  004896                     u10710:
 13145  004896  1E23               	comf	(___aodiv@quotient+7)^0,f,c
 13146  004898  1E22               	comf	(___aodiv@quotient+6)^0,f,c
 13147  00489A  1E21               	comf	(___aodiv@quotient+5)^0,f,c
 13148  00489C  1E20               	comf	(___aodiv@quotient+4)^0,f,c
 13149  00489E  1E1F               	comf	(___aodiv@quotient+3)^0,f,c
 13150  0048A0  1E1E               	comf	(___aodiv@quotient+2)^0,f,c
 13151  0048A2  1E1D               	comf	(___aodiv@quotient+1)^0,f,c
 13152  0048A4  6C1C               	negf	___aodiv@quotient^0,c
 13153  0048A6  0E00               	movlw	0
 13154  0048A8  221D               	addwfc	(___aodiv@quotient+1)^0,f,c
 13155  0048AA  221E               	addwfc	(___aodiv@quotient+2)^0,f,c
 13156  0048AC  221F               	addwfc	(___aodiv@quotient+3)^0,f,c
 13157  0048AE  2220               	addwfc	(___aodiv@quotient+4)^0,f,c
 13158  0048B0  2221               	addwfc	(___aodiv@quotient+5)^0,f,c
 13159  0048B2  2222               	addwfc	(___aodiv@quotient+6)^0,f,c
 13160  0048B4  2223               	addwfc	(___aodiv@quotient+7)^0,f,c
 13161  0048B6                     l11474:
 13162  0048B6  C01C  F00A         	movff	___aodiv@quotient,?___aodiv
 13163  0048BA  C01D  F00B         	movff	___aodiv@quotient+1,?___aodiv+1
 13164  0048BE  C01E  F00C         	movff	___aodiv@quotient+2,?___aodiv+2
 13165  0048C2  C01F  F00D         	movff	___aodiv@quotient+3,?___aodiv+3
 13166  0048C6  C020  F00E         	movff	___aodiv@quotient+4,?___aodiv+4
 13167  0048CA  C021  F00F         	movff	___aodiv@quotient+5,?___aodiv+5
 13168  0048CE  C022  F010         	movff	___aodiv@quotient+6,?___aodiv+6
 13169  0048D2  C023  F011         	movff	___aodiv@quotient+7,?___aodiv+7
 13170  0048D6  0012               	return		;funcret
 13171  0048D8                     __end_of___aodiv:
 13172                           	callstack 0
 13173                           
 13174 ;; *************** function _ctoa *****************
 13175 ;; Defined at:
 13176 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 13177 ;; Parameters:    Size  Location     Type
 13178 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
 13179 ;;		 -> sprintf@f(6), 
 13180 ;;  c               1   20[COMRAM] unsigned char 
 13181 ;; Auto vars:     Size  Location     Type
 13182 ;;  w               2   24[COMRAM] int 
 13183 ;;  l               2   22[COMRAM] int 
 13184 ;; Return value:  Size  Location     Type
 13185 ;;                  2   18[COMRAM] int 
 13186 ;; Registers used:
 13187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13188 ;; Tracked objects:
 13189 ;;		On entry : 0/0
 13190 ;;		On exit  : 0/0
 13191 ;;		Unchanged: 0/0
 13192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13193 ;;      Params:         3       0       0       0       0       0       0
 13194 ;;      Locals:         4       0       0       0       0       0       0
 13195 ;;      Temps:          1       0       0       0       0       0       0
 13196 ;;      Totals:         8       0       0       0       0       0       0
 13197 ;;Total ram usage:        8 bytes
 13198 ;; Hardware stack levels used: 1
 13199 ;; Hardware stack levels required when called: 6
 13200 ;; This function calls:
 13201 ;;		_fputc
 13202 ;; This function is called by:
 13203 ;;		_vfpfcnvrt
 13204 ;; This function uses a non-reentrant model
 13205 ;;
 13206                           
 13207                           	psect	text53
 13208  0059EE                     __ptext53:
 13209                           	callstack 0
 13210  0059EE                     _ctoa:
 13211                           	callstack 19
 13212  0059EE                     
 13213                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
 13214  0059EE  0100               	movlb	0	; () banked
 13215  0059F0  51F7               	movf	_width& (0+255),w,b
 13216  0059F2  11F8               	iorwf	(_width+1)& (0+255),w,b
 13217  0059F4  A4D8               	btfss	status,2,c
 13218  0059F6  EFFF  F02C         	goto	u11811
 13219  0059FA  EF01  F02D         	goto	u11810
 13220  0059FE                     u11811:
 13221  0059FE  EF07  F02D         	goto	l12136
 13222  005A02                     u11810:
 13223  005A02                     
 13224                           ; BSR set to: 0
 13225  005A02  C0F7  F019         	movff	_width,ctoa@w
 13226  005A06  C0F8  F01A         	movff	_width+1,ctoa@w+1
 13227  005A0A  EF0D  F02D         	goto	l12138
 13228  005A0E                     l12136:
 13229                           
 13230                           ; BSR set to: 0
 13231  005A0E  0EFF               	movlw	255
 13232  005A10  25F7               	addwf	_width& (0+255),w,b
 13233  005A12  6E19               	movwf	ctoa@w^0,c
 13234  005A14  0EFF               	movlw	255
 13235  005A16  21F8               	addwfc	(_width+1)& (0+255),w,b
 13236  005A18  6E1A               	movwf	(ctoa@w+1)^0,c
 13237  005A1A                     l12138:
 13238                           
 13239                           ; BSR set to: 0
 13240                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
 13241  005A1A  A04F               	btfss	_flags^0,0,c
 13242  005A1C  EF12  F02D         	goto	u11821
 13243  005A20  EF14  F02D         	goto	u11820
 13244  005A24                     u11821:
 13245  005A24  EF1D  F02D         	goto	l12142
 13246  005A28                     u11820:
 13247  005A28                     
 13248                           ; BSR set to: 0
 13249                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
 13250  005A28  C015  F00A         	movff	ctoa@c,fputc@c
 13251  005A2C  6A0B               	clrf	(fputc@c+1)^0,c
 13252  005A2E  C013  F00C         	movff	ctoa@fp,fputc@fp
 13253  005A32  C014  F00D         	movff	ctoa@fp+1,fputc@fp+1
 13254  005A36  ECCC  F02D         	call	_fputc	;wreg free
 13255  005A3A                     l12142:
 13256                           
 13257                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
 13258  005A3A  BE1A               	btfsc	(ctoa@w+1)^0,7,c
 13259  005A3C  EF22  F02D         	goto	u11831
 13260  005A40  EF24  F02D         	goto	u11830
 13261  005A44                     u11831:
 13262  005A44  EF26  F02D         	goto	l12146
 13263  005A48                     u11830:
 13264  005A48  EF2A  F02D         	goto	l2336
 13265  005A4C                     l12146:
 13266  005A4C  0E00               	movlw	0
 13267  005A4E  6E1A               	movwf	(ctoa@w+1)^0,c
 13268  005A50  0E00               	movlw	0
 13269  005A52  6E19               	movwf	ctoa@w^0,c
 13270  005A54                     l2336:
 13271                           
 13272                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 272:     l = 0;
 13273  005A54  0E00               	movlw	0
 13274  005A56  6E18               	movwf	(ctoa@l+1)^0,c
 13275  005A58  0E00               	movlw	0
 13276  005A5A  6E17               	movwf	ctoa@l^0,c
 13277                           
 13278                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
 13279  005A5C  EF3C  F02D         	goto	l12152
 13280  005A60                     l12148:
 13281                           
 13282                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
 13283  005A60  0E00               	movlw	0
 13284  005A62  6E0B               	movwf	(fputc@c+1)^0,c
 13285  005A64  0E20               	movlw	32
 13286  005A66  6E0A               	movwf	fputc@c^0,c
 13287  005A68  C013  F00C         	movff	ctoa@fp,fputc@fp
 13288  005A6C  C014  F00D         	movff	ctoa@fp+1,fputc@fp+1
 13289  005A70  ECCC  F02D         	call	_fputc	;wreg free
 13290  005A74                     
 13291                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 275:         ++l;
 13292  005A74  4A17               	infsnz	ctoa@l^0,f,c
 13293  005A76  2A18               	incf	(ctoa@l+1)^0,f,c
 13294  005A78                     l12152:
 13295                           
 13296                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
 13297  005A78  5019               	movf	ctoa@w^0,w,c
 13298  005A7A  5C17               	subwf	ctoa@l^0,w,c
 13299  005A7C  5018               	movf	(ctoa@l+1)^0,w,c
 13300  005A7E  0A80               	xorlw	128
 13301  005A80  6E16               	movwf	??_ctoa^0,c
 13302  005A82  501A               	movf	(ctoa@w+1)^0,w,c
 13303  005A84  0A80               	xorlw	128
 13304  005A86  5816               	subwfb	??_ctoa^0,w,c
 13305  005A88  A0D8               	btfss	status,0,c
 13306  005A8A  EF49  F02D         	goto	u11841
 13307  005A8E  EF4B  F02D         	goto	u11840
 13308  005A92                     u11841:
 13309  005A92  EF30  F02D         	goto	l12148
 13310  005A96                     u11840:
 13311  005A96                     
 13312                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
 13313  005A96  B04F               	btfsc	_flags^0,0,c
 13314  005A98  EF50  F02D         	goto	u11851
 13315  005A9C  EF52  F02D         	goto	u11850
 13316  005AA0                     u11851:
 13317  005AA0  EF5B  F02D         	goto	l12156
 13318  005AA4                     u11850:
 13319  005AA4                     
 13320                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
 13321  005AA4  C015  F00A         	movff	ctoa@c,fputc@c
 13322  005AA8  6A0B               	clrf	(fputc@c+1)^0,c
 13323  005AAA  C013  F00C         	movff	ctoa@fp,fputc@fp
 13324  005AAE  C014  F00D         	movff	ctoa@fp+1,fputc@fp+1
 13325  005AB2  ECCC  F02D         	call	_fputc	;wreg free
 13326  005AB6                     l12156:
 13327                           
 13328                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
 13329  005AB6  0E01               	movlw	1
 13330  005AB8  2417               	addwf	ctoa@l^0,w,c
 13331  005ABA  6E13               	movwf	?_ctoa^0,c
 13332  005ABC  0E00               	movlw	0
 13333  005ABE  2018               	addwfc	(ctoa@l+1)^0,w,c
 13334  005AC0  6E14               	movwf	(?_ctoa+1)^0,c
 13335  005AC2  0012               	return		;funcret
 13336  005AC4                     __end_of_ctoa:
 13337                           	callstack 0
 13338                           
 13339 ;; *************** function _fputc *****************
 13340 ;; Defined at:
 13341 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
 13342 ;; Parameters:    Size  Location     Type
 13343 ;;  c               2    9[COMRAM] int 
 13344 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 13345 ;;		 -> sprintf@f(6), 
 13346 ;; Auto vars:     Size  Location     Type
 13347 ;;		None
 13348 ;; Return value:  Size  Location     Type
 13349 ;;                  2    9[COMRAM] int 
 13350 ;; Registers used:
 13351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13352 ;; Tracked objects:
 13353 ;;		On entry : 0/0
 13354 ;;		On exit  : 0/0
 13355 ;;		Unchanged: 0/0
 13356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13357 ;;      Params:         4       0       0       0       0       0       0
 13358 ;;      Locals:         0       0       0       0       0       0       0
 13359 ;;      Temps:          5       0       0       0       0       0       0
 13360 ;;      Totals:         9       0       0       0       0       0       0
 13361 ;;Total ram usage:        9 bytes
 13362 ;; Hardware stack levels used: 1
 13363 ;; Hardware stack levels required when called: 5
 13364 ;; This function calls:
 13365 ;;		_putch
 13366 ;; This function is called by:
 13367 ;;		_pad
 13368 ;;		_ctoa
 13369 ;;		_vfpfcnvrt
 13370 ;;		_fputs
 13371 ;; This function uses a non-reentrant model
 13372 ;;
 13373                           
 13374                           	psect	text54
 13375  005B98                     __ptext54:
 13376                           	callstack 0
 13377  005B98                     _fputc:
 13378                           	callstack 20
 13379  005B98  500C               	movf	fputc@fp^0,w,c
 13380  005B9A  100D               	iorwf	(fputc@fp+1)^0,w,c
 13381  005B9C  B4D8               	btfsc	status,2,c
 13382  005B9E  EFD3  F02D         	goto	u10141
 13383  005BA2  EFD5  F02D         	goto	u10140
 13384  005BA6                     u10141:
 13385  005BA6  EFDE  F02D         	goto	l11150
 13386  005BAA                     u10140:
 13387  005BAA  500C               	movf	fputc@fp^0,w,c
 13388  005BAC  100D               	iorwf	(fputc@fp+1)^0,w,c
 13389  005BAE  A4D8               	btfss	status,2,c
 13390  005BB0  EFDC  F02D         	goto	u10151
 13391  005BB4  EFDE  F02D         	goto	u10150
 13392  005BB8                     u10151:
 13393  005BB8  EFE3  F02D         	goto	l11152
 13394  005BBC                     u10150:
 13395  005BBC                     l11150:
 13396  005BBC  500A               	movf	fputc@c^0,w,c
 13397  005BBE  EC01  F03C         	call	_putch
 13398  005BC2  EF30  F02E         	goto	l2611
 13399  005BC6                     l11152:
 13400  005BC6  EE20 F004          	lfsr	2,4
 13401  005BCA  500C               	movf	fputc@fp^0,w,c
 13402  005BCC  26D9               	addwf	fsr2l,f,c
 13403  005BCE  500D               	movf	(fputc@fp+1)^0,w,c
 13404  005BD0  22DA               	addwfc	fsr2h,f,c
 13405  005BD2  50DE               	movf	postinc2,w,c
 13406  005BD4  10DE               	iorwf	postinc2,w,c
 13407  005BD6  B4D8               	btfsc	status,2,c
 13408  005BD8  EFF0  F02D         	goto	u10161
 13409  005BDC  EFF2  F02D         	goto	u10160
 13410  005BE0                     u10161:
 13411  005BE0  EF0D  F02E         	goto	l11156
 13412  005BE4                     u10160:
 13413  005BE4  EE20 F004          	lfsr	2,4
 13414  005BE8  500C               	movf	fputc@fp^0,w,c
 13415  005BEA  26D9               	addwf	fsr2l,f,c
 13416  005BEC  500D               	movf	(fputc@fp+1)^0,w,c
 13417  005BEE  22DA               	addwfc	fsr2h,f,c
 13418  005BF0  EE10 F002          	lfsr	1,2
 13419  005BF4  500C               	movf	fputc@fp^0,w,c
 13420  005BF6  26E1               	addwf	fsr1l,f,c
 13421  005BF8  500D               	movf	(fputc@fp+1)^0,w,c
 13422  005BFA  22E2               	addwfc	fsr1h,f,c
 13423  005BFC  50DE               	movf	postinc2,w,c
 13424  005BFE  5CE6               	subwf	postinc1,w,c
 13425  005C00  50E6               	movf	postinc1,w,c
 13426  005C02  0A80               	xorlw	128
 13427  005C04  6E12               	movwf	(??_fputc+4)^0,c
 13428  005C06  50DE               	movf	postinc2,w,c
 13429  005C08  0A80               	xorlw	128
 13430  005C0A  5812               	subwfb	(??_fputc+4)^0,w,c
 13431  005C0C  B0D8               	btfsc	status,0,c
 13432  005C0E  EF0B  F02E         	goto	u10171
 13433  005C12  EF0D  F02E         	goto	u10170
 13434  005C16                     u10171:
 13435  005C16  EF30  F02E         	goto	l2611
 13436  005C1A                     u10170:
 13437  005C1A                     l11156:
 13438  005C1A  EE20 F002          	lfsr	2,2
 13439  005C1E  500C               	movf	fputc@fp^0,w,c
 13440  005C20  26D9               	addwf	fsr2l,f,c
 13441  005C22  500D               	movf	(fputc@fp+1)^0,w,c
 13442  005C24  22DA               	addwfc	fsr2h,f,c
 13443  005C26  CFDE F00E          	movff	postinc2,??_fputc
 13444  005C2A  CFDD F00F          	movff	postdec2,??_fputc+1
 13445  005C2E  C00C  FFD9         	movff	fputc@fp,fsr2l
 13446  005C32  C00D  FFDA         	movff	fputc@fp+1,fsr2h
 13447  005C36  CFDE F010          	movff	postinc2,??_fputc+2
 13448  005C3A  CFDD F011          	movff	postdec2,??_fputc+3
 13449  005C3E  500E               	movf	??_fputc^0,w,c
 13450  005C40  2410               	addwf	(??_fputc+2)^0,w,c
 13451  005C42  6ED9               	movwf	fsr2l,c
 13452  005C44  500F               	movf	(??_fputc+1)^0,w,c
 13453  005C46  2011               	addwfc	(??_fputc+3)^0,w,c
 13454  005C48  6EDA               	movwf	fsr2h,c
 13455  005C4A  C00A  FFDF         	movff	fputc@c,indf2
 13456  005C4E  EE20 F002          	lfsr	2,2
 13457  005C52  500C               	movf	fputc@fp^0,w,c
 13458  005C54  26D9               	addwf	fsr2l,f,c
 13459  005C56  500D               	movf	(fputc@fp+1)^0,w,c
 13460  005C58  22DA               	addwfc	fsr2h,f,c
 13461  005C5A  2ADE               	incf	postinc2,f,c
 13462  005C5C  0E00               	movlw	0
 13463  005C5E  22DD               	addwfc	postdec2,f,c
 13464  005C60                     l2611:
 13465  005C60  0012               	return		;funcret
 13466  005C62                     __end_of_fputc:
 13467                           	callstack 0
 13468                           
 13469 ;; *************** function _putch *****************
 13470 ;; Defined at:
 13471 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
 13472 ;; Parameters:    Size  Location     Type
 13473 ;;  c               1    wreg     unsigned char 
 13474 ;; Auto vars:     Size  Location     Type
 13475 ;;  c               1    0[COMRAM] unsigned char 
 13476 ;; Return value:  Size  Location     Type
 13477 ;;                  1    wreg      void 
 13478 ;; Registers used:
 13479 ;;		wreg
 13480 ;; Tracked objects:
 13481 ;;		On entry : 0/0
 13482 ;;		On exit  : 0/0
 13483 ;;		Unchanged: 0/0
 13484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13485 ;;      Params:         0       0       0       0       0       0       0
 13486 ;;      Locals:         0       0       0       0       0       0       0
 13487 ;;      Temps:          0       0       0       0       0       0       0
 13488 ;;      Totals:         0       0       0       0       0       0       0
 13489 ;;Total ram usage:        0 bytes
 13490 ;; Hardware stack levels used: 1
 13491 ;; Hardware stack levels required when called: 4
 13492 ;; This function calls:
 13493 ;;		Nothing
 13494 ;; This function is called by:
 13495 ;;		_fputc
 13496 ;; This function uses a non-reentrant model
 13497 ;;
 13498                           
 13499                           	psect	text55
 13500  007802                     __ptext55:
 13501                           	callstack 0
 13502  007802                     _putch:
 13503                           	callstack 20
 13504  007802  0012               	return		;funcret
 13505  007804                     __end_of_putch:
 13506                           	callstack 0
 13507                           
 13508 ;; *************** function _atoi *****************
 13509 ;; Defined at:
 13510 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
 13511 ;; Parameters:    Size  Location     Type
 13512 ;;  s               2   16[COMRAM] PTR const unsigned char 
 13513 ;;		 -> STR_8(21), STR_7(25), STR_6(25), STR_5(25), 
 13514 ;;		 -> STR_4(23), STR_3(21), STR_2(21), STR_1(21), 
 13515 ;; Auto vars:     Size  Location     Type
 13516 ;;  n               2   29[COMRAM] int 
 13517 ;;  neg             2   22[COMRAM] int 
 13518 ;; Return value:  Size  Location     Type
 13519 ;;                  2   16[COMRAM] int 
 13520 ;; Registers used:
 13521 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13522 ;; Tracked objects:
 13523 ;;		On entry : 0/0
 13524 ;;		On exit  : 0/0
 13525 ;;		Unchanged: 0/0
 13526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13527 ;;      Params:         2       0       0       0       0       0       0
 13528 ;;      Locals:         9       0       0       0       0       0       0
 13529 ;;      Temps:          4       0       0       0       0       0       0
 13530 ;;      Totals:        15       0       0       0       0       0       0
 13531 ;;Total ram usage:       15 bytes
 13532 ;; Hardware stack levels used: 1
 13533 ;; Hardware stack levels required when called: 5
 13534 ;; This function calls:
 13535 ;;		___wmul
 13536 ;;		_isdigit
 13537 ;;		_isspace
 13538 ;; This function is called by:
 13539 ;;		_vfpfcnvrt
 13540 ;; This function uses a non-reentrant model
 13541 ;;
 13542                           
 13543                           	psect	text56
 13544  0045C0                     __ptext56:
 13545                           	callstack 0
 13546  0045C0                     _atoi:
 13547                           	callstack 20
 13548  0045C0  0E00               	movlw	0
 13549  0045C2  6E1F               	movwf	(atoi@n+1)^0,c
 13550  0045C4  0E00               	movlw	0
 13551  0045C6  6E1E               	movwf	atoi@n^0,c
 13552  0045C8  0E00               	movlw	0
 13553  0045CA  6E18               	movwf	(atoi@neg+1)^0,c
 13554  0045CC  0E00               	movlw	0
 13555  0045CE  6E17               	movwf	atoi@neg^0,c
 13556  0045D0  EFEC  F022         	goto	l12534
 13557  0045D4                     l12532:
 13558  0045D4  4A11               	infsnz	atoi@s^0,f,c
 13559  0045D6  2A12               	incf	(atoi@s+1)^0,f,c
 13560  0045D8                     l12534:
 13561  0045D8  0E01               	movlw	1
 13562  0045DA  6E1D               	movwf	_atoi$3706^0,c
 13563  0045DC  C011  FFF6         	movff	atoi@s,tblptrl
 13564  0045E0  C012  FFF7         	movff	atoi@s+1,tblptrh
 13565  0045E4                     	if	0	;tblptru may be non-zero
 13566  0045E4                     	endif
 13567  0045E4                     	if	0	;tblptru may be non-zero
 13568  0045E4                     	endif
 13569  0045E4  0008               	tblrd		*
 13570  0045E6  50F5               	movf	tablat,w,c
 13571  0045E8  0A20               	xorlw	32
 13572  0045EA  B4D8               	btfsc	status,2,c
 13573  0045EC  EFFA  F022         	goto	u12551
 13574  0045F0  EFFC  F022         	goto	u12550
 13575  0045F4                     u12551:
 13576  0045F4  EF19  F023         	goto	l12542
 13577  0045F8                     u12550:
 13578  0045F8  0EF7               	movlw	247
 13579  0045FA  6E13               	movwf	??_atoi^0,c
 13580  0045FC  0EFF               	movlw	255
 13581  0045FE  6E14               	movwf	(??_atoi+1)^0,c
 13582  004600  C011  FFF6         	movff	atoi@s,tblptrl
 13583  004604  C012  FFF7         	movff	atoi@s+1,tblptrh
 13584  004608                     	if	0	;tblptru may be non-zero
 13585  004608                     	endif
 13586  004608                     	if	0	;tblptru may be non-zero
 13587  004608                     	endif
 13588  004608  0008               	tblrd		*
 13589  00460A  50F5               	movf	tablat,w,c
 13590  00460C  6E15               	movwf	(??_atoi+2)^0,c
 13591  00460E  6A16               	clrf	(??_atoi+3)^0,c
 13592  004610  5013               	movf	??_atoi^0,w,c
 13593  004612  2615               	addwf	(??_atoi+2)^0,f,c
 13594  004614  5014               	movf	(??_atoi+1)^0,w,c
 13595  004616  2216               	addwfc	(??_atoi+3)^0,f,c
 13596  004618  5016               	movf	(??_atoi+3)^0,w,c
 13597  00461A  E109               	bnz	u12560
 13598  00461C  0E05               	movlw	5
 13599  00461E  5C15               	subwf	(??_atoi+2)^0,w,c
 13600  004620  A0D8               	btfss	status,0,c
 13601  004622  EF15  F023         	goto	u12561
 13602  004626  EF17  F023         	goto	u12560
 13603  00462A                     u12561:
 13604  00462A  EF19  F023         	goto	l12542
 13605  00462E                     u12560:
 13606  00462E  0E00               	movlw	0
 13607  004630  6E1D               	movwf	_atoi$3706^0,c
 13608  004632                     l12542:
 13609  004632  C01D  F019         	movff	_atoi$3706,_atoi$3705
 13610  004636  6A1A               	clrf	(_atoi$3705+1)^0,c
 13611  004638  5019               	movf	_atoi$3705^0,w,c
 13612  00463A  101A               	iorwf	(_atoi$3705+1)^0,w,c
 13613  00463C  A4D8               	btfss	status,2,c
 13614  00463E  EF23  F023         	goto	u12571
 13615  004642  EF25  F023         	goto	u12570
 13616  004646                     u12571:
 13617  004646  EFEA  F022         	goto	l12532
 13618  00464A                     u12570:
 13619  00464A  EF2F  F023         	goto	l12552
 13620  00464E                     l12548:
 13621  00464E  0E00               	movlw	0
 13622  004650  6E18               	movwf	(atoi@neg+1)^0,c
 13623  004652  0E01               	movlw	1
 13624  004654  6E17               	movwf	atoi@neg^0,c
 13625  004656                     l12550:
 13626  004656  4A11               	infsnz	atoi@s^0,f,c
 13627  004658  2A12               	incf	(atoi@s+1)^0,f,c
 13628  00465A  EF64  F023         	goto	l12558
 13629  00465E                     l12552:
 13630  00465E  C011  FFF6         	movff	atoi@s,tblptrl
 13631  004662  C012  FFF7         	movff	atoi@s+1,tblptrh
 13632  004666                     	if	0	;tblptru may be non-zero
 13633  004666                     	endif
 13634  004666                     	if	0	;tblptru may be non-zero
 13635  004666                     	endif
 13636  004666  0008               	tblrd		*
 13637  004668  50F5               	movf	tablat,w,c
 13638  00466A  6E13               	movwf	??_atoi^0,c
 13639  00466C  6A14               	clrf	(??_atoi+1)^0,c
 13640                           
 13641                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13642                           ; Switch size 1, requested type "simple"
 13643                           ; Number of cases is 1, Range of values is 0 to 0
 13644                           ; switch strategies available:
 13645                           ; Name         Instructions Cycles
 13646                           ; simple_byte            4     3 (average)
 13647                           ;	Chosen strategy is simple_byte
 13648  00466E  5014               	movf	(??_atoi+1)^0,w,c
 13649  004670  0A00               	xorlw	0	; case 0
 13650  004672  B4D8               	btfsc	status,2,c
 13651  004674  EF3E  F023         	goto	l14118
 13652  004678  EF64  F023         	goto	l12558
 13653  00467C                     l14118:
 13654                           
 13655                           ; Switch size 1, requested type "simple"
 13656                           ; Number of cases is 2, Range of values is 43 to 45
 13657                           ; switch strategies available:
 13658                           ; Name         Instructions Cycles
 13659                           ; simple_byte            7     4 (average)
 13660                           ;	Chosen strategy is simple_byte
 13661  00467C  5013               	movf	??_atoi^0,w,c
 13662  00467E  0A2B               	xorlw	43	; case 43
 13663  004680  B4D8               	btfsc	status,2,c
 13664  004682  EF2B  F023         	goto	l12550
 13665  004686  0A06               	xorlw	6	; case 45
 13666  004688  B4D8               	btfsc	status,2,c
 13667  00468A  EF27  F023         	goto	l12548
 13668  00468E  EF64  F023         	goto	l12558
 13669  004692                     l12554:
 13670  004692  C01E  F00A         	movff	atoi@n,___wmul@multiplier
 13671  004696  C01F  F00B         	movff	atoi@n+1,___wmul@multiplier+1
 13672  00469A  0E00               	movlw	0
 13673  00469C  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
 13674  00469E  0E0A               	movlw	10
 13675  0046A0  6E0C               	movwf	___wmul@multiplicand^0,c
 13676  0046A2  EC2A  F03A         	call	___wmul	;wreg free
 13677  0046A6  C011  FFF6         	movff	atoi@s,tblptrl
 13678  0046AA  C012  FFF7         	movff	atoi@s+1,tblptrh
 13679  0046AE                     	if	0	;tblptru may be non-zero
 13680  0046AE                     	endif
 13681  0046AE                     	if	0	;tblptru may be non-zero
 13682  0046AE                     	endif
 13683  0046AE  0008               	tblrd		*
 13684  0046B0  50F5               	movf	tablat,w,c
 13685  0046B2  5E0A               	subwf	?___wmul^0,f,c
 13686  0046B4  0E00               	movlw	0
 13687  0046B6  5A0B               	subwfb	(?___wmul+1)^0,f,c
 13688  0046B8  0E30               	movlw	48
 13689  0046BA  240A               	addwf	?___wmul^0,w,c
 13690  0046BC  6E1E               	movwf	atoi@n^0,c
 13691  0046BE  0E00               	movlw	0
 13692  0046C0  200B               	addwfc	(?___wmul+1)^0,w,c
 13693  0046C2  6E1F               	movwf	(atoi@n+1)^0,c
 13694  0046C4  EF2B  F023         	goto	l12550
 13695  0046C8                     l12558:
 13696  0046C8  0ED0               	movlw	208
 13697  0046CA  6E13               	movwf	??_atoi^0,c
 13698  0046CC  0EFF               	movlw	255
 13699  0046CE  6E14               	movwf	(??_atoi+1)^0,c
 13700  0046D0  C011  FFF6         	movff	atoi@s,tblptrl
 13701  0046D4  C012  FFF7         	movff	atoi@s+1,tblptrh
 13702  0046D8                     	if	0	;tblptru may be non-zero
 13703  0046D8                     	endif
 13704  0046D8                     	if	0	;tblptru may be non-zero
 13705  0046D8                     	endif
 13706  0046D8  0008               	tblrd		*
 13707  0046DA  50F5               	movf	tablat,w,c
 13708  0046DC  6E15               	movwf	(??_atoi+2)^0,c
 13709  0046DE  6A16               	clrf	(??_atoi+3)^0,c
 13710  0046E0  5013               	movf	??_atoi^0,w,c
 13711  0046E2  2615               	addwf	(??_atoi+2)^0,f,c
 13712  0046E4  5014               	movf	(??_atoi+1)^0,w,c
 13713  0046E6  2216               	addwfc	(??_atoi+3)^0,f,c
 13714  0046E8  5016               	movf	(??_atoi+3)^0,w,c
 13715  0046EA  E10A               	bnz	u12580
 13716  0046EC  0E0A               	movlw	10
 13717  0046EE  5C15               	subwf	(??_atoi+2)^0,w,c
 13718  0046F0  A0D8               	btfss	status,0,c
 13719  0046F2  EF7D  F023         	goto	u12581
 13720  0046F6  EF80  F023         	goto	u12580
 13721  0046FA                     u12581:
 13722  0046FA  0E01               	movlw	1
 13723  0046FC  EF81  F023         	goto	u12590
 13724  004700                     u12580:
 13725  004700  0E00               	movlw	0
 13726  004702                     u12590:
 13727  004702  6E1B               	movwf	_atoi$3707^0,c
 13728  004704  6A1C               	clrf	(_atoi$3707+1)^0,c
 13729  004706  501B               	movf	_atoi$3707^0,w,c
 13730  004708  101C               	iorwf	(_atoi$3707+1)^0,w,c
 13731  00470A  A4D8               	btfss	status,2,c
 13732  00470C  EF8A  F023         	goto	u12601
 13733  004710  EF8C  F023         	goto	u12600
 13734  004714                     u12601:
 13735  004714  EF49  F023         	goto	l12554
 13736  004718                     u12600:
 13737  004718  5017               	movf	atoi@neg^0,w,c
 13738  00471A  1018               	iorwf	(atoi@neg+1)^0,w,c
 13739  00471C  A4D8               	btfss	status,2,c
 13740  00471E  EF93  F023         	goto	u12611
 13741  004722  EF95  F023         	goto	u12610
 13742  004726                     u12611:
 13743  004726  EFA3  F023         	goto	l2563
 13744  00472A                     u12610:
 13745  00472A  C01E  F013         	movff	atoi@n,??_atoi
 13746  00472E  C01F  F014         	movff	atoi@n+1,??_atoi+1
 13747  004732  1E13               	comf	??_atoi^0,f,c
 13748  004734  1E14               	comf	(??_atoi+1)^0,f,c
 13749  004736  4A13               	infsnz	??_atoi^0,f,c
 13750  004738  2A14               	incf	(??_atoi+1)^0,f,c
 13751  00473A  C013  F011         	movff	??_atoi,?_atoi
 13752  00473E  C014  F012         	movff	??_atoi+1,?_atoi+1
 13753  004742  EFA7  F023         	goto	l2566
 13754  004746                     l2563:
 13755  004746  C01E  F011         	movff	atoi@n,?_atoi
 13756  00474A  C01F  F012         	movff	atoi@n+1,?_atoi+1
 13757  00474E                     l2566:
 13758  00474E  0012               	return		;funcret
 13759  004750                     __end_of_atoi:
 13760                           	callstack 0
 13761                           
 13762 ;; *************** function _isspace *****************
 13763 ;; Defined at:
 13764 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
 13765 ;; Parameters:    Size  Location     Type
 13766 ;;  c               2    9[COMRAM] int 
 13767 ;; Auto vars:     Size  Location     Type
 13768 ;;		None
 13769 ;; Return value:  Size  Location     Type
 13770 ;;                  2    9[COMRAM] int 
 13771 ;; Registers used:
 13772 ;;		wreg, status,2, status,0
 13773 ;; Tracked objects:
 13774 ;;		On entry : 0/0
 13775 ;;		On exit  : 0/0
 13776 ;;		Unchanged: 0/0
 13777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13778 ;;      Params:         2       0       0       0       0       0       0
 13779 ;;      Locals:         1       0       0       0       0       0       0
 13780 ;;      Temps:          4       0       0       0       0       0       0
 13781 ;;      Totals:         7       0       0       0       0       0       0
 13782 ;;Total ram usage:        7 bytes
 13783 ;; Hardware stack levels used: 1
 13784 ;; Hardware stack levels required when called: 4
 13785 ;; This function calls:
 13786 ;;		Nothing
 13787 ;; This function is called by:
 13788 ;;		_atoi
 13789 ;; This function uses a non-reentrant model
 13790 ;;
 13791                           
 13792                           	psect	text57
 13793  006DE6                     __ptext57:
 13794                           	callstack 0
 13795  006DE6                     _isspace:
 13796                           	callstack 20
 13797  006DE6  0E01               	movlw	1
 13798  006DE8  6E10               	movwf	_isspace$3736^0,c
 13799  006DEA  0E20               	movlw	32
 13800  006DEC  180A               	xorwf	isspace@c^0,w,c
 13801  006DEE  100B               	iorwf	(isspace@c+1)^0,w,c
 13802  006DF0  B4D8               	btfsc	status,2,c
 13803  006DF2  EFFD  F036         	goto	u11771
 13804  006DF6  EFFF  F036         	goto	u11770
 13805  006DFA                     u11771:
 13806  006DFA  EF18  F037         	goto	l12060
 13807  006DFE                     u11770:
 13808  006DFE  0EF7               	movlw	247
 13809  006E00  6E0C               	movwf	??_isspace^0,c
 13810  006E02  0EFF               	movlw	255
 13811  006E04  6E0D               	movwf	(??_isspace+1)^0,c
 13812  006E06  C00A  F00E         	movff	isspace@c,??_isspace+2
 13813  006E0A  C00B  F00F         	movff	isspace@c+1,??_isspace+3
 13814  006E0E  500C               	movf	??_isspace^0,w,c
 13815  006E10  260E               	addwf	(??_isspace+2)^0,f,c
 13816  006E12  500D               	movf	(??_isspace+1)^0,w,c
 13817  006E14  220F               	addwfc	(??_isspace+3)^0,f,c
 13818  006E16  500F               	movf	(??_isspace+3)^0,w,c
 13819  006E18  E109               	bnz	u11780
 13820  006E1A  0E05               	movlw	5
 13821  006E1C  5C0E               	subwf	(??_isspace+2)^0,w,c
 13822  006E1E  A0D8               	btfss	status,0,c
 13823  006E20  EF14  F037         	goto	u11781
 13824  006E24  EF16  F037         	goto	u11780
 13825  006E28                     u11781:
 13826  006E28  EF18  F037         	goto	l12060
 13827  006E2C                     u11780:
 13828  006E2C  0E00               	movlw	0
 13829  006E2E  6E10               	movwf	_isspace$3736^0,c
 13830  006E30                     l12060:
 13831  006E30  C010  F00A         	movff	_isspace$3736,?_isspace
 13832  006E34  6A0B               	clrf	(?_isspace+1)^0,c
 13833  006E36  0012               	return		;funcret
 13834  006E38                     __end_of_isspace:
 13835                           	callstack 0
 13836                           
 13837 ;; *************** function _isdigit *****************
 13838 ;; Defined at:
 13839 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
 13840 ;; Parameters:    Size  Location     Type
 13841 ;;  c               2    9[COMRAM] int 
 13842 ;; Auto vars:     Size  Location     Type
 13843 ;;		None
 13844 ;; Return value:  Size  Location     Type
 13845 ;;                  2    9[COMRAM] int 
 13846 ;; Registers used:
 13847 ;;		wreg, status,2, status,0
 13848 ;; Tracked objects:
 13849 ;;		On entry : 0/0
 13850 ;;		On exit  : 0/0
 13851 ;;		Unchanged: 0/0
 13852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13853 ;;      Params:         2       0       0       0       0       0       0
 13854 ;;      Locals:         0       0       0       0       0       0       0
 13855 ;;      Temps:          4       0       0       0       0       0       0
 13856 ;;      Totals:         6       0       0       0       0       0       0
 13857 ;;Total ram usage:        6 bytes
 13858 ;; Hardware stack levels used: 1
 13859 ;; Hardware stack levels required when called: 4
 13860 ;; This function calls:
 13861 ;;		Nothing
 13862 ;; This function is called by:
 13863 ;;		_vfpfcnvrt
 13864 ;;		_atoi
 13865 ;; This function uses a non-reentrant model
 13866 ;;
 13867                           
 13868                           	psect	text58
 13869  00720E                     __ptext58:
 13870                           	callstack 0
 13871  00720E                     _isdigit:
 13872                           	callstack 21
 13873  00720E  0ED0               	movlw	208
 13874  007210  6E0C               	movwf	??_isdigit^0,c
 13875  007212  0EFF               	movlw	255
 13876  007214  6E0D               	movwf	(??_isdigit+1)^0,c
 13877  007216  C00A  F00E         	movff	isdigit@c,??_isdigit+2
 13878  00721A  C00B  F00F         	movff	isdigit@c+1,??_isdigit+3
 13879  00721E  500C               	movf	??_isdigit^0,w,c
 13880  007220  260E               	addwf	(??_isdigit+2)^0,f,c
 13881  007222  500D               	movf	(??_isdigit+1)^0,w,c
 13882  007224  220F               	addwfc	(??_isdigit+3)^0,f,c
 13883  007226  500F               	movf	(??_isdigit+3)^0,w,c
 13884  007228  E10A               	bnz	u11750
 13885  00722A  0E0A               	movlw	10
 13886  00722C  5C0E               	subwf	(??_isdigit+2)^0,w,c
 13887  00722E  A0D8               	btfss	status,0,c
 13888  007230  EF1C  F039         	goto	u11751
 13889  007234  EF1F  F039         	goto	u11750
 13890  007238                     u11751:
 13891  007238  0E01               	movlw	1
 13892  00723A  EF20  F039         	goto	u11760
 13893  00723E                     u11750:
 13894  00723E  0E00               	movlw	0
 13895  007240                     u11760:
 13896  007240  6E0A               	movwf	?_isdigit^0,c
 13897  007242  6A0B               	clrf	(?_isdigit+1)^0,c
 13898  007244  0012               	return		;funcret
 13899  007246                     __end_of_isdigit:
 13900                           	callstack 0
 13901                           
 13902 ;; *************** function ___wmul *****************
 13903 ;; Defined at:
 13904 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 13905 ;; Parameters:    Size  Location     Type
 13906 ;;  multiplier      2    9[COMRAM] unsigned int 
 13907 ;;  multiplicand    2   11[COMRAM] unsigned int 
 13908 ;; Auto vars:     Size  Location     Type
 13909 ;;  product         2   13[COMRAM] unsigned int 
 13910 ;; Return value:  Size  Location     Type
 13911 ;;                  2    9[COMRAM] unsigned int 
 13912 ;; Registers used:
 13913 ;;		wreg, status,2, status,0, prodl, prodh
 13914 ;; Tracked objects:
 13915 ;;		On entry : 0/0
 13916 ;;		On exit  : 0/0
 13917 ;;		Unchanged: 0/0
 13918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13919 ;;      Params:         4       0       0       0       0       0       0
 13920 ;;      Locals:         2       0       0       0       0       0       0
 13921 ;;      Temps:          0       0       0       0       0       0       0
 13922 ;;      Totals:         6       0       0       0       0       0       0
 13923 ;;Total ram usage:        6 bytes
 13924 ;; Hardware stack levels used: 1
 13925 ;; Hardware stack levels required when called: 4
 13926 ;; This function calls:
 13927 ;;		Nothing
 13928 ;; This function is called by:
 13929 ;;		_atoi
 13930 ;; This function uses a non-reentrant model
 13931 ;;
 13932                           
 13933                           	psect	text59
 13934  007454                     __ptext59:
 13935                           	callstack 0
 13936  007454                     ___wmul:
 13937                           	callstack 20
 13938  007454  500A               	movf	___wmul@multiplier^0,w,c
 13939  007456  020C               	mulwf	___wmul@multiplicand^0,c
 13940  007458  CFF3 F00E          	movff	prodl,___wmul@product
 13941  00745C  CFF4 F00F          	movff	prodh,___wmul@product+1
 13942  007460  500A               	movf	___wmul@multiplier^0,w,c
 13943  007462  020D               	mulwf	(___wmul@multiplicand+1)^0,c
 13944  007464  50F3               	movf	243,w,c
 13945  007466  260F               	addwf	(___wmul@product+1)^0,f,c
 13946  007468  500B               	movf	(___wmul@multiplier+1)^0,w,c
 13947  00746A  020C               	mulwf	___wmul@multiplicand^0,c
 13948  00746C  50F3               	movf	243,w,c
 13949  00746E  260F               	addwf	(___wmul@product+1)^0,f,c
 13950  007470  C00E  F00A         	movff	___wmul@product,?___wmul
 13951  007474  C00F  F00B         	movff	___wmul@product+1,?___wmul+1
 13952  007478  0012               	return		;funcret
 13953  00747A                     __end_of___wmul:
 13954                           	callstack 0
 13955                           
 13956 ;; *************** function _readKeypad *****************
 13957 ;; Defined at:
 13958 ;;		line 331 in file "App_HTAD.c"
 13959 ;; Parameters:    Size  Location     Type
 13960 ;;		None
 13961 ;; Auto vars:     Size  Location     Type
 13962 ;;  currentTick     4   17[COMRAM] unsigned long 
 13963 ;;  currentKeySt    1   21[COMRAM] unsigned char 
 13964 ;; Return value:  Size  Location     Type
 13965 ;;                  1    wreg      enum E505
 13966 ;; Registers used:
 13967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13968 ;; Tracked objects:
 13969 ;;		On entry : 0/0
 13970 ;;		On exit  : 0/0
 13971 ;;		Unchanged: 0/0
 13972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13973 ;;      Params:         0       0       0       0       0       0       0
 13974 ;;      Locals:         5       0       0       0       0       0       0
 13975 ;;      Temps:          4       0       0       0       0       0       0
 13976 ;;      Totals:         9       0       0       0       0       0       0
 13977 ;;Total ram usage:        9 bytes
 13978 ;; Hardware stack levels used: 1
 13979 ;; Hardware stack levels required when called: 5
 13980 ;; This function calls:
 13981 ;;		_SRV_TIMER_GetTick
 13982 ;; This function is called by:
 13983 ;;		_App_HTAD_Home
 13984 ;;		_App_HTAD_MenuAjusteErro
 13985 ;; This function uses a non-reentrant model
 13986 ;;
 13987                           
 13988                           	psect	text60
 13989  004A3C                     __ptext60:
 13990                           	callstack 0
 13991  004A3C                     _readKeypad:
 13992                           	callstack 23
 13993  004A3C                     
 13994                           ;App_HTAD.c: 332:     uint8_t currentKeyState = (PORTCbits.RC0 << 2) | (PORTCbits.RC1 <<
      +                           1) | PORTCbits.RC2;
 13995  004A3C  B482               	btfsc	130,2,c	;volatile
 13996  004A3E  EF23  F025         	goto	u8491
 13997  004A42  EF27  F025         	goto	u8490
 13998  004A46                     u8491:
 13999  004A46  6A0E               	clrf	??_readKeypad^0,c
 14000  004A48  2A0E               	incf	??_readKeypad^0,f,c
 14001  004A4A  EF28  F025         	goto	u8498
 14002  004A4E                     u8490:
 14003  004A4E  6A0E               	clrf	??_readKeypad^0,c
 14004  004A50                     u8498:
 14005  004A50  B282               	btfsc	130,1,c	;volatile
 14006  004A52  EF2D  F025         	goto	u8501
 14007  004A56  EF31  F025         	goto	u8500
 14008  004A5A                     u8501:
 14009  004A5A  0E02               	movlw	2
 14010  004A5C  6E0F               	movwf	(??_readKeypad+1)^0,c
 14011  004A5E  EF32  F025         	goto	u8515
 14012  004A62                     u8500:
 14013  004A62  6A0F               	clrf	(??_readKeypad+1)^0,c
 14014  004A64                     u8515:
 14015  004A64  B082               	btfsc	130,0,c	;volatile
 14016  004A66  EF37  F025         	goto	u8521
 14017  004A6A  EF3B  F025         	goto	u8520
 14018  004A6E                     u8521:
 14019  004A6E  6A10               	clrf	(??_readKeypad+2)^0,c
 14020  004A70  2A10               	incf	(??_readKeypad+2)^0,f,c
 14021  004A72  EF3C  F025         	goto	u8528
 14022  004A76                     u8520:
 14023  004A76  6A10               	clrf	(??_readKeypad+2)^0,c
 14024  004A78                     u8528:
 14025  004A78  90D8               	bcf	status,0,c
 14026  004A7A  3610               	rlcf	(??_readKeypad+2)^0,f,c
 14027  004A7C  90D8               	bcf	status,0,c
 14028  004A7E  3410               	rlcf	(??_readKeypad+2)^0,w,c
 14029  004A80  100F               	iorwf	(??_readKeypad+1)^0,w,c
 14030  004A82  100E               	iorwf	??_readKeypad^0,w,c
 14031  004A84  6E16               	movwf	readKeypad@currentKeyState^0,c
 14032                           
 14033                           ;App_HTAD.c: 335:     static uint8_t previousKeyState = 0xFF;;App_HTAD.c: 337:     stati
      +                          c uint32_t lastKeyPressTime = 0;;App_HTAD.c: 339:     if (currentKeyState != previousKey
      +                          State) {
 14034  004A86  0101               	movlb	1	; () banked
 14035  004A88  51FE               	movf	readKeypad@previousKeyState& (0+255),w,b
 14036  004A8A  1816               	xorwf	readKeypad@currentKeyState^0,w,c
 14037  004A8C  B4D8               	btfsc	status,2,c
 14038  004A8E  EF4B  F025         	goto	u8531
 14039  004A92  EF4D  F025         	goto	u8530
 14040  004A96                     u8531:
 14041  004A96  EFCD  F025         	goto	l9320
 14042  004A9A                     u8530:
 14043  004A9A                     
 14044                           ; BSR set to: 1
 14045                           ;App_HTAD.c: 341:         uint32_t currentTick = SRV_TIMER_GetTick();
 14046  004A9A  ECB9  F03A         	call	_SRV_TIMER_GetTick	;wreg free
 14047  004A9E  C00A  F012         	movff	?_SRV_TIMER_GetTick,readKeypad@currentTick
 14048  004AA2  C00B  F013         	movff	?_SRV_TIMER_GetTick+1,readKeypad@currentTick+1
 14049  004AA6  C00C  F014         	movff	?_SRV_TIMER_GetTick+2,readKeypad@currentTick+2
 14050  004AAA  C00D  F015         	movff	?_SRV_TIMER_GetTick+3,readKeypad@currentTick+3
 14051  004AAE                     
 14052                           ;App_HTAD.c: 343:         if ((currentTick - lastKeyPressTime) >= 30) {
 14053  004AAE  0101               	movlb	1	; () banked
 14054  004AB0  5171               	movf	readKeypad@lastKeyPressTime& (0+255),w,b
 14055  004AB2  5C12               	subwf	readKeypad@currentTick^0,w,c
 14056  004AB4  6E0E               	movwf	??_readKeypad^0,c
 14057  004AB6  5172               	movf	(readKeypad@lastKeyPressTime+1)& (0+255),w,b
 14058  004AB8  5813               	subwfb	(readKeypad@currentTick+1)^0,w,c
 14059  004ABA  6E0F               	movwf	(??_readKeypad+1)^0,c
 14060  004ABC  5173               	movf	(readKeypad@lastKeyPressTime+2)& (0+255),w,b
 14061  004ABE  5814               	subwfb	(readKeypad@currentTick+2)^0,w,c
 14062  004AC0  6E10               	movwf	(??_readKeypad+2)^0,c
 14063  004AC2  5174               	movf	(readKeypad@lastKeyPressTime+3)& (0+255),w,b
 14064  004AC4  5815               	subwfb	(readKeypad@currentTick+3)^0,w,c
 14065  004AC6  6E11               	movwf	(??_readKeypad+3)^0,c
 14066  004AC8  5011               	movf	(??_readKeypad+3)^0,w,c
 14067  004ACA  1010               	iorwf	(??_readKeypad+2)^0,w,c
 14068  004ACC  100F               	iorwf	(??_readKeypad+1)^0,w,c
 14069  004ACE  E109               	bnz	u8540
 14070  004AD0  0E1E               	movlw	30
 14071  004AD2  5C0E               	subwf	??_readKeypad^0,w,c
 14072  004AD4  A0D8               	btfss	status,0,c
 14073  004AD6  EF6F  F025         	goto	u8541
 14074  004ADA  EF71  F025         	goto	u8540
 14075  004ADE                     u8541:
 14076  004ADE  EFCD  F025         	goto	l9320
 14077  004AE2                     u8540:
 14078  004AE2                     
 14079                           ; BSR set to: 1
 14080                           ;App_HTAD.c: 344:             previousKeyState = currentKeyState;
 14081  004AE2  C016  F1FE         	movff	readKeypad@currentKeyState,readKeypad@previousKeyState
 14082                           
 14083                           ;App_HTAD.c: 345:             lastKeyPressTime = currentTick;
 14084  004AE6  C012  F171         	movff	readKeypad@currentTick,readKeypad@lastKeyPressTime
 14085  004AEA  C013  F172         	movff	readKeypad@currentTick+1,readKeypad@lastKeyPressTime+1
 14086  004AEE  C014  F173         	movff	readKeypad@currentTick+2,readKeypad@lastKeyPressTime+2
 14087  004AF2  C015  F174         	movff	readKeypad@currentTick+3,readKeypad@lastKeyPressTime+3
 14088  004AF6                     
 14089                           ; BSR set to: 1
 14090                           ;App_HTAD.c: 348:             if (currentKeyState == 0b011) return T1;
 14091  004AF6  0E03               	movlw	3
 14092  004AF8  1816               	xorwf	readKeypad@currentKeyState^0,w,c
 14093  004AFA  A4D8               	btfss	status,2,c
 14094  004AFC  EF82  F025         	goto	u8551
 14095  004B00  EF84  F025         	goto	u8550
 14096  004B04                     u8551:
 14097  004B04  EF87  F025         	goto	l9284
 14098  004B08                     u8550:
 14099  004B08                     
 14100                           ; BSR set to: 1
 14101  004B08  0E00               	movlw	0
 14102  004B0A  EFCE  F025         	goto	l1049
 14103  004B0E                     l9284:
 14104                           
 14105                           ; BSR set to: 1
 14106                           ;App_HTAD.c: 349:             if (currentKeyState == 0b101) return T2;
 14107  004B0E  0E05               	movlw	5
 14108  004B10  1816               	xorwf	readKeypad@currentKeyState^0,w,c
 14109  004B12  A4D8               	btfss	status,2,c
 14110  004B14  EF8E  F025         	goto	u8561
 14111  004B18  EF90  F025         	goto	u8560
 14112  004B1C                     u8561:
 14113  004B1C  EF93  F025         	goto	l9290
 14114  004B20                     u8560:
 14115  004B20                     
 14116                           ; BSR set to: 1
 14117  004B20  0E01               	movlw	1
 14118  004B22  EFCE  F025         	goto	l1049
 14119  004B26                     l9290:
 14120                           
 14121                           ; BSR set to: 1
 14122                           ;App_HTAD.c: 350:             if (currentKeyState == 0b001) return T3;
 14123  004B26  0416               	decf	readKeypad@currentKeyState^0,w,c
 14124  004B28  A4D8               	btfss	status,2,c
 14125  004B2A  EF99  F025         	goto	u8571
 14126  004B2E  EF9B  F025         	goto	u8570
 14127  004B32                     u8571:
 14128  004B32  EF9E  F025         	goto	l9296
 14129  004B36                     u8570:
 14130  004B36                     
 14131                           ; BSR set to: 1
 14132  004B36  0E02               	movlw	2
 14133  004B38  EFCE  F025         	goto	l1049
 14134  004B3C                     l9296:
 14135                           
 14136                           ; BSR set to: 1
 14137                           ;App_HTAD.c: 351:             if (currentKeyState == 0b110) return T4;
 14138  004B3C  0E06               	movlw	6
 14139  004B3E  1816               	xorwf	readKeypad@currentKeyState^0,w,c
 14140  004B40  A4D8               	btfss	status,2,c
 14141  004B42  EFA5  F025         	goto	u8581
 14142  004B46  EFA7  F025         	goto	u8580
 14143  004B4A                     u8581:
 14144  004B4A  EFAA  F025         	goto	l9302
 14145  004B4E                     u8580:
 14146  004B4E                     
 14147                           ; BSR set to: 1
 14148  004B4E  0E03               	movlw	3
 14149  004B50  EFCE  F025         	goto	l1049
 14150  004B54                     l9302:
 14151                           
 14152                           ; BSR set to: 1
 14153                           ;App_HTAD.c: 352:             if (currentKeyState == 0b010) return T5;
 14154  004B54  0E02               	movlw	2
 14155  004B56  1816               	xorwf	readKeypad@currentKeyState^0,w,c
 14156  004B58  A4D8               	btfss	status,2,c
 14157  004B5A  EFB1  F025         	goto	u8591
 14158  004B5E  EFB3  F025         	goto	u8590
 14159  004B62                     u8591:
 14160  004B62  EFB6  F025         	goto	l9308
 14161  004B66                     u8590:
 14162  004B66                     
 14163                           ; BSR set to: 1
 14164  004B66  0E04               	movlw	4
 14165  004B68  EFCE  F025         	goto	l1049
 14166  004B6C                     l9308:
 14167                           
 14168                           ; BSR set to: 1
 14169                           ;App_HTAD.c: 353:             if (currentKeyState == 0b100) return T6;
 14170  004B6C  0E04               	movlw	4
 14171  004B6E  1816               	xorwf	readKeypad@currentKeyState^0,w,c
 14172  004B70  A4D8               	btfss	status,2,c
 14173  004B72  EFBD  F025         	goto	u8601
 14174  004B76  EFBF  F025         	goto	u8600
 14175  004B7A                     u8601:
 14176  004B7A  EFC2  F025         	goto	l9314
 14177  004B7E                     u8600:
 14178  004B7E                     
 14179                           ; BSR set to: 1
 14180  004B7E  0E05               	movlw	5
 14181  004B80  EFCE  F025         	goto	l1049
 14182  004B84                     l9314:
 14183                           
 14184                           ; BSR set to: 1
 14185                           ;App_HTAD.c: 354:             if (currentKeyState == 0b000) return T7;
 14186  004B84  5016               	movf	readKeypad@currentKeyState^0,w,c
 14187  004B86  A4D8               	btfss	status,2,c
 14188  004B88  EFC8  F025         	goto	u8611
 14189  004B8C  EFCA  F025         	goto	u8610
 14190  004B90                     u8611:
 14191  004B90  EFCD  F025         	goto	l9320
 14192  004B94                     u8610:
 14193  004B94                     
 14194                           ; BSR set to: 1
 14195  004B94  0E06               	movlw	6
 14196  004B96  EFCE  F025         	goto	l1049
 14197  004B9A                     l9320:
 14198                           
 14199                           ; BSR set to: 1
 14200                           ;App_HTAD.c: 358:     return NenhumaTecla;
 14201  004B9A  0E07               	movlw	7
 14202  004B9C                     l1049:
 14203                           
 14204                           ; BSR set to: 1
 14205  004B9C  0012               	return		;funcret
 14206  004B9E                     __end_of_readKeypad:
 14207                           	callstack 0
 14208                           
 14209 ;; *************** function _SRV_TIMER_GetTick *****************
 14210 ;; Defined at:
 14211 ;;		line 31 in file "ServiceTimer.c"
 14212 ;; Parameters:    Size  Location     Type
 14213 ;;		None
 14214 ;; Auto vars:     Size  Location     Type
 14215 ;;		None
 14216 ;; Return value:  Size  Location     Type
 14217 ;;                  4    9[COMRAM] unsigned long 
 14218 ;; Registers used:
 14219 ;;		fsr2l, fsr2h
 14220 ;; Tracked objects:
 14221 ;;		On entry : 0/0
 14222 ;;		On exit  : 0/0
 14223 ;;		Unchanged: 0/0
 14224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14225 ;;      Params:         4       0       0       0       0       0       0
 14226 ;;      Locals:         0       0       0       0       0       0       0
 14227 ;;      Temps:          0       0       0       0       0       0       0
 14228 ;;      Totals:         4       0       0       0       0       0       0
 14229 ;;Total ram usage:        4 bytes
 14230 ;; Hardware stack levels used: 1
 14231 ;; Hardware stack levels required when called: 4
 14232 ;; This function calls:
 14233 ;;		Nothing
 14234 ;; This function is called by:
 14235 ;;		_App_HTAD_Home
 14236 ;;		_App_HTAD_MenuAjusteErro
 14237 ;;		_readKeypad
 14238 ;;		_SRV_ADT7410_Run
 14239 ;;		_Driver_Analog_Run
 14240 ;;		_DirectNet_Run
 14241 ;; This function uses a non-reentrant model
 14242 ;;
 14243                           
 14244                           	psect	text61
 14245  007572                     __ptext61:
 14246                           	callstack 0
 14247  007572                     _SRV_TIMER_GetTick:
 14248                           	callstack 24
 14249  007572                     
 14250                           ;ServiceTimer.c: 33:     return *count_aux;
 14251  007572  C18F  FFD9         	movff	_count_aux,fsr2l
 14252  007576  C190  FFDA         	movff	_count_aux+1,fsr2h
 14253  00757A  CFDE F00A          	movff	postinc2,?_SRV_TIMER_GetTick
 14254  00757E  CFDE F00B          	movff	postinc2,?_SRV_TIMER_GetTick+1
 14255  007582  CFDE F00C          	movff	postinc2,?_SRV_TIMER_GetTick+2
 14256  007586  CFDE F00D          	movff	postinc2,?_SRV_TIMER_GetTick+3
 14257  00758A  0012               	return		;funcret
 14258  00758C                     __end_of_SRV_TIMER_GetTick:
 14259                           	callstack 0
 14260                           
 14261 ;; *************** function _SRV_Display_Write *****************
 14262 ;; Defined at:
 14263 ;;		line 35 in file "SRV_Display.c"
 14264 ;; Parameters:    Size  Location     Type
 14265 ;;  linha           1    wreg     unsigned char 
 14266 ;;  coluna          1   18[COMRAM] unsigned char 
 14267 ;;  data            2   19[COMRAM] PTR unsigned char 
 14268 ;;		 -> App_HTAD_MenuAjusteErro@txt(20), App_HTAD_Home@txt(21), NULL(0), 
 14269 ;; Auto vars:     Size  Location     Type
 14270 ;;  linha           1   21[COMRAM] unsigned char 
 14271 ;; Return value:  Size  Location     Type
 14272 ;;                  1    wreg      void 
 14273 ;; Registers used:
 14274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14275 ;; Tracked objects:
 14276 ;;		On entry : 0/0
 14277 ;;		On exit  : 0/0
 14278 ;;		Unchanged: 0/0
 14279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14280 ;;      Params:         3       0       0       0       0       0       0
 14281 ;;      Locals:         1       0       0       0       0       0       0
 14282 ;;      Temps:          0       0       0       0       0       0       0
 14283 ;;      Totals:         4       0       0       0       0       0       0
 14284 ;;Total ram usage:        4 bytes
 14285 ;; Hardware stack levels used: 1
 14286 ;; Hardware stack levels required when called: 7
 14287 ;; This function calls:
 14288 ;;		_DRV_LCD_SetCursor
 14289 ;;		_DRV_LCD_WriteString
 14290 ;; This function is called by:
 14291 ;;		_App_HTAD_Home
 14292 ;;		_App_HTAD_MenuAjusteErro
 14293 ;;		_writeTela
 14294 ;; This function uses a non-reentrant model
 14295 ;;
 14296                           
 14297                           	psect	text62
 14298  0074DE                     __ptext62:
 14299                           	callstack 0
 14300  0074DE                     _SRV_Display_Write:
 14301                           	callstack 21
 14302                           
 14303                           ;incstack = 0
 14304                           ;SRV_Display_Write@linha stored from wreg
 14305  0074DE  6E16               	movwf	SRV_Display_Write@linha^0,c
 14306  0074E0                     
 14307                           ;SRV_Display.c: 35: void SRV_Display_Write(uint8_t linha,uint8_t coluna, uint8_t *data);
      +                          SRV_Display.c: 36: {;SRV_Display.c: 37:     DRV_LCD_SetCursor(linha,coluna,0);
 14308  0074E0  C013  F00D         	movff	SRV_Display_Write@coluna,DRV_LCD_SetCursor@coluna
 14309  0074E4  0E00               	movlw	0
 14310  0074E6  6E0E               	movwf	DRV_LCD_SetCursor@cursorOn^0,c
 14311  0074E8  5016               	movf	SRV_Display_Write@linha^0,w,c
 14312  0074EA  EC22  F02B         	call	_DRV_LCD_SetCursor
 14313  0074EE                     
 14314                           ;SRV_Display.c: 38:     DRV_LCD_WriteString(data);
 14315  0074EE  C014  F00E         	movff	SRV_Display_Write@data,DRV_LCD_WriteString@data
 14316  0074F2  C015  F00F         	movff	SRV_Display_Write@data+1,DRV_LCD_WriteString@data+1
 14317  0074F6  EC14  F038         	call	_DRV_LCD_WriteString	;wreg free
 14318  0074FA  0012               	return		;funcret
 14319  0074FC                     __end_of_SRV_Display_Write:
 14320                           	callstack 0
 14321                           
 14322 ;; *************** function _DRV_LCD_WriteString *****************
 14323 ;; Defined at:
 14324 ;;		line 135 in file "Driver_LCD.c"
 14325 ;; Parameters:    Size  Location     Type
 14326 ;;  data            2   13[COMRAM] PTR unsigned char 
 14327 ;;		 -> App_HTAD_MenuAjusteErro@txt(20), App_HTAD_Home@txt(21), NULL(0), 
 14328 ;; Auto vars:     Size  Location     Type
 14329 ;;  i               2   15[COMRAM] int 
 14330 ;; Return value:  Size  Location     Type
 14331 ;;                  1    wreg      void 
 14332 ;; Registers used:
 14333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14334 ;; Tracked objects:
 14335 ;;		On entry : 0/0
 14336 ;;		On exit  : 0/0
 14337 ;;		Unchanged: 0/0
 14338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14339 ;;      Params:         2       0       0       0       0       0       0
 14340 ;;      Locals:         2       0       0       0       0       0       0
 14341 ;;      Temps:          0       0       0       0       0       0       0
 14342 ;;      Totals:         4       0       0       0       0       0       0
 14343 ;;Total ram usage:        4 bytes
 14344 ;; Hardware stack levels used: 1
 14345 ;; Hardware stack levels required when called: 6
 14346 ;; This function calls:
 14347 ;;		_DRV_LCD_WriteChar
 14348 ;; This function is called by:
 14349 ;;		_SRV_Display_Write
 14350 ;; This function uses a non-reentrant model
 14351 ;;
 14352                           
 14353                           	psect	text63
 14354  007028                     __ptext63:
 14355                           	callstack 0
 14356  007028                     _DRV_LCD_WriteString:
 14357                           	callstack 21
 14358  007028                     
 14359                           ;Driver_LCD.c: 135: void DRV_LCD_WriteString(uint8_t *data);Driver_LCD.c: 136: {;Driver_
      +                          LCD.c: 137:  int i;;Driver_LCD.c: 138:  for(i=0;data[i]!='\0';i++)
 14360  007028  0E00               	movlw	0
 14361  00702A  6E11               	movwf	(DRV_LCD_WriteString@i+1)^0,c
 14362  00702C  0E00               	movlw	0
 14363  00702E  6E10               	movwf	DRV_LCD_WriteString@i^0,c
 14364  007030  EF25  F038         	goto	l8980
 14365  007034                     l8976:
 14366                           
 14367                           ;Driver_LCD.c: 139:     DRV_LCD_WriteChar(data[i]);
 14368  007034  5010               	movf	DRV_LCD_WriteString@i^0,w,c
 14369  007036  240E               	addwf	DRV_LCD_WriteString@data^0,w,c
 14370  007038  6ED9               	movwf	fsr2l,c
 14371  00703A  5011               	movf	(DRV_LCD_WriteString@i+1)^0,w,c
 14372  00703C  200F               	addwfc	(DRV_LCD_WriteString@data+1)^0,w,c
 14373  00703E  6EDA               	movwf	fsr2h,c
 14374  007040  50DF               	movf	indf2,w,c
 14375  007042  EC23  F039         	call	_DRV_LCD_WriteChar
 14376  007046  4A10               	infsnz	DRV_LCD_WriteString@i^0,f,c
 14377  007048  2A11               	incf	(DRV_LCD_WriteString@i+1)^0,f,c
 14378  00704A                     l8980:
 14379  00704A  5010               	movf	DRV_LCD_WriteString@i^0,w,c
 14380  00704C  240E               	addwf	DRV_LCD_WriteString@data^0,w,c
 14381  00704E  6ED9               	movwf	fsr2l,c
 14382  007050  5011               	movf	(DRV_LCD_WriteString@i+1)^0,w,c
 14383  007052  200F               	addwfc	(DRV_LCD_WriteString@data+1)^0,w,c
 14384  007054  6EDA               	movwf	fsr2h,c
 14385  007056  50DF               	movf	indf2,w,c
 14386  007058  A4D8               	btfss	status,2,c
 14387  00705A  EF31  F038         	goto	u8191
 14388  00705E  EF33  F038         	goto	u8190
 14389  007062                     u8191:
 14390  007062  EF1A  F038         	goto	l8976
 14391  007066                     u8190:
 14392  007066  0012               	return		;funcret
 14393  007068                     __end_of_DRV_LCD_WriteString:
 14394                           	callstack 0
 14395                           
 14396 ;; *************** function _DRV_LCD_WriteChar *****************
 14397 ;; Defined at:
 14398 ;;		line 119 in file "Driver_LCD.c"
 14399 ;; Parameters:    Size  Location     Type
 14400 ;;  data            1    wreg     unsigned char 
 14401 ;; Auto vars:     Size  Location     Type
 14402 ;;  data            1   12[COMRAM] unsigned char 
 14403 ;;  y               1   11[COMRAM] unsigned char 
 14404 ;;  temp            1   10[COMRAM] unsigned char 
 14405 ;; Return value:  Size  Location     Type
 14406 ;;                  1    wreg      void 
 14407 ;; Registers used:
 14408 ;;		wreg, status,2, status,0, cstack
 14409 ;; Tracked objects:
 14410 ;;		On entry : 0/0
 14411 ;;		On exit  : 0/0
 14412 ;;		Unchanged: 0/0
 14413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14414 ;;      Params:         0       0       0       0       0       0       0
 14415 ;;      Locals:         3       0       0       0       0       0       0
 14416 ;;      Temps:          0       0       0       0       0       0       0
 14417 ;;      Totals:         3       0       0       0       0       0       0
 14418 ;;Total ram usage:        3 bytes
 14419 ;; Hardware stack levels used: 1
 14420 ;; Hardware stack levels required when called: 5
 14421 ;; This function calls:
 14422 ;;		_DRV_LCD_Data
 14423 ;; This function is called by:
 14424 ;;		_DRV_LCD_WriteString
 14425 ;;		_SRV_Display_WriteChar
 14426 ;; This function uses a non-reentrant model
 14427 ;;
 14428                           
 14429                           	psect	text64
 14430  007246                     __ptext64:
 14431                           	callstack 0
 14432  007246                     _DRV_LCD_WriteChar:
 14433                           	callstack 21
 14434                           
 14435                           ;incstack = 0
 14436                           ;DRV_LCD_WriteChar@data stored from wreg
 14437  007246  6E0D               	movwf	DRV_LCD_WriteChar@data^0,c
 14438  007248                     
 14439                           ;Driver_LCD.c: 119: void DRV_LCD_WriteChar(uint8_t data);Driver_LCD.c: 120: {;Driver_LCD
      +                          .c: 121:    char temp,y;;Driver_LCD.c: 122:    temp = data&0x0F;
 14440  007248  500D               	movf	DRV_LCD_WriteChar@data^0,w,c
 14441  00724A  0B0F               	andlw	15
 14442  00724C  6E0B               	movwf	DRV_LCD_WriteChar@temp^0,c
 14443                           
 14444                           ;Driver_LCD.c: 123:    y = data&0xF0;
 14445  00724E  500D               	movf	DRV_LCD_WriteChar@data^0,w,c
 14446  007250  0BF0               	andlw	240
 14447  007252  6E0C               	movwf	DRV_LCD_WriteChar@y^0,c
 14448  007254  888A               	bsf	138,4,c	;volatile
 14449  007256                     
 14450                           ;Driver_LCD.c: 125:    DRV_LCD_Data(y>>4);
 14451  007256  380C               	swapf	DRV_LCD_WriteChar@y^0,w,c
 14452  007258  0B0F               	andlw	15
 14453  00725A  EC15  F036         	call	_DRV_LCD_Data
 14454  00725E  8A8A               	bsf	138,5,c	;volatile
 14455  007260                     
 14456                           ;Driver_LCD.c: 127:    _delay((unsigned long)((40)*(40000000/4000000.0)));
 14457  007260  0E85               	movlw	133
 14458  007262                     u14237:
 14459  007262  2EE8               	decfsz	wreg,f,c
 14460  007264  D7FE               	bra	u14237
 14461  007266  F000               	nop	
 14462  007268  9A8A               	bcf	138,5,c	;volatile
 14463  00726A                     
 14464                           ;Driver_LCD.c: 129:    DRV_LCD_Data(temp);
 14465  00726A  500B               	movf	DRV_LCD_WriteChar@temp^0,w,c
 14466  00726C  EC15  F036         	call	_DRV_LCD_Data
 14467  007270  8A8A               	bsf	138,5,c	;volatile
 14468  007272                     
 14469                           ;Driver_LCD.c: 131:    _delay((unsigned long)((40)*(40000000/4000000.0)));
 14470  007272  0E85               	movlw	133
 14471  007274                     u14247:
 14472  007274  2EE8               	decfsz	wreg,f,c
 14473  007276  D7FE               	bra	u14247
 14474  007278  F000               	nop	
 14475  00727A  9A8A               	bcf	138,5,c	;volatile
 14476  00727C  0012               	return		;funcret
 14477  00727E                     __end_of_DRV_LCD_WriteChar:
 14478                           	callstack 0
 14479                           
 14480 ;; *************** function _SRV_ADT7410_GetTemperature *****************
 14481 ;; Defined at:
 14482 ;;		line 259 in file "ServiceADT7410.c"
 14483 ;; Parameters:    Size  Location     Type
 14484 ;;  sensor          1    wreg     enum E519
 14485 ;;  typeRead        1    9[COMRAM] enum E515
 14486 ;; Auto vars:     Size  Location     Type
 14487 ;;  sensor          1   13[COMRAM] enum E519
 14488 ;; Return value:  Size  Location     Type
 14489 ;;                  4    9[COMRAM] float 
 14490 ;; Registers used:
 14491 ;;		wreg, status,2, status,0
 14492 ;; Tracked objects:
 14493 ;;		On entry : 0/0
 14494 ;;		On exit  : 0/0
 14495 ;;		Unchanged: 0/0
 14496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14497 ;;      Params:         4       0       0       0       0       0       0
 14498 ;;      Locals:         1       0       0       0       0       0       0
 14499 ;;      Temps:          0       0       0       0       0       0       0
 14500 ;;      Totals:         5       0       0       0       0       0       0
 14501 ;;Total ram usage:        5 bytes
 14502 ;; Hardware stack levels used: 1
 14503 ;; Hardware stack levels required when called: 4
 14504 ;; This function calls:
 14505 ;;		Nothing
 14506 ;; This function is called by:
 14507 ;;		_App_HTAD_Home
 14508 ;;		_DirectNet_Run
 14509 ;; This function uses a non-reentrant model
 14510 ;;
 14511                           
 14512                           	psect	text65
 14513  00573C                     __ptext65:
 14514                           	callstack 0
 14515  00573C                     _SRV_ADT7410_GetTemperature:
 14516                           	callstack 24
 14517                           
 14518                           ;incstack = 0
 14519                           ;SRV_ADT7410_GetTemperature@sensor stored from wreg
 14520  00573C  6E0E               	movwf	SRV_ADT7410_GetTemperature@sensor^0,c
 14521  00573E                     
 14522                           ;ServiceADT7410.c: 259: float SRV_ADT7410_GetTemperature(Sensor_e sensor ,TypeRead_e typ
      +                          eRead );ServiceADT7410.c: 260: {;ServiceADT7410.c: 261:     if(sensor == SENSOR_S1)
 14523  00573E  040E               	decf	SRV_ADT7410_GetTemperature@sensor^0,w,c
 14524  005740  A4D8               	btfss	status,2,c
 14525  005742  EFA5  F02B         	goto	u8401
 14526  005746  EFA7  F02B         	goto	u8400
 14527  00574A                     u8401:
 14528  00574A  EFC3  F02B         	goto	l9186
 14529  00574E                     u8400:
 14530  00574E                     
 14531                           ;ServiceADT7410.c: 262:     {;ServiceADT7410.c: 263:         if(typeRead == CELSIUS){
 14532  00574E  500A               	movf	SRV_ADT7410_GetTemperature@typeRead^0,w,c
 14533  005750  A4D8               	btfss	status,2,c
 14534  005752  EFAD  F02B         	goto	u8411
 14535  005756  EFAF  F02B         	goto	u8410
 14536  00575A                     u8411:
 14537  00575A  EFB9  F02B         	goto	l1340
 14538  00575E                     u8410:
 14539  00575E                     
 14540                           ;ServiceADT7410.c: 264:             return Sensor1.CELSIUS;
 14541  00575E  C1C0  F00A         	movff	_Sensor1,?_SRV_ADT7410_GetTemperature
 14542  005762  C1C1  F00B         	movff	_Sensor1+1,?_SRV_ADT7410_GetTemperature+1
 14543  005766  C1C2  F00C         	movff	_Sensor1+2,?_SRV_ADT7410_GetTemperature+2
 14544  00576A  C1C3  F00D         	movff	_Sensor1+3,?_SRV_ADT7410_GetTemperature+3
 14545  00576E  EF15  F02C         	goto	l1341
 14546  005772                     l1340:
 14547                           
 14548                           ;ServiceADT7410.c: 267:            return Sensor1.FAHRENHEIT;
 14549  005772  C1C4  F00A         	movff	_Sensor1+4,?_SRV_ADT7410_GetTemperature
 14550  005776  C1C5  F00B         	movff	_Sensor1+5,?_SRV_ADT7410_GetTemperature+1
 14551  00577A  C1C6  F00C         	movff	_Sensor1+6,?_SRV_ADT7410_GetTemperature+2
 14552  00577E  C1C7  F00D         	movff	_Sensor1+7,?_SRV_ADT7410_GetTemperature+3
 14553  005782  EF15  F02C         	goto	l1341
 14554  005786                     l9186:
 14555  005786  0E02               	movlw	2
 14556  005788  180E               	xorwf	SRV_ADT7410_GetTemperature@sensor^0,w,c
 14557  00578A  A4D8               	btfss	status,2,c
 14558  00578C  EFCA  F02B         	goto	u8421
 14559  005790  EFCC  F02B         	goto	u8420
 14560  005794                     u8421:
 14561  005794  EFE8  F02B         	goto	l9194
 14562  005798                     u8420:
 14563  005798                     
 14564                           ;ServiceADT7410.c: 271:     {;ServiceADT7410.c: 272:         if(typeRead == CELSIUS){
 14565  005798  500A               	movf	SRV_ADT7410_GetTemperature@typeRead^0,w,c
 14566  00579A  A4D8               	btfss	status,2,c
 14567  00579C  EFD2  F02B         	goto	u8431
 14568  0057A0  EFD4  F02B         	goto	u8430
 14569  0057A4                     u8431:
 14570  0057A4  EFDE  F02B         	goto	l1345
 14571  0057A8                     u8430:
 14572  0057A8                     
 14573                           ;ServiceADT7410.c: 273:             return Sensor2.CELSIUS;
 14574  0057A8  C1B8  F00A         	movff	_Sensor2,?_SRV_ADT7410_GetTemperature
 14575  0057AC  C1B9  F00B         	movff	_Sensor2+1,?_SRV_ADT7410_GetTemperature+1
 14576  0057B0  C1BA  F00C         	movff	_Sensor2+2,?_SRV_ADT7410_GetTemperature+2
 14577  0057B4  C1BB  F00D         	movff	_Sensor2+3,?_SRV_ADT7410_GetTemperature+3
 14578  0057B8  EF15  F02C         	goto	l1341
 14579  0057BC                     l1345:
 14580                           
 14581                           ;ServiceADT7410.c: 276:            return Sensor2.FAHRENHEIT;
 14582  0057BC  C1BC  F00A         	movff	_Sensor2+4,?_SRV_ADT7410_GetTemperature
 14583  0057C0  C1BD  F00B         	movff	_Sensor2+5,?_SRV_ADT7410_GetTemperature+1
 14584  0057C4  C1BE  F00C         	movff	_Sensor2+6,?_SRV_ADT7410_GetTemperature+2
 14585  0057C8  C1BF  F00D         	movff	_Sensor2+7,?_SRV_ADT7410_GetTemperature+3
 14586  0057CC  EF15  F02C         	goto	l1341
 14587  0057D0                     l9194:
 14588  0057D0  0E03               	movlw	3
 14589  0057D2  180E               	xorwf	SRV_ADT7410_GetTemperature@sensor^0,w,c
 14590  0057D4  A4D8               	btfss	status,2,c
 14591  0057D6  EFEF  F02B         	goto	u8441
 14592  0057DA  EFF1  F02B         	goto	u8440
 14593  0057DE                     u8441:
 14594  0057DE  EF0D  F02C         	goto	l9202
 14595  0057E2                     u8440:
 14596  0057E2                     
 14597                           ;ServiceADT7410.c: 280:     {;ServiceADT7410.c: 281:         if(typeRead == CELSIUS){
 14598  0057E2  500A               	movf	SRV_ADT7410_GetTemperature@typeRead^0,w,c
 14599  0057E4  A4D8               	btfss	status,2,c
 14600  0057E6  EFF7  F02B         	goto	u8451
 14601  0057EA  EFF9  F02B         	goto	u8450
 14602  0057EE                     u8451:
 14603  0057EE  EF03  F02C         	goto	l1349
 14604  0057F2                     u8450:
 14605  0057F2                     
 14606                           ;ServiceADT7410.c: 282:             return Sensor3.CELSIUS;
 14607  0057F2  C1B0  F00A         	movff	_Sensor3,?_SRV_ADT7410_GetTemperature
 14608  0057F6  C1B1  F00B         	movff	_Sensor3+1,?_SRV_ADT7410_GetTemperature+1
 14609  0057FA  C1B2  F00C         	movff	_Sensor3+2,?_SRV_ADT7410_GetTemperature+2
 14610  0057FE  C1B3  F00D         	movff	_Sensor3+3,?_SRV_ADT7410_GetTemperature+3
 14611  005802  EF15  F02C         	goto	l1341
 14612  005806                     l1349:
 14613                           
 14614                           ;ServiceADT7410.c: 285:            return Sensor3.FAHRENHEIT;
 14615  005806  C1B4  F00A         	movff	_Sensor3+4,?_SRV_ADT7410_GetTemperature
 14616  00580A  C1B5  F00B         	movff	_Sensor3+5,?_SRV_ADT7410_GetTemperature+1
 14617  00580E  C1B6  F00C         	movff	_Sensor3+6,?_SRV_ADT7410_GetTemperature+2
 14618  005812  C1B7  F00D         	movff	_Sensor3+7,?_SRV_ADT7410_GetTemperature+3
 14619  005816  EF15  F02C         	goto	l1341
 14620  00581A                     l9202:
 14621                           
 14622                           ;ServiceADT7410.c: 288:     return 0;
 14623  00581A  0E00               	movlw	0
 14624  00581C  6E0A               	movwf	?_SRV_ADT7410_GetTemperature^0,c
 14625  00581E  0E00               	movlw	0
 14626  005820  6E0B               	movwf	(?_SRV_ADT7410_GetTemperature+1)^0,c
 14627  005822  0E00               	movlw	0
 14628  005824  6E0C               	movwf	(?_SRV_ADT7410_GetTemperature+2)^0,c
 14629  005826  0E00               	movlw	0
 14630  005828  6E0D               	movwf	(?_SRV_ADT7410_GetTemperature+3)^0,c
 14631  00582A                     l1341:
 14632  00582A  0012               	return		;funcret
 14633  00582C                     __end_of_SRV_ADT7410_GetTemperature:
 14634                           	callstack 0
 14635                           
 14636 ;; *************** function _Driver_Analog_GetValueAN3 *****************
 14637 ;; Defined at:
 14638 ;;		line 84 in file "Driver_Analog.c"
 14639 ;; Parameters:    Size  Location     Type
 14640 ;;		None
 14641 ;; Auto vars:     Size  Location     Type
 14642 ;;  i               1   58[COMRAM] unsigned char 
 14643 ;;  sum             4   54[COMRAM] unsigned long 
 14644 ;;  averageValue    2   52[COMRAM] unsigned short 
 14645 ;; Return value:  Size  Location     Type
 14646 ;;                  2   48[COMRAM] unsigned short 
 14647 ;; Registers used:
 14648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14649 ;; Tracked objects:
 14650 ;;		On entry : 0/0
 14651 ;;		On exit  : 0/0
 14652 ;;		Unchanged: 0/0
 14653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14654 ;;      Params:         2       0       0       0       0       0       0
 14655 ;;      Locals:         7       0       0       0       0       0       0
 14656 ;;      Temps:          2       0       0       0       0       0       0
 14657 ;;      Totals:        11       0       0       0       0       0       0
 14658 ;;Total ram usage:       11 bytes
 14659 ;; Hardware stack levels used: 1
 14660 ;; Hardware stack levels required when called: 6
 14661 ;; This function calls:
 14662 ;;		___lldiv
 14663 ;;		_mapValue
 14664 ;; This function is called by:
 14665 ;;		_App_HTAD_Home
 14666 ;;		_DirectNet_Run
 14667 ;; This function uses a non-reentrant model
 14668 ;;
 14669                           
 14670                           	psect	text66
 14671  006190                     __ptext66:
 14672                           	callstack 0
 14673  006190                     _Driver_Analog_GetValueAN3:
 14674                           	callstack 22
 14675  006190                     
 14676                           ;Driver_Analog.c: 85:     uint32_t sum = 0;
 14677  006190  0E00               	movlw	0
 14678  006192  6E37               	movwf	Driver_Analog_GetValueAN3@sum^0,c
 14679  006194  0E00               	movlw	0
 14680  006196  6E38               	movwf	(Driver_Analog_GetValueAN3@sum+1)^0,c
 14681  006198  0E00               	movlw	0
 14682  00619A  6E39               	movwf	(Driver_Analog_GetValueAN3@sum+2)^0,c
 14683  00619C  0E00               	movlw	0
 14684  00619E  6E3A               	movwf	(Driver_Analog_GetValueAN3@sum+3)^0,c
 14685                           
 14686                           ;Driver_Analog.c: 86:     for (uint8_t i = 0; i < 10; i++) {
 14687  0061A0  0E00               	movlw	0
 14688  0061A2  6E3B               	movwf	Driver_Analog_GetValueAN3@i^0,c
 14689  0061A4                     l12932:
 14690                           
 14691                           ;Driver_Analog.c: 87:         sum += adc_values_an3[i];
 14692  0061A4  503B               	movf	Driver_Analog_GetValueAN3@i^0,w,c
 14693  0061A6  0D02               	mullw	2
 14694  0061A8  0E14               	movlw	low _adc_values_an3
 14695  0061AA  24F3               	addwf	243,w,c
 14696  0061AC  6ED9               	movwf	fsr2l,c
 14697  0061AE  0E02               	movlw	high _adc_values_an3
 14698  0061B0  20F4               	addwfc	prodh,w,c
 14699  0061B2  6EDA               	movwf	fsr2h,c
 14700  0061B4  CFDE F033          	movff	postinc2,??_Driver_Analog_GetValueAN3
 14701  0061B8  CFDD F034          	movff	postdec2,??_Driver_Analog_GetValueAN3+1
 14702  0061BC  5033               	movf	??_Driver_Analog_GetValueAN3^0,w,c
 14703  0061BE  2637               	addwf	Driver_Analog_GetValueAN3@sum^0,f,c
 14704  0061C0  5034               	movf	(??_Driver_Analog_GetValueAN3+1)^0,w,c
 14705  0061C2  2238               	addwfc	(Driver_Analog_GetValueAN3@sum+1)^0,f,c
 14706  0061C4  0E00               	movlw	0
 14707  0061C6  2239               	addwfc	(Driver_Analog_GetValueAN3@sum+2)^0,f,c
 14708  0061C8  0E00               	movlw	0
 14709  0061CA  223A               	addwfc	(Driver_Analog_GetValueAN3@sum+3)^0,f,c
 14710  0061CC                     
 14711                           ;Driver_Analog.c: 88:     }
 14712  0061CC  2A3B               	incf	Driver_Analog_GetValueAN3@i^0,f,c
 14713  0061CE  0E09               	movlw	9
 14714  0061D0  643B               	cpfsgt	Driver_Analog_GetValueAN3@i^0,c
 14715  0061D2  EFED  F030         	goto	u13111
 14716  0061D6  EFEF  F030         	goto	u13110
 14717  0061DA                     u13111:
 14718  0061DA  EFD2  F030         	goto	l12932
 14719  0061DE                     u13110:
 14720  0061DE                     
 14721                           ;Driver_Analog.c: 89:     uint16_t averageValue = (uint16_t)(sum / 10);
 14722  0061DE  C037  F016         	movff	Driver_Analog_GetValueAN3@sum,___lldiv@dividend
 14723  0061E2  C038  F017         	movff	Driver_Analog_GetValueAN3@sum+1,___lldiv@dividend+1
 14724  0061E6  C039  F018         	movff	Driver_Analog_GetValueAN3@sum+2,___lldiv@dividend+2
 14725  0061EA  C03A  F019         	movff	Driver_Analog_GetValueAN3@sum+3,___lldiv@dividend+3
 14726  0061EE  0E0A               	movlw	10
 14727  0061F0  6E1A               	movwf	___lldiv@divisor^0,c
 14728  0061F2  0E00               	movlw	0
 14729  0061F4  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 14730  0061F6  0E00               	movlw	0
 14731  0061F8  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 14732  0061FA  0E00               	movlw	0
 14733  0061FC  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 14734  0061FE  EC73  F032         	call	___lldiv	;wreg free
 14735  006202  C016  F035         	movff	?___lldiv,Driver_Analog_GetValueAN3@averageValue
 14736  006206  C017  F036         	movff	?___lldiv+1,Driver_Analog_GetValueAN3@averageValue+1
 14737                           
 14738                           ;Driver_Analog.c: 90:     return mapValue(averageValue, 0, 1023, 0, 4095);
 14739  00620A  C035  F023         	movff	Driver_Analog_GetValueAN3@averageValue,mapValue@value
 14740  00620E  C036  F024         	movff	Driver_Analog_GetValueAN3@averageValue+1,mapValue@value+1
 14741  006212  0E00               	movlw	0
 14742  006214  6E26               	movwf	(mapValue@inMin+1)^0,c
 14743  006216  0E00               	movlw	0
 14744  006218  6E25               	movwf	mapValue@inMin^0,c
 14745  00621A  0E03               	movlw	3
 14746  00621C  6E28               	movwf	(mapValue@inMax+1)^0,c
 14747  00621E  6827               	setf	mapValue@inMax^0,c
 14748  006220  0E00               	movlw	0
 14749  006222  6E2A               	movwf	(mapValue@outMin+1)^0,c
 14750  006224  0E00               	movlw	0
 14751  006226  6E29               	movwf	mapValue@outMin^0,c
 14752  006228  0E0F               	movlw	15
 14753  00622A  6E2C               	movwf	(mapValue@outMax+1)^0,c
 14754  00622C  682B               	setf	mapValue@outMax^0,c
 14755  00622E  EC50  F034         	call	_mapValue	;wreg free
 14756  006232  C023  F031         	movff	?_mapValue,?_Driver_Analog_GetValueAN3
 14757  006236  C024  F032         	movff	?_mapValue+1,?_Driver_Analog_GetValueAN3+1
 14758  00623A  0012               	return		;funcret
 14759  00623C                     __end_of_Driver_Analog_GetValueAN3:
 14760                           	callstack 0
 14761                           
 14762 ;; *************** function _Driver_Analog_GetValueAN1 *****************
 14763 ;; Defined at:
 14764 ;;		line 73 in file "Driver_Analog.c"
 14765 ;; Parameters:    Size  Location     Type
 14766 ;;		None
 14767 ;; Auto vars:     Size  Location     Type
 14768 ;;  i               1   58[COMRAM] unsigned char 
 14769 ;;  sum             4   54[COMRAM] unsigned long 
 14770 ;;  averageValue    2   52[COMRAM] unsigned short 
 14771 ;; Return value:  Size  Location     Type
 14772 ;;                  2   48[COMRAM] unsigned short 
 14773 ;; Registers used:
 14774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14775 ;; Tracked objects:
 14776 ;;		On entry : 0/0
 14777 ;;		On exit  : 0/0
 14778 ;;		Unchanged: 0/0
 14779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14780 ;;      Params:         2       0       0       0       0       0       0
 14781 ;;      Locals:         7       0       0       0       0       0       0
 14782 ;;      Temps:          2       0       0       0       0       0       0
 14783 ;;      Totals:        11       0       0       0       0       0       0
 14784 ;;Total ram usage:       11 bytes
 14785 ;; Hardware stack levels used: 1
 14786 ;; Hardware stack levels required when called: 6
 14787 ;; This function calls:
 14788 ;;		___lldiv
 14789 ;;		_mapValue
 14790 ;; This function is called by:
 14791 ;;		_App_HTAD_Home
 14792 ;;		_DirectNet_Run
 14793 ;; This function uses a non-reentrant model
 14794 ;;
 14795                           
 14796                           	psect	text67
 14797  00623C                     __ptext67:
 14798                           	callstack 0
 14799  00623C                     _Driver_Analog_GetValueAN1:
 14800                           	callstack 22
 14801  00623C                     
 14802                           ;Driver_Analog.c: 74:     uint32_t sum = 0;
 14803  00623C  0E00               	movlw	0
 14804  00623E  6E37               	movwf	Driver_Analog_GetValueAN1@sum^0,c
 14805  006240  0E00               	movlw	0
 14806  006242  6E38               	movwf	(Driver_Analog_GetValueAN1@sum+1)^0,c
 14807  006244  0E00               	movlw	0
 14808  006246  6E39               	movwf	(Driver_Analog_GetValueAN1@sum+2)^0,c
 14809  006248  0E00               	movlw	0
 14810  00624A  6E3A               	movwf	(Driver_Analog_GetValueAN1@sum+3)^0,c
 14811                           
 14812                           ;Driver_Analog.c: 75:     for (uint8_t i = 0; i < 10; i++) {
 14813  00624C  0E00               	movlw	0
 14814  00624E  6E3B               	movwf	Driver_Analog_GetValueAN1@i^0,c
 14815  006250                     l12916:
 14816                           
 14817                           ;Driver_Analog.c: 76:         sum += adc_values_an1[i];
 14818  006250  503B               	movf	Driver_Analog_GetValueAN1@i^0,w,c
 14819  006252  0D02               	mullw	2
 14820  006254  0E28               	movlw	low _adc_values_an1
 14821  006256  24F3               	addwf	243,w,c
 14822  006258  6ED9               	movwf	fsr2l,c
 14823  00625A  0E02               	movlw	high _adc_values_an1
 14824  00625C  20F4               	addwfc	prodh,w,c
 14825  00625E  6EDA               	movwf	fsr2h,c
 14826  006260  CFDE F033          	movff	postinc2,??_Driver_Analog_GetValueAN1
 14827  006264  CFDD F034          	movff	postdec2,??_Driver_Analog_GetValueAN1+1
 14828  006268  5033               	movf	??_Driver_Analog_GetValueAN1^0,w,c
 14829  00626A  2637               	addwf	Driver_Analog_GetValueAN1@sum^0,f,c
 14830  00626C  5034               	movf	(??_Driver_Analog_GetValueAN1+1)^0,w,c
 14831  00626E  2238               	addwfc	(Driver_Analog_GetValueAN1@sum+1)^0,f,c
 14832  006270  0E00               	movlw	0
 14833  006272  2239               	addwfc	(Driver_Analog_GetValueAN1@sum+2)^0,f,c
 14834  006274  0E00               	movlw	0
 14835  006276  223A               	addwfc	(Driver_Analog_GetValueAN1@sum+3)^0,f,c
 14836  006278                     
 14837                           ;Driver_Analog.c: 77:     }
 14838  006278  2A3B               	incf	Driver_Analog_GetValueAN1@i^0,f,c
 14839  00627A  0E09               	movlw	9
 14840  00627C  643B               	cpfsgt	Driver_Analog_GetValueAN1@i^0,c
 14841  00627E  EF43  F031         	goto	u13101
 14842  006282  EF45  F031         	goto	u13100
 14843  006286                     u13101:
 14844  006286  EF28  F031         	goto	l12916
 14845  00628A                     u13100:
 14846  00628A                     
 14847                           ;Driver_Analog.c: 78:     uint16_t averageValue = (uint16_t)(sum / 10);
 14848  00628A  C037  F016         	movff	Driver_Analog_GetValueAN1@sum,___lldiv@dividend
 14849  00628E  C038  F017         	movff	Driver_Analog_GetValueAN1@sum+1,___lldiv@dividend+1
 14850  006292  C039  F018         	movff	Driver_Analog_GetValueAN1@sum+2,___lldiv@dividend+2
 14851  006296  C03A  F019         	movff	Driver_Analog_GetValueAN1@sum+3,___lldiv@dividend+3
 14852  00629A  0E0A               	movlw	10
 14853  00629C  6E1A               	movwf	___lldiv@divisor^0,c
 14854  00629E  0E00               	movlw	0
 14855  0062A0  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 14856  0062A2  0E00               	movlw	0
 14857  0062A4  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 14858  0062A6  0E00               	movlw	0
 14859  0062A8  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 14860  0062AA  EC73  F032         	call	___lldiv	;wreg free
 14861  0062AE  C016  F035         	movff	?___lldiv,Driver_Analog_GetValueAN1@averageValue
 14862  0062B2  C017  F036         	movff	?___lldiv+1,Driver_Analog_GetValueAN1@averageValue+1
 14863                           
 14864                           ;Driver_Analog.c: 79:     return mapValue(averageValue, 0, 1023, 0, 4095);
 14865  0062B6  C035  F023         	movff	Driver_Analog_GetValueAN1@averageValue,mapValue@value
 14866  0062BA  C036  F024         	movff	Driver_Analog_GetValueAN1@averageValue+1,mapValue@value+1
 14867  0062BE  0E00               	movlw	0
 14868  0062C0  6E26               	movwf	(mapValue@inMin+1)^0,c
 14869  0062C2  0E00               	movlw	0
 14870  0062C4  6E25               	movwf	mapValue@inMin^0,c
 14871  0062C6  0E03               	movlw	3
 14872  0062C8  6E28               	movwf	(mapValue@inMax+1)^0,c
 14873  0062CA  6827               	setf	mapValue@inMax^0,c
 14874  0062CC  0E00               	movlw	0
 14875  0062CE  6E2A               	movwf	(mapValue@outMin+1)^0,c
 14876  0062D0  0E00               	movlw	0
 14877  0062D2  6E29               	movwf	mapValue@outMin^0,c
 14878  0062D4  0E0F               	movlw	15
 14879  0062D6  6E2C               	movwf	(mapValue@outMax+1)^0,c
 14880  0062D8  682B               	setf	mapValue@outMax^0,c
 14881  0062DA  EC50  F034         	call	_mapValue	;wreg free
 14882  0062DE  C023  F031         	movff	?_mapValue,?_Driver_Analog_GetValueAN1
 14883  0062E2  C024  F032         	movff	?_mapValue+1,?_Driver_Analog_GetValueAN1+1
 14884  0062E6  0012               	return		;funcret
 14885  0062E8                     __end_of_Driver_Analog_GetValueAN1:
 14886                           	callstack 0
 14887                           
 14888 ;; *************** function _Driver_Analog_GetValueAN0 *****************
 14889 ;; Defined at:
 14890 ;;		line 63 in file "Driver_Analog.c"
 14891 ;; Parameters:    Size  Location     Type
 14892 ;;		None
 14893 ;; Auto vars:     Size  Location     Type
 14894 ;;  i               1   58[COMRAM] unsigned char 
 14895 ;;  sum             4   54[COMRAM] unsigned long 
 14896 ;;  averageValue    2   52[COMRAM] unsigned short 
 14897 ;; Return value:  Size  Location     Type
 14898 ;;                  2   48[COMRAM] unsigned short 
 14899 ;; Registers used:
 14900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14901 ;; Tracked objects:
 14902 ;;		On entry : 0/0
 14903 ;;		On exit  : 0/0
 14904 ;;		Unchanged: 0/0
 14905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14906 ;;      Params:         2       0       0       0       0       0       0
 14907 ;;      Locals:         7       0       0       0       0       0       0
 14908 ;;      Temps:          2       0       0       0       0       0       0
 14909 ;;      Totals:        11       0       0       0       0       0       0
 14910 ;;Total ram usage:       11 bytes
 14911 ;; Hardware stack levels used: 1
 14912 ;; Hardware stack levels required when called: 6
 14913 ;; This function calls:
 14914 ;;		___lldiv
 14915 ;;		_mapValue
 14916 ;; This function is called by:
 14917 ;;		_App_HTAD_Home
 14918 ;;		_DirectNet_Run
 14919 ;; This function uses a non-reentrant model
 14920 ;;
 14921                           
 14922                           	psect	text68
 14923  0062E8                     __ptext68:
 14924                           	callstack 0
 14925  0062E8                     _Driver_Analog_GetValueAN0:
 14926                           	callstack 22
 14927  0062E8                     
 14928                           ;Driver_Analog.c: 64:     uint32_t sum = 0;
 14929  0062E8  0E00               	movlw	0
 14930  0062EA  6E37               	movwf	Driver_Analog_GetValueAN0@sum^0,c
 14931  0062EC  0E00               	movlw	0
 14932  0062EE  6E38               	movwf	(Driver_Analog_GetValueAN0@sum+1)^0,c
 14933  0062F0  0E00               	movlw	0
 14934  0062F2  6E39               	movwf	(Driver_Analog_GetValueAN0@sum+2)^0,c
 14935  0062F4  0E00               	movlw	0
 14936  0062F6  6E3A               	movwf	(Driver_Analog_GetValueAN0@sum+3)^0,c
 14937                           
 14938                           ;Driver_Analog.c: 65:     for (uint8_t i = 0; i < 10; i++) {
 14939  0062F8  0E00               	movlw	0
 14940  0062FA  6E3B               	movwf	Driver_Analog_GetValueAN0@i^0,c
 14941  0062FC                     l12900:
 14942                           
 14943                           ;Driver_Analog.c: 66:         sum += adc_values_an0[i];
 14944  0062FC  503B               	movf	Driver_Analog_GetValueAN0@i^0,w,c
 14945  0062FE  0D02               	mullw	2
 14946  006300  0E3C               	movlw	low _adc_values_an0
 14947  006302  24F3               	addwf	243,w,c
 14948  006304  6ED9               	movwf	fsr2l,c
 14949  006306  0E02               	movlw	high _adc_values_an0
 14950  006308  20F4               	addwfc	prodh,w,c
 14951  00630A  6EDA               	movwf	fsr2h,c
 14952  00630C  CFDE F033          	movff	postinc2,??_Driver_Analog_GetValueAN0
 14953  006310  CFDD F034          	movff	postdec2,??_Driver_Analog_GetValueAN0+1
 14954  006314  5033               	movf	??_Driver_Analog_GetValueAN0^0,w,c
 14955  006316  2637               	addwf	Driver_Analog_GetValueAN0@sum^0,f,c
 14956  006318  5034               	movf	(??_Driver_Analog_GetValueAN0+1)^0,w,c
 14957  00631A  2238               	addwfc	(Driver_Analog_GetValueAN0@sum+1)^0,f,c
 14958  00631C  0E00               	movlw	0
 14959  00631E  2239               	addwfc	(Driver_Analog_GetValueAN0@sum+2)^0,f,c
 14960  006320  0E00               	movlw	0
 14961  006322  223A               	addwfc	(Driver_Analog_GetValueAN0@sum+3)^0,f,c
 14962  006324                     
 14963                           ;Driver_Analog.c: 67:     }
 14964  006324  2A3B               	incf	Driver_Analog_GetValueAN0@i^0,f,c
 14965  006326  0E09               	movlw	9
 14966  006328  643B               	cpfsgt	Driver_Analog_GetValueAN0@i^0,c
 14967  00632A  EF99  F031         	goto	u13091
 14968  00632E  EF9B  F031         	goto	u13090
 14969  006332                     u13091:
 14970  006332  EF7E  F031         	goto	l12900
 14971  006336                     u13090:
 14972  006336                     
 14973                           ;Driver_Analog.c: 68:     uint16_t averageValue = (uint16_t)(sum / 10);
 14974  006336  C037  F016         	movff	Driver_Analog_GetValueAN0@sum,___lldiv@dividend
 14975  00633A  C038  F017         	movff	Driver_Analog_GetValueAN0@sum+1,___lldiv@dividend+1
 14976  00633E  C039  F018         	movff	Driver_Analog_GetValueAN0@sum+2,___lldiv@dividend+2
 14977  006342  C03A  F019         	movff	Driver_Analog_GetValueAN0@sum+3,___lldiv@dividend+3
 14978  006346  0E0A               	movlw	10
 14979  006348  6E1A               	movwf	___lldiv@divisor^0,c
 14980  00634A  0E00               	movlw	0
 14981  00634C  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 14982  00634E  0E00               	movlw	0
 14983  006350  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 14984  006352  0E00               	movlw	0
 14985  006354  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 14986  006356  EC73  F032         	call	___lldiv	;wreg free
 14987  00635A  C016  F035         	movff	?___lldiv,Driver_Analog_GetValueAN0@averageValue
 14988  00635E  C017  F036         	movff	?___lldiv+1,Driver_Analog_GetValueAN0@averageValue+1
 14989                           
 14990                           ;Driver_Analog.c: 69:     return mapValue(averageValue, 0, 1023, 0, 4095);
 14991  006362  C035  F023         	movff	Driver_Analog_GetValueAN0@averageValue,mapValue@value
 14992  006366  C036  F024         	movff	Driver_Analog_GetValueAN0@averageValue+1,mapValue@value+1
 14993  00636A  0E00               	movlw	0
 14994  00636C  6E26               	movwf	(mapValue@inMin+1)^0,c
 14995  00636E  0E00               	movlw	0
 14996  006370  6E25               	movwf	mapValue@inMin^0,c
 14997  006372  0E03               	movlw	3
 14998  006374  6E28               	movwf	(mapValue@inMax+1)^0,c
 14999  006376  6827               	setf	mapValue@inMax^0,c
 15000  006378  0E00               	movlw	0
 15001  00637A  6E2A               	movwf	(mapValue@outMin+1)^0,c
 15002  00637C  0E00               	movlw	0
 15003  00637E  6E29               	movwf	mapValue@outMin^0,c
 15004  006380  0E0F               	movlw	15
 15005  006382  6E2C               	movwf	(mapValue@outMax+1)^0,c
 15006  006384  682B               	setf	mapValue@outMax^0,c
 15007  006386  EC50  F034         	call	_mapValue	;wreg free
 15008  00638A  C023  F031         	movff	?_mapValue,?_Driver_Analog_GetValueAN0
 15009  00638E  C024  F032         	movff	?_mapValue+1,?_Driver_Analog_GetValueAN0+1
 15010  006392  0012               	return		;funcret
 15011  006394                     __end_of_Driver_Analog_GetValueAN0:
 15012                           	callstack 0
 15013                           
 15014 ;; *************** function _mapValue *****************
 15015 ;; Defined at:
 15016 ;;		line 18 in file "Driver_Analog.c"
 15017 ;; Parameters:    Size  Location     Type
 15018 ;;  value           2   34[COMRAM] unsigned short 
 15019 ;;  inMin           2   36[COMRAM] unsigned short 
 15020 ;;  inMax           2   38[COMRAM] unsigned short 
 15021 ;;  outMin          2   40[COMRAM] unsigned short 
 15022 ;;  outMax          2   42[COMRAM] unsigned short 
 15023 ;; Auto vars:     Size  Location     Type
 15024 ;;		None
 15025 ;; Return value:  Size  Location     Type
 15026 ;;                  2   34[COMRAM] unsigned short 
 15027 ;; Registers used:
 15028 ;;		wreg, status,2, status,0, cstack
 15029 ;; Tracked objects:
 15030 ;;		On entry : 0/0
 15031 ;;		On exit  : 0/0
 15032 ;;		Unchanged: 0/0
 15033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15034 ;;      Params:        10       0       0       0       0       0       0
 15035 ;;      Locals:         0       0       0       0       0       0       0
 15036 ;;      Temps:          4       0       0       0       0       0       0
 15037 ;;      Totals:        14       0       0       0       0       0       0
 15038 ;;Total ram usage:       14 bytes
 15039 ;; Hardware stack levels used: 1
 15040 ;; Hardware stack levels required when called: 5
 15041 ;; This function calls:
 15042 ;;		___lldiv
 15043 ;;		___lmul
 15044 ;; This function is called by:
 15045 ;;		_Driver_Analog_GetValueAN0
 15046 ;;		_Driver_Analog_GetValueAN1
 15047 ;;		_Driver_Analog_GetValueAN3
 15048 ;; This function uses a non-reentrant model
 15049 ;;
 15050                           
 15051                           	psect	text69
 15052  0068A0                     __ptext69:
 15053                           	callstack 0
 15054  0068A0                     _mapValue:
 15055                           	callstack 22
 15056  0068A0                     
 15057                           ;Driver_Analog.c: 19:     return (uint16_t)(((uint32_t)value - inMin) * (outMax - outMin
      +                          ) / (inMax - inMin) + outMin);
 15058  0068A0  5025               	movf	mapValue@inMin^0,w,c
 15059  0068A2  5C23               	subwf	mapValue@value^0,w,c
 15060  0068A4  6E0A               	movwf	___lmul@multiplier^0,c
 15061  0068A6  5026               	movf	(mapValue@inMin+1)^0,w,c
 15062  0068A8  5824               	subwfb	(mapValue@value+1)^0,w,c
 15063  0068AA  6E0B               	movwf	(___lmul@multiplier+1)^0,c
 15064  0068AC  6A0C               	clrf	(___lmul@multiplier+2)^0,c
 15065  0068AE  A0D8               	btfss	status,0,c
 15066  0068B0  060C               	decf	(___lmul@multiplier+2)^0,f,c
 15067  0068B2  500C               	movf	(___lmul@multiplier+2)^0,w,c
 15068  0068B4  6E0D               	movwf	(___lmul@multiplier+3)^0,c
 15069  0068B6  5029               	movf	mapValue@outMin^0,w,c
 15070  0068B8  5C2B               	subwf	mapValue@outMax^0,w,c
 15071  0068BA  6E2D               	movwf	??_mapValue^0,c
 15072  0068BC  502A               	movf	(mapValue@outMin+1)^0,w,c
 15073  0068BE  582C               	subwfb	(mapValue@outMax+1)^0,w,c
 15074  0068C0  6E2E               	movwf	(??_mapValue+1)^0,c
 15075  0068C2  C02D  F00E         	movff	??_mapValue,___lmul@multiplicand
 15076  0068C6  C02E  F00F         	movff	??_mapValue+1,___lmul@multiplicand+1
 15077  0068CA  6A10               	clrf	(___lmul@multiplicand+2)^0,c
 15078  0068CC  6A11               	clrf	(___lmul@multiplicand+3)^0,c
 15079  0068CE  ECF1  F034         	call	___lmul	;wreg free
 15080  0068D2  C00A  F016         	movff	?___lmul,___lldiv@dividend
 15081  0068D6  C00B  F017         	movff	?___lmul+1,___lldiv@dividend+1
 15082  0068DA  C00C  F018         	movff	?___lmul+2,___lldiv@dividend+2
 15083  0068DE  C00D  F019         	movff	?___lmul+3,___lldiv@dividend+3
 15084  0068E2  5025               	movf	mapValue@inMin^0,w,c
 15085  0068E4  5C27               	subwf	mapValue@inMax^0,w,c
 15086  0068E6  6E2F               	movwf	(??_mapValue+2)^0,c
 15087  0068E8  5026               	movf	(mapValue@inMin+1)^0,w,c
 15088  0068EA  5828               	subwfb	(mapValue@inMax+1)^0,w,c
 15089  0068EC  6E30               	movwf	(??_mapValue+3)^0,c
 15090  0068EE  C02F  F01A         	movff	??_mapValue+2,___lldiv@divisor
 15091  0068F2  C030  F01B         	movff	??_mapValue+3,___lldiv@divisor+1
 15092  0068F6  6A1C               	clrf	(___lldiv@divisor+2)^0,c
 15093  0068F8  6A1D               	clrf	(___lldiv@divisor+3)^0,c
 15094  0068FA  EC73  F032         	call	___lldiv	;wreg free
 15095  0068FE  5029               	movf	mapValue@outMin^0,w,c
 15096  006900  2416               	addwf	?___lldiv^0,w,c
 15097  006902  6E23               	movwf	?_mapValue^0,c
 15098  006904  502A               	movf	(mapValue@outMin+1)^0,w,c
 15099  006906  2017               	addwfc	(?___lldiv+1)^0,w,c
 15100  006908  6E24               	movwf	(?_mapValue+1)^0,c
 15101  00690A  0012               	return		;funcret
 15102  00690C                     __end_of_mapValue:
 15103                           	callstack 0
 15104                           
 15105 ;; *************** function ___lmul *****************
 15106 ;; Defined at:
 15107 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
 15108 ;; Parameters:    Size  Location     Type
 15109 ;;  multiplier      4    9[COMRAM] unsigned long 
 15110 ;;  multiplicand    4   13[COMRAM] unsigned long 
 15111 ;; Auto vars:     Size  Location     Type
 15112 ;;  product         4   17[COMRAM] unsigned long 
 15113 ;; Return value:  Size  Location     Type
 15114 ;;                  4    9[COMRAM] unsigned long 
 15115 ;; Registers used:
 15116 ;;		wreg, status,2, status,0
 15117 ;; Tracked objects:
 15118 ;;		On entry : 0/0
 15119 ;;		On exit  : 0/0
 15120 ;;		Unchanged: 0/0
 15121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15122 ;;      Params:         8       0       0       0       0       0       0
 15123 ;;      Locals:         4       0       0       0       0       0       0
 15124 ;;      Temps:          0       0       0       0       0       0       0
 15125 ;;      Totals:        12       0       0       0       0       0       0
 15126 ;;Total ram usage:       12 bytes
 15127 ;; Hardware stack levels used: 1
 15128 ;; Hardware stack levels required when called: 4
 15129 ;; This function calls:
 15130 ;;		Nothing
 15131 ;; This function is called by:
 15132 ;;		_mapValue
 15133 ;; This function uses a non-reentrant model
 15134 ;;
 15135                           
 15136                           	psect	text70
 15137  0069E2                     __ptext70:
 15138                           	callstack 0
 15139  0069E2                     ___lmul:
 15140                           	callstack 22
 15141  0069E2  0E00               	movlw	0
 15142  0069E4  6E12               	movwf	___lmul@product^0,c
 15143  0069E6  0E00               	movlw	0
 15144  0069E8  6E13               	movwf	(___lmul@product+1)^0,c
 15145  0069EA  0E00               	movlw	0
 15146  0069EC  6E14               	movwf	(___lmul@product+2)^0,c
 15147  0069EE  0E00               	movlw	0
 15148  0069F0  6E15               	movwf	(___lmul@product+3)^0,c
 15149  0069F2                     l8690:
 15150  0069F2  A00A               	btfss	___lmul@multiplier^0,0,c
 15151  0069F4  EFFE  F034         	goto	u7821
 15152  0069F8  EF00  F035         	goto	u7820
 15153  0069FC                     u7821:
 15154  0069FC  EF08  F035         	goto	l8694
 15155  006A00                     u7820:
 15156  006A00  500E               	movf	___lmul@multiplicand^0,w,c
 15157  006A02  2612               	addwf	___lmul@product^0,f,c
 15158  006A04  500F               	movf	(___lmul@multiplicand+1)^0,w,c
 15159  006A06  2213               	addwfc	(___lmul@product+1)^0,f,c
 15160  006A08  5010               	movf	(___lmul@multiplicand+2)^0,w,c
 15161  006A0A  2214               	addwfc	(___lmul@product+2)^0,f,c
 15162  006A0C  5011               	movf	(___lmul@multiplicand+3)^0,w,c
 15163  006A0E  2215               	addwfc	(___lmul@product+3)^0,f,c
 15164  006A10                     l8694:
 15165  006A10  90D8               	bcf	status,0,c
 15166  006A12  360E               	rlcf	___lmul@multiplicand^0,f,c
 15167  006A14  360F               	rlcf	(___lmul@multiplicand+1)^0,f,c
 15168  006A16  3610               	rlcf	(___lmul@multiplicand+2)^0,f,c
 15169  006A18  3611               	rlcf	(___lmul@multiplicand+3)^0,f,c
 15170  006A1A  90D8               	bcf	status,0,c
 15171  006A1C  320D               	rrcf	(___lmul@multiplier+3)^0,f,c
 15172  006A1E  320C               	rrcf	(___lmul@multiplier+2)^0,f,c
 15173  006A20  320B               	rrcf	(___lmul@multiplier+1)^0,f,c
 15174  006A22  320A               	rrcf	___lmul@multiplier^0,f,c
 15175  006A24  500A               	movf	___lmul@multiplier^0,w,c
 15176  006A26  100B               	iorwf	(___lmul@multiplier+1)^0,w,c
 15177  006A28  100C               	iorwf	(___lmul@multiplier+2)^0,w,c
 15178  006A2A  100D               	iorwf	(___lmul@multiplier+3)^0,w,c
 15179  006A2C  A4D8               	btfss	status,2,c
 15180  006A2E  EF1B  F035         	goto	u7831
 15181  006A32  EF1D  F035         	goto	u7830
 15182  006A36                     u7831:
 15183  006A36  EFF9  F034         	goto	l8690
 15184  006A3A                     u7830:
 15185  006A3A  C012  F00A         	movff	___lmul@product,?___lmul
 15186  006A3E  C013  F00B         	movff	___lmul@product+1,?___lmul+1
 15187  006A42  C014  F00C         	movff	___lmul@product+2,?___lmul+2
 15188  006A46  C015  F00D         	movff	___lmul@product+3,?___lmul+3
 15189  006A4A  0012               	return		;funcret
 15190  006A4C                     __end_of___lmul:
 15191                           	callstack 0
 15192                           
 15193 ;; *************** function _App_HTAD_init *****************
 15194 ;; Defined at:
 15195 ;;		line 67 in file "App_HTAD.c"
 15196 ;; Parameters:    Size  Location     Type
 15197 ;;		None
 15198 ;; Auto vars:     Size  Location     Type
 15199 ;;		None
 15200 ;; Return value:  Size  Location     Type
 15201 ;;                  1    wreg      void 
 15202 ;; Registers used:
 15203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15204 ;; Tracked objects:
 15205 ;;		On entry : 0/0
 15206 ;;		On exit  : 0/0
 15207 ;;		Unchanged: 0/0
 15208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15209 ;;      Params:         0       0       0       0       0       0       0
 15210 ;;      Locals:         0       0       0       0       0       0       0
 15211 ;;      Temps:          0       0       0       0       0       0       0
 15212 ;;      Totals:         0       0       0       0       0       0       0
 15213 ;;Total ram usage:        0 bytes
 15214 ;; Hardware stack levels used: 1
 15215 ;; Hardware stack levels required when called: 16
 15216 ;; This function calls:
 15217 ;;		_DRV_LCD_Clear
 15218 ;;		_DirectNet_Init
 15219 ;;		_Driver_Analog_Init
 15220 ;;		_SRV_ADT7410_Init
 15221 ;;		_SRV_ADT7410_SetErrorSensor
 15222 ;;		_SRV_Display_Init
 15223 ;;		_SRV_TIMER_Init
 15224 ;;		_TMR0_Initialize
 15225 ;;		_lerDadosDaEEPROM
 15226 ;; This function is called by:
 15227 ;;		_main
 15228 ;; This function uses a non-reentrant model
 15229 ;;
 15230                           
 15231                           	psect	text71
 15232  006830                     __ptext71:
 15233                           	callstack 0
 15234  006830                     _App_HTAD_init:
 15235                           	callstack 14
 15236  006830                     
 15237                           ;App_HTAD.c: 70:     SRV_Display_Init();
 15238  006830  EC7E  F03A         	call	_SRV_Display_Init	;wreg free
 15239  006834                     
 15240                           ;App_HTAD.c: 71:     SRV_ADT7410_Init();
 15241  006834  EC04  F027         	call	_SRV_ADT7410_Init	;wreg free
 15242  006838                     
 15243                           ;App_HTAD.c: 72:     TMR0_Initialize();
 15244  006838  EC5A  F039         	call	_TMR0_Initialize	;wreg free
 15245  00683C                     
 15246                           ;App_HTAD.c: 73:     SRV_TIMER_Init();
 15247  00683C  ECDF  F03A         	call	_SRV_TIMER_Init	;wreg free
 15248  006840                     
 15249                           ;App_HTAD.c: 74:     DRV_LCD_Clear();
 15250  006840  ECEB  F03A         	call	_DRV_LCD_Clear	;wreg free
 15251  006844                     
 15252                           ;App_HTAD.c: 75:     Driver_Analog_Init();
 15253  006844  EC7A  F03B         	call	_Driver_Analog_Init	;wreg free
 15254  006848                     
 15255                           ;App_HTAD.c: 76:     DirectNet_Init();
 15256  006848  EC02  F03C         	call	_DirectNet_Init	;wreg free
 15257  00684C                     
 15258                           ;App_HTAD.c: 77:     stateHTAD = HOME;
 15259  00684C  0E00               	movlw	0
 15260  00684E  0101               	movlb	1	; () banked
 15261  006850  6FAD               	movwf	_stateHTAD& (0+255),b
 15262  006852                     
 15263                           ; BSR set to: 1
 15264                           ;App_HTAD.c: 78:     mchStateHTAD[HOME] = App_HTAD_Home;
 15265  006852  0E22               	movlw	low _App_HTAD_Home
 15266  006854  0103               	movlb	3	; () banked
 15267  006856  6FC8               	movwf	_mchStateHTAD& (0+255),b
 15268  006858  0E33               	movlw	high _App_HTAD_Home
 15269  00685A  6FC9               	movwf	(_mchStateHTAD+1)& (0+255),b
 15270  00685C                     
 15271                           ; BSR set to: 3
 15272                           ;App_HTAD.c: 79:     mchStateHTAD[MenuAjusteErro] = App_HTAD_MenuAjusteErro;
 15273  00685C  0EC0               	movlw	low _App_HTAD_MenuAjusteErro
 15274  00685E  6FCA               	movwf	(_mchStateHTAD+2)& (0+255),b
 15275  006860  0E28               	movlw	high _App_HTAD_MenuAjusteErro
 15276  006862  6FCB               	movwf	(_mchStateHTAD+3)& (0+255),b
 15277  006864                     
 15278                           ; BSR set to: 3
 15279                           ;App_HTAD.c: 81:     lerDadosDaEEPROM();
 15280  006864  ECC5  F032         	call	_lerDadosDaEEPROM	;wreg free
 15281  006868                     
 15282                           ;App_HTAD.c: 83:     PIE1bits.RC1IE = 1;
 15283  006868  8A9D               	bsf	157,5,c	;volatile
 15284  00686A                     
 15285                           ;App_HTAD.c: 84:     INTCONbits.PEIE = 1;
 15286  00686A  8CF2               	bsf	242,6,c	;volatile
 15287  00686C                     
 15288                           ;App_HTAD.c: 85:     INTCONbits.GIE = 1;
 15289  00686C  8EF2               	bsf	242,7,c	;volatile
 15290  00686E                     
 15291                           ;App_HTAD.c: 87:     SRV_ADT7410_SetErrorSensor(1,ObjetoHTAD.erroSensorS1.positivo,Objet
      +                          oHTAD.erroSensorS1.negativo);
 15292  00686E  C2B3  F00A         	movff	_ObjetoHTAD+19,SRV_ADT7410_SetErrorSensor@error_pos
 15293  006872  C2B2  F00B         	movff	_ObjetoHTAD+18,SRV_ADT7410_SetErrorSensor@error_neg
 15294  006876  0E01               	movlw	1
 15295  006878  EC70  F036         	call	_SRV_ADT7410_SetErrorSensor
 15296  00687C                     
 15297                           ;App_HTAD.c: 88:     SRV_ADT7410_SetErrorSensor(2,ObjetoHTAD.erroSensorS2.positivo,Objet
      +                          oHTAD.erroSensorS2.negativo);
 15298  00687C  C2B5  F00A         	movff	_ObjetoHTAD+21,SRV_ADT7410_SetErrorSensor@error_pos
 15299  006880  C2B4  F00B         	movff	_ObjetoHTAD+20,SRV_ADT7410_SetErrorSensor@error_neg
 15300  006884  0E02               	movlw	2
 15301  006886  EC70  F036         	call	_SRV_ADT7410_SetErrorSensor
 15302  00688A                     
 15303                           ;App_HTAD.c: 89:     SRV_ADT7410_SetErrorSensor(3,ObjetoHTAD.erroSensorS2.positivo,Objet
      +                          oHTAD.erroSensorS3.negativo);
 15304  00688A  C2B5  F00A         	movff	_ObjetoHTAD+21,SRV_ADT7410_SetErrorSensor@error_pos
 15305  00688E  C2B6  F00B         	movff	_ObjetoHTAD+22,SRV_ADT7410_SetErrorSensor@error_neg
 15306  006892  0E03               	movlw	3
 15307  006894  EC70  F036         	call	_SRV_ADT7410_SetErrorSensor
 15308  006898                     
 15309                           ;App_HTAD.c: 91:     ObjetoHTAD.ResetWDT = 0;
 15310  006898  0E00               	movlw	0
 15311  00689A  0102               	movlb	2	; () banked
 15312  00689C  6FBA               	movwf	(_ObjetoHTAD+26)& (0+255),b
 15313  00689E                     
 15314                           ; BSR set to: 2
 15315  00689E  0012               	return		;funcret
 15316  0068A0                     __end_of_App_HTAD_init:
 15317                           	callstack 0
 15318                           
 15319 ;; *************** function _lerDadosDaEEPROM *****************
 15320 ;; Defined at:
 15321 ;;		line 38 in file "App_HTAD.c"
 15322 ;; Parameters:    Size  Location     Type
 15323 ;;		None
 15324 ;; Auto vars:     Size  Location     Type
 15325 ;;  i               2   12[COMRAM] int 
 15326 ;;  enderecoEEPR    1   14[COMRAM] unsigned char 
 15327 ;; Return value:  Size  Location     Type
 15328 ;;                  1    wreg      void 
 15329 ;; Registers used:
 15330 ;;		wreg, status,2, status,0, cstack
 15331 ;; Tracked objects:
 15332 ;;		On entry : 0/0
 15333 ;;		On exit  : 0/0
 15334 ;;		Unchanged: 0/0
 15335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15336 ;;      Params:         0       0       0       0       0       0       0
 15337 ;;      Locals:         3       0       0       0       0       0       0
 15338 ;;      Temps:          0       0       0       0       0       0       0
 15339 ;;      Totals:         3       0       0       0       0       0       0
 15340 ;;Total ram usage:        3 bytes
 15341 ;; Hardware stack levels used: 1
 15342 ;; Hardware stack levels required when called: 5
 15343 ;; This function calls:
 15344 ;;		_DATAEE_ReadByte
 15345 ;;		_DATAEE_WriteByte
 15346 ;; This function is called by:
 15347 ;;		_App_HTAD_init
 15348 ;;		_App_HTAD_MenuAjusteErro
 15349 ;; This function uses a non-reentrant model
 15350 ;;
 15351                           
 15352                           	psect	text72
 15353  00658A                     __ptext72:
 15354                           	callstack 0
 15355  00658A                     _lerDadosDaEEPROM:
 15356                           	callstack 23
 15357  00658A                     
 15358                           ;App_HTAD.c: 41:     uint8_t enderecoEEPROM = 0x01;
 15359  00658A  0E01               	movlw	1
 15360  00658C  6E0F               	movwf	lerDadosDaEEPROM@enderecoEEPROM^0,c
 15361  00658E                     
 15362                           ;App_HTAD.c: 43:     if(DATAEE_ReadByte(0x00) == 0xFF){
 15363  00658E  0E00               	movlw	0
 15364  006590  EC45  F03B         	call	_DATAEE_ReadByte
 15365  006594  0AFF               	xorlw	255
 15366  006596  A4D8               	btfss	status,2,c
 15367  006598  EFD0  F032         	goto	u8381
 15368  00659C  EFD2  F032         	goto	u8380
 15369  0065A0                     u8381:
 15370  0065A0  EFEB  F032         	goto	l9160
 15371  0065A4                     u8380:
 15372  0065A4                     
 15373                           ;App_HTAD.c: 44:          int i;;App_HTAD.c: 45:         for (i = 0; i < 10; i++) {
 15374  0065A4  0E00               	movlw	0
 15375  0065A6  6E0E               	movwf	(lerDadosDaEEPROM@i+1)^0,c
 15376  0065A8  0E00               	movlw	0
 15377  0065AA  6E0D               	movwf	lerDadosDaEEPROM@i^0,c
 15378  0065AC                     l9154:
 15379                           
 15380                           ;App_HTAD.c: 46:             DATAEE_WriteByte(0x00+i,0);
 15381  0065AC  0E00               	movlw	0
 15382  0065AE  6E0A               	movwf	DATAEE_WriteByte@bData^0,c
 15383  0065B0  500D               	movf	lerDadosDaEEPROM@i^0,w,c
 15384  0065B2  EC34  F038         	call	_DATAEE_WriteByte
 15385  0065B6                     
 15386                           ;App_HTAD.c: 47:         }
 15387  0065B6  4A0D               	infsnz	lerDadosDaEEPROM@i^0,f,c
 15388  0065B8  2A0E               	incf	(lerDadosDaEEPROM@i+1)^0,f,c
 15389  0065BA  BE0E               	btfsc	(lerDadosDaEEPROM@i+1)^0,7,c
 15390  0065BC  EFE9  F032         	goto	u8391
 15391  0065C0  500E               	movf	(lerDadosDaEEPROM@i+1)^0,w,c
 15392  0065C2  E109               	bnz	u8390
 15393  0065C4  0E0A               	movlw	10
 15394  0065C6  5C0D               	subwf	lerDadosDaEEPROM@i^0,w,c
 15395  0065C8  A0D8               	btfss	status,0,c
 15396  0065CA  EFE9  F032         	goto	u8391
 15397  0065CE  EFEB  F032         	goto	u8390
 15398  0065D2                     u8391:
 15399  0065D2  EFD6  F032         	goto	l9154
 15400  0065D6                     u8390:
 15401  0065D6                     l9160:
 15402                           
 15403                           ;App_HTAD.c: 50:     ObjetoHTAD.erroSensorS1.positivo = DATAEE_ReadByte(enderecoEEPROM++
      +                          );
 15404  0065D6  500F               	movf	lerDadosDaEEPROM@enderecoEEPROM^0,w,c
 15405  0065D8  EC45  F03B         	call	_DATAEE_ReadByte
 15406  0065DC  0102               	movlb	2	; () banked
 15407  0065DE  6FB3               	movwf	(_ObjetoHTAD+19)& (0+255),b
 15408  0065E0                     
 15409                           ; BSR set to: 2
 15410  0065E0  2A0F               	incf	lerDadosDaEEPROM@enderecoEEPROM^0,f,c
 15411  0065E2                     
 15412                           ; BSR set to: 2
 15413                           ;App_HTAD.c: 51:     ObjetoHTAD.erroSensorS1.negativo = DATAEE_ReadByte(enderecoEEPROM++
      +                          );
 15414  0065E2  500F               	movf	lerDadosDaEEPROM@enderecoEEPROM^0,w,c
 15415  0065E4  EC45  F03B         	call	_DATAEE_ReadByte
 15416  0065E8  0102               	movlb	2	; () banked
 15417  0065EA  6FB2               	movwf	(_ObjetoHTAD+18)& (0+255),b
 15418  0065EC  2A0F               	incf	lerDadosDaEEPROM@enderecoEEPROM^0,f,c
 15419  0065EE                     
 15420                           ; BSR set to: 2
 15421                           ;App_HTAD.c: 52:     ObjetoHTAD.erroSensorS2.positivo = DATAEE_ReadByte(enderecoEEPROM++
      +                          );
 15422  0065EE  500F               	movf	lerDadosDaEEPROM@enderecoEEPROM^0,w,c
 15423  0065F0  EC45  F03B         	call	_DATAEE_ReadByte
 15424  0065F4  0102               	movlb	2	; () banked
 15425  0065F6  6FB5               	movwf	(_ObjetoHTAD+21)& (0+255),b
 15426  0065F8                     
 15427                           ; BSR set to: 2
 15428  0065F8  2A0F               	incf	lerDadosDaEEPROM@enderecoEEPROM^0,f,c
 15429                           
 15430                           ;App_HTAD.c: 53:     ObjetoHTAD.erroSensorS2.negativo = DATAEE_ReadByte(enderecoEEPROM++
      +                          );
 15431  0065FA  500F               	movf	lerDadosDaEEPROM@enderecoEEPROM^0,w,c
 15432  0065FC  EC45  F03B         	call	_DATAEE_ReadByte
 15433  006600  0102               	movlb	2	; () banked
 15434  006602  6FB4               	movwf	(_ObjetoHTAD+20)& (0+255),b
 15435  006604                     
 15436                           ; BSR set to: 2
 15437  006604  2A0F               	incf	lerDadosDaEEPROM@enderecoEEPROM^0,f,c
 15438  006606                     
 15439                           ; BSR set to: 2
 15440                           ;App_HTAD.c: 54:     ObjetoHTAD.erroSensorS3.positivo = DATAEE_ReadByte(enderecoEEPROM++
      +                          );
 15441  006606  500F               	movf	lerDadosDaEEPROM@enderecoEEPROM^0,w,c
 15442  006608  EC45  F03B         	call	_DATAEE_ReadByte
 15443  00660C  0102               	movlb	2	; () banked
 15444  00660E  6FB7               	movwf	(_ObjetoHTAD+23)& (0+255),b
 15445  006610  2A0F               	incf	lerDadosDaEEPROM@enderecoEEPROM^0,f,c
 15446  006612                     
 15447                           ; BSR set to: 2
 15448                           ;App_HTAD.c: 55:     ObjetoHTAD.erroSensorS3.negativo = DATAEE_ReadByte(enderecoEEPROM++
      +                          );
 15449  006612  500F               	movf	lerDadosDaEEPROM@enderecoEEPROM^0,w,c
 15450  006614  EC45  F03B         	call	_DATAEE_ReadByte
 15451  006618  0102               	movlb	2	; () banked
 15452  00661A  6FB6               	movwf	(_ObjetoHTAD+22)& (0+255),b
 15453  00661C                     
 15454                           ; BSR set to: 2
 15455  00661C  2A0F               	incf	lerDadosDaEEPROM@enderecoEEPROM^0,f,c
 15456  00661E                     
 15457                           ; BSR set to: 2
 15458  00661E  0012               	return		;funcret
 15459  006620                     __end_of_lerDadosDaEEPROM:
 15460                           	callstack 0
 15461                           
 15462 ;; *************** function _DATAEE_WriteByte *****************
 15463 ;; Defined at:
 15464 ;;		line 176 in file "mcc_generated_files/memory.c"
 15465 ;; Parameters:    Size  Location     Type
 15466 ;;  bAdd            1    wreg     unsigned char 
 15467 ;;  bData           1    9[COMRAM] unsigned char 
 15468 ;; Auto vars:     Size  Location     Type
 15469 ;;  bAdd            1   10[COMRAM] unsigned char 
 15470 ;;  GIEBitValue     1   11[COMRAM] unsigned char 
 15471 ;; Return value:  Size  Location     Type
 15472 ;;                  1    wreg      void 
 15473 ;; Registers used:
 15474 ;;		wreg, status,2
 15475 ;; Tracked objects:
 15476 ;;		On entry : 0/0
 15477 ;;		On exit  : 0/0
 15478 ;;		Unchanged: 0/0
 15479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15480 ;;      Params:         1       0       0       0       0       0       0
 15481 ;;      Locals:         2       0       0       0       0       0       0
 15482 ;;      Temps:          0       0       0       0       0       0       0
 15483 ;;      Totals:         3       0       0       0       0       0       0
 15484 ;;Total ram usage:        3 bytes
 15485 ;; Hardware stack levels used: 1
 15486 ;; Hardware stack levels required when called: 4
 15487 ;; This function calls:
 15488 ;;		Nothing
 15489 ;; This function is called by:
 15490 ;;		_gravarDadosNaEEPROM
 15491 ;;		_lerDadosDaEEPROM
 15492 ;; This function uses a non-reentrant model
 15493 ;;
 15494                           
 15495                           	psect	text73
 15496  007068                     __ptext73:
 15497                           	callstack 0
 15498  007068                     _DATAEE_WriteByte:
 15499                           	callstack 23
 15500                           
 15501                           ; BSR set to: 2
 15502                           ;incstack = 0
 15503                           ;DATAEE_WriteByte@bAdd stored from wreg
 15504  007068  6E0B               	movwf	DATAEE_WriteByte@bAdd^0,c
 15505  00706A                     
 15506                           ;mcc_generated_files/memory.c: 176: void DATAEE_WriteByte(uint8_t bAdd, uint8_t bData);m
      +                          cc_generated_files/memory.c: 177: {;mcc_generated_files/memory.c: 178:     uint8_t GIEBi
      +                          tValue = INTCONbits.GIE;
 15507  00706A  0E00               	movlw	0
 15508  00706C  BEF2               	btfsc	242,7,c	;volatile
 15509  00706E  0E01               	movlw	1
 15510  007070  6E0C               	movwf	DATAEE_WriteByte@GIEBitValue^0,c
 15511  007072                     
 15512                           ;mcc_generated_files/memory.c: 180:     EEADR = (uint8_t)(bAdd & 0xFF);
 15513  007072  C00B  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
 15514  007076                     
 15515                           ;mcc_generated_files/memory.c: 181:     EEDATA = bData;
 15516  007076  C00A  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
 15517  00707A                     
 15518                           ;mcc_generated_files/memory.c: 182:     EECON1bits.EEPGD = 0;
 15519  00707A  9EA6               	bcf	166,7,c	;volsfr
 15520  00707C                     
 15521                           ;mcc_generated_files/memory.c: 183:     EECON1bits.CFGS = 0;
 15522  00707C  9CA6               	bcf	166,6,c	;volsfr
 15523  00707E                     
 15524                           ;mcc_generated_files/memory.c: 184:     EECON1bits.WREN = 1;
 15525  00707E  84A6               	bsf	166,2,c	;volsfr
 15526  007080                     
 15527                           ;mcc_generated_files/memory.c: 185:     INTCONbits.GIE = 0;
 15528  007080  9EF2               	bcf	242,7,c	;volatile
 15529  007082                     
 15530                           ;mcc_generated_files/memory.c: 186:     EECON2 = 0x55;
 15531  007082  0E55               	movlw	85
 15532  007084  6EA7               	movwf	167,c	;volsfr
 15533  007086                     
 15534                           ;mcc_generated_files/memory.c: 187:     EECON2 = 0xAA;
 15535  007086  0EAA               	movlw	170
 15536  007088  6EA7               	movwf	167,c	;volsfr
 15537  00708A                     
 15538                           ;mcc_generated_files/memory.c: 188:     EECON1bits.WR = 1;
 15539  00708A  82A6               	bsf	166,1,c	;volsfr
 15540  00708C                     l329:
 15541                           
 15542                           ;mcc_generated_files/memory.c: 190:     while (EECON1bits.WR)
 15543  00708C  B2A6               	btfsc	166,1,c	;volsfr
 15544  00708E  EF4B  F038         	goto	u8111
 15545  007092  EF4D  F038         	goto	u8110
 15546  007096                     u8111:
 15547  007096  EF46  F038         	goto	l329
 15548  00709A                     u8110:
 15549  00709A                     
 15550                           ;mcc_generated_files/memory.c: 194:     EECON1bits.WREN = 0;
 15551  00709A  94A6               	bcf	166,2,c	;volsfr
 15552                           
 15553                           ;mcc_generated_files/memory.c: 195:     INTCONbits.GIE = GIEBitValue;
 15554  00709C  B00C               	btfsc	DATAEE_WriteByte@GIEBitValue^0,0,c
 15555  00709E  D002               	bra	u8125
 15556  0070A0  9EF2               	bcf	242,7,c	;volatile
 15557  0070A2  D001               	bra	u8126
 15558  0070A4                     u8125:
 15559  0070A4  8EF2               	bsf	242,7,c	;volatile
 15560  0070A6                     u8126:
 15561  0070A6  0012               	return		;funcret
 15562  0070A8                     __end_of_DATAEE_WriteByte:
 15563                           	callstack 0
 15564                           
 15565 ;; *************** function _DATAEE_ReadByte *****************
 15566 ;; Defined at:
 15567 ;;		line 198 in file "mcc_generated_files/memory.c"
 15568 ;; Parameters:    Size  Location     Type
 15569 ;;  bAdd            1    wreg     unsigned char 
 15570 ;; Auto vars:     Size  Location     Type
 15571 ;;  bAdd            1    9[COMRAM] unsigned char 
 15572 ;; Return value:  Size  Location     Type
 15573 ;;                  1    wreg      unsigned char 
 15574 ;; Registers used:
 15575 ;;		wreg, status,2
 15576 ;; Tracked objects:
 15577 ;;		On entry : 0/0
 15578 ;;		On exit  : 0/0
 15579 ;;		Unchanged: 0/0
 15580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15581 ;;      Params:         0       0       0       0       0       0       0
 15582 ;;      Locals:         1       0       0       0       0       0       0
 15583 ;;      Temps:          0       0       0       0       0       0       0
 15584 ;;      Totals:         1       0       0       0       0       0       0
 15585 ;;Total ram usage:        1 bytes
 15586 ;; Hardware stack levels used: 1
 15587 ;; Hardware stack levels required when called: 4
 15588 ;; This function calls:
 15589 ;;		Nothing
 15590 ;; This function is called by:
 15591 ;;		_lerDadosDaEEPROM
 15592 ;; This function uses a non-reentrant model
 15593 ;;
 15594                           
 15595                           	psect	text74
 15596  00768A                     __ptext74:
 15597                           	callstack 0
 15598  00768A                     _DATAEE_ReadByte:
 15599                           	callstack 23
 15600                           
 15601                           ;incstack = 0
 15602                           ;DATAEE_ReadByte@bAdd stored from wreg
 15603  00768A  6E0A               	movwf	DATAEE_ReadByte@bAdd^0,c
 15604  00768C                     
 15605                           ;mcc_generated_files/memory.c: 198: uint8_t DATAEE_ReadByte(uint8_t bAdd);mcc_generated_
      +                          files/memory.c: 199: {;mcc_generated_files/memory.c: 200:     EEADR = (uint8_t)(bAdd & 0
      +                          xFF);
 15606  00768C  C00A  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
 15607  007690                     
 15608                           ;mcc_generated_files/memory.c: 201:     EECON1bits.CFGS = 0;
 15609  007690  9CA6               	bcf	166,6,c	;volsfr
 15610  007692                     
 15611                           ;mcc_generated_files/memory.c: 202:     EECON1bits.EEPGD = 0;
 15612  007692  9EA6               	bcf	166,7,c	;volsfr
 15613  007694                     
 15614                           ;mcc_generated_files/memory.c: 203:     EECON1bits.RD = 1;
 15615  007694  80A6               	bsf	166,0,c	;volsfr
 15616  007696                     
 15617                           ;mcc_generated_files/memory.c: 204:     __nop();
 15618  007696  F000               	nop	
 15619  007698                     
 15620                           ;mcc_generated_files/memory.c: 205:     __nop();
 15621  007698  F000               	nop	
 15622  00769A                     
 15623                           ;mcc_generated_files/memory.c: 207:     return (EEDATA);
 15624  00769A  50A8               	movf	168,w,c	;volatile
 15625  00769C  0012               	return		;funcret
 15626  00769E                     __end_of_DATAEE_ReadByte:
 15627                           	callstack 0
 15628                           
 15629 ;; *************** function _TMR0_Initialize *****************
 15630 ;; Defined at:
 15631 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 15632 ;; Parameters:    Size  Location     Type
 15633 ;;		None
 15634 ;; Auto vars:     Size  Location     Type
 15635 ;;		None
 15636 ;; Return value:  Size  Location     Type
 15637 ;;                  1    wreg      void 
 15638 ;; Registers used:
 15639 ;;		wreg, status,2, status,0, cstack
 15640 ;; Tracked objects:
 15641 ;;		On entry : 0/0
 15642 ;;		On exit  : 0/0
 15643 ;;		Unchanged: 0/0
 15644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15645 ;;      Params:         0       0       0       0       0       0       0
 15646 ;;      Locals:         0       0       0       0       0       0       0
 15647 ;;      Temps:          2       0       0       0       0       0       0
 15648 ;;      Totals:         2       0       0       0       0       0       0
 15649 ;;Total ram usage:        2 bytes
 15650 ;; Hardware stack levels used: 1
 15651 ;; Hardware stack levels required when called: 5
 15652 ;; This function calls:
 15653 ;;		_TMR0_SetInterruptHandler
 15654 ;; This function is called by:
 15655 ;;		_SYSTEM_Initialize
 15656 ;;		_App_HTAD_init
 15657 ;; This function uses a non-reentrant model
 15658 ;;
 15659                           
 15660                           	psect	text75
 15661  0072B4                     __ptext75:
 15662                           	callstack 0
 15663  0072B4                     _TMR0_Initialize:
 15664                           	callstack 24
 15665  0072B4                     
 15666                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
 15667  0072B4  9CD5               	bcf	213,6,c	;volatile
 15668  0072B6                     
 15669                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0xD8;
 15670  0072B6  0ED8               	movlw	216
 15671  0072B8  6ED7               	movwf	215,c	;volatile
 15672                           
 15673                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0xEF;
 15674  0072BA  0EEF               	movlw	239
 15675  0072BC  6ED6               	movwf	214,c	;volatile
 15676  0072BE                     
 15677                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
 15678  0072BE  50D6               	movf	214,w,c	;volatile
 15679  0072C0  CFD7 F00C          	movff	4055,??_TMR0_Initialize	;volatile
 15680  0072C4  6A0D               	clrf	(??_TMR0_Initialize+1)^0,c
 15681  0072C6  C00C  F00D         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 15682  0072CA  6A0C               	clrf	??_TMR0_Initialize^0,c
 15683  0072CC  100C               	iorwf	??_TMR0_Initialize^0,w,c
 15684  0072CE  6E51               	movwf	_timer0ReloadVal^0,c	;volatile
 15685  0072D0  500D               	movf	(??_TMR0_Initialize+1)^0,w,c
 15686  0072D2  6E52               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
 15687  0072D4                     
 15688                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
 15689  0072D4  94F2               	bcf	242,2,c	;volatile
 15690  0072D6                     
 15691                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
 15692  0072D6  8AF2               	bsf	242,5,c	;volatile
 15693  0072D8                     
 15694                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 15695  0072D8  0E06               	movlw	low _TMR0_DefaultInterruptHandler
 15696  0072DA  6E0A               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
 15697  0072DC  0E78               	movlw	high _TMR0_DefaultInterruptHandler
 15698  0072DE  6E0B               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
 15699  0072E0  ECA7  F03B         	call	_TMR0_SetInterruptHandler	;wreg free
 15700  0072E4                     
 15701                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x9F;
 15702  0072E4  0E9F               	movlw	159
 15703  0072E6  6ED5               	movwf	213,c	;volatile
 15704  0072E8  0012               	return		;funcret
 15705  0072EA                     __end_of_TMR0_Initialize:
 15706                           	callstack 0
 15707                           
 15708 ;; *************** function _SRV_TIMER_Init *****************
 15709 ;; Defined at:
 15710 ;;		line 11 in file "ServiceTimer.c"
 15711 ;; Parameters:    Size  Location     Type
 15712 ;;		None
 15713 ;; Auto vars:     Size  Location     Type
 15714 ;;		None
 15715 ;; Return value:  Size  Location     Type
 15716 ;;                  1    wreg      void 
 15717 ;; Registers used:
 15718 ;;		wreg, status,2, status,0, cstack
 15719 ;; Tracked objects:
 15720 ;;		On entry : 0/0
 15721 ;;		On exit  : 0/0
 15722 ;;		Unchanged: 0/0
 15723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15724 ;;      Params:         0       0       0       0       0       0       0
 15725 ;;      Locals:         0       0       0       0       0       0       0
 15726 ;;      Temps:          0       0       0       0       0       0       0
 15727 ;;      Totals:         0       0       0       0       0       0       0
 15728 ;;Total ram usage:        0 bytes
 15729 ;; Hardware stack levels used: 1
 15730 ;; Hardware stack levels required when called: 5
 15731 ;; This function calls:
 15732 ;;		_TMR0_SetInterruptHandler
 15733 ;; This function is called by:
 15734 ;;		_App_HTAD_init
 15735 ;; This function uses a non-reentrant model
 15736 ;;
 15737                           
 15738                           	psect	text76
 15739  0075BE                     __ptext76:
 15740                           	callstack 0
 15741  0075BE                     _SRV_TIMER_Init:
 15742                           	callstack 24
 15743  0075BE                     
 15744                           ;ServiceTimer.c: 13:     count_aux = &tickRate;
 15745  0075BE  0ED1               	movlw	low _tickRate
 15746  0075C0  0101               	movlb	1	; () banked
 15747  0075C2  6F8F               	movwf	_count_aux& (0+255),b
 15748  0075C4  0E01               	movlw	high _tickRate
 15749  0075C6  6F90               	movwf	(_count_aux+1)& (0+255),b
 15750  0075C8                     
 15751                           ; BSR set to: 1
 15752                           ;ServiceTimer.c: 14:     TMR0_SetInterruptHandler(SRV_TIMER_TickInterrupt);
 15753  0075C8  0E28               	movlw	low _SRV_TIMER_TickInterrupt
 15754  0075CA  6E0A               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
 15755  0075CC  0E71               	movlw	high _SRV_TIMER_TickInterrupt
 15756  0075CE  6E0B               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
 15757  0075D0  ECA7  F03B         	call	_TMR0_SetInterruptHandler	;wreg free
 15758  0075D4  0012               	return		;funcret
 15759  0075D6                     __end_of_SRV_TIMER_Init:
 15760                           	callstack 0
 15761                           
 15762 ;; *************** function _TMR0_SetInterruptHandler *****************
 15763 ;; Defined at:
 15764 ;;		line 156 in file "mcc_generated_files/tmr0.c"
 15765 ;; Parameters:    Size  Location     Type
 15766 ;;  InterruptHan    2    9[COMRAM] PTR FTN()void 
 15767 ;;		 -> SRV_TIMER_TickInterrupt(1), TMR0_DefaultInterruptHandler(1), 
 15768 ;; Auto vars:     Size  Location     Type
 15769 ;;		None
 15770 ;; Return value:  Size  Location     Type
 15771 ;;                  1    wreg      void 
 15772 ;; Registers used:
 15773 ;;		wreg, status,2, status,0
 15774 ;; Tracked objects:
 15775 ;;		On entry : 0/0
 15776 ;;		On exit  : 0/0
 15777 ;;		Unchanged: 0/0
 15778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15779 ;;      Params:         2       0       0       0       0       0       0
 15780 ;;      Locals:         0       0       0       0       0       0       0
 15781 ;;      Temps:          0       0       0       0       0       0       0
 15782 ;;      Totals:         2       0       0       0       0       0       0
 15783 ;;Total ram usage:        2 bytes
 15784 ;; Hardware stack levels used: 1
 15785 ;; Hardware stack levels required when called: 4
 15786 ;; This function calls:
 15787 ;;		Nothing
 15788 ;; This function is called by:
 15789 ;;		_TMR0_Initialize
 15790 ;;		_SRV_TIMER_Init
 15791 ;; This function uses a non-reentrant model
 15792 ;;
 15793                           
 15794                           	psect	text77
 15795  00774E                     __ptext77:
 15796                           	callstack 0
 15797  00774E                     _TMR0_SetInterruptHandler:
 15798                           	callstack 24
 15799  00774E                     
 15800                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
 15801  00774E  C00A  F19B         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 15802  007752  C00B  F19C         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 15803  007756  0012               	return		;funcret
 15804  007758                     __end_of_TMR0_SetInterruptHandler:
 15805                           	callstack 0
 15806                           
 15807 ;; *************** function _SRV_Display_Init *****************
 15808 ;; Defined at:
 15809 ;;		line 22 in file "SRV_Display.c"
 15810 ;; Parameters:    Size  Location     Type
 15811 ;;		None
 15812 ;; Auto vars:     Size  Location     Type
 15813 ;;		None
 15814 ;; Return value:  Size  Location     Type
 15815 ;;                  1    wreg      void 
 15816 ;; Registers used:
 15817 ;;		wreg, status,2, status,0, cstack
 15818 ;; Tracked objects:
 15819 ;;		On entry : 0/0
 15820 ;;		On exit  : 0/0
 15821 ;;		Unchanged: 0/0
 15822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15823 ;;      Params:         0       0       0       0       0       0       0
 15824 ;;      Locals:         0       0       0       0       0       0       0
 15825 ;;      Temps:          0       0       0       0       0       0       0
 15826 ;;      Totals:         0       0       0       0       0       0       0
 15827 ;;Total ram usage:        0 bytes
 15828 ;; Hardware stack levels used: 1
 15829 ;; Hardware stack levels required when called: 8
 15830 ;; This function calls:
 15831 ;;		_DRV_LCD_Init
 15832 ;;		_SRV_Display_Clear
 15833 ;;		_SRV_Display_SetCursor
 15834 ;; This function is called by:
 15835 ;;		_App_HTAD_init
 15836 ;; This function uses a non-reentrant model
 15837 ;;
 15838                           
 15839                           	psect	text78
 15840  0074FC                     __ptext78:
 15841                           	callstack 0
 15842  0074FC                     _SRV_Display_Init:
 15843                           	callstack 21
 15844  0074FC                     
 15845                           ;SRV_Display.c: 24:     DRV_LCD_Init();
 15846  0074FC  EC16  F02C         	call	_DRV_LCD_Init	;wreg free
 15847                           
 15848                           ;SRV_Display.c: 25:     SRV_Display_Clear();
 15849  007500  ECD4  F03B         	call	_SRV_Display_Clear	;wreg free
 15850  007504                     
 15851                           ;SRV_Display.c: 26:     SRV_Display_SetCursor(1,1);
 15852  007504  0E01               	movlw	1
 15853  007506  6E13               	movwf	SRV_Display_SetCursor@coluna^0,c
 15854  007508  0E01               	movlw	1
 15855  00750A  EC59  F03B         	call	_SRV_Display_SetCursor
 15856  00750E                     
 15857                           ;SRV_Display.c: 27:     telaDisplay = ((void*)0);
 15858  00750E  0E00               	movlw	0
 15859  007510  0101               	movlb	1	; () banked
 15860  007512  6F89               	movwf	_telaDisplay& (0+255),b
 15861  007514  0E00               	movlw	0
 15862  007516  6F8A               	movwf	(_telaDisplay+1)& (0+255),b
 15863  007518                     
 15864                           ; BSR set to: 1
 15865  007518  0012               	return		;funcret
 15866  00751A                     __end_of_SRV_Display_Init:
 15867                           	callstack 0
 15868                           
 15869 ;; *************** function _SRV_Display_SetCursor *****************
 15870 ;; Defined at:
 15871 ;;		line 52 in file "SRV_Display.c"
 15872 ;; Parameters:    Size  Location     Type
 15873 ;;  linha           1    wreg     unsigned char 
 15874 ;;  coluna          1   18[COMRAM] unsigned char 
 15875 ;; Auto vars:     Size  Location     Type
 15876 ;;  linha           1   19[COMRAM] unsigned char 
 15877 ;; Return value:  Size  Location     Type
 15878 ;;                  1    wreg      void 
 15879 ;; Registers used:
 15880 ;;		wreg, status,2, status,0, cstack
 15881 ;; Tracked objects:
 15882 ;;		On entry : 0/0
 15883 ;;		On exit  : 0/0
 15884 ;;		Unchanged: 0/0
 15885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15886 ;;      Params:         1       0       0       0       0       0       0
 15887 ;;      Locals:         1       0       0       0       0       0       0
 15888 ;;      Temps:          0       0       0       0       0       0       0
 15889 ;;      Totals:         2       0       0       0       0       0       0
 15890 ;;Total ram usage:        2 bytes
 15891 ;; Hardware stack levels used: 1
 15892 ;; Hardware stack levels required when called: 7
 15893 ;; This function calls:
 15894 ;;		_DRV_LCD_SetCursor
 15895 ;; This function is called by:
 15896 ;;		_SRV_Display_Init
 15897 ;; This function uses a non-reentrant model
 15898 ;;
 15899                           
 15900                           	psect	text79
 15901  0076B2                     __ptext79:
 15902                           	callstack 0
 15903  0076B2                     _SRV_Display_SetCursor:
 15904                           	callstack 21
 15905                           
 15906                           ; BSR set to: 1
 15907                           ;incstack = 0
 15908                           ;SRV_Display_SetCursor@linha stored from wreg
 15909  0076B2  6E14               	movwf	SRV_Display_SetCursor@linha^0,c
 15910  0076B4                     
 15911                           ;SRV_Display.c: 52: void SRV_Display_SetCursor( uint8_t linha, uint8_t coluna);SRV_Displ
      +                          ay.c: 53: {;SRV_Display.c: 54:     DRV_LCD_SetCursor(linha,coluna,0);
 15912  0076B4  C013  F00D         	movff	SRV_Display_SetCursor@coluna,DRV_LCD_SetCursor@coluna
 15913  0076B8  0E00               	movlw	0
 15914  0076BA  6E0E               	movwf	DRV_LCD_SetCursor@cursorOn^0,c
 15915  0076BC  5014               	movf	SRV_Display_SetCursor@linha^0,w,c
 15916  0076BE  EC22  F02B         	call	_DRV_LCD_SetCursor
 15917  0076C2  0012               	return		;funcret
 15918  0076C4                     __end_of_SRV_Display_SetCursor:
 15919                           	callstack 0
 15920                           
 15921 ;; *************** function _DRV_LCD_SetCursor *****************
 15922 ;; Defined at:
 15923 ;;		line 43 in file "Driver_LCD.c"
 15924 ;; Parameters:    Size  Location     Type
 15925 ;;  linha           1    wreg     unsigned char 
 15926 ;;  coluna          1   12[COMRAM] unsigned char 
 15927 ;;  cursorOn        1   13[COMRAM] _Bool 
 15928 ;; Auto vars:     Size  Location     Type
 15929 ;;  linha           1   14[COMRAM] unsigned char 
 15930 ;;  temp            1   17[COMRAM] unsigned char 
 15931 ;;  y               1   16[COMRAM] unsigned char 
 15932 ;;  z               1   15[COMRAM] unsigned char 
 15933 ;; Return value:  Size  Location     Type
 15934 ;;                  1    wreg      void 
 15935 ;; Registers used:
 15936 ;;		wreg, status,2, status,0, cstack
 15937 ;; Tracked objects:
 15938 ;;		On entry : 0/0
 15939 ;;		On exit  : 0/0
 15940 ;;		Unchanged: 0/0
 15941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15942 ;;      Params:         2       0       0       0       0       0       0
 15943 ;;      Locals:         4       0       0       0       0       0       0
 15944 ;;      Temps:          0       0       0       0       0       0       0
 15945 ;;      Totals:         6       0       0       0       0       0       0
 15946 ;;Total ram usage:        6 bytes
 15947 ;; Hardware stack levels used: 1
 15948 ;; Hardware stack levels required when called: 6
 15949 ;; This function calls:
 15950 ;;		_DRV_LCD_Cmd
 15951 ;; This function is called by:
 15952 ;;		_App_HTAD_MenuAjusteErro
 15953 ;;		_SRV_Display_Write
 15954 ;;		_SRV_Display_SetCursor
 15955 ;;		_SRV_Display_WriteChar
 15956 ;; This function uses a non-reentrant model
 15957 ;;
 15958                           
 15959                           	psect	text80
 15960  005644                     __ptext80:
 15961                           	callstack 0
 15962  005644                     _DRV_LCD_SetCursor:
 15963                           	callstack 21
 15964                           
 15965                           ;incstack = 0
 15966                           ;DRV_LCD_SetCursor@linha stored from wreg
 15967  005644  6E0F               	movwf	DRV_LCD_SetCursor@linha^0,c
 15968  005646                     
 15969                           ;Driver_LCD.c: 43: void DRV_LCD_SetCursor(uint8_t linha, uint8_t coluna, _Bool cursorOn)
      +                          ;Driver_LCD.c: 44: {;Driver_LCD.c: 45:     char temp,z,y;;Driver_LCD.c: 46:  if(linha ==
      +                           1)
 15970  005646  040F               	decf	DRV_LCD_SetCursor@linha^0,w,c
 15971  005648  A4D8               	btfss	status,2,c
 15972  00564A  EF29  F02B         	goto	u8141
 15973  00564E  EF2B  F02B         	goto	u8140
 15974  005652                     u8141:
 15975  005652  EF3C  F02B         	goto	l8942
 15976  005656                     u8140:
 15977  005656                     
 15978                           ;Driver_LCD.c: 47:  {;Driver_LCD.c: 48:    temp = 0x80 + coluna - 1;
 15979  005656  500D               	movf	DRV_LCD_SetCursor@coluna^0,w,c
 15980  005658  0F7F               	addlw	127
 15981  00565A  6E12               	movwf	DRV_LCD_SetCursor@temp^0,c
 15982                           
 15983                           ;Driver_LCD.c: 49:   z = temp>>4;
 15984  00565C  3812               	swapf	DRV_LCD_SetCursor@temp^0,w,c
 15985  00565E  0B0F               	andlw	15
 15986  005660  6E10               	movwf	DRV_LCD_SetCursor@z^0,c
 15987                           
 15988                           ;Driver_LCD.c: 50:   y = temp & 0x0F;
 15989  005662  5012               	movf	DRV_LCD_SetCursor@temp^0,w,c
 15990  005664  0B0F               	andlw	15
 15991  005666  6E11               	movwf	DRV_LCD_SetCursor@y^0,c
 15992  005668                     
 15993                           ;Driver_LCD.c: 51:   DRV_LCD_Cmd(z);
 15994  005668  5010               	movf	DRV_LCD_SetCursor@z^0,w,c
 15995  00566A  EC8D  F03A         	call	_DRV_LCD_Cmd
 15996  00566E                     
 15997                           ;Driver_LCD.c: 52:   DRV_LCD_Cmd(y);
 15998  00566E  5011               	movf	DRV_LCD_SetCursor@y^0,w,c
 15999  005670  EC8D  F03A         	call	_DRV_LCD_Cmd
 16000                           
 16001                           ;Driver_LCD.c: 53:  }
 16002  005674  EF8A  F02B         	goto	l8966
 16003  005678                     l8942:
 16004  005678  0E02               	movlw	2
 16005  00567A  180F               	xorwf	DRV_LCD_SetCursor@linha^0,w,c
 16006  00567C  A4D8               	btfss	status,2,c
 16007  00567E  EF43  F02B         	goto	u8151
 16008  005682  EF45  F02B         	goto	u8150
 16009  005686                     u8151:
 16010  005686  EF56  F02B         	goto	l8950
 16011  00568A                     u8150:
 16012  00568A                     
 16013                           ;Driver_LCD.c: 55:  {;Driver_LCD.c: 56:   temp = 0xC0 + coluna - 1;
 16014  00568A  500D               	movf	DRV_LCD_SetCursor@coluna^0,w,c
 16015  00568C  0FBF               	addlw	191
 16016  00568E  6E12               	movwf	DRV_LCD_SetCursor@temp^0,c
 16017                           
 16018                           ;Driver_LCD.c: 57:   z = temp>>4;
 16019  005690  3812               	swapf	DRV_LCD_SetCursor@temp^0,w,c
 16020  005692  0B0F               	andlw	15
 16021  005694  6E10               	movwf	DRV_LCD_SetCursor@z^0,c
 16022                           
 16023                           ;Driver_LCD.c: 58:   y = temp & 0x0F;
 16024  005696  5012               	movf	DRV_LCD_SetCursor@temp^0,w,c
 16025  005698  0B0F               	andlw	15
 16026  00569A  6E11               	movwf	DRV_LCD_SetCursor@y^0,c
 16027  00569C                     
 16028                           ;Driver_LCD.c: 59:   DRV_LCD_Cmd(z);
 16029  00569C  5010               	movf	DRV_LCD_SetCursor@z^0,w,c
 16030  00569E  EC8D  F03A         	call	_DRV_LCD_Cmd
 16031  0056A2                     
 16032                           ;Driver_LCD.c: 60:   DRV_LCD_Cmd(y);
 16033  0056A2  5011               	movf	DRV_LCD_SetCursor@y^0,w,c
 16034  0056A4  EC8D  F03A         	call	_DRV_LCD_Cmd
 16035                           
 16036                           ;Driver_LCD.c: 61:  }
 16037  0056A8  EF8A  F02B         	goto	l8966
 16038  0056AC                     l8950:
 16039  0056AC  0E03               	movlw	3
 16040  0056AE  180F               	xorwf	DRV_LCD_SetCursor@linha^0,w,c
 16041  0056B0  A4D8               	btfss	status,2,c
 16042  0056B2  EF5D  F02B         	goto	u8161
 16043  0056B6  EF5F  F02B         	goto	u8160
 16044  0056BA                     u8161:
 16045  0056BA  EF70  F02B         	goto	l8958
 16046  0056BE                     u8160:
 16047  0056BE                     
 16048                           ;Driver_LCD.c: 63:     {;Driver_LCD.c: 64:         temp = 0x94 + coluna - 1;
 16049  0056BE  500D               	movf	DRV_LCD_SetCursor@coluna^0,w,c
 16050  0056C0  0F93               	addlw	147
 16051  0056C2  6E12               	movwf	DRV_LCD_SetCursor@temp^0,c
 16052                           
 16053                           ;Driver_LCD.c: 65:         z = temp >> 4;
 16054  0056C4  3812               	swapf	DRV_LCD_SetCursor@temp^0,w,c
 16055  0056C6  0B0F               	andlw	15
 16056  0056C8  6E10               	movwf	DRV_LCD_SetCursor@z^0,c
 16057                           
 16058                           ;Driver_LCD.c: 66:         y = temp & 0x0F;
 16059  0056CA  5012               	movf	DRV_LCD_SetCursor@temp^0,w,c
 16060  0056CC  0B0F               	andlw	15
 16061  0056CE  6E11               	movwf	DRV_LCD_SetCursor@y^0,c
 16062  0056D0                     
 16063                           ;Driver_LCD.c: 67:         DRV_LCD_Cmd(z);
 16064  0056D0  5010               	movf	DRV_LCD_SetCursor@z^0,w,c
 16065  0056D2  EC8D  F03A         	call	_DRV_LCD_Cmd
 16066  0056D6                     
 16067                           ;Driver_LCD.c: 68:         DRV_LCD_Cmd(y);
 16068  0056D6  5011               	movf	DRV_LCD_SetCursor@y^0,w,c
 16069  0056D8  EC8D  F03A         	call	_DRV_LCD_Cmd
 16070                           
 16071                           ;Driver_LCD.c: 69:     }
 16072  0056DC  EF8A  F02B         	goto	l8966
 16073  0056E0                     l8958:
 16074  0056E0  0E04               	movlw	4
 16075  0056E2  180F               	xorwf	DRV_LCD_SetCursor@linha^0,w,c
 16076  0056E4  A4D8               	btfss	status,2,c
 16077  0056E6  EF77  F02B         	goto	u8171
 16078  0056EA  EF79  F02B         	goto	u8170
 16079  0056EE                     u8171:
 16080  0056EE  EF8A  F02B         	goto	l1104
 16081  0056F2                     u8170:
 16082  0056F2                     
 16083                           ;Driver_LCD.c: 71:     {;Driver_LCD.c: 72:         temp = 0xD4 + coluna - 1;
 16084  0056F2  500D               	movf	DRV_LCD_SetCursor@coluna^0,w,c
 16085  0056F4  0FD3               	addlw	211
 16086  0056F6  6E12               	movwf	DRV_LCD_SetCursor@temp^0,c
 16087                           
 16088                           ;Driver_LCD.c: 73:         z = temp >> 4;
 16089  0056F8  3812               	swapf	DRV_LCD_SetCursor@temp^0,w,c
 16090  0056FA  0B0F               	andlw	15
 16091  0056FC  6E10               	movwf	DRV_LCD_SetCursor@z^0,c
 16092                           
 16093                           ;Driver_LCD.c: 74:         y = temp & 0x0F;
 16094  0056FE  5012               	movf	DRV_LCD_SetCursor@temp^0,w,c
 16095  005700  0B0F               	andlw	15
 16096  005702  6E11               	movwf	DRV_LCD_SetCursor@y^0,c
 16097  005704                     
 16098                           ;Driver_LCD.c: 75:         DRV_LCD_Cmd(z);
 16099  005704  5010               	movf	DRV_LCD_SetCursor@z^0,w,c
 16100  005706  EC8D  F03A         	call	_DRV_LCD_Cmd
 16101  00570A                     
 16102                           ;Driver_LCD.c: 76:         DRV_LCD_Cmd(y);
 16103  00570A  5011               	movf	DRV_LCD_SetCursor@y^0,w,c
 16104  00570C  EC8D  F03A         	call	_DRV_LCD_Cmd
 16105  005710  EF8A  F02B         	goto	l8966
 16106  005714                     l1104:
 16107  005714                     l8966:
 16108                           
 16109                           ;Driver_LCD.c: 80:      DRV_LCD_Cmd(0xC0);
 16110  005714  0EC0               	movlw	192
 16111  005716  EC8D  F03A         	call	_DRV_LCD_Cmd
 16112  00571A                     
 16113                           ;Driver_LCD.c: 83:     if (cursorOn)
 16114  00571A  500E               	movf	DRV_LCD_SetCursor@cursorOn^0,w,c
 16115  00571C  B4D8               	btfsc	status,2,c
 16116  00571E  EF93  F02B         	goto	u8181
 16117  005722  EF95  F02B         	goto	u8180
 16118  005726                     u8181:
 16119  005726  EF9A  F02B         	goto	l8972
 16120  00572A                     u8180:
 16121  00572A                     
 16122                           ;Driver_LCD.c: 84:     {;Driver_LCD.c: 85:         DRV_LCD_Cmd(0x0E);
 16123  00572A  0E0E               	movlw	14
 16124  00572C  EC8D  F03A         	call	_DRV_LCD_Cmd
 16125                           
 16126                           ;Driver_LCD.c: 86:     }
 16127  005730  EF9D  F02B         	goto	l1110
 16128  005734                     l8972:
 16129                           
 16130                           ;Driver_LCD.c: 88:     {;Driver_LCD.c: 89:         DRV_LCD_Cmd(0x0C);
 16131  005734  0E0C               	movlw	12
 16132  005736  EC8D  F03A         	call	_DRV_LCD_Cmd
 16133  00573A                     l1110:
 16134  00573A  0012               	return		;funcret
 16135  00573C                     __end_of_DRV_LCD_SetCursor:
 16136                           	callstack 0
 16137                           
 16138 ;; *************** function _SRV_Display_Clear *****************
 16139 ;; Defined at:
 16140 ;;		line 47 in file "SRV_Display.c"
 16141 ;; Parameters:    Size  Location     Type
 16142 ;;		None
 16143 ;; Auto vars:     Size  Location     Type
 16144 ;;		None
 16145 ;; Return value:  Size  Location     Type
 16146 ;;                  1    wreg      void 
 16147 ;; Registers used:
 16148 ;;		wreg, status,2, cstack
 16149 ;; Tracked objects:
 16150 ;;		On entry : 0/0
 16151 ;;		On exit  : 0/0
 16152 ;;		Unchanged: 0/0
 16153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16154 ;;      Params:         0       0       0       0       0       0       0
 16155 ;;      Locals:         0       0       0       0       0       0       0
 16156 ;;      Temps:          0       0       0       0       0       0       0
 16157 ;;      Totals:         0       0       0       0       0       0       0
 16158 ;;Total ram usage:        0 bytes
 16159 ;; Hardware stack levels used: 1
 16160 ;; Hardware stack levels required when called: 7
 16161 ;; This function calls:
 16162 ;;		_DRV_LCD_Clear
 16163 ;; This function is called by:
 16164 ;;		_SRV_Display_Init
 16165 ;; This function uses a non-reentrant model
 16166 ;;
 16167                           
 16168                           	psect	text81
 16169  0077A8                     __ptext81:
 16170                           	callstack 0
 16171  0077A8                     _SRV_Display_Clear:
 16172                           	callstack 21
 16173  0077A8                     
 16174                           ;SRV_Display.c: 49:     DRV_LCD_Clear();
 16175  0077A8  ECEB  F03A         	call	_DRV_LCD_Clear	;wreg free
 16176  0077AC  0012               	return		;funcret
 16177  0077AE                     __end_of_SRV_Display_Clear:
 16178                           	callstack 0
 16179                           
 16180 ;; *************** function _DRV_LCD_Clear *****************
 16181 ;; Defined at:
 16182 ;;		line 37 in file "Driver_LCD.c"
 16183 ;; Parameters:    Size  Location     Type
 16184 ;;		None
 16185 ;; Auto vars:     Size  Location     Type
 16186 ;;		None
 16187 ;; Return value:  Size  Location     Type
 16188 ;;                  1    wreg      void 
 16189 ;; Registers used:
 16190 ;;		wreg, status,2, cstack
 16191 ;; Tracked objects:
 16192 ;;		On entry : 0/0
 16193 ;;		On exit  : 0/0
 16194 ;;		Unchanged: 0/0
 16195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16196 ;;      Params:         0       0       0       0       0       0       0
 16197 ;;      Locals:         0       0       0       0       0       0       0
 16198 ;;      Temps:          1       0       0       0       0       0       0
 16199 ;;      Totals:         1       0       0       0       0       0       0
 16200 ;;Total ram usage:        1 bytes
 16201 ;; Hardware stack levels used: 1
 16202 ;; Hardware stack levels required when called: 6
 16203 ;; This function calls:
 16204 ;;		_DRV_LCD_Cmd
 16205 ;; This function is called by:
 16206 ;;		_App_HTAD_init
 16207 ;;		_SRV_Display_Clear
 16208 ;; This function uses a non-reentrant model
 16209 ;;
 16210                           
 16211                           	psect	text82
 16212  0075D6                     __ptext82:
 16213                           	callstack 0
 16214  0075D6                     _DRV_LCD_Clear:
 16215                           	callstack 21
 16216  0075D6                     
 16217                           ;Driver_LCD.c: 39:  DRV_LCD_Cmd(0x01);
 16218  0075D6  0E01               	movlw	1
 16219  0075D8  EC8D  F03A         	call	_DRV_LCD_Cmd
 16220  0075DC                     
 16221                           ;Driver_LCD.c: 40:     _delay((unsigned long)((2)*(40000000/4000.0)));
 16222  0075DC  0E1A               	movlw	26
 16223  0075DE  6E0D               	movwf	??_DRV_LCD_Clear^0,c
 16224  0075E0  0EF8               	movlw	248
 16225  0075E2                     u14257:
 16226  0075E2  2EE8               	decfsz	wreg,f,c
 16227  0075E4  D7FE               	bra	u14257
 16228  0075E6  2E0D               	decfsz	??_DRV_LCD_Clear^0,f,c
 16229  0075E8  D7FC               	bra	u14257
 16230  0075EA  D000               	nop2	
 16231  0075EC  0012               	return		;funcret
 16232  0075EE                     __end_of_DRV_LCD_Clear:
 16233                           	callstack 0
 16234                           
 16235 ;; *************** function _DRV_LCD_Init *****************
 16236 ;; Defined at:
 16237 ;;		line 93 in file "Driver_LCD.c"
 16238 ;; Parameters:    Size  Location     Type
 16239 ;;		None
 16240 ;; Auto vars:     Size  Location     Type
 16241 ;;		None
 16242 ;; Return value:  Size  Location     Type
 16243 ;;                  1    wreg      void 
 16244 ;; Registers used:
 16245 ;;		wreg, status,2, cstack
 16246 ;; Tracked objects:
 16247 ;;		On entry : 0/0
 16248 ;;		On exit  : 0/0
 16249 ;;		Unchanged: 0/0
 16250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16251 ;;      Params:         0       0       0       0       0       0       0
 16252 ;;      Locals:         0       0       0       0       0       0       0
 16253 ;;      Temps:          2       0       0       0       0       0       0
 16254 ;;      Totals:         2       0       0       0       0       0       0
 16255 ;;Total ram usage:        2 bytes
 16256 ;; Hardware stack levels used: 1
 16257 ;; Hardware stack levels required when called: 6
 16258 ;; This function calls:
 16259 ;;		_DRV_LCD_Cmd
 16260 ;;		_DRV_LCD_Data
 16261 ;; This function is called by:
 16262 ;;		_SRV_Display_Init
 16263 ;;		_SRV_Display_Refresh
 16264 ;; This function uses a non-reentrant model
 16265 ;;
 16266                           
 16267                           	psect	text83
 16268  00582C                     __ptext83:
 16269                           	callstack 0
 16270  00582C                     _DRV_LCD_Init:
 16271                           	callstack 22
 16272  00582C                     
 16273                           ;Driver_LCD.c: 95:        DRV_LCD_Data(0x00);
 16274  00582C  0E00               	movlw	0
 16275  00582E  EC15  F036         	call	_DRV_LCD_Data
 16276  005832                     
 16277                           ;Driver_LCD.c: 96:     _delay((unsigned long)((20)*(40000000/4000.0)));
 16278  005832  0E02               	movlw	2
 16279  005834  6E0E               	movwf	(??_DRV_LCD_Init+1)^0,c
 16280  005836  0E04               	movlw	4
 16281  005838  6E0D               	movwf	??_DRV_LCD_Init^0,c
 16282  00583A  0EBA               	movlw	186
 16283  00583C                     u14267:
 16284  00583C  2EE8               	decfsz	wreg,f,c
 16285  00583E  D7FE               	bra	u14267
 16286  005840  2E0D               	decfsz	??_DRV_LCD_Init^0,f,c
 16287  005842  D7FC               	bra	u14267
 16288  005844  2E0E               	decfsz	(??_DRV_LCD_Init+1)^0,f,c
 16289  005846  D7FA               	bra	u14267
 16290  005848  D000               	nop2	
 16291  00584A                     
 16292                           ;Driver_LCD.c: 97:     DRV_LCD_Cmd(0x03);
 16293  00584A  0E03               	movlw	3
 16294  00584C  EC8D  F03A         	call	_DRV_LCD_Cmd
 16295  005850                     
 16296                           ;Driver_LCD.c: 98:     _delay((unsigned long)((5)*(40000000/4000.0)));
 16297  005850  0E41               	movlw	65
 16298  005852  6E0D               	movwf	??_DRV_LCD_Init^0,c
 16299  005854  0EEE               	movlw	238
 16300  005856                     u14277:
 16301  005856  2EE8               	decfsz	wreg,f,c
 16302  005858  D7FE               	bra	u14277
 16303  00585A  2E0D               	decfsz	??_DRV_LCD_Init^0,f,c
 16304  00585C  D7FC               	bra	u14277
 16305  00585E  D000               	nop2	
 16306  005860                     
 16307                           ;Driver_LCD.c: 99:     DRV_LCD_Cmd(0x03);
 16308  005860  0E03               	movlw	3
 16309  005862  EC8D  F03A         	call	_DRV_LCD_Cmd
 16310  005866                     
 16311                           ;Driver_LCD.c: 100:     _delay((unsigned long)((11)*(40000000/4000.0)));
 16312  005866  0E8F               	movlw	143
 16313  005868  6E0D               	movwf	??_DRV_LCD_Init^0,c
 16314  00586A  0EDA               	movlw	218
 16315  00586C                     u14287:
 16316  00586C  2EE8               	decfsz	wreg,f,c
 16317  00586E  D7FE               	bra	u14287
 16318  005870  2E0D               	decfsz	??_DRV_LCD_Init^0,f,c
 16319  005872  D7FC               	bra	u14287
 16320  005874  D000               	nop2	
 16321  005876                     
 16322                           ;Driver_LCD.c: 101:     DRV_LCD_Cmd(0x03);
 16323  005876  0E03               	movlw	3
 16324  005878  EC8D  F03A         	call	_DRV_LCD_Cmd
 16325  00587C                     
 16326                           ;Driver_LCD.c: 103:     DRV_LCD_Cmd(0x02);
 16327  00587C  0E02               	movlw	2
 16328  00587E  EC8D  F03A         	call	_DRV_LCD_Cmd
 16329  005882                     
 16330                           ;Driver_LCD.c: 104:      _delay((unsigned long)((5)*(40000000/4000.0)));
 16331  005882  0E41               	movlw	65
 16332  005884  6E0D               	movwf	??_DRV_LCD_Init^0,c
 16333  005886  0EEE               	movlw	238
 16334  005888                     u14297:
 16335  005888  2EE8               	decfsz	wreg,f,c
 16336  00588A  D7FE               	bra	u14297
 16337  00588C  2E0D               	decfsz	??_DRV_LCD_Init^0,f,c
 16338  00588E  D7FC               	bra	u14297
 16339  005890  D000               	nop2	
 16340  005892                     
 16341                           ;Driver_LCD.c: 105:     DRV_LCD_Cmd(0x02);
 16342  005892  0E02               	movlw	2
 16343  005894  EC8D  F03A         	call	_DRV_LCD_Cmd
 16344  005898                     
 16345                           ;Driver_LCD.c: 106:      _delay((unsigned long)((5)*(40000000/4000.0)));
 16346  005898  0E41               	movlw	65
 16347  00589A  6E0D               	movwf	??_DRV_LCD_Init^0,c
 16348  00589C  0EEE               	movlw	238
 16349  00589E                     u14307:
 16350  00589E  2EE8               	decfsz	wreg,f,c
 16351  0058A0  D7FE               	bra	u14307
 16352  0058A2  2E0D               	decfsz	??_DRV_LCD_Init^0,f,c
 16353  0058A4  D7FC               	bra	u14307
 16354  0058A6  D000               	nop2	
 16355  0058A8                     
 16356                           ;Driver_LCD.c: 107:     DRV_LCD_Cmd(0x08);
 16357  0058A8  0E08               	movlw	8
 16358  0058AA  EC8D  F03A         	call	_DRV_LCD_Cmd
 16359  0058AE                     
 16360                           ;Driver_LCD.c: 108:      _delay((unsigned long)((5)*(40000000/4000.0)));
 16361  0058AE  0E41               	movlw	65
 16362  0058B0  6E0D               	movwf	??_DRV_LCD_Init^0,c
 16363  0058B2  0EEE               	movlw	238
 16364  0058B4                     u14317:
 16365  0058B4  2EE8               	decfsz	wreg,f,c
 16366  0058B6  D7FE               	bra	u14317
 16367  0058B8  2E0D               	decfsz	??_DRV_LCD_Init^0,f,c
 16368  0058BA  D7FC               	bra	u14317
 16369  0058BC  D000               	nop2	
 16370  0058BE                     
 16371                           ;Driver_LCD.c: 109:     DRV_LCD_Cmd(0x00);
 16372  0058BE  0E00               	movlw	0
 16373  0058C0  EC8D  F03A         	call	_DRV_LCD_Cmd
 16374  0058C4                     
 16375                           ;Driver_LCD.c: 110:      _delay((unsigned long)((5)*(40000000/4000.0)));
 16376  0058C4  0E41               	movlw	65
 16377  0058C6  6E0D               	movwf	??_DRV_LCD_Init^0,c
 16378  0058C8  0EEE               	movlw	238
 16379  0058CA                     u14327:
 16380  0058CA  2EE8               	decfsz	wreg,f,c
 16381  0058CC  D7FE               	bra	u14327
 16382  0058CE  2E0D               	decfsz	??_DRV_LCD_Init^0,f,c
 16383  0058D0  D7FC               	bra	u14327
 16384  0058D2  D000               	nop2	
 16385  0058D4                     
 16386                           ;Driver_LCD.c: 111:     DRV_LCD_Cmd(0x0C);
 16387  0058D4  0E0C               	movlw	12
 16388  0058D6  EC8D  F03A         	call	_DRV_LCD_Cmd
 16389  0058DA                     
 16390                           ;Driver_LCD.c: 112:      _delay((unsigned long)((5)*(40000000/4000.0)));
 16391  0058DA  0E41               	movlw	65
 16392  0058DC  6E0D               	movwf	??_DRV_LCD_Init^0,c
 16393  0058DE  0EEE               	movlw	238
 16394  0058E0                     u14337:
 16395  0058E0  2EE8               	decfsz	wreg,f,c
 16396  0058E2  D7FE               	bra	u14337
 16397  0058E4  2E0D               	decfsz	??_DRV_LCD_Init^0,f,c
 16398  0058E6  D7FC               	bra	u14337
 16399  0058E8  D000               	nop2	
 16400  0058EA                     
 16401                           ;Driver_LCD.c: 113:     DRV_LCD_Cmd(0x00);
 16402  0058EA  0E00               	movlw	0
 16403  0058EC  EC8D  F03A         	call	_DRV_LCD_Cmd
 16404  0058F0                     
 16405                           ;Driver_LCD.c: 114:      _delay((unsigned long)((5)*(40000000/4000.0)));
 16406  0058F0  0E41               	movlw	65
 16407  0058F2  6E0D               	movwf	??_DRV_LCD_Init^0,c
 16408  0058F4  0EEE               	movlw	238
 16409  0058F6                     u14347:
 16410  0058F6  2EE8               	decfsz	wreg,f,c
 16411  0058F8  D7FE               	bra	u14347
 16412  0058FA  2E0D               	decfsz	??_DRV_LCD_Init^0,f,c
 16413  0058FC  D7FC               	bra	u14347
 16414  0058FE  D000               	nop2	
 16415  005900                     
 16416                           ;Driver_LCD.c: 115:     DRV_LCD_Cmd(0x06);
 16417  005900  0E06               	movlw	6
 16418  005902  EC8D  F03A         	call	_DRV_LCD_Cmd
 16419  005906                     
 16420                           ;Driver_LCD.c: 116:      _delay((unsigned long)((5)*(40000000/4000.0)));
 16421  005906  0E41               	movlw	65
 16422  005908  6E0D               	movwf	??_DRV_LCD_Init^0,c
 16423  00590A  0EEE               	movlw	238
 16424  00590C                     u14357:
 16425  00590C  2EE8               	decfsz	wreg,f,c
 16426  00590E  D7FE               	bra	u14357
 16427  005910  2E0D               	decfsz	??_DRV_LCD_Init^0,f,c
 16428  005912  D7FC               	bra	u14357
 16429  005914  D000               	nop2	
 16430  005916  0012               	return		;funcret
 16431  005918                     __end_of_DRV_LCD_Init:
 16432                           	callstack 0
 16433                           
 16434 ;; *************** function _DRV_LCD_Cmd *****************
 16435 ;; Defined at:
 16436 ;;		line 28 in file "Driver_LCD.c"
 16437 ;; Parameters:    Size  Location     Type
 16438 ;;  cmd             1    wreg     unsigned char 
 16439 ;; Auto vars:     Size  Location     Type
 16440 ;;  cmd             1   11[COMRAM] unsigned char 
 16441 ;; Return value:  Size  Location     Type
 16442 ;;                  1    wreg      void 
 16443 ;; Registers used:
 16444 ;;		wreg, status,2, cstack
 16445 ;; Tracked objects:
 16446 ;;		On entry : 0/0
 16447 ;;		On exit  : 0/0
 16448 ;;		Unchanged: 0/0
 16449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16450 ;;      Params:         0       0       0       0       0       0       0
 16451 ;;      Locals:         1       0       0       0       0       0       0
 16452 ;;      Temps:          1       0       0       0       0       0       0
 16453 ;;      Totals:         2       0       0       0       0       0       0
 16454 ;;Total ram usage:        2 bytes
 16455 ;; Hardware stack levels used: 1
 16456 ;; Hardware stack levels required when called: 5
 16457 ;; This function calls:
 16458 ;;		_DRV_LCD_Data
 16459 ;; This function is called by:
 16460 ;;		_DRV_LCD_Clear
 16461 ;;		_DRV_LCD_SetCursor
 16462 ;;		_DRV_LCD_Init
 16463 ;;		_DRV_LCD_ShiftRight
 16464 ;;		_DRV_LCD_ShiftLeft
 16465 ;; This function uses a non-reentrant model
 16466 ;;
 16467                           
 16468                           	psect	text84
 16469  00751A                     __ptext84:
 16470                           	callstack 0
 16471  00751A                     _DRV_LCD_Cmd:
 16472                           	callstack 21
 16473                           
 16474                           ;incstack = 0
 16475                           ;DRV_LCD_Cmd@cmd stored from wreg
 16476  00751A  6E0C               	movwf	DRV_LCD_Cmd@cmd^0,c
 16477  00751C  988A               	bcf	138,4,c	;volatile
 16478  00751E                     
 16479                           ;Driver_LCD.c: 31:  DRV_LCD_Data(cmd);
 16480  00751E  500C               	movf	DRV_LCD_Cmd@cmd^0,w,c
 16481  007520  EC15  F036         	call	_DRV_LCD_Data
 16482  007524  8A8A               	bsf	138,5,c	;volatile
 16483  007526                     
 16484                           ;Driver_LCD.c: 33:     _delay((unsigned long)((4)*(40000000/4000.0)));
 16485  007526  0E34               	movlw	52
 16486  007528  6E0B               	movwf	??_DRV_LCD_Cmd^0,c
 16487  00752A  0EF2               	movlw	242
 16488  00752C                     u14367:
 16489  00752C  2EE8               	decfsz	wreg,f,c
 16490  00752E  D7FE               	bra	u14367
 16491  007530  2E0B               	decfsz	??_DRV_LCD_Cmd^0,f,c
 16492  007532  D7FC               	bra	u14367
 16493  007534  9A8A               	bcf	138,5,c	;volatile
 16494  007536  0012               	return		;funcret
 16495  007538                     __end_of_DRV_LCD_Cmd:
 16496                           	callstack 0
 16497                           
 16498 ;; *************** function _DRV_LCD_Data *****************
 16499 ;; Defined at:
 16500 ;;		line 8 in file "Driver_LCD.c"
 16501 ;; Parameters:    Size  Location     Type
 16502 ;;  data            1    wreg     unsigned char 
 16503 ;; Auto vars:     Size  Location     Type
 16504 ;;  data            1    9[COMRAM] unsigned char 
 16505 ;; Return value:  Size  Location     Type
 16506 ;;                  1    wreg      void 
 16507 ;; Registers used:
 16508 ;;		wreg
 16509 ;; Tracked objects:
 16510 ;;		On entry : 0/0
 16511 ;;		On exit  : 0/0
 16512 ;;		Unchanged: 0/0
 16513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16514 ;;      Params:         0       0       0       0       0       0       0
 16515 ;;      Locals:         1       0       0       0       0       0       0
 16516 ;;      Temps:          0       0       0       0       0       0       0
 16517 ;;      Totals:         1       0       0       0       0       0       0
 16518 ;;Total ram usage:        1 bytes
 16519 ;; Hardware stack levels used: 1
 16520 ;; Hardware stack levels required when called: 4
 16521 ;; This function calls:
 16522 ;;		Nothing
 16523 ;; This function is called by:
 16524 ;;		_DRV_LCD_Cmd
 16525 ;;		_DRV_LCD_Init
 16526 ;;		_DRV_LCD_WriteChar
 16527 ;; This function uses a non-reentrant model
 16528 ;;
 16529                           
 16530                           	psect	text85
 16531  006C2A                     __ptext85:
 16532                           	callstack 0
 16533  006C2A                     _DRV_LCD_Data:
 16534                           	callstack 21
 16535                           
 16536                           ;incstack = 0
 16537                           ;DRV_LCD_Data@data stored from wreg
 16538  006C2A  6E0A               	movwf	DRV_LCD_Data@data^0,c
 16539  006C2C                     
 16540                           ;Driver_LCD.c: 8: void DRV_LCD_Data(uint8_t data);Driver_LCD.c: 9: {;Driver_LCD.c: 10:  
      +                          if(data & 1)
 16541  006C2C  A00A               	btfss	DRV_LCD_Data@data^0,0,c
 16542  006C2E  EF1B  F036         	goto	u6881
 16543  006C32  EF1D  F036         	goto	u6880
 16544  006C36                     u6881:
 16545  006C36  EF20  F036         	goto	l1066
 16546  006C3A                     u6880:
 16547  006C3A  808A               	bsf	138,0,c	;volatile
 16548  006C3C  EF21  F036         	goto	l8154
 16549  006C40                     l1066:
 16550  006C40  908A               	bcf	138,0,c	;volatile
 16551  006C42                     l8154:
 16552                           
 16553                           ;Driver_LCD.c: 14:  if(data & 2)
 16554  006C42  A20A               	btfss	DRV_LCD_Data@data^0,1,c
 16555  006C44  EF26  F036         	goto	u6891
 16556  006C48  EF28  F036         	goto	u6890
 16557  006C4C                     u6891:
 16558  006C4C  EF2B  F036         	goto	l1072
 16559  006C50                     u6890:
 16560  006C50  828A               	bsf	138,1,c	;volatile
 16561  006C52  EF2C  F036         	goto	l8156
 16562  006C56                     l1072:
 16563  006C56  928A               	bcf	138,1,c	;volatile
 16564  006C58                     l8156:
 16565                           
 16566                           ;Driver_LCD.c: 18:  if(data & 4)
 16567  006C58  A40A               	btfss	DRV_LCD_Data@data^0,2,c
 16568  006C5A  EF31  F036         	goto	u6901
 16569  006C5E  EF33  F036         	goto	u6900
 16570  006C62                     u6901:
 16571  006C62  EF36  F036         	goto	l1078
 16572  006C66                     u6900:
 16573  006C66  848A               	bsf	138,2,c	;volatile
 16574  006C68  EF37  F036         	goto	l8158
 16575  006C6C                     l1078:
 16576  006C6C  948A               	bcf	138,2,c	;volatile
 16577  006C6E                     l8158:
 16578                           
 16579                           ;Driver_LCD.c: 23:  if(data & 8)
 16580  006C6E  A60A               	btfss	DRV_LCD_Data@data^0,3,c
 16581  006C70  EF3C  F036         	goto	u6911
 16582  006C74  EF3E  F036         	goto	u6910
 16583  006C78                     u6911:
 16584  006C78  EF41  F036         	goto	l1084
 16585  006C7C                     u6910:
 16586  006C7C  868A               	bsf	138,3,c	;volatile
 16587  006C7E  EF42  F036         	goto	l1086
 16588  006C82                     l1084:
 16589  006C82  968A               	bcf	138,3,c	;volatile
 16590  006C84                     l1086:
 16591  006C84  0012               	return		;funcret
 16592  006C86                     __end_of_DRV_LCD_Data:
 16593                           	callstack 0
 16594                           
 16595 ;; *************** function _SRV_ADT7410_SetErrorSensor *****************
 16596 ;; Defined at:
 16597 ;;		line 102 in file "ServiceADT7410.c"
 16598 ;; Parameters:    Size  Location     Type
 16599 ;;  sensor          1    wreg     enum E519
 16600 ;;  error_pos       1    9[COMRAM] unsigned char 
 16601 ;;  error_neg       1   10[COMRAM] unsigned char 
 16602 ;; Auto vars:     Size  Location     Type
 16603 ;;  sensor          1   11[COMRAM] enum E519
 16604 ;; Return value:  Size  Location     Type
 16605 ;;                  1    wreg      void 
 16606 ;; Registers used:
 16607 ;;		wreg, status,2, status,0
 16608 ;; Tracked objects:
 16609 ;;		On entry : 0/0
 16610 ;;		On exit  : 0/0
 16611 ;;		Unchanged: 0/0
 16612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16613 ;;      Params:         2       0       0       0       0       0       0
 16614 ;;      Locals:         1       0       0       0       0       0       0
 16615 ;;      Temps:          0       0       0       0       0       0       0
 16616 ;;      Totals:         3       0       0       0       0       0       0
 16617 ;;Total ram usage:        3 bytes
 16618 ;; Hardware stack levels used: 1
 16619 ;; Hardware stack levels required when called: 4
 16620 ;; This function calls:
 16621 ;;		Nothing
 16622 ;; This function is called by:
 16623 ;;		_App_HTAD_init
 16624 ;; This function uses a non-reentrant model
 16625 ;;
 16626                           
 16627                           	psect	text86
 16628  006CE0                     __ptext86:
 16629                           	callstack 0
 16630  006CE0                     _SRV_ADT7410_SetErrorSensor:
 16631                           	callstack 25
 16632                           
 16633                           ;incstack = 0
 16634                           ;SRV_ADT7410_SetErrorSensor@sensor stored from wreg
 16635  006CE0  6E0C               	movwf	SRV_ADT7410_SetErrorSensor@sensor^0,c
 16636  006CE2                     
 16637                           ;ServiceADT7410.c: 102: void SRV_ADT7410_SetErrorSensor(Sensor_e sensor, uint8_t error_p
      +                          os, uint8_t error_neg);ServiceADT7410.c: 103: {;ServiceADT7410.c: 104:     if(sensor == 
      +                          SENSOR_S1)
 16638  006CE2  040C               	decf	SRV_ADT7410_SetErrorSensor@sensor^0,w,c
 16639  006CE4  A4D8               	btfss	status,2,c
 16640  006CE6  EF77  F036         	goto	u8921
 16641  006CEA  EF79  F036         	goto	u8920
 16642  006CEE                     u8921:
 16643  006CEE  EF7F  F036         	goto	l9778
 16644  006CF2                     u8920:
 16645  006CF2                     
 16646                           ;ServiceADT7410.c: 105:     {;ServiceADT7410.c: 106:         errorPosSensorDianteiro = e
      +                          rror_pos;
 16647  006CF2  C00A  F1AB         	movff	SRV_ADT7410_SetErrorSensor@error_pos,_errorPosSensorDianteiro
 16648                           
 16649                           ;ServiceADT7410.c: 107:         errorNegSensorDianteiro = error_neg;
 16650  006CF6  C00B  F1AA         	movff	SRV_ADT7410_SetErrorSensor@error_neg,_errorNegSensorDianteiro
 16651                           
 16652                           ;ServiceADT7410.c: 109:     }
 16653  006CFA  EF9B  F036         	goto	l1284
 16654  006CFE                     l9778:
 16655  006CFE  0E02               	movlw	2
 16656  006D00  180C               	xorwf	SRV_ADT7410_SetErrorSensor@sensor^0,w,c
 16657  006D02  A4D8               	btfss	status,2,c
 16658  006D04  EF86  F036         	goto	u8931
 16659  006D08  EF88  F036         	goto	u8930
 16660  006D0C                     u8931:
 16661  006D0C  EF8E  F036         	goto	l9782
 16662  006D10                     u8930:
 16663  006D10                     
 16664                           ;ServiceADT7410.c: 111:     {;ServiceADT7410.c: 112:         errorPosSensorTraseiro = er
      +                          ror_pos;
 16665  006D10  C00A  F1A9         	movff	SRV_ADT7410_SetErrorSensor@error_pos,_errorPosSensorTraseiro
 16666                           
 16667                           ;ServiceADT7410.c: 113:         errorNegSensorTraseiro = error_neg;
 16668  006D14  C00B  F1A8         	movff	SRV_ADT7410_SetErrorSensor@error_neg,_errorNegSensorTraseiro
 16669                           
 16670                           ;ServiceADT7410.c: 114:     }
 16671  006D18  EF9B  F036         	goto	l1284
 16672  006D1C                     l9782:
 16673  006D1C  0E03               	movlw	3
 16674  006D1E  180C               	xorwf	SRV_ADT7410_SetErrorSensor@sensor^0,w,c
 16675  006D20  A4D8               	btfss	status,2,c
 16676  006D22  EF95  F036         	goto	u8941
 16677  006D26  EF97  F036         	goto	u8940
 16678  006D2A                     u8941:
 16679  006D2A  EF9B  F036         	goto	l1284
 16680  006D2E                     u8940:
 16681  006D2E                     
 16682                           ;ServiceADT7410.c: 116:     {;ServiceADT7410.c: 117:         errorPosSensorUmidade = err
      +                          or_pos;
 16683  006D2E  C00A  F1A7         	movff	SRV_ADT7410_SetErrorSensor@error_pos,_errorPosSensorUmidade
 16684                           
 16685                           ;ServiceADT7410.c: 118:         errorNegSensorUmidade = error_neg;
 16686  006D32  C00B  F1A6         	movff	SRV_ADT7410_SetErrorSensor@error_neg,_errorNegSensorUmidade
 16687  006D36                     l1284:
 16688  006D36  0012               	return		;funcret
 16689  006D38                     __end_of_SRV_ADT7410_SetErrorSensor:
 16690                           	callstack 0
 16691                           
 16692 ;; *************** function _SRV_ADT7410_Init *****************
 16693 ;; Defined at:
 16694 ;;		line 56 in file "ServiceADT7410.c"
 16695 ;; Parameters:    Size  Location     Type
 16696 ;;		None
 16697 ;; Auto vars:     Size  Location     Type
 16698 ;;  y               2   72[COMRAM] int 
 16699 ;; Return value:  Size  Location     Type
 16700 ;;                  1    wreg      void 
 16701 ;; Registers used:
 16702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16703 ;; Tracked objects:
 16704 ;;		On entry : 0/0
 16705 ;;		On exit  : 0/0
 16706 ;;		Unchanged: 0/0
 16707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16708 ;;      Params:         0       0       0       0       0       0       0
 16709 ;;      Locals:         2       0       0       0       0       0       0
 16710 ;;      Temps:          0       0       0       0       0       0       0
 16711 ;;      Totals:         2       0       0       0       0       0       0
 16712 ;;Total ram usage:        2 bytes
 16713 ;; Hardware stack levels used: 1
 16714 ;; Hardware stack levels required when called: 15
 16715 ;; This function calls:
 16716 ;;		_SRV_ADT7410_ReadMeanSensor
 16717 ;; This function is called by:
 16718 ;;		_App_HTAD_init
 16719 ;; This function uses a non-reentrant model
 16720 ;;
 16721                           
 16722                           	psect	text87
 16723  004E08                     __ptext87:
 16724                           	callstack 0
 16725  004E08                     _SRV_ADT7410_Init:
 16726                           	callstack 14
 16727  004E08  9E8A               	bcf	138,7,c	;volatile
 16728  004E0A  9C8A               	bcf	138,6,c	;volatile
 16729  004E0C  9889               	bcf	137,4,c	;volatile
 16730  004E0E  8A89               	bsf	137,5,c	;volatile
 16731  004E10                     
 16732                           ;ServiceADT7410.c: 64:     Sensor1.CELSIUS = 0;
 16733  004E10  0E00               	movlw	0
 16734  004E12  0101               	movlb	1	; () banked
 16735  004E14  6FC0               	movwf	_Sensor1& (0+255),b
 16736  004E16  0E00               	movlw	0
 16737  004E18  6FC1               	movwf	(_Sensor1+1)& (0+255),b
 16738  004E1A  0E00               	movlw	0
 16739  004E1C  6FC2               	movwf	(_Sensor1+2)& (0+255),b
 16740  004E1E  0E00               	movlw	0
 16741  004E20  6FC3               	movwf	(_Sensor1+3)& (0+255),b
 16742                           
 16743                           ;ServiceADT7410.c: 65:     Sensor2.CELSIUS = 0;
 16744  004E22  0E00               	movlw	0
 16745  004E24  6FB8               	movwf	_Sensor2& (0+255),b
 16746  004E26  0E00               	movlw	0
 16747  004E28  6FB9               	movwf	(_Sensor2+1)& (0+255),b
 16748  004E2A  0E00               	movlw	0
 16749  004E2C  6FBA               	movwf	(_Sensor2+2)& (0+255),b
 16750  004E2E  0E00               	movlw	0
 16751  004E30  6FBB               	movwf	(_Sensor2+3)& (0+255),b
 16752                           
 16753                           ;ServiceADT7410.c: 66:     Sensor3.CELSIUS = 0;
 16754  004E32  0E00               	movlw	0
 16755  004E34  6FB0               	movwf	_Sensor3& (0+255),b
 16756  004E36  0E00               	movlw	0
 16757  004E38  6FB1               	movwf	(_Sensor3+1)& (0+255),b
 16758  004E3A  0E00               	movlw	0
 16759  004E3C  6FB2               	movwf	(_Sensor3+2)& (0+255),b
 16760  004E3E  0E00               	movlw	0
 16761  004E40  6FB3               	movwf	(_Sensor3+3)& (0+255),b
 16762                           
 16763                           ;ServiceADT7410.c: 68:     Sensor1.FAHRENHEIT = 0;
 16764  004E42  0E00               	movlw	0
 16765  004E44  6FC4               	movwf	(_Sensor1+4)& (0+255),b
 16766  004E46  0E00               	movlw	0
 16767  004E48  6FC5               	movwf	(_Sensor1+5)& (0+255),b
 16768  004E4A  0E00               	movlw	0
 16769  004E4C  6FC6               	movwf	(_Sensor1+6)& (0+255),b
 16770  004E4E  0E00               	movlw	0
 16771  004E50  6FC7               	movwf	(_Sensor1+7)& (0+255),b
 16772                           
 16773                           ;ServiceADT7410.c: 69:     Sensor2.FAHRENHEIT = 0;
 16774  004E52  0E00               	movlw	0
 16775  004E54  6FBC               	movwf	(_Sensor2+4)& (0+255),b
 16776  004E56  0E00               	movlw	0
 16777  004E58  6FBD               	movwf	(_Sensor2+5)& (0+255),b
 16778  004E5A  0E00               	movlw	0
 16779  004E5C  6FBE               	movwf	(_Sensor2+6)& (0+255),b
 16780  004E5E  0E00               	movlw	0
 16781  004E60  6FBF               	movwf	(_Sensor2+7)& (0+255),b
 16782                           
 16783                           ;ServiceADT7410.c: 70:     Sensor3.FAHRENHEIT = 0;
 16784  004E62  0E00               	movlw	0
 16785  004E64  6FB4               	movwf	(_Sensor3+4)& (0+255),b
 16786  004E66  0E00               	movlw	0
 16787  004E68  6FB5               	movwf	(_Sensor3+5)& (0+255),b
 16788  004E6A  0E00               	movlw	0
 16789  004E6C  6FB6               	movwf	(_Sensor3+6)& (0+255),b
 16790  004E6E  0E00               	movlw	0
 16791  004E70  6FB7               	movwf	(_Sensor3+7)& (0+255),b
 16792                           
 16793                           ;ServiceADT7410.c: 72:     errorPosSensorDianteiro = 0;
 16794  004E72  0E00               	movlw	0
 16795  004E74  6FAB               	movwf	_errorPosSensorDianteiro& (0+255),b
 16796                           
 16797                           ;ServiceADT7410.c: 73:     errorNegSensorDianteiro = 0;
 16798  004E76  0E00               	movlw	0
 16799  004E78  6FAA               	movwf	_errorNegSensorDianteiro& (0+255),b
 16800                           
 16801                           ;ServiceADT7410.c: 74:     errorPosSensorTraseiro = 0;
 16802  004E7A  0E00               	movlw	0
 16803  004E7C  6FA9               	movwf	_errorPosSensorTraseiro& (0+255),b
 16804                           
 16805                           ;ServiceADT7410.c: 75:     errorNegSensorTraseiro = 0;
 16806  004E7E  0E00               	movlw	0
 16807  004E80  6FA8               	movwf	_errorNegSensorTraseiro& (0+255),b
 16808                           
 16809                           ;ServiceADT7410.c: 76:     errorPosSensorUmidade = 0;
 16810  004E82  0E00               	movlw	0
 16811  004E84  6FA7               	movwf	_errorPosSensorUmidade& (0+255),b
 16812                           
 16813                           ;ServiceADT7410.c: 77:     errorNegSensorUmidade = 0;
 16814  004E86  0E00               	movlw	0
 16815  004E88  6FA6               	movwf	_errorNegSensorUmidade& (0+255),b
 16816                           
 16817                           ;ServiceADT7410.c: 79:     int y;;ServiceADT7410.c: 80:     for (y = 0; y < 25; y++) {
 16818  004E8A  0E00               	movlw	0
 16819  004E8C  6E4A               	movwf	(SRV_ADT7410_Init@y+1)^0,c
 16820  004E8E  0E00               	movlw	0
 16821  004E90  6E49               	movwf	SRV_ADT7410_Init@y^0,c
 16822  004E92                     l13126:
 16823                           
 16824                           ;ServiceADT7410.c: 81:         SRV_ADT7410_ReadMeanSensor(SENSOR_S1,FAHRENHEIT,&Sensor1.
      +                          FAHRENHEIT);
 16825  004E92  0E01               	movlw	1
 16826  004E94  0100               	movlb	0	; () banked
 16827  004E96  6F6D               	movwf	SRV_ADT7410_ReadMeanSensor@typeRead& (0+255),b
 16828  004E98  0EC4               	movlw	low (_Sensor1+4)
 16829  004E9A  6F6E               	movwf	SRV_ADT7410_ReadMeanSensor@value& (0+255),b
 16830  004E9C  0E01               	movlw	high (_Sensor1+4)
 16831  004E9E  6F6F               	movwf	(SRV_ADT7410_ReadMeanSensor@value+1)& (0+255),b
 16832  004EA0  0E01               	movlw	1
 16833  004EA2  EC37  F011         	call	_SRV_ADT7410_ReadMeanSensor
 16834                           
 16835                           ;ServiceADT7410.c: 82:         SRV_ADT7410_ReadMeanSensor(SENSOR_S2,FAHRENHEIT,&Sensor2.
      +                          FAHRENHEIT);
 16836  004EA6  0E01               	movlw	1
 16837  004EA8  0100               	movlb	0	; () banked
 16838  004EAA  6F6D               	movwf	SRV_ADT7410_ReadMeanSensor@typeRead& (0+255),b
 16839  004EAC  0EBC               	movlw	low (_Sensor2+4)
 16840  004EAE  6F6E               	movwf	SRV_ADT7410_ReadMeanSensor@value& (0+255),b
 16841  004EB0  0E01               	movlw	high (_Sensor2+4)
 16842  004EB2  6F6F               	movwf	(SRV_ADT7410_ReadMeanSensor@value+1)& (0+255),b
 16843  004EB4  0E02               	movlw	2
 16844  004EB6  EC37  F011         	call	_SRV_ADT7410_ReadMeanSensor
 16845                           
 16846                           ;ServiceADT7410.c: 83:         SRV_ADT7410_ReadMeanSensor(SENSOR_S3,FAHRENHEIT,&Sensor3.
      +                          FAHRENHEIT);
 16847  004EBA  0E01               	movlw	1
 16848  004EBC  0100               	movlb	0	; () banked
 16849  004EBE  6F6D               	movwf	SRV_ADT7410_ReadMeanSensor@typeRead& (0+255),b
 16850  004EC0  0EB4               	movlw	low (_Sensor3+4)
 16851  004EC2  6F6E               	movwf	SRV_ADT7410_ReadMeanSensor@value& (0+255),b
 16852  004EC4  0E01               	movlw	high (_Sensor3+4)
 16853  004EC6  6F6F               	movwf	(SRV_ADT7410_ReadMeanSensor@value+1)& (0+255),b
 16854  004EC8  0E03               	movlw	3
 16855  004ECA  EC37  F011         	call	_SRV_ADT7410_ReadMeanSensor
 16856                           
 16857                           ;ServiceADT7410.c: 84:         SRV_ADT7410_ReadMeanSensor(SENSOR_S1,CELSIUS,&Sensor1.CEL
      +                          SIUS);
 16858  004ECE  0E00               	movlw	0
 16859  004ED0  0100               	movlb	0	; () banked
 16860  004ED2  6F6D               	movwf	SRV_ADT7410_ReadMeanSensor@typeRead& (0+255),b
 16861  004ED4  0EC0               	movlw	low _Sensor1
 16862  004ED6  6F6E               	movwf	SRV_ADT7410_ReadMeanSensor@value& (0+255),b
 16863  004ED8  0E01               	movlw	high _Sensor1
 16864  004EDA  6F6F               	movwf	(SRV_ADT7410_ReadMeanSensor@value+1)& (0+255),b
 16865  004EDC  0E01               	movlw	1
 16866  004EDE  EC37  F011         	call	_SRV_ADT7410_ReadMeanSensor
 16867                           
 16868                           ;ServiceADT7410.c: 85:         SRV_ADT7410_ReadMeanSensor(SENSOR_S2,CELSIUS,&Sensor2.CEL
      +                          SIUS);
 16869  004EE2  0E00               	movlw	0
 16870  004EE4  0100               	movlb	0	; () banked
 16871  004EE6  6F6D               	movwf	SRV_ADT7410_ReadMeanSensor@typeRead& (0+255),b
 16872  004EE8  0EB8               	movlw	low _Sensor2
 16873  004EEA  6F6E               	movwf	SRV_ADT7410_ReadMeanSensor@value& (0+255),b
 16874  004EEC  0E01               	movlw	high _Sensor2
 16875  004EEE  6F6F               	movwf	(SRV_ADT7410_ReadMeanSensor@value+1)& (0+255),b
 16876  004EF0  0E02               	movlw	2
 16877  004EF2  EC37  F011         	call	_SRV_ADT7410_ReadMeanSensor
 16878                           
 16879                           ;ServiceADT7410.c: 86:         SRV_ADT7410_ReadMeanSensor(SENSOR_S3,CELSIUS,&Sensor3.CEL
      +                          SIUS);
 16880  004EF6  0E00               	movlw	0
 16881  004EF8  0100               	movlb	0	; () banked
 16882  004EFA  6F6D               	movwf	SRV_ADT7410_ReadMeanSensor@typeRead& (0+255),b
 16883  004EFC  0EB0               	movlw	low _Sensor3
 16884  004EFE  6F6E               	movwf	SRV_ADT7410_ReadMeanSensor@value& (0+255),b
 16885  004F00  0E01               	movlw	high _Sensor3
 16886  004F02  6F6F               	movwf	(SRV_ADT7410_ReadMeanSensor@value+1)& (0+255),b
 16887  004F04  0E03               	movlw	3
 16888  004F06  EC37  F011         	call	_SRV_ADT7410_ReadMeanSensor
 16889  004F0A                     
 16890                           ;ServiceADT7410.c: 88:     }
 16891  004F0A  4A49               	infsnz	SRV_ADT7410_Init@y^0,f,c
 16892  004F0C  2A4A               	incf	(SRV_ADT7410_Init@y+1)^0,f,c
 16893  004F0E  BE4A               	btfsc	(SRV_ADT7410_Init@y+1)^0,7,c
 16894  004F10  EF93  F027         	goto	u13381
 16895  004F14  504A               	movf	(SRV_ADT7410_Init@y+1)^0,w,c
 16896  004F16  E109               	bnz	u13380
 16897  004F18  0E19               	movlw	25
 16898  004F1A  5C49               	subwf	SRV_ADT7410_Init@y^0,w,c
 16899  004F1C  A0D8               	btfss	status,0,c
 16900  004F1E  EF93  F027         	goto	u13381
 16901  004F22  EF95  F027         	goto	u13380
 16902  004F26                     u13381:
 16903  004F26  EF49  F027         	goto	l13126
 16904  004F2A                     u13380:
 16905  004F2A  0012               	return		;funcret
 16906  004F2C                     __end_of_SRV_ADT7410_Init:
 16907                           	callstack 0
 16908                           
 16909 ;; *************** function _SRV_ADT7410_ReadMeanSensor *****************
 16910 ;; Defined at:
 16911 ;;		line 139 in file "ServiceADT7410.c"
 16912 ;; Parameters:    Size  Location     Type
 16913 ;;  address         1    wreg     enum E519
 16914 ;;  typeRead        1   13[BANK0 ] enum E515
 16915 ;;  value           2   14[BANK0 ] PTR float 
 16916 ;;		 -> Sensor3(8), Sensor2(8), Sensor1(8), 
 16917 ;; Auto vars:     Size  Location     Type
 16918 ;;  address         1   22[BANK0 ] enum E519
 16919 ;;  valueAux        4   25[BANK0 ] unsigned long 
 16920 ;;  temp            2   23[BANK0 ] unsigned short 
 16921 ;;  valueMean       2   20[BANK0 ] unsigned short 
 16922 ;;  index           1   29[BANK0 ] unsigned char 
 16923 ;; Return value:  Size  Location     Type
 16924 ;;                  1    wreg      void 
 16925 ;; Registers used:
 16926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16927 ;; Tracked objects:
 16928 ;;		On entry : 0/0
 16929 ;;		On exit  : 0/0
 16930 ;;		Unchanged: 0/0
 16931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16932 ;;      Params:         0       3       0       0       0       0       0
 16933 ;;      Locals:         0      14       0       0       0       0       0
 16934 ;;      Temps:          2       0       0       0       0       0       0
 16935 ;;      Totals:         2      17       0       0       0       0       0
 16936 ;;Total ram usage:       19 bytes
 16937 ;; Hardware stack levels used: 1
 16938 ;; Hardware stack levels required when called: 14
 16939 ;; This function calls:
 16940 ;;		_SRV_ADT7410_Read
 16941 ;;		___fladd
 16942 ;;		___fldiv
 16943 ;;		___flmul
 16944 ;;		___flsub
 16945 ;;		___lldiv
 16946 ;;		___xxtofl
 16947 ;; This function is called by:
 16948 ;;		_SRV_ADT7410_Init
 16949 ;;		_SRV_ADT7410_Run
 16950 ;; This function uses a non-reentrant model
 16951 ;;
 16952                           
 16953                           	psect	text88
 16954  00226E                     __ptext88:
 16955                           	callstack 0
 16956  00226E                     _SRV_ADT7410_ReadMeanSensor:
 16957                           	callstack 14
 16958                           
 16959                           ;incstack = 0
 16960                           ;SRV_ADT7410_ReadMeanSensor@address stored from wreg
 16961  00226E  0100               	movlb	0	; () banked
 16962  002270  6F76               	movwf	SRV_ADT7410_ReadMeanSensor@address& (0+255),b
 16963  002272                     
 16964                           ;ServiceADT7410.c: 139: void SRV_ADT7410_ReadMeanSensor(Sensor_e address,TypeRead_e type
      +                          Read , float *value);ServiceADT7410.c: 140: {;ServiceADT7410.c: 142:     uint32_t valueA
      +                          ux = 0;
 16965  002272  0E00               	movlw	0
 16966  002274  0100               	movlb	0	; () banked
 16967  002276  6F79               	movwf	SRV_ADT7410_ReadMeanSensor@valueAux& (0+255),b
 16968  002278  0E00               	movlw	0
 16969  00227A  6F7A               	movwf	(SRV_ADT7410_ReadMeanSensor@valueAux+1)& (0+255),b
 16970  00227C  0E00               	movlw	0
 16971  00227E  6F7B               	movwf	(SRV_ADT7410_ReadMeanSensor@valueAux+2)& (0+255),b
 16972  002280  0E00               	movlw	0
 16973  002282  6F7C               	movwf	(SRV_ADT7410_ReadMeanSensor@valueAux+3)& (0+255),b
 16974                           
 16975                           ;ServiceADT7410.c: 145:     static uint16_t meanDianteiro[50] = {0};;ServiceADT7410.c: 1
      +                          46:     static uint16_t meanTraseiro[50] = {0};;ServiceADT7410.c: 147:     static uint16
      +                          _t meanUmidade[50] = {0};;ServiceADT7410.c: 149:     static uint8_t accumulatedDianteiro
      +                           = 0;;ServiceADT7410.c: 150:     static uint8_t accumulatedTraseiro = 0;;ServiceADT7410.
      +                          c: 151:     static uint8_t accumulatedUmidade = 0;;ServiceADT7410.c: 153:     uint8_t in
      +                          dex = 0;
 16976  002284  0E00               	movlw	0
 16977  002286  6F7D               	movwf	SRV_ADT7410_ReadMeanSensor@index& (0+255),b
 16978  002288                     
 16979                           ; BSR set to: 0
 16980                           ;ServiceADT7410.c: 155:     uint16_t temp = SRV_ADT7410_Read(address);
 16981  002288  5176               	movf	SRV_ADT7410_ReadMeanSensor@address& (0+255),w,b
 16982  00228A  EC69  F037         	call	_SRV_ADT7410_Read
 16983  00228E  C02B  F077         	movff	?_SRV_ADT7410_Read,SRV_ADT7410_ReadMeanSensor@temp
 16984  002292  C02C  F078         	movff	?_SRV_ADT7410_Read+1,SRV_ADT7410_ReadMeanSensor@temp+1
 16985  002296                     
 16986                           ;ServiceADT7410.c: 157:     if(temp)
 16987  002296  0100               	movlb	0	; () banked
 16988  002298  5177               	movf	SRV_ADT7410_ReadMeanSensor@temp& (0+255),w,b
 16989  00229A  1178               	iorwf	(SRV_ADT7410_ReadMeanSensor@temp+1)& (0+255),w,b
 16990  00229C  B4D8               	btfsc	status,2,c
 16991  00229E  EF53  F011         	goto	u13241
 16992  0022A2  EF55  F011         	goto	u13240
 16993  0022A6                     u13241:
 16994  0022A6  EF53  F014         	goto	l13106
 16995  0022AA                     u13240:
 16996  0022AA                     
 16997                           ; BSR set to: 0
 16998                           ;ServiceADT7410.c: 158:     {;ServiceADT7410.c: 159:         if(address == SENSOR_S1)
 16999  0022AA  0576               	decf	SRV_ADT7410_ReadMeanSensor@address& (0+255),w,b
 17000  0022AC  A4D8               	btfss	status,2,c
 17001  0022AE  EF5B  F011         	goto	u13251
 17002  0022B2  EF5D  F011         	goto	u13250
 17003  0022B6                     u13251:
 17004  0022B6  EF53  F012         	goto	l13042
 17005  0022BA                     u13250:
 17006  0022BA                     
 17007                           ; BSR set to: 0
 17008                           ;ServiceADT7410.c: 160:         {;ServiceADT7410.c: 161:             meanDianteiro[accum
      +                          ulatedDianteiro] = temp;
 17009  0022BA  0101               	movlb	1	; () banked
 17010  0022BC  51A5               	movf	SRV_ADT7410_ReadMeanSensor@accumulatedDianteiro& (0+255),w,b
 17011  0022BE  0D02               	mullw	2
 17012  0022C0  0E64               	movlw	low SRV_ADT7410_ReadMeanSensor@meanDianteiro
 17013  0022C2  24F3               	addwf	243,w,c
 17014  0022C4  6ED9               	movwf	fsr2l,c
 17015  0022C6  0E03               	movlw	high SRV_ADT7410_ReadMeanSensor@meanDianteiro
 17016  0022C8  20F4               	addwfc	prodh,w,c
 17017  0022CA  6EDA               	movwf	fsr2h,c
 17018  0022CC  C077  FFDE         	movff	SRV_ADT7410_ReadMeanSensor@temp,postinc2
 17019  0022D0  C078  FFDD         	movff	SRV_ADT7410_ReadMeanSensor@temp+1,postdec2
 17020  0022D4                     
 17021                           ; BSR set to: 1
 17022                           ;ServiceADT7410.c: 162:             accumulatedDianteiro++;
 17023  0022D4  2BA5               	incf	SRV_ADT7410_ReadMeanSensor@accumulatedDianteiro& (0+255),f,b
 17024  0022D6                     
 17025                           ; BSR set to: 1
 17026                           ;ServiceADT7410.c: 163:             if(accumulatedDianteiro >= 50)
 17027  0022D6  0E31               	movlw	49
 17028  0022D8  65A5               	cpfsgt	SRV_ADT7410_ReadMeanSensor@accumulatedDianteiro& (0+255),b
 17029  0022DA  EF71  F011         	goto	u13261
 17030  0022DE  EF73  F011         	goto	u13260
 17031  0022E2                     u13261:
 17032  0022E2  EF75  F011         	goto	l1306
 17033  0022E6                     u13260:
 17034  0022E6                     
 17035                           ; BSR set to: 1
 17036                           ;ServiceADT7410.c: 164:                 accumulatedDianteiro = 0;
 17037  0022E6  0E00               	movlw	0
 17038  0022E8  6FA5               	movwf	SRV_ADT7410_ReadMeanSensor@accumulatedDianteiro& (0+255),b
 17039  0022EA                     l1306:
 17040                           
 17041                           ; BSR set to: 1
 17042                           ;ServiceADT7410.c: 166:             for (index = 0; index < 50; index++)
 17043  0022EA  0E00               	movlw	0
 17044  0022EC  0100               	movlb	0	; () banked
 17045  0022EE  6F7D               	movwf	SRV_ADT7410_ReadMeanSensor@index& (0+255),b
 17046  0022F0                     l13024:
 17047                           
 17048                           ; BSR set to: 0
 17049                           ;ServiceADT7410.c: 167:             {;ServiceADT7410.c: 168:                 valueAux = 
      +                          valueAux + meanDianteiro[index];
 17050  0022F0  517D               	movf	SRV_ADT7410_ReadMeanSensor@index& (0+255),w,b
 17051  0022F2  0D02               	mullw	2
 17052  0022F4  0E64               	movlw	low SRV_ADT7410_ReadMeanSensor@meanDianteiro
 17053  0022F6  24F3               	addwf	243,w,c
 17054  0022F8  6ED9               	movwf	fsr2l,c
 17055  0022FA  0E03               	movlw	high SRV_ADT7410_ReadMeanSensor@meanDianteiro
 17056  0022FC  20F4               	addwfc	prodh,w,c
 17057  0022FE  6EDA               	movwf	fsr2h,c
 17058  002300  CFDE F047          	movff	postinc2,??_SRV_ADT7410_ReadMeanSensor
 17059  002304  CFDD F048          	movff	postdec2,??_SRV_ADT7410_ReadMeanSensor+1
 17060  002308  5047               	movf	??_SRV_ADT7410_ReadMeanSensor^0,w,c
 17061  00230A  2579               	addwf	SRV_ADT7410_ReadMeanSensor@valueAux& (0+255),w,b
 17062  00230C  6F79               	movwf	SRV_ADT7410_ReadMeanSensor@valueAux& (0+255),b
 17063  00230E  5048               	movf	(??_SRV_ADT7410_ReadMeanSensor+1)^0,w,c
 17064  002310  217A               	addwfc	(SRV_ADT7410_ReadMeanSensor@valueAux+1)& (0+255),w,b
 17065  002312  6F7A               	movwf	(SRV_ADT7410_ReadMeanSensor@valueAux+1)& (0+255),b
 17066  002314  0E00               	movlw	0
 17067  002316  217B               	addwfc	(SRV_ADT7410_ReadMeanSensor@valueAux+2)& (0+255),w,b
 17068  002318  6F7B               	movwf	(SRV_ADT7410_ReadMeanSensor@valueAux+2)& (0+255),b
 17069  00231A  0E00               	movlw	0
 17070  00231C  217C               	addwfc	(SRV_ADT7410_ReadMeanSensor@valueAux+3)& (0+255),w,b
 17071  00231E  6F7C               	movwf	(SRV_ADT7410_ReadMeanSensor@valueAux+3)& (0+255),b
 17072  002320                     
 17073                           ; BSR set to: 0
 17074                           ;ServiceADT7410.c: 169:             }
 17075  002320  2B7D               	incf	SRV_ADT7410_ReadMeanSensor@index& (0+255),f,b
 17076  002322                     
 17077                           ; BSR set to: 0
 17078  002322  0E31               	movlw	49
 17079  002324  657D               	cpfsgt	SRV_ADT7410_ReadMeanSensor@index& (0+255),b
 17080  002326  EF97  F011         	goto	u13271
 17081  00232A  EF99  F011         	goto	u13270
 17082  00232E                     u13271:
 17083  00232E  EF78  F011         	goto	l13024
 17084  002332                     u13270:
 17085  002332                     
 17086                           ; BSR set to: 0
 17087                           ;ServiceADT7410.c: 171:             valueMean = (uint16_t)(valueAux / 50);
 17088  002332  C079  F016         	movff	SRV_ADT7410_ReadMeanSensor@valueAux,___lldiv@dividend
 17089  002336  C07A  F017         	movff	SRV_ADT7410_ReadMeanSensor@valueAux+1,___lldiv@dividend+1
 17090  00233A  C07B  F018         	movff	SRV_ADT7410_ReadMeanSensor@valueAux+2,___lldiv@dividend+2
 17091  00233E  C07C  F019         	movff	SRV_ADT7410_ReadMeanSensor@valueAux+3,___lldiv@dividend+3
 17092  002342  0E32               	movlw	50
 17093  002344  6E1A               	movwf	___lldiv@divisor^0,c
 17094  002346  0E00               	movlw	0
 17095  002348  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 17096  00234A  0E00               	movlw	0
 17097  00234C  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 17098  00234E  0E00               	movlw	0
 17099  002350  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 17100  002352  EC73  F032         	call	___lldiv	;wreg free
 17101  002356  C016  F074         	movff	?___lldiv,SRV_ADT7410_ReadMeanSensor@valueMean
 17102  00235A  C017  F075         	movff	?___lldiv+1,SRV_ADT7410_ReadMeanSensor@valueMean+1
 17103  00235E                     
 17104                           ;ServiceADT7410.c: 174:             *value = (float)(((float)valueMean + errorPosSensorD
      +                          ianteiro - errorNegSensorDianteiro) / 128.0f);
 17105  00235E  0101               	movlb	1	; () banked
 17106  002360  51AB               	movf	_errorPosSensorDianteiro& (0+255),w,b
 17107  002362  6E0A               	movwf	___xxtofl@val^0,c
 17108  002364  6A0B               	clrf	(___xxtofl@val+1)^0,c
 17109  002366  6A0C               	clrf	(___xxtofl@val+2)^0,c
 17110  002368  6A0D               	clrf	(___xxtofl@val+3)^0,c
 17111  00236A  0E01               	movlw	1
 17112  00236C  EC06  F022         	call	___xxtofl
 17113  002370  C00A  F027         	movff	?___xxtofl,___fladd@a
 17114  002374  C00B  F028         	movff	?___xxtofl+1,___fladd@a+1
 17115  002378  C00C  F029         	movff	?___xxtofl+2,___fladd@a+2
 17116  00237C  C00D  F02A         	movff	?___xxtofl+3,___fladd@a+3
 17117  002380  C074  F00A         	movff	SRV_ADT7410_ReadMeanSensor@valueMean,___xxtofl@val
 17118  002384  C075  F00B         	movff	SRV_ADT7410_ReadMeanSensor@valueMean+1,___xxtofl@val+1
 17119  002388  6A0C               	clrf	(___xxtofl@val+2)^0,c
 17120  00238A  6A0D               	clrf	(___xxtofl@val+3)^0,c
 17121  00238C  0E00               	movlw	0
 17122  00238E  EC06  F022         	call	___xxtofl
 17123  002392  C00A  F023         	movff	?___xxtofl,___fladd@b
 17124  002396  C00B  F024         	movff	?___xxtofl+1,___fladd@b+1
 17125  00239A  C00C  F025         	movff	?___xxtofl+2,___fladd@b+2
 17126  00239E  C00D  F026         	movff	?___xxtofl+3,___fladd@b+3
 17127  0023A2  EC31  F017         	call	___fladd	;wreg free
 17128  0023A6  C023  F070         	movff	?___fladd,_SRV_ADT7410_ReadMeanSensor$4209
 17129  0023AA  C024  F071         	movff	?___fladd+1,_SRV_ADT7410_ReadMeanSensor$4209+1
 17130  0023AE  C025  F072         	movff	?___fladd+2,_SRV_ADT7410_ReadMeanSensor$4209+2
 17131  0023B2  C026  F073         	movff	?___fladd+3,_SRV_ADT7410_ReadMeanSensor$4209+3
 17132  0023B6                     
 17133                           ;ServiceADT7410.c: 174:             *value = (float)(((float)valueMean + errorPosSensorD
      +                          ianteiro - errorNegSensorDianteiro) / 128.0f);
 17134  0023B6  0101               	movlb	1	; () banked
 17135  0023B8  51AA               	movf	_errorNegSensorDianteiro& (0+255),w,b
 17136  0023BA  6E0A               	movwf	___xxtofl@val^0,c
 17137  0023BC  6A0B               	clrf	(___xxtofl@val+1)^0,c
 17138  0023BE  6A0C               	clrf	(___xxtofl@val+2)^0,c
 17139  0023C0  6A0D               	clrf	(___xxtofl@val+3)^0,c
 17140  0023C2  0E01               	movlw	1
 17141  0023C4  EC06  F022         	call	___xxtofl
 17142  0023C8  C00A  F037         	movff	?___xxtofl,___flsub@a
 17143  0023CC  C00B  F038         	movff	?___xxtofl+1,___flsub@a+1
 17144  0023D0  C00C  F039         	movff	?___xxtofl+2,___flsub@a+2
 17145  0023D4  C00D  F03A         	movff	?___xxtofl+3,___flsub@a+3
 17146  0023D8  C070  F033         	movff	_SRV_ADT7410_ReadMeanSensor$4209,___flsub@b
 17147  0023DC  C071  F034         	movff	_SRV_ADT7410_ReadMeanSensor$4209+1,___flsub@b+1
 17148  0023E0  C072  F035         	movff	_SRV_ADT7410_ReadMeanSensor$4209+2,___flsub@b+2
 17149  0023E4  C073  F036         	movff	_SRV_ADT7410_ReadMeanSensor$4209+3,___flsub@b+3
 17150  0023E8  EC8D  F037         	call	___flsub	;wreg free
 17151  0023EC  C033  F03B         	movff	?___flsub,___fldiv@b
 17152  0023F0  C034  F03C         	movff	?___flsub+1,___fldiv@b+1
 17153  0023F4  C035  F03D         	movff	?___flsub+2,___fldiv@b+2
 17154  0023F8  C036  F03E         	movff	?___flsub+3,___fldiv@b+3
 17155  0023FC  0E00               	movlw	0
 17156  0023FE  6E3F               	movwf	___fldiv@a^0,c
 17157  002400  0E00               	movlw	0
 17158  002402  6E40               	movwf	(___fldiv@a+1)^0,c
 17159  002404  0E00               	movlw	0
 17160  002406  6E41               	movwf	(___fldiv@a+2)^0,c
 17161  002408  0E43               	movlw	67
 17162  00240A  6E42               	movwf	(___fldiv@a+3)^0,c
 17163  00240C  ECBE  F01D         	call	___fldiv	;wreg free
 17164  002410  C06E  FFD9         	movff	SRV_ADT7410_ReadMeanSensor@value,fsr2l
 17165  002414  C06F  FFDA         	movff	SRV_ADT7410_ReadMeanSensor@value+1,fsr2h
 17166  002418  C03B  FFDE         	movff	?___fldiv,postinc2
 17167  00241C  C03C  FFDE         	movff	?___fldiv+1,postinc2
 17168  002420  C03D  FFDE         	movff	?___fldiv+2,postinc2
 17169  002424  C03E  FFDE         	movff	?___fldiv+3,postinc2
 17170  002428                     
 17171                           ;ServiceADT7410.c: 176:             if(typeRead == 1){*value = 1.8 * *value + 32;}
 17172  002428  0100               	movlb	0	; () banked
 17173  00242A  056D               	decf	SRV_ADT7410_ReadMeanSensor@typeRead& (0+255),w,b
 17174  00242C  A4D8               	btfss	status,2,c
 17175  00242E  EF1B  F012         	goto	u13281
 17176  002432  EF1D  F012         	goto	u13280
 17177  002436                     u13281:
 17178  002436  EF5F  F014         	goto	l1323
 17179  00243A                     u13280:
 17180  00243A                     
 17181                           ; BSR set to: 0
 17182  00243A  0E66               	movlw	102
 17183  00243C  6E0E               	movwf	___flmul@a^0,c
 17184  00243E  0E66               	movlw	102
 17185  002440  6E0F               	movwf	(___flmul@a+1)^0,c
 17186  002442  0EE6               	movlw	230
 17187  002444  6E10               	movwf	(___flmul@a+2)^0,c
 17188  002446  0E3F               	movlw	63
 17189  002448  6E11               	movwf	(___flmul@a+3)^0,c
 17190  00244A  C06E  FFD9         	movff	SRV_ADT7410_ReadMeanSensor@value,fsr2l
 17191  00244E  C06F  FFDA         	movff	SRV_ADT7410_ReadMeanSensor@value+1,fsr2h
 17192  002452  CFDE F00A          	movff	postinc2,___flmul@b
 17193  002456  CFDE F00B          	movff	postinc2,___flmul@b+1
 17194  00245A  CFDE F00C          	movff	postinc2,___flmul@b+2
 17195  00245E  CFDE F00D          	movff	postinc2,___flmul@b+3
 17196  002462  ECA9  F01B         	call	___flmul	;wreg free
 17197  002466  C00A  F023         	movff	?___flmul,___fladd@b
 17198  00246A  C00B  F024         	movff	?___flmul+1,___fladd@b+1
 17199  00246E  C00C  F025         	movff	?___flmul+2,___fladd@b+2
 17200  002472  C00D  F026         	movff	?___flmul+3,___fladd@b+3
 17201  002476  0E00               	movlw	0
 17202  002478  6E27               	movwf	___fladd@a^0,c
 17203  00247A  0E00               	movlw	0
 17204  00247C  6E28               	movwf	(___fladd@a+1)^0,c
 17205  00247E  0E00               	movlw	0
 17206  002480  6E29               	movwf	(___fladd@a+2)^0,c
 17207  002482  0E42               	movlw	66
 17208  002484  6E2A               	movwf	(___fladd@a+3)^0,c
 17209  002486  EC31  F017         	call	___fladd	;wreg free
 17210  00248A  C06E  FFD9         	movff	SRV_ADT7410_ReadMeanSensor@value,fsr2l
 17211  00248E  C06F  FFDA         	movff	SRV_ADT7410_ReadMeanSensor@value+1,fsr2h
 17212  002492  C023  FFDE         	movff	?___fladd,postinc2
 17213  002496  C024  FFDE         	movff	?___fladd+1,postinc2
 17214  00249A  C025  FFDE         	movff	?___fladd+2,postinc2
 17215  00249E  C026  FFDE         	movff	?___fladd+3,postinc2
 17216  0024A2  EF5F  F014         	goto	l1323
 17217  0024A6                     l13042:
 17218                           
 17219                           ; BSR set to: 0
 17220  0024A6  0E02               	movlw	2
 17221  0024A8  1976               	xorwf	SRV_ADT7410_ReadMeanSensor@address& (0+255),w,b
 17222  0024AA  A4D8               	btfss	status,2,c
 17223  0024AC  EF5A  F012         	goto	u13291
 17224  0024B0  EF5C  F012         	goto	u13290
 17225  0024B4                     u13291:
 17226  0024B4  EF52  F013         	goto	l13074
 17227  0024B8                     u13290:
 17228  0024B8                     
 17229                           ; BSR set to: 0
 17230                           ;ServiceADT7410.c: 179:         {;ServiceADT7410.c: 180:             meanTraseiro[accumu
      +                          latedTraseiro] = temp;
 17231  0024B8  0101               	movlb	1	; () banked
 17232  0024BA  51A4               	movf	SRV_ADT7410_ReadMeanSensor@accumulatedTraseiro& (0+255),w,b
 17233  0024BC  0D02               	mullw	2
 17234  0024BE  0E00               	movlw	low SRV_ADT7410_ReadMeanSensor@meanTraseiro
 17235  0024C0  24F3               	addwf	243,w,c
 17236  0024C2  6ED9               	movwf	fsr2l,c
 17237  0024C4  0E03               	movlw	high SRV_ADT7410_ReadMeanSensor@meanTraseiro
 17238  0024C6  20F4               	addwfc	prodh,w,c
 17239  0024C8  6EDA               	movwf	fsr2h,c
 17240  0024CA  C077  FFDE         	movff	SRV_ADT7410_ReadMeanSensor@temp,postinc2
 17241  0024CE  C078  FFDD         	movff	SRV_ADT7410_ReadMeanSensor@temp+1,postdec2
 17242  0024D2                     
 17243                           ; BSR set to: 1
 17244                           ;ServiceADT7410.c: 181:             accumulatedTraseiro++;
 17245  0024D2  2BA4               	incf	SRV_ADT7410_ReadMeanSensor@accumulatedTraseiro& (0+255),f,b
 17246  0024D4                     
 17247                           ; BSR set to: 1
 17248                           ;ServiceADT7410.c: 182:             if(accumulatedTraseiro >= 50)
 17249  0024D4  0E31               	movlw	49
 17250  0024D6  65A4               	cpfsgt	SRV_ADT7410_ReadMeanSensor@accumulatedTraseiro& (0+255),b
 17251  0024D8  EF70  F012         	goto	u13301
 17252  0024DC  EF72  F012         	goto	u13300
 17253  0024E0                     u13301:
 17254  0024E0  EF74  F012         	goto	l1312
 17255  0024E4                     u13300:
 17256  0024E4                     
 17257                           ; BSR set to: 1
 17258                           ;ServiceADT7410.c: 183:                 accumulatedTraseiro = 0;
 17259  0024E4  0E00               	movlw	0
 17260  0024E6  6FA4               	movwf	SRV_ADT7410_ReadMeanSensor@accumulatedTraseiro& (0+255),b
 17261  0024E8                     l1312:
 17262                           
 17263                           ; BSR set to: 1
 17264                           ;ServiceADT7410.c: 185:             for (index = 0; index < 50; index++)
 17265  0024E8  0E00               	movlw	0
 17266  0024EA  0100               	movlb	0	; () banked
 17267  0024EC  6F7D               	movwf	SRV_ADT7410_ReadMeanSensor@index& (0+255),b
 17268  0024EE                     l13056:
 17269                           
 17270                           ; BSR set to: 0
 17271                           ;ServiceADT7410.c: 186:             {;ServiceADT7410.c: 187:                 valueAux = 
      +                          valueAux + meanTraseiro[index];
 17272  0024EE  517D               	movf	SRV_ADT7410_ReadMeanSensor@index& (0+255),w,b
 17273  0024F0  0D02               	mullw	2
 17274  0024F2  0E00               	movlw	low SRV_ADT7410_ReadMeanSensor@meanTraseiro
 17275  0024F4  24F3               	addwf	243,w,c
 17276  0024F6  6ED9               	movwf	fsr2l,c
 17277  0024F8  0E03               	movlw	high SRV_ADT7410_ReadMeanSensor@meanTraseiro
 17278  0024FA  20F4               	addwfc	prodh,w,c
 17279  0024FC  6EDA               	movwf	fsr2h,c
 17280  0024FE  CFDE F047          	movff	postinc2,??_SRV_ADT7410_ReadMeanSensor
 17281  002502  CFDD F048          	movff	postdec2,??_SRV_ADT7410_ReadMeanSensor+1
 17282  002506  5047               	movf	??_SRV_ADT7410_ReadMeanSensor^0,w,c
 17283  002508  2579               	addwf	SRV_ADT7410_ReadMeanSensor@valueAux& (0+255),w,b
 17284  00250A  6F79               	movwf	SRV_ADT7410_ReadMeanSensor@valueAux& (0+255),b
 17285  00250C  5048               	movf	(??_SRV_ADT7410_ReadMeanSensor+1)^0,w,c
 17286  00250E  217A               	addwfc	(SRV_ADT7410_ReadMeanSensor@valueAux+1)& (0+255),w,b
 17287  002510  6F7A               	movwf	(SRV_ADT7410_ReadMeanSensor@valueAux+1)& (0+255),b
 17288  002512  0E00               	movlw	0
 17289  002514  217B               	addwfc	(SRV_ADT7410_ReadMeanSensor@valueAux+2)& (0+255),w,b
 17290  002516  6F7B               	movwf	(SRV_ADT7410_ReadMeanSensor@valueAux+2)& (0+255),b
 17291  002518  0E00               	movlw	0
 17292  00251A  217C               	addwfc	(SRV_ADT7410_ReadMeanSensor@valueAux+3)& (0+255),w,b
 17293  00251C  6F7C               	movwf	(SRV_ADT7410_ReadMeanSensor@valueAux+3)& (0+255),b
 17294  00251E                     
 17295                           ; BSR set to: 0
 17296                           ;ServiceADT7410.c: 188:             }
 17297  00251E  2B7D               	incf	SRV_ADT7410_ReadMeanSensor@index& (0+255),f,b
 17298  002520                     
 17299                           ; BSR set to: 0
 17300  002520  0E31               	movlw	49
 17301  002522  657D               	cpfsgt	SRV_ADT7410_ReadMeanSensor@index& (0+255),b
 17302  002524  EF96  F012         	goto	u13311
 17303  002528  EF98  F012         	goto	u13310
 17304  00252C                     u13311:
 17305  00252C  EF77  F012         	goto	l13056
 17306  002530                     u13310:
 17307  002530                     
 17308                           ; BSR set to: 0
 17309                           ;ServiceADT7410.c: 190:             valueMean = (uint16_t)(valueAux / 50);
 17310  002530  C079  F016         	movff	SRV_ADT7410_ReadMeanSensor@valueAux,___lldiv@dividend
 17311  002534  C07A  F017         	movff	SRV_ADT7410_ReadMeanSensor@valueAux+1,___lldiv@dividend+1
 17312  002538  C07B  F018         	movff	SRV_ADT7410_ReadMeanSensor@valueAux+2,___lldiv@dividend+2
 17313  00253C  C07C  F019         	movff	SRV_ADT7410_ReadMeanSensor@valueAux+3,___lldiv@dividend+3
 17314  002540  0E32               	movlw	50
 17315  002542  6E1A               	movwf	___lldiv@divisor^0,c
 17316  002544  0E00               	movlw	0
 17317  002546  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 17318  002548  0E00               	movlw	0
 17319  00254A  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 17320  00254C  0E00               	movlw	0
 17321  00254E  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 17322  002550  EC73  F032         	call	___lldiv	;wreg free
 17323  002554  C016  F074         	movff	?___lldiv,SRV_ADT7410_ReadMeanSensor@valueMean
 17324  002558  C017  F075         	movff	?___lldiv+1,SRV_ADT7410_ReadMeanSensor@valueMean+1
 17325  00255C                     
 17326                           ;ServiceADT7410.c: 193:             *value = (float)(((float)valueMean + errorPosSensorT
      +                          raseiro - errorNegSensorTraseiro) / 128.0f);
 17327  00255C  0101               	movlb	1	; () banked
 17328  00255E  51A9               	movf	_errorPosSensorTraseiro& (0+255),w,b
 17329  002560  6E0A               	movwf	___xxtofl@val^0,c
 17330  002562  6A0B               	clrf	(___xxtofl@val+1)^0,c
 17331  002564  6A0C               	clrf	(___xxtofl@val+2)^0,c
 17332  002566  6A0D               	clrf	(___xxtofl@val+3)^0,c
 17333  002568  0E01               	movlw	1
 17334  00256A  EC06  F022         	call	___xxtofl
 17335  00256E  C00A  F027         	movff	?___xxtofl,___fladd@a
 17336  002572  C00B  F028         	movff	?___xxtofl+1,___fladd@a+1
 17337  002576  C00C  F029         	movff	?___xxtofl+2,___fladd@a+2
 17338  00257A  C00D  F02A         	movff	?___xxtofl+3,___fladd@a+3
 17339  00257E  C074  F00A         	movff	SRV_ADT7410_ReadMeanSensor@valueMean,___xxtofl@val
 17340  002582  C075  F00B         	movff	SRV_ADT7410_ReadMeanSensor@valueMean+1,___xxtofl@val+1
 17341  002586  6A0C               	clrf	(___xxtofl@val+2)^0,c
 17342  002588  6A0D               	clrf	(___xxtofl@val+3)^0,c
 17343  00258A  0E00               	movlw	0
 17344  00258C  EC06  F022         	call	___xxtofl
 17345  002590  C00A  F023         	movff	?___xxtofl,___fladd@b
 17346  002594  C00B  F024         	movff	?___xxtofl+1,___fladd@b+1
 17347  002598  C00C  F025         	movff	?___xxtofl+2,___fladd@b+2
 17348  00259C  C00D  F026         	movff	?___xxtofl+3,___fladd@b+3
 17349  0025A0  EC31  F017         	call	___fladd	;wreg free
 17350  0025A4  C023  F070         	movff	?___fladd,_SRV_ADT7410_ReadMeanSensor$4209
 17351  0025A8  C024  F071         	movff	?___fladd+1,_SRV_ADT7410_ReadMeanSensor$4209+1
 17352  0025AC  C025  F072         	movff	?___fladd+2,_SRV_ADT7410_ReadMeanSensor$4209+2
 17353  0025B0  C026  F073         	movff	?___fladd+3,_SRV_ADT7410_ReadMeanSensor$4209+3
 17354  0025B4                     
 17355                           ;ServiceADT7410.c: 193:             *value = (float)(((float)valueMean + errorPosSensorT
      +                          raseiro - errorNegSensorTraseiro) / 128.0f);
 17356  0025B4  0101               	movlb	1	; () banked
 17357  0025B6  51A8               	movf	_errorNegSensorTraseiro& (0+255),w,b
 17358  0025B8  6E0A               	movwf	___xxtofl@val^0,c
 17359  0025BA  6A0B               	clrf	(___xxtofl@val+1)^0,c
 17360  0025BC  6A0C               	clrf	(___xxtofl@val+2)^0,c
 17361  0025BE  6A0D               	clrf	(___xxtofl@val+3)^0,c
 17362  0025C0  0E01               	movlw	1
 17363  0025C2  EC06  F022         	call	___xxtofl
 17364  0025C6  C00A  F037         	movff	?___xxtofl,___flsub@a
 17365  0025CA  C00B  F038         	movff	?___xxtofl+1,___flsub@a+1
 17366  0025CE  C00C  F039         	movff	?___xxtofl+2,___flsub@a+2
 17367  0025D2  C00D  F03A         	movff	?___xxtofl+3,___flsub@a+3
 17368  0025D6  C070  F033         	movff	_SRV_ADT7410_ReadMeanSensor$4209,___flsub@b
 17369  0025DA  C071  F034         	movff	_SRV_ADT7410_ReadMeanSensor$4209+1,___flsub@b+1
 17370  0025DE  C072  F035         	movff	_SRV_ADT7410_ReadMeanSensor$4209+2,___flsub@b+2
 17371  0025E2  C073  F036         	movff	_SRV_ADT7410_ReadMeanSensor$4209+3,___flsub@b+3
 17372  0025E6  EC8D  F037         	call	___flsub	;wreg free
 17373  0025EA  C033  F03B         	movff	?___flsub,___fldiv@b
 17374  0025EE  C034  F03C         	movff	?___flsub+1,___fldiv@b+1
 17375  0025F2  C035  F03D         	movff	?___flsub+2,___fldiv@b+2
 17376  0025F6  C036  F03E         	movff	?___flsub+3,___fldiv@b+3
 17377  0025FA  0E00               	movlw	0
 17378  0025FC  6E3F               	movwf	___fldiv@a^0,c
 17379  0025FE  0E00               	movlw	0
 17380  002600  6E40               	movwf	(___fldiv@a+1)^0,c
 17381  002602  0E00               	movlw	0
 17382  002604  6E41               	movwf	(___fldiv@a+2)^0,c
 17383  002606  0E43               	movlw	67
 17384  002608  6E42               	movwf	(___fldiv@a+3)^0,c
 17385  00260A  ECBE  F01D         	call	___fldiv	;wreg free
 17386  00260E  C06E  FFD9         	movff	SRV_ADT7410_ReadMeanSensor@value,fsr2l
 17387  002612  C06F  FFDA         	movff	SRV_ADT7410_ReadMeanSensor@value+1,fsr2h
 17388  002616  C03B  FFDE         	movff	?___fldiv,postinc2
 17389  00261A  C03C  FFDE         	movff	?___fldiv+1,postinc2
 17390  00261E  C03D  FFDE         	movff	?___fldiv+2,postinc2
 17391  002622  C03E  FFDE         	movff	?___fldiv+3,postinc2
 17392  002626                     
 17393                           ;ServiceADT7410.c: 195:             if(typeRead == 1){*value = 1.8 * *value + 32;}
 17394  002626  0100               	movlb	0	; () banked
 17395  002628  056D               	decf	SRV_ADT7410_ReadMeanSensor@typeRead& (0+255),w,b
 17396  00262A  A4D8               	btfss	status,2,c
 17397  00262C  EF1A  F013         	goto	u13321
 17398  002630  EF1C  F013         	goto	u13320
 17399  002634                     u13321:
 17400  002634  EF5F  F014         	goto	l1323
 17401  002638                     u13320:
 17402  002638                     
 17403                           ; BSR set to: 0
 17404  002638  0E66               	movlw	102
 17405  00263A  6E0E               	movwf	___flmul@a^0,c
 17406  00263C  0E66               	movlw	102
 17407  00263E  6E0F               	movwf	(___flmul@a+1)^0,c
 17408  002640  0EE6               	movlw	230
 17409  002642  6E10               	movwf	(___flmul@a+2)^0,c
 17410  002644  0E3F               	movlw	63
 17411  002646  6E11               	movwf	(___flmul@a+3)^0,c
 17412  002648  C06E  FFD9         	movff	SRV_ADT7410_ReadMeanSensor@value,fsr2l
 17413  00264C  C06F  FFDA         	movff	SRV_ADT7410_ReadMeanSensor@value+1,fsr2h
 17414  002650  CFDE F00A          	movff	postinc2,___flmul@b
 17415  002654  CFDE F00B          	movff	postinc2,___flmul@b+1
 17416  002658  CFDE F00C          	movff	postinc2,___flmul@b+2
 17417  00265C  CFDE F00D          	movff	postinc2,___flmul@b+3
 17418  002660  ECA9  F01B         	call	___flmul	;wreg free
 17419  002664  C00A  F023         	movff	?___flmul,___fladd@b
 17420  002668  C00B  F024         	movff	?___flmul+1,___fladd@b+1
 17421  00266C  C00C  F025         	movff	?___flmul+2,___fladd@b+2
 17422  002670  C00D  F026         	movff	?___flmul+3,___fladd@b+3
 17423  002674  0E00               	movlw	0
 17424  002676  6E27               	movwf	___fladd@a^0,c
 17425  002678  0E00               	movlw	0
 17426  00267A  6E28               	movwf	(___fladd@a+1)^0,c
 17427  00267C  0E00               	movlw	0
 17428  00267E  6E29               	movwf	(___fladd@a+2)^0,c
 17429  002680  0E42               	movlw	66
 17430  002682  6E2A               	movwf	(___fladd@a+3)^0,c
 17431  002684  EC31  F017         	call	___fladd	;wreg free
 17432  002688  C06E  FFD9         	movff	SRV_ADT7410_ReadMeanSensor@value,fsr2l
 17433  00268C  C06F  FFDA         	movff	SRV_ADT7410_ReadMeanSensor@value+1,fsr2h
 17434  002690  C023  FFDE         	movff	?___fladd,postinc2
 17435  002694  C024  FFDE         	movff	?___fladd+1,postinc2
 17436  002698  C025  FFDE         	movff	?___fladd+2,postinc2
 17437  00269C  C026  FFDE         	movff	?___fladd+3,postinc2
 17438  0026A0  EF5F  F014         	goto	l1323
 17439  0026A4                     l13074:
 17440                           
 17441                           ; BSR set to: 0
 17442  0026A4  0E03               	movlw	3
 17443  0026A6  1976               	xorwf	SRV_ADT7410_ReadMeanSensor@address& (0+255),w,b
 17444  0026A8  A4D8               	btfss	status,2,c
 17445  0026AA  EF59  F013         	goto	u13331
 17446  0026AE  EF5B  F013         	goto	u13330
 17447  0026B2                     u13331:
 17448  0026B2  EF51  F014         	goto	l1310
 17449  0026B6                     u13330:
 17450  0026B6                     
 17451                           ; BSR set to: 0
 17452                           ;ServiceADT7410.c: 198:         {;ServiceADT7410.c: 199:             meanUmidade[accumul
      +                          atedUmidade] = temp;
 17453  0026B6  0101               	movlb	1	; () banked
 17454  0026B8  51A3               	movf	SRV_ADT7410_ReadMeanSensor@accumulatedUmidade& (0+255),w,b
 17455  0026BA  0D02               	mullw	2
 17456  0026BC  0E00               	movlw	low SRV_ADT7410_ReadMeanSensor@meanUmidade
 17457  0026BE  24F3               	addwf	243,w,c
 17458  0026C0  6ED9               	movwf	fsr2l,c
 17459  0026C2  0E04               	movlw	high SRV_ADT7410_ReadMeanSensor@meanUmidade
 17460  0026C4  20F4               	addwfc	prodh,w,c
 17461  0026C6  6EDA               	movwf	fsr2h,c
 17462  0026C8  C077  FFDE         	movff	SRV_ADT7410_ReadMeanSensor@temp,postinc2
 17463  0026CC  C078  FFDD         	movff	SRV_ADT7410_ReadMeanSensor@temp+1,postdec2
 17464  0026D0                     
 17465                           ; BSR set to: 1
 17466                           ;ServiceADT7410.c: 200:             accumulatedUmidade++;
 17467  0026D0  2BA3               	incf	SRV_ADT7410_ReadMeanSensor@accumulatedUmidade& (0+255),f,b
 17468  0026D2                     
 17469                           ; BSR set to: 1
 17470                           ;ServiceADT7410.c: 201:             if(accumulatedUmidade >= 50)
 17471  0026D2  0E31               	movlw	49
 17472  0026D4  65A3               	cpfsgt	SRV_ADT7410_ReadMeanSensor@accumulatedUmidade& (0+255),b
 17473  0026D6  EF6F  F013         	goto	u13341
 17474  0026DA  EF71  F013         	goto	u13340
 17475  0026DE                     u13341:
 17476  0026DE  EF73  F013         	goto	l1318
 17477  0026E2                     u13340:
 17478  0026E2                     
 17479                           ; BSR set to: 1
 17480                           ;ServiceADT7410.c: 202:                 accumulatedUmidade = 0;
 17481  0026E2  0E00               	movlw	0
 17482  0026E4  6FA3               	movwf	SRV_ADT7410_ReadMeanSensor@accumulatedUmidade& (0+255),b
 17483  0026E6                     l1318:
 17484                           
 17485                           ; BSR set to: 1
 17486                           ;ServiceADT7410.c: 204:             for (index = 0; index < 50; index++)
 17487  0026E6  0E00               	movlw	0
 17488  0026E8  0100               	movlb	0	; () banked
 17489  0026EA  6F7D               	movwf	SRV_ADT7410_ReadMeanSensor@index& (0+255),b
 17490  0026EC                     l13088:
 17491                           
 17492                           ; BSR set to: 0
 17493                           ;ServiceADT7410.c: 205:             {;ServiceADT7410.c: 206:                 valueAux = 
      +                          valueAux + meanUmidade[index];
 17494  0026EC  517D               	movf	SRV_ADT7410_ReadMeanSensor@index& (0+255),w,b
 17495  0026EE  0D02               	mullw	2
 17496  0026F0  0E00               	movlw	low SRV_ADT7410_ReadMeanSensor@meanUmidade
 17497  0026F2  24F3               	addwf	243,w,c
 17498  0026F4  6ED9               	movwf	fsr2l,c
 17499  0026F6  0E04               	movlw	high SRV_ADT7410_ReadMeanSensor@meanUmidade
 17500  0026F8  20F4               	addwfc	prodh,w,c
 17501  0026FA  6EDA               	movwf	fsr2h,c
 17502  0026FC  CFDE F047          	movff	postinc2,??_SRV_ADT7410_ReadMeanSensor
 17503  002700  CFDD F048          	movff	postdec2,??_SRV_ADT7410_ReadMeanSensor+1
 17504  002704  5047               	movf	??_SRV_ADT7410_ReadMeanSensor^0,w,c
 17505  002706  2579               	addwf	SRV_ADT7410_ReadMeanSensor@valueAux& (0+255),w,b
 17506  002708  6F79               	movwf	SRV_ADT7410_ReadMeanSensor@valueAux& (0+255),b
 17507  00270A  5048               	movf	(??_SRV_ADT7410_ReadMeanSensor+1)^0,w,c
 17508  00270C  217A               	addwfc	(SRV_ADT7410_ReadMeanSensor@valueAux+1)& (0+255),w,b
 17509  00270E  6F7A               	movwf	(SRV_ADT7410_ReadMeanSensor@valueAux+1)& (0+255),b
 17510  002710  0E00               	movlw	0
 17511  002712  217B               	addwfc	(SRV_ADT7410_ReadMeanSensor@valueAux+2)& (0+255),w,b
 17512  002714  6F7B               	movwf	(SRV_ADT7410_ReadMeanSensor@valueAux+2)& (0+255),b
 17513  002716  0E00               	movlw	0
 17514  002718  217C               	addwfc	(SRV_ADT7410_ReadMeanSensor@valueAux+3)& (0+255),w,b
 17515  00271A  6F7C               	movwf	(SRV_ADT7410_ReadMeanSensor@valueAux+3)& (0+255),b
 17516  00271C                     
 17517                           ; BSR set to: 0
 17518                           ;ServiceADT7410.c: 207:             }
 17519  00271C  2B7D               	incf	SRV_ADT7410_ReadMeanSensor@index& (0+255),f,b
 17520  00271E                     
 17521                           ; BSR set to: 0
 17522  00271E  0E31               	movlw	49
 17523  002720  657D               	cpfsgt	SRV_ADT7410_ReadMeanSensor@index& (0+255),b
 17524  002722  EF95  F013         	goto	u13351
 17525  002726  EF97  F013         	goto	u13350
 17526  00272A                     u13351:
 17527  00272A  EF76  F013         	goto	l13088
 17528  00272E                     u13350:
 17529  00272E                     
 17530                           ; BSR set to: 0
 17531                           ;ServiceADT7410.c: 209:             valueMean = (uint16_t)(valueAux / 50);
 17532  00272E  C079  F016         	movff	SRV_ADT7410_ReadMeanSensor@valueAux,___lldiv@dividend
 17533  002732  C07A  F017         	movff	SRV_ADT7410_ReadMeanSensor@valueAux+1,___lldiv@dividend+1
 17534  002736  C07B  F018         	movff	SRV_ADT7410_ReadMeanSensor@valueAux+2,___lldiv@dividend+2
 17535  00273A  C07C  F019         	movff	SRV_ADT7410_ReadMeanSensor@valueAux+3,___lldiv@dividend+3
 17536  00273E  0E32               	movlw	50
 17537  002740  6E1A               	movwf	___lldiv@divisor^0,c
 17538  002742  0E00               	movlw	0
 17539  002744  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 17540  002746  0E00               	movlw	0
 17541  002748  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 17542  00274A  0E00               	movlw	0
 17543  00274C  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 17544  00274E  EC73  F032         	call	___lldiv	;wreg free
 17545  002752  C016  F074         	movff	?___lldiv,SRV_ADT7410_ReadMeanSensor@valueMean
 17546  002756  C017  F075         	movff	?___lldiv+1,SRV_ADT7410_ReadMeanSensor@valueMean+1
 17547  00275A                     
 17548                           ;ServiceADT7410.c: 212:             *value = (float)(((float)valueMean + errorPosSensorU
      +                          midade - errorNegSensorUmidade) / 128.0f);
 17549  00275A  0101               	movlb	1	; () banked
 17550  00275C  51A7               	movf	_errorPosSensorUmidade& (0+255),w,b
 17551  00275E  6E0A               	movwf	___xxtofl@val^0,c
 17552  002760  6A0B               	clrf	(___xxtofl@val+1)^0,c
 17553  002762  6A0C               	clrf	(___xxtofl@val+2)^0,c
 17554  002764  6A0D               	clrf	(___xxtofl@val+3)^0,c
 17555  002766  0E01               	movlw	1
 17556  002768  EC06  F022         	call	___xxtofl
 17557  00276C  C00A  F027         	movff	?___xxtofl,___fladd@a
 17558  002770  C00B  F028         	movff	?___xxtofl+1,___fladd@a+1
 17559  002774  C00C  F029         	movff	?___xxtofl+2,___fladd@a+2
 17560  002778  C00D  F02A         	movff	?___xxtofl+3,___fladd@a+3
 17561  00277C  C074  F00A         	movff	SRV_ADT7410_ReadMeanSensor@valueMean,___xxtofl@val
 17562  002780  C075  F00B         	movff	SRV_ADT7410_ReadMeanSensor@valueMean+1,___xxtofl@val+1
 17563  002784  6A0C               	clrf	(___xxtofl@val+2)^0,c
 17564  002786  6A0D               	clrf	(___xxtofl@val+3)^0,c
 17565  002788  0E00               	movlw	0
 17566  00278A  EC06  F022         	call	___xxtofl
 17567  00278E  C00A  F023         	movff	?___xxtofl,___fladd@b
 17568  002792  C00B  F024         	movff	?___xxtofl+1,___fladd@b+1
 17569  002796  C00C  F025         	movff	?___xxtofl+2,___fladd@b+2
 17570  00279A  C00D  F026         	movff	?___xxtofl+3,___fladd@b+3
 17571  00279E  EC31  F017         	call	___fladd	;wreg free
 17572  0027A2  C023  F070         	movff	?___fladd,_SRV_ADT7410_ReadMeanSensor$4209
 17573  0027A6  C024  F071         	movff	?___fladd+1,_SRV_ADT7410_ReadMeanSensor$4209+1
 17574  0027AA  C025  F072         	movff	?___fladd+2,_SRV_ADT7410_ReadMeanSensor$4209+2
 17575  0027AE  C026  F073         	movff	?___fladd+3,_SRV_ADT7410_ReadMeanSensor$4209+3
 17576  0027B2                     
 17577                           ;ServiceADT7410.c: 212:             *value = (float)(((float)valueMean + errorPosSensorU
      +                          midade - errorNegSensorUmidade) / 128.0f);
 17578  0027B2  0101               	movlb	1	; () banked
 17579  0027B4  51A6               	movf	_errorNegSensorUmidade& (0+255),w,b
 17580  0027B6  6E0A               	movwf	___xxtofl@val^0,c
 17581  0027B8  6A0B               	clrf	(___xxtofl@val+1)^0,c
 17582  0027BA  6A0C               	clrf	(___xxtofl@val+2)^0,c
 17583  0027BC  6A0D               	clrf	(___xxtofl@val+3)^0,c
 17584  0027BE  0E01               	movlw	1
 17585  0027C0  EC06  F022         	call	___xxtofl
 17586  0027C4  C00A  F037         	movff	?___xxtofl,___flsub@a
 17587  0027C8  C00B  F038         	movff	?___xxtofl+1,___flsub@a+1
 17588  0027CC  C00C  F039         	movff	?___xxtofl+2,___flsub@a+2
 17589  0027D0  C00D  F03A         	movff	?___xxtofl+3,___flsub@a+3
 17590  0027D4  C070  F033         	movff	_SRV_ADT7410_ReadMeanSensor$4209,___flsub@b
 17591  0027D8  C071  F034         	movff	_SRV_ADT7410_ReadMeanSensor$4209+1,___flsub@b+1
 17592  0027DC  C072  F035         	movff	_SRV_ADT7410_ReadMeanSensor$4209+2,___flsub@b+2
 17593  0027E0  C073  F036         	movff	_SRV_ADT7410_ReadMeanSensor$4209+3,___flsub@b+3
 17594  0027E4  EC8D  F037         	call	___flsub	;wreg free
 17595  0027E8  C033  F03B         	movff	?___flsub,___fldiv@b
 17596  0027EC  C034  F03C         	movff	?___flsub+1,___fldiv@b+1
 17597  0027F0  C035  F03D         	movff	?___flsub+2,___fldiv@b+2
 17598  0027F4  C036  F03E         	movff	?___flsub+3,___fldiv@b+3
 17599  0027F8  0E00               	movlw	0
 17600  0027FA  6E3F               	movwf	___fldiv@a^0,c
 17601  0027FC  0E00               	movlw	0
 17602  0027FE  6E40               	movwf	(___fldiv@a+1)^0,c
 17603  002800  0E00               	movlw	0
 17604  002802  6E41               	movwf	(___fldiv@a+2)^0,c
 17605  002804  0E43               	movlw	67
 17606  002806  6E42               	movwf	(___fldiv@a+3)^0,c
 17607  002808  ECBE  F01D         	call	___fldiv	;wreg free
 17608  00280C  C06E  FFD9         	movff	SRV_ADT7410_ReadMeanSensor@value,fsr2l
 17609  002810  C06F  FFDA         	movff	SRV_ADT7410_ReadMeanSensor@value+1,fsr2h
 17610  002814  C03B  FFDE         	movff	?___fldiv,postinc2
 17611  002818  C03C  FFDE         	movff	?___fldiv+1,postinc2
 17612  00281C  C03D  FFDE         	movff	?___fldiv+2,postinc2
 17613  002820  C03E  FFDE         	movff	?___fldiv+3,postinc2
 17614  002824                     
 17615                           ;ServiceADT7410.c: 214:             if(typeRead == 1){*value = 1.8 * *value + 32;}
 17616  002824  0100               	movlb	0	; () banked
 17617  002826  056D               	decf	SRV_ADT7410_ReadMeanSensor@typeRead& (0+255),w,b
 17618  002828  A4D8               	btfss	status,2,c
 17619  00282A  EF19  F014         	goto	u13361
 17620  00282E  EF1B  F014         	goto	u13360
 17621  002832                     u13361:
 17622  002832  EF5F  F014         	goto	l1323
 17623  002836                     u13360:
 17624  002836                     
 17625                           ; BSR set to: 0
 17626  002836  0E66               	movlw	102
 17627  002838  6E0E               	movwf	___flmul@a^0,c
 17628  00283A  0E66               	movlw	102
 17629  00283C  6E0F               	movwf	(___flmul@a+1)^0,c
 17630  00283E  0EE6               	movlw	230
 17631  002840  6E10               	movwf	(___flmul@a+2)^0,c
 17632  002842  0E3F               	movlw	63
 17633  002844  6E11               	movwf	(___flmul@a+3)^0,c
 17634  002846  C06E  FFD9         	movff	SRV_ADT7410_ReadMeanSensor@value,fsr2l
 17635  00284A  C06F  FFDA         	movff	SRV_ADT7410_ReadMeanSensor@value+1,fsr2h
 17636  00284E  CFDE F00A          	movff	postinc2,___flmul@b
 17637  002852  CFDE F00B          	movff	postinc2,___flmul@b+1
 17638  002856  CFDE F00C          	movff	postinc2,___flmul@b+2
 17639  00285A  CFDE F00D          	movff	postinc2,___flmul@b+3
 17640  00285E  ECA9  F01B         	call	___flmul	;wreg free
 17641  002862  C00A  F023         	movff	?___flmul,___fladd@b
 17642  002866  C00B  F024         	movff	?___flmul+1,___fladd@b+1
 17643  00286A  C00C  F025         	movff	?___flmul+2,___fladd@b+2
 17644  00286E  C00D  F026         	movff	?___flmul+3,___fladd@b+3
 17645  002872  0E00               	movlw	0
 17646  002874  6E27               	movwf	___fladd@a^0,c
 17647  002876  0E00               	movlw	0
 17648  002878  6E28               	movwf	(___fladd@a+1)^0,c
 17649  00287A  0E00               	movlw	0
 17650  00287C  6E29               	movwf	(___fladd@a+2)^0,c
 17651  00287E  0E42               	movlw	66
 17652  002880  6E2A               	movwf	(___fladd@a+3)^0,c
 17653  002882  EC31  F017         	call	___fladd	;wreg free
 17654  002886  C06E  FFD9         	movff	SRV_ADT7410_ReadMeanSensor@value,fsr2l
 17655  00288A  C06F  FFDA         	movff	SRV_ADT7410_ReadMeanSensor@value+1,fsr2h
 17656  00288E  C023  FFDE         	movff	?___fladd,postinc2
 17657  002892  C024  FFDE         	movff	?___fladd+1,postinc2
 17658  002896  C025  FFDE         	movff	?___fladd+2,postinc2
 17659  00289A  C026  FFDE         	movff	?___fladd+3,postinc2
 17660  00289E  EF5F  F014         	goto	l1323
 17661  0028A2                     l1310:
 17662                           
 17663                           ; BSR set to: 0
 17664                           ;ServiceADT7410.c: 216:     }
 17665  0028A2  EF5F  F014         	goto	l1323
 17666  0028A6                     l13106:
 17667                           
 17668                           ; BSR set to: 0
 17669                           ;ServiceADT7410.c: 218:     {;ServiceADT7410.c: 219:         *value = 0;
 17670  0028A6  C06E  FFD9         	movff	SRV_ADT7410_ReadMeanSensor@value,fsr2l
 17671  0028AA  C06F  FFDA         	movff	SRV_ADT7410_ReadMeanSensor@value+1,fsr2h
 17672  0028AE  0E00               	movlw	0
 17673  0028B0  6EDE               	movwf	postinc2,c
 17674  0028B2  0E00               	movlw	0
 17675  0028B4  6EDE               	movwf	postinc2,c
 17676  0028B6  0E00               	movlw	0
 17677  0028B8  6EDE               	movwf	postinc2,c
 17678  0028BA  0E00               	movlw	0
 17679  0028BC  6EDD               	movwf	postdec2,c
 17680  0028BE                     l1323:
 17681  0028BE  0012               	return		;funcret
 17682  0028C0                     __end_of_SRV_ADT7410_ReadMeanSensor:
 17683                           	callstack 0
 17684                           
 17685 ;; *************** function ___xxtofl *****************
 17686 ;; Defined at:
 17687 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 17688 ;; Parameters:    Size  Location     Type
 17689 ;;  sign            1    wreg     unsigned char 
 17690 ;;  val             4    9[COMRAM] long 
 17691 ;; Auto vars:     Size  Location     Type
 17692 ;;  sign            1   17[COMRAM] unsigned char 
 17693 ;;  arg             4   19[COMRAM] unsigned long 
 17694 ;;  exp             1   18[COMRAM] unsigned char 
 17695 ;; Return value:  Size  Location     Type
 17696 ;;                  4    9[COMRAM] unsigned char 
 17697 ;; Registers used:
 17698 ;;		wreg, status,2, status,0
 17699 ;; Tracked objects:
 17700 ;;		On entry : 0/0
 17701 ;;		On exit  : 0/0
 17702 ;;		Unchanged: 0/0
 17703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17704 ;;      Params:         4       0       0       0       0       0       0
 17705 ;;      Locals:         6       0       0       0       0       0       0
 17706 ;;      Temps:          4       0       0       0       0       0       0
 17707 ;;      Totals:        14       0       0       0       0       0       0
 17708 ;;Total ram usage:       14 bytes
 17709 ;; Hardware stack levels used: 1
 17710 ;; Hardware stack levels required when called: 4
 17711 ;; This function calls:
 17712 ;;		Nothing
 17713 ;; This function is called by:
 17714 ;;		_SRV_ADT7410_ReadMeanSensor
 17715 ;; This function uses a non-reentrant model
 17716 ;;
 17717                           
 17718                           	psect	text89
 17719  00440C                     __ptext89:
 17720                           	callstack 0
 17721  00440C                     ___xxtofl:
 17722                           	callstack 23
 17723                           
 17724                           ;incstack = 0
 17725                           ;___xxtofl@sign stored from wreg
 17726  00440C  6E12               	movwf	___xxtofl@sign^0,c
 17727  00440E  5012               	movf	___xxtofl@sign^0,w,c
 17728  004410  B4D8               	btfsc	status,2,c
 17729  004412  EF0D  F022         	goto	u12981
 17730  004416  EF0F  F022         	goto	u12980
 17731  00441A                     u12981:
 17732  00441A  EF31  F022         	goto	l2254
 17733  00441E                     u12980:
 17734  00441E  BE0D               	btfsc	(___xxtofl@val+3)^0,7,c
 17735  004420  EF16  F022         	goto	u12990
 17736  004424  EF14  F022         	goto	u12991
 17737  004428                     u12991:
 17738  004428  EF31  F022         	goto	l2254
 17739  00442C                     u12990:
 17740  00442C  C00A  F00E         	movff	___xxtofl@val,??___xxtofl
 17741  004430  C00B  F00F         	movff	___xxtofl@val+1,??___xxtofl+1
 17742  004434  C00C  F010         	movff	___xxtofl@val+2,??___xxtofl+2
 17743  004438  C00D  F011         	movff	___xxtofl@val+3,??___xxtofl+3
 17744  00443C  1E0E               	comf	??___xxtofl^0,f,c
 17745  00443E  1E0F               	comf	(??___xxtofl+1)^0,f,c
 17746  004440  1E10               	comf	(??___xxtofl+2)^0,f,c
 17747  004442  1E11               	comf	(??___xxtofl+3)^0,f,c
 17748  004444  2A0E               	incf	??___xxtofl^0,f,c
 17749  004446  0E00               	movlw	0
 17750  004448  220F               	addwfc	(??___xxtofl+1)^0,f,c
 17751  00444A  2210               	addwfc	(??___xxtofl+2)^0,f,c
 17752  00444C  2211               	addwfc	(??___xxtofl+3)^0,f,c
 17753  00444E  C00E  F014         	movff	??___xxtofl,___xxtofl@arg
 17754  004452  C00F  F015         	movff	??___xxtofl+1,___xxtofl@arg+1
 17755  004456  C010  F016         	movff	??___xxtofl+2,___xxtofl@arg+2
 17756  00445A  C011  F017         	movff	??___xxtofl+3,___xxtofl@arg+3
 17757  00445E  EF39  F022         	goto	l12846
 17758  004462                     l2254:
 17759  004462  C00A  F014         	movff	___xxtofl@val,___xxtofl@arg
 17760  004466  C00B  F015         	movff	___xxtofl@val+1,___xxtofl@arg+1
 17761  00446A  C00C  F016         	movff	___xxtofl@val+2,___xxtofl@arg+2
 17762  00446E  C00D  F017         	movff	___xxtofl@val+3,___xxtofl@arg+3
 17763  004472                     l12846:
 17764  004472  500A               	movf	___xxtofl@val^0,w,c
 17765  004474  100B               	iorwf	(___xxtofl@val+1)^0,w,c
 17766  004476  100C               	iorwf	(___xxtofl@val+2)^0,w,c
 17767  004478  100D               	iorwf	(___xxtofl@val+3)^0,w,c
 17768  00447A  A4D8               	btfss	status,2,c
 17769  00447C  EF42  F022         	goto	u13001
 17770  004480  EF44  F022         	goto	u13000
 17771  004484                     u13001:
 17772  004484  EF4E  F022         	goto	l12852
 17773  004488                     u13000:
 17774  004488  0E00               	movlw	0
 17775  00448A  6E0A               	movwf	?___xxtofl^0,c
 17776  00448C  0E00               	movlw	0
 17777  00448E  6E0B               	movwf	(?___xxtofl+1)^0,c
 17778  004490  0E00               	movlw	0
 17779  004492  6E0C               	movwf	(?___xxtofl+2)^0,c
 17780  004494  0E00               	movlw	0
 17781  004496  6E0D               	movwf	(?___xxtofl+3)^0,c
 17782  004498  EFDF  F022         	goto	l2257
 17783  00449C                     l12852:
 17784  00449C  0E96               	movlw	150
 17785  00449E  6E13               	movwf	___xxtofl@exp^0,c
 17786  0044A0  EF58  F022         	goto	l12856
 17787  0044A4                     l12854:
 17788  0044A4  2A13               	incf	___xxtofl@exp^0,f,c
 17789  0044A6  90D8               	bcf	status,0,c
 17790  0044A8  3217               	rrcf	(___xxtofl@arg+3)^0,f,c
 17791  0044AA  3216               	rrcf	(___xxtofl@arg+2)^0,f,c
 17792  0044AC  3215               	rrcf	(___xxtofl@arg+1)^0,f,c
 17793  0044AE  3214               	rrcf	___xxtofl@arg^0,f,c
 17794  0044B0                     l12856:
 17795  0044B0  0E00               	movlw	0
 17796  0044B2  1414               	andwf	___xxtofl@arg^0,w,c
 17797  0044B4  6E0E               	movwf	??___xxtofl^0,c
 17798  0044B6  0E00               	movlw	0
 17799  0044B8  1415               	andwf	(___xxtofl@arg+1)^0,w,c
 17800  0044BA  6E0F               	movwf	(??___xxtofl+1)^0,c
 17801  0044BC  0E00               	movlw	0
 17802  0044BE  1416               	andwf	(___xxtofl@arg+2)^0,w,c
 17803  0044C0  6E10               	movwf	(??___xxtofl+2)^0,c
 17804  0044C2  0EFE               	movlw	254
 17805  0044C4  1417               	andwf	(___xxtofl@arg+3)^0,w,c
 17806  0044C6  6E11               	movwf	(??___xxtofl+3)^0,c
 17807  0044C8  500E               	movf	??___xxtofl^0,w,c
 17808  0044CA  100F               	iorwf	(??___xxtofl+1)^0,w,c
 17809  0044CC  1010               	iorwf	(??___xxtofl+2)^0,w,c
 17810  0044CE  1011               	iorwf	(??___xxtofl+3)^0,w,c
 17811  0044D0  A4D8               	btfss	status,2,c
 17812  0044D2  EF6D  F022         	goto	u13011
 17813  0044D6  EF6F  F022         	goto	u13010
 17814  0044DA                     u13011:
 17815  0044DA  EF52  F022         	goto	l12854
 17816  0044DE                     u13010:
 17817  0044DE  EF7D  F022         	goto	l2261
 17818  0044E2                     l12858:
 17819  0044E2  2A13               	incf	___xxtofl@exp^0,f,c
 17820  0044E4  0E01               	movlw	1
 17821  0044E6  2614               	addwf	___xxtofl@arg^0,f,c
 17822  0044E8  0E00               	movlw	0
 17823  0044EA  2215               	addwfc	(___xxtofl@arg+1)^0,f,c
 17824  0044EC  2216               	addwfc	(___xxtofl@arg+2)^0,f,c
 17825  0044EE  2217               	addwfc	(___xxtofl@arg+3)^0,f,c
 17826  0044F0  90D8               	bcf	status,0,c
 17827  0044F2  3217               	rrcf	(___xxtofl@arg+3)^0,f,c
 17828  0044F4  3216               	rrcf	(___xxtofl@arg+2)^0,f,c
 17829  0044F6  3215               	rrcf	(___xxtofl@arg+1)^0,f,c
 17830  0044F8  3214               	rrcf	___xxtofl@arg^0,f,c
 17831  0044FA                     l2261:
 17832  0044FA  0E00               	movlw	0
 17833  0044FC  1414               	andwf	___xxtofl@arg^0,w,c
 17834  0044FE  6E0E               	movwf	??___xxtofl^0,c
 17835  004500  0E00               	movlw	0
 17836  004502  1415               	andwf	(___xxtofl@arg+1)^0,w,c
 17837  004504  6E0F               	movwf	(??___xxtofl+1)^0,c
 17838  004506  0E00               	movlw	0
 17839  004508  1416               	andwf	(___xxtofl@arg+2)^0,w,c
 17840  00450A  6E10               	movwf	(??___xxtofl+2)^0,c
 17841  00450C  0EFF               	movlw	255
 17842  00450E  1417               	andwf	(___xxtofl@arg+3)^0,w,c
 17843  004510  6E11               	movwf	(??___xxtofl+3)^0,c
 17844  004512  500E               	movf	??___xxtofl^0,w,c
 17845  004514  100F               	iorwf	(??___xxtofl+1)^0,w,c
 17846  004516  1010               	iorwf	(??___xxtofl+2)^0,w,c
 17847  004518  1011               	iorwf	(??___xxtofl+3)^0,w,c
 17848  00451A  A4D8               	btfss	status,2,c
 17849  00451C  EF92  F022         	goto	u13021
 17850  004520  EF94  F022         	goto	u13020
 17851  004524                     u13021:
 17852  004524  EF71  F022         	goto	l12858
 17853  004528                     u13020:
 17854  004528  EF9C  F022         	goto	l12866
 17855  00452C                     l12864:
 17856  00452C  0613               	decf	___xxtofl@exp^0,f,c
 17857  00452E  90D8               	bcf	status,0,c
 17858  004530  3614               	rlcf	___xxtofl@arg^0,f,c
 17859  004532  3615               	rlcf	(___xxtofl@arg+1)^0,f,c
 17860  004534  3616               	rlcf	(___xxtofl@arg+2)^0,f,c
 17861  004536  3617               	rlcf	(___xxtofl@arg+3)^0,f,c
 17862  004538                     l12866:
 17863  004538  BE16               	btfsc	(___xxtofl@arg+2)^0,7,c
 17864  00453A  EFA1  F022         	goto	u13031
 17865  00453E  EFA3  F022         	goto	u13030
 17866  004542                     u13031:
 17867  004542  EFAB  F022         	goto	l2268
 17868  004546                     u13030:
 17869  004546  0E02               	movlw	2
 17870  004548  6013               	cpfslt	___xxtofl@exp^0,c
 17871  00454A  EFA9  F022         	goto	u13041
 17872  00454E  EFAB  F022         	goto	u13040
 17873  004552                     u13041:
 17874  004552  EF96  F022         	goto	l12864
 17875  004556                     u13040:
 17876  004556                     l2268:
 17877  004556  B013               	btfsc	___xxtofl@exp^0,0,c
 17878  004558  EFB0  F022         	goto	u13051
 17879  00455C  EFB2  F022         	goto	u13050
 17880  004560                     u13051:
 17881  004560  EFB3  F022         	goto	l12872
 17882  004564                     u13050:
 17883  004564  9E16               	bcf	(___xxtofl@arg+2)^0,7,c
 17884  004566                     l12872:
 17885  004566  90D8               	bcf	status,0,c
 17886  004568  3213               	rrcf	___xxtofl@exp^0,f,c
 17887  00456A  C013  F00E         	movff	___xxtofl@exp,??___xxtofl
 17888  00456E  6A0F               	clrf	(??___xxtofl+1)^0,c
 17889  004570  6A10               	clrf	(??___xxtofl+2)^0,c
 17890  004572  6A11               	clrf	(??___xxtofl+3)^0,c
 17891  004574  C00E  F011         	movff	??___xxtofl,??___xxtofl+3
 17892  004578  6A10               	clrf	(??___xxtofl+2)^0,c
 17893  00457A  6A0F               	clrf	(??___xxtofl+1)^0,c
 17894  00457C  6A0E               	clrf	??___xxtofl^0,c
 17895  00457E  500E               	movf	??___xxtofl^0,w,c
 17896  004580  1214               	iorwf	___xxtofl@arg^0,f,c
 17897  004582  500F               	movf	(??___xxtofl+1)^0,w,c
 17898  004584  1215               	iorwf	(___xxtofl@arg+1)^0,f,c
 17899  004586  5010               	movf	(??___xxtofl+2)^0,w,c
 17900  004588  1216               	iorwf	(___xxtofl@arg+2)^0,f,c
 17901  00458A  5011               	movf	(??___xxtofl+3)^0,w,c
 17902  00458C  1217               	iorwf	(___xxtofl@arg+3)^0,f,c
 17903  00458E  5012               	movf	___xxtofl@sign^0,w,c
 17904  004590  B4D8               	btfsc	status,2,c
 17905  004592  EFCD  F022         	goto	u13061
 17906  004596  EFCF  F022         	goto	u13060
 17907  00459A                     u13061:
 17908  00459A  EFD7  F022         	goto	l12882
 17909  00459E                     u13060:
 17910  00459E  BE0D               	btfsc	(___xxtofl@val+3)^0,7,c
 17911  0045A0  EFD6  F022         	goto	u13070
 17912  0045A4  EFD4  F022         	goto	u13071
 17913  0045A8                     u13071:
 17914  0045A8  EFD7  F022         	goto	l12882
 17915  0045AC                     u13070:
 17916  0045AC  8E17               	bsf	(___xxtofl@arg+3)^0,7,c
 17917  0045AE                     l12882:
 17918  0045AE  C014  F00A         	movff	___xxtofl@arg,?___xxtofl
 17919  0045B2  C015  F00B         	movff	___xxtofl@arg+1,?___xxtofl+1
 17920  0045B6  C016  F00C         	movff	___xxtofl@arg+2,?___xxtofl+2
 17921  0045BA  C017  F00D         	movff	___xxtofl@arg+3,?___xxtofl+3
 17922  0045BE                     l2257:
 17923  0045BE  0012               	return		;funcret
 17924  0045C0                     __end_of___xxtofl:
 17925                           	callstack 0
 17926                           
 17927 ;; *************** function ___lldiv *****************
 17928 ;; Defined at:
 17929 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
 17930 ;; Parameters:    Size  Location     Type
 17931 ;;  dividend        4   21[COMRAM] unsigned long 
 17932 ;;  divisor         4   25[COMRAM] unsigned long 
 17933 ;; Auto vars:     Size  Location     Type
 17934 ;;  quotient        4   29[COMRAM] unsigned long 
 17935 ;;  counter         1   33[COMRAM] unsigned char 
 17936 ;; Return value:  Size  Location     Type
 17937 ;;                  4   21[COMRAM] unsigned long 
 17938 ;; Registers used:
 17939 ;;		wreg, status,2, status,0
 17940 ;; Tracked objects:
 17941 ;;		On entry : 0/0
 17942 ;;		On exit  : 0/0
 17943 ;;		Unchanged: 0/0
 17944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17945 ;;      Params:         8       0       0       0       0       0       0
 17946 ;;      Locals:         5       0       0       0       0       0       0
 17947 ;;      Temps:          0       0       0       0       0       0       0
 17948 ;;      Totals:        13       0       0       0       0       0       0
 17949 ;;Total ram usage:       13 bytes
 17950 ;; Hardware stack levels used: 1
 17951 ;; Hardware stack levels required when called: 4
 17952 ;; This function calls:
 17953 ;;		Nothing
 17954 ;; This function is called by:
 17955 ;;		_SRV_ADT7410_ReadMeanSensor
 17956 ;;		_mapValue
 17957 ;;		_Driver_Analog_GetValueAN0
 17958 ;;		_Driver_Analog_GetValueAN1
 17959 ;;		_Driver_Analog_GetValueAN3
 17960 ;; This function uses a non-reentrant model
 17961 ;;
 17962                           
 17963                           	psect	text90
 17964  0064E6                     __ptext90:
 17965                           	callstack 0
 17966  0064E6                     ___lldiv:
 17967                           	callstack 23
 17968  0064E6  0E00               	movlw	0
 17969  0064E8  6E1E               	movwf	___lldiv@quotient^0,c
 17970  0064EA  0E00               	movlw	0
 17971  0064EC  6E1F               	movwf	(___lldiv@quotient+1)^0,c
 17972  0064EE  0E00               	movlw	0
 17973  0064F0  6E20               	movwf	(___lldiv@quotient+2)^0,c
 17974  0064F2  0E00               	movlw	0
 17975  0064F4  6E21               	movwf	(___lldiv@quotient+3)^0,c
 17976  0064F6  501A               	movf	___lldiv@divisor^0,w,c
 17977  0064F8  101B               	iorwf	(___lldiv@divisor+1)^0,w,c
 17978  0064FA  101C               	iorwf	(___lldiv@divisor+2)^0,w,c
 17979  0064FC  101D               	iorwf	(___lldiv@divisor+3)^0,w,c
 17980  0064FE  B4D8               	btfsc	status,2,c
 17981  006500  EF84  F032         	goto	u12711
 17982  006504  EF86  F032         	goto	u12710
 17983  006508                     u12711:
 17984  006508  EFBC  F032         	goto	l1626
 17985  00650C                     u12710:
 17986  00650C  0E01               	movlw	1
 17987  00650E  6E22               	movwf	___lldiv@counter^0,c
 17988  006510  EF90  F032         	goto	l12640
 17989  006514                     l12638:
 17990  006514  90D8               	bcf	status,0,c
 17991  006516  361A               	rlcf	___lldiv@divisor^0,f,c
 17992  006518  361B               	rlcf	(___lldiv@divisor+1)^0,f,c
 17993  00651A  361C               	rlcf	(___lldiv@divisor+2)^0,f,c
 17994  00651C  361D               	rlcf	(___lldiv@divisor+3)^0,f,c
 17995  00651E  2A22               	incf	___lldiv@counter^0,f,c
 17996  006520                     l12640:
 17997  006520  AE1D               	btfss	(___lldiv@divisor+3)^0,7,c
 17998  006522  EF95  F032         	goto	u12721
 17999  006526  EF97  F032         	goto	u12720
 18000  00652A                     u12721:
 18001  00652A  EF8A  F032         	goto	l12638
 18002  00652E                     u12720:
 18003  00652E                     l12642:
 18004  00652E  90D8               	bcf	status,0,c
 18005  006530  361E               	rlcf	___lldiv@quotient^0,f,c
 18006  006532  361F               	rlcf	(___lldiv@quotient+1)^0,f,c
 18007  006534  3620               	rlcf	(___lldiv@quotient+2)^0,f,c
 18008  006536  3621               	rlcf	(___lldiv@quotient+3)^0,f,c
 18009  006538  501A               	movf	___lldiv@divisor^0,w,c
 18010  00653A  5C16               	subwf	___lldiv@dividend^0,w,c
 18011  00653C  501B               	movf	(___lldiv@divisor+1)^0,w,c
 18012  00653E  5817               	subwfb	(___lldiv@dividend+1)^0,w,c
 18013  006540  501C               	movf	(___lldiv@divisor+2)^0,w,c
 18014  006542  5818               	subwfb	(___lldiv@dividend+2)^0,w,c
 18015  006544  501D               	movf	(___lldiv@divisor+3)^0,w,c
 18016  006546  5819               	subwfb	(___lldiv@dividend+3)^0,w,c
 18017  006548  A0D8               	btfss	status,0,c
 18018  00654A  EFA9  F032         	goto	u12731
 18019  00654E  EFAB  F032         	goto	u12730
 18020  006552                     u12731:
 18021  006552  EFB4  F032         	goto	l12650
 18022  006556                     u12730:
 18023  006556  501A               	movf	___lldiv@divisor^0,w,c
 18024  006558  5E16               	subwf	___lldiv@dividend^0,f,c
 18025  00655A  501B               	movf	(___lldiv@divisor+1)^0,w,c
 18026  00655C  5A17               	subwfb	(___lldiv@dividend+1)^0,f,c
 18027  00655E  501C               	movf	(___lldiv@divisor+2)^0,w,c
 18028  006560  5A18               	subwfb	(___lldiv@dividend+2)^0,f,c
 18029  006562  501D               	movf	(___lldiv@divisor+3)^0,w,c
 18030  006564  5A19               	subwfb	(___lldiv@dividend+3)^0,f,c
 18031  006566  801E               	bsf	___lldiv@quotient^0,0,c
 18032  006568                     l12650:
 18033  006568  90D8               	bcf	status,0,c
 18034  00656A  321D               	rrcf	(___lldiv@divisor+3)^0,f,c
 18035  00656C  321C               	rrcf	(___lldiv@divisor+2)^0,f,c
 18036  00656E  321B               	rrcf	(___lldiv@divisor+1)^0,f,c
 18037  006570  321A               	rrcf	___lldiv@divisor^0,f,c
 18038  006572  2E22               	decfsz	___lldiv@counter^0,f,c
 18039  006574  EF97  F032         	goto	l12642
 18040  006578                     l1626:
 18041  006578  C01E  F016         	movff	___lldiv@quotient,?___lldiv
 18042  00657C  C01F  F017         	movff	___lldiv@quotient+1,?___lldiv+1
 18043  006580  C020  F018         	movff	___lldiv@quotient+2,?___lldiv+2
 18044  006584  C021  F019         	movff	___lldiv@quotient+3,?___lldiv+3
 18045  006588  0012               	return		;funcret
 18046  00658A                     __end_of___lldiv:
 18047                           	callstack 0
 18048                           
 18049 ;; *************** function ___flsub *****************
 18050 ;; Defined at:
 18051 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
 18052 ;; Parameters:    Size  Location     Type
 18053 ;;  b               4   50[COMRAM] unsigned long 
 18054 ;;  a               4   54[COMRAM] unsigned long 
 18055 ;; Auto vars:     Size  Location     Type
 18056 ;;		None
 18057 ;; Return value:  Size  Location     Type
 18058 ;;                  4   50[COMRAM] unsigned long 
 18059 ;; Registers used:
 18060 ;;		wreg, status,2, status,0, cstack
 18061 ;; Tracked objects:
 18062 ;;		On entry : 0/0
 18063 ;;		On exit  : 0/0
 18064 ;;		Unchanged: 0/0
 18065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18066 ;;      Params:         8       0       0       0       0       0       0
 18067 ;;      Locals:         0       0       0       0       0       0       0
 18068 ;;      Temps:          0       0       0       0       0       0       0
 18069 ;;      Totals:         8       0       0       0       0       0       0
 18070 ;;Total ram usage:        8 bytes
 18071 ;; Hardware stack levels used: 1
 18072 ;; Hardware stack levels required when called: 5
 18073 ;; This function calls:
 18074 ;;		___fladd
 18075 ;; This function is called by:
 18076 ;;		_SRV_ADT7410_ReadMeanSensor
 18077 ;;		_efgtoa
 18078 ;; This function uses a non-reentrant model
 18079 ;;
 18080                           
 18081                           	psect	text91
 18082  006F1A                     __ptext91:
 18083                           	callstack 0
 18084  006F1A                     ___flsub:
 18085                           	callstack 22
 18086  006F1A  0E00               	movlw	0
 18087  006F1C  1A37               	xorwf	___flsub@a^0,f,c
 18088  006F1E  0E00               	movlw	0
 18089  006F20  1A38               	xorwf	(___flsub@a+1)^0,f,c
 18090  006F22  0E00               	movlw	0
 18091  006F24  1A39               	xorwf	(___flsub@a+2)^0,f,c
 18092  006F26  0E80               	movlw	128
 18093  006F28  1A3A               	xorwf	(___flsub@a+3)^0,f,c
 18094  006F2A  C033  F023         	movff	___flsub@b,___fladd@b
 18095  006F2E  C034  F024         	movff	___flsub@b+1,___fladd@b+1
 18096  006F32  C035  F025         	movff	___flsub@b+2,___fladd@b+2
 18097  006F36  C036  F026         	movff	___flsub@b+3,___fladd@b+3
 18098  006F3A  C037  F027         	movff	___flsub@a,___fladd@a
 18099  006F3E  C038  F028         	movff	___flsub@a+1,___fladd@a+1
 18100  006F42  C039  F029         	movff	___flsub@a+2,___fladd@a+2
 18101  006F46  C03A  F02A         	movff	___flsub@a+3,___fladd@a+3
 18102  006F4A  EC31  F017         	call	___fladd	;wreg free
 18103  006F4E  C023  F033         	movff	?___fladd,?___flsub
 18104  006F52  C024  F034         	movff	?___fladd+1,?___flsub+1
 18105  006F56  C025  F035         	movff	?___fladd+2,?___flsub+2
 18106  006F5A  C026  F036         	movff	?___fladd+3,?___flsub+3
 18107  006F5E  0012               	return		;funcret
 18108  006F60                     __end_of___flsub:
 18109                           	callstack 0
 18110                           
 18111 ;; *************** function ___fladd *****************
 18112 ;; Defined at:
 18113 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
 18114 ;; Parameters:    Size  Location     Type
 18115 ;;  b               4   34[COMRAM] unsigned long 
 18116 ;;  a               4   38[COMRAM] unsigned long 
 18117 ;; Auto vars:     Size  Location     Type
 18118 ;;  grs             1   49[COMRAM] unsigned char 
 18119 ;;  bexp            1   48[COMRAM] unsigned char 
 18120 ;;  aexp            1   47[COMRAM] unsigned char 
 18121 ;;  signs           1   46[COMRAM] unsigned char 
 18122 ;; Return value:  Size  Location     Type
 18123 ;;                  4   34[COMRAM] unsigned char 
 18124 ;; Registers used:
 18125 ;;		wreg, status,2, status,0
 18126 ;; Tracked objects:
 18127 ;;		On entry : 0/0
 18128 ;;		On exit  : 0/0
 18129 ;;		Unchanged: 0/0
 18130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18131 ;;      Params:         8       0       0       0       0       0       0
 18132 ;;      Locals:         4       0       0       0       0       0       0
 18133 ;;      Temps:          4       0       0       0       0       0       0
 18134 ;;      Totals:        16       0       0       0       0       0       0
 18135 ;;Total ram usage:       16 bytes
 18136 ;; Hardware stack levels used: 1
 18137 ;; Hardware stack levels required when called: 4
 18138 ;; This function calls:
 18139 ;;		Nothing
 18140 ;; This function is called by:
 18141 ;;		_SRV_ADT7410_ReadMeanSensor
 18142 ;;		___flsub
 18143 ;;		_efgtoa
 18144 ;; This function uses a non-reentrant model
 18145 ;;
 18146                           
 18147                           	psect	text92
 18148  002E62                     __ptext92:
 18149                           	callstack 0
 18150  002E62                     ___fladd:
 18151                           	callstack 22
 18152  002E62  5026               	movf	(___fladd@b+3)^0,w,c
 18153  002E64  0B80               	andlw	128
 18154  002E66  6E2F               	movwf	___fladd@signs^0,c
 18155  002E68  5026               	movf	(___fladd@b+3)^0,w,c
 18156  002E6A  2426               	addwf	(___fladd@b+3)^0,w,c
 18157  002E6C  6E31               	movwf	___fladd@bexp^0,c
 18158  002E6E  AE25               	btfss	(___fladd@b+2)^0,7,c
 18159  002E70  EF3C  F017         	goto	u10191
 18160  002E74  EF3E  F017         	goto	u10190
 18161  002E78                     u10191:
 18162  002E78  EF3F  F017         	goto	l11176
 18163  002E7C                     u10190:
 18164  002E7C  8031               	bsf	___fladd@bexp^0,0,c
 18165  002E7E                     l11176:
 18166  002E7E  5031               	movf	___fladd@bexp^0,w,c
 18167  002E80  B4D8               	btfsc	status,2,c
 18168  002E82  EF45  F017         	goto	u10201
 18169  002E86  EF47  F017         	goto	u10200
 18170  002E8A                     u10201:
 18171  002E8A  EF5C  F017         	goto	l11186
 18172  002E8E                     u10200:
 18173  002E8E  2831               	incf	___fladd@bexp^0,w,c
 18174  002E90  A4D8               	btfss	status,2,c
 18175  002E92  EF4D  F017         	goto	u10211
 18176  002E96  EF4F  F017         	goto	u10210
 18177  002E9A                     u10211:
 18178  002E9A  EF57  F017         	goto	l11182
 18179  002E9E                     u10210:
 18180  002E9E  0E00               	movlw	0
 18181  002EA0  6E23               	movwf	___fladd@b^0,c
 18182  002EA2  0E00               	movlw	0
 18183  002EA4  6E24               	movwf	(___fladd@b+1)^0,c
 18184  002EA6  0E00               	movlw	0
 18185  002EA8  6E25               	movwf	(___fladd@b+2)^0,c
 18186  002EAA  0E00               	movlw	0
 18187  002EAC  6E26               	movwf	(___fladd@b+3)^0,c
 18188  002EAE                     l11182:
 18189  002EAE  8E25               	bsf	(___fladd@b+2)^0,7,c
 18190  002EB0  0E00               	movlw	0
 18191  002EB2  6E26               	movwf	(___fladd@b+3)^0,c
 18192  002EB4  EF64  F017         	goto	l11188
 18193  002EB8                     l11186:
 18194  002EB8  0E00               	movlw	0
 18195  002EBA  6E23               	movwf	___fladd@b^0,c
 18196  002EBC  0E00               	movlw	0
 18197  002EBE  6E24               	movwf	(___fladd@b+1)^0,c
 18198  002EC0  0E00               	movlw	0
 18199  002EC2  6E25               	movwf	(___fladd@b+2)^0,c
 18200  002EC4  0E00               	movlw	0
 18201  002EC6  6E26               	movwf	(___fladd@b+3)^0,c
 18202  002EC8                     l11188:
 18203  002EC8  502A               	movf	(___fladd@a+3)^0,w,c
 18204  002ECA  0B80               	andlw	128
 18205  002ECC  6E30               	movwf	___fladd@aexp^0,c
 18206  002ECE  502F               	movf	___fladd@signs^0,w,c
 18207  002ED0  1830               	xorwf	___fladd@aexp^0,w,c
 18208  002ED2  B4D8               	btfsc	status,2,c
 18209  002ED4  EF6E  F017         	goto	u10221
 18210  002ED8  EF70  F017         	goto	u10220
 18211  002EDC                     u10221:
 18212  002EDC  EF71  F017         	goto	l11194
 18213  002EE0                     u10220:
 18214  002EE0  8C2F               	bsf	___fladd@signs^0,6,c
 18215  002EE2                     l11194:
 18216  002EE2  502A               	movf	(___fladd@a+3)^0,w,c
 18217  002EE4  242A               	addwf	(___fladd@a+3)^0,w,c
 18218  002EE6  6E30               	movwf	___fladd@aexp^0,c
 18219  002EE8  AE29               	btfss	(___fladd@a+2)^0,7,c
 18220  002EEA  EF79  F017         	goto	u10231
 18221  002EEE  EF7B  F017         	goto	u10230
 18222  002EF2                     u10231:
 18223  002EF2  EF7C  F017         	goto	l11200
 18224  002EF6                     u10230:
 18225  002EF6  8030               	bsf	___fladd@aexp^0,0,c
 18226  002EF8                     l11200:
 18227  002EF8  5030               	movf	___fladd@aexp^0,w,c
 18228  002EFA  B4D8               	btfsc	status,2,c
 18229  002EFC  EF82  F017         	goto	u10241
 18230  002F00  EF84  F017         	goto	u10240
 18231  002F04                     u10241:
 18232  002F04  EF99  F017         	goto	l11210
 18233  002F08                     u10240:
 18234  002F08  2830               	incf	___fladd@aexp^0,w,c
 18235  002F0A  A4D8               	btfss	status,2,c
 18236  002F0C  EF8A  F017         	goto	u10251
 18237  002F10  EF8C  F017         	goto	u10250
 18238  002F14                     u10251:
 18239  002F14  EF94  F017         	goto	l11206
 18240  002F18                     u10250:
 18241  002F18  0E00               	movlw	0
 18242  002F1A  6E27               	movwf	___fladd@a^0,c
 18243  002F1C  0E00               	movlw	0
 18244  002F1E  6E28               	movwf	(___fladd@a+1)^0,c
 18245  002F20  0E00               	movlw	0
 18246  002F22  6E29               	movwf	(___fladd@a+2)^0,c
 18247  002F24  0E00               	movlw	0
 18248  002F26  6E2A               	movwf	(___fladd@a+3)^0,c
 18249  002F28                     l11206:
 18250  002F28  8E29               	bsf	(___fladd@a+2)^0,7,c
 18251  002F2A  0E00               	movlw	0
 18252  002F2C  6E2A               	movwf	(___fladd@a+3)^0,c
 18253  002F2E  EFA1  F017         	goto	l11212
 18254  002F32                     l11210:
 18255  002F32  0E00               	movlw	0
 18256  002F34  6E27               	movwf	___fladd@a^0,c
 18257  002F36  0E00               	movlw	0
 18258  002F38  6E28               	movwf	(___fladd@a+1)^0,c
 18259  002F3A  0E00               	movlw	0
 18260  002F3C  6E29               	movwf	(___fladd@a+2)^0,c
 18261  002F3E  0E00               	movlw	0
 18262  002F40  6E2A               	movwf	(___fladd@a+3)^0,c
 18263  002F42                     l11212:
 18264  002F42  5031               	movf	___fladd@bexp^0,w,c
 18265  002F44  5C30               	subwf	___fladd@aexp^0,w,c
 18266  002F46  B0D8               	btfsc	status,0,c
 18267  002F48  EFA8  F017         	goto	u10261
 18268  002F4C  EFAA  F017         	goto	u10260
 18269  002F50                     u10261:
 18270  002F50  EFD1  F017         	goto	l11248
 18271  002F54                     u10260:
 18272  002F54  AC2F               	btfss	___fladd@signs^0,6,c
 18273  002F56  EFAF  F017         	goto	u10271
 18274  002F5A  EFB1  F017         	goto	u10270
 18275  002F5E                     u10271:
 18276  002F5E  EFB3  F017         	goto	l11218
 18277  002F62                     u10270:
 18278  002F62  0E80               	movlw	128
 18279  002F64  1A2F               	xorwf	___fladd@signs^0,f,c
 18280  002F66                     l11218:
 18281  002F66  C031  F032         	movff	___fladd@bexp,___fladd@grs
 18282  002F6A  C030  F031         	movff	___fladd@aexp,___fladd@bexp
 18283  002F6E  C032  F030         	movff	___fladd@grs,___fladd@aexp
 18284  002F72  C023  F032         	movff	___fladd@b,___fladd@grs
 18285  002F76  C027  F023         	movff	___fladd@a,___fladd@b
 18286  002F7A  C032  F027         	movff	___fladd@grs,___fladd@a
 18287  002F7E  C024  F032         	movff	___fladd@b+1,___fladd@grs
 18288  002F82  C028  F024         	movff	___fladd@a+1,___fladd@b+1
 18289  002F86  C032  F028         	movff	___fladd@grs,___fladd@a+1
 18290  002F8A  C025  F032         	movff	___fladd@b+2,___fladd@grs
 18291  002F8E  C029  F025         	movff	___fladd@a+2,___fladd@b+2
 18292  002F92  C032  F029         	movff	___fladd@grs,___fladd@a+2
 18293  002F96  C026  F032         	movff	___fladd@b+3,___fladd@grs
 18294  002F9A  C02A  F026         	movff	___fladd@a+3,___fladd@b+3
 18295  002F9E  C032  F02A         	movff	___fladd@grs,___fladd@a+3
 18296  002FA2                     l11248:
 18297  002FA2  0E00               	movlw	0
 18298  002FA4  6E32               	movwf	___fladd@grs^0,c
 18299  002FA6  5031               	movf	___fladd@bexp^0,w,c
 18300  002FA8  C030  F02B         	movff	___fladd@aexp,??___fladd
 18301  002FAC  6A2C               	clrf	(??___fladd+1)^0,c
 18302  002FAE  5E2B               	subwf	??___fladd^0,f,c
 18303  002FB0  0E00               	movlw	0
 18304  002FB2  5A2C               	subwfb	(??___fladd+1)^0,f,c
 18305  002FB4  BE2C               	btfsc	(??___fladd+1)^0,7,c
 18306  002FB6  EFE6  F017         	goto	u10281
 18307  002FBA  502C               	movf	(??___fladd+1)^0,w,c
 18308  002FBC  E109               	bnz	u10280
 18309  002FBE  0E1A               	movlw	26
 18310  002FC0  5C2B               	subwf	??___fladd^0,w,c
 18311  002FC2  A0D8               	btfss	status,0,c
 18312  002FC4  EFE6  F017         	goto	u10281
 18313  002FC8  EFE8  F017         	goto	u10280
 18314  002FCC                     u10281:
 18315  002FCC  EF1F  F018         	goto	l2128
 18316  002FD0                     u10280:
 18317  002FD0  5023               	movf	___fladd@b^0,w,c
 18318  002FD2  1024               	iorwf	(___fladd@b+1)^0,w,c
 18319  002FD4  1025               	iorwf	(___fladd@b+2)^0,w,c
 18320  002FD6  1026               	iorwf	(___fladd@b+3)^0,w,c
 18321  002FD8  A4D8               	btfss	status,2,c
 18322  002FDA  EFF1  F017         	goto	u10291
 18323  002FDE  EFF4  F017         	goto	u10290
 18324  002FE2                     u10291:
 18325  002FE2  0E01               	movlw	1
 18326  002FE4  EFF5  F017         	goto	u10300
 18327  002FE8                     u10290:
 18328  002FE8  0E00               	movlw	0
 18329  002FEA                     u10300:
 18330  002FEA  6E32               	movwf	___fladd@grs^0,c
 18331  002FEC  0E00               	movlw	0
 18332  002FEE  6E23               	movwf	___fladd@b^0,c
 18333  002FF0  0E00               	movlw	0
 18334  002FF2  6E24               	movwf	(___fladd@b+1)^0,c
 18335  002FF4  0E00               	movlw	0
 18336  002FF6  6E25               	movwf	(___fladd@b+2)^0,c
 18337  002FF8  0E00               	movlw	0
 18338  002FFA  6E26               	movwf	(___fladd@b+3)^0,c
 18339  002FFC  C030  F031         	movff	___fladd@aexp,___fladd@bexp
 18340  003000  EF28  F018         	goto	l2127
 18341  003004                     l2129:
 18342  003004  A032               	btfss	___fladd@grs^0,0,c
 18343  003006  EF07  F018         	goto	u10311
 18344  00300A  EF09  F018         	goto	u10310
 18345  00300E                     u10311:
 18346  00300E  EF0F  F018         	goto	l11260
 18347  003012                     u10310:
 18348  003012  90D8               	bcf	status,0,c
 18349  003014  3032               	rrcf	___fladd@grs^0,w,c
 18350  003016  0901               	iorlw	1
 18351  003018  6E32               	movwf	___fladd@grs^0,c
 18352  00301A  EF11  F018         	goto	l11262
 18353  00301E                     l11260:
 18354  00301E  90D8               	bcf	status,0,c
 18355  003020  3232               	rrcf	___fladd@grs^0,f,c
 18356  003022                     l11262:
 18357  003022  A023               	btfss	___fladd@b^0,0,c
 18358  003024  EF16  F018         	goto	u10321
 18359  003028  EF18  F018         	goto	u10320
 18360  00302C                     u10321:
 18361  00302C  EF19  F018         	goto	l11266
 18362  003030                     u10320:
 18363  003030  8E32               	bsf	___fladd@grs^0,7,c
 18364  003032                     l11266:
 18365  003032  3426               	rlcf	(___fladd@b+3)^0,w,c
 18366  003034  3226               	rrcf	(___fladd@b+3)^0,f,c
 18367  003036  3225               	rrcf	(___fladd@b+2)^0,f,c
 18368  003038  3224               	rrcf	(___fladd@b+1)^0,f,c
 18369  00303A  3223               	rrcf	___fladd@b^0,f,c
 18370  00303C  2A31               	incf	___fladd@bexp^0,f,c
 18371  00303E                     l2128:
 18372  00303E  5030               	movf	___fladd@aexp^0,w,c
 18373  003040  5C31               	subwf	___fladd@bexp^0,w,c
 18374  003042  A0D8               	btfss	status,0,c
 18375  003044  EF26  F018         	goto	u10331
 18376  003048  EF28  F018         	goto	u10330
 18377  00304C                     u10331:
 18378  00304C  EF02  F018         	goto	l2129
 18379  003050                     u10330:
 18380  003050                     l2127:
 18381  003050  BC2F               	btfsc	___fladd@signs^0,6,c
 18382  003052  EF2D  F018         	goto	u10341
 18383  003056  EF2F  F018         	goto	u10340
 18384  00305A                     u10341:
 18385  00305A  EF6F  F018         	goto	l11294
 18386  00305E                     u10340:
 18387  00305E  5031               	movf	___fladd@bexp^0,w,c
 18388  003060  A4D8               	btfss	status,2,c
 18389  003062  EF35  F018         	goto	u10351
 18390  003066  EF37  F018         	goto	u10350
 18391  00306A                     u10351:
 18392  00306A  EF41  F018         	goto	l11276
 18393  00306E                     u10350:
 18394  00306E  0E00               	movlw	0
 18395  003070  6E23               	movwf	?___fladd^0,c
 18396  003072  0E00               	movlw	0
 18397  003074  6E24               	movwf	(?___fladd+1)^0,c
 18398  003076  0E00               	movlw	0
 18399  003078  6E25               	movwf	(?___fladd+2)^0,c
 18400  00307A  0E00               	movlw	0
 18401  00307C  6E26               	movwf	(?___fladd+3)^0,c
 18402  00307E  EF90  F019         	goto	l2136
 18403  003082                     l11276:
 18404  003082  5027               	movf	___fladd@a^0,w,c
 18405  003084  2623               	addwf	___fladd@b^0,f,c
 18406  003086  5028               	movf	(___fladd@a+1)^0,w,c
 18407  003088  2224               	addwfc	(___fladd@b+1)^0,f,c
 18408  00308A  5029               	movf	(___fladd@a+2)^0,w,c
 18409  00308C  2225               	addwfc	(___fladd@b+2)^0,f,c
 18410  00308E  502A               	movf	(___fladd@a+3)^0,w,c
 18411  003090  2226               	addwfc	(___fladd@b+3)^0,f,c
 18412  003092  A026               	btfss	(___fladd@b+3)^0,0,c
 18413  003094  EF4E  F018         	goto	u10361
 18414  003098  EF50  F018         	goto	u10360
 18415  00309C                     u10361:
 18416  00309C  EFFC  F018         	goto	l11330
 18417  0030A0                     u10360:
 18418  0030A0  A032               	btfss	___fladd@grs^0,0,c
 18419  0030A2  EF55  F018         	goto	u10371
 18420  0030A6  EF57  F018         	goto	u10370
 18421  0030AA                     u10371:
 18422  0030AA  EF5D  F018         	goto	l11284
 18423  0030AE                     u10370:
 18424  0030AE  90D8               	bcf	status,0,c
 18425  0030B0  3032               	rrcf	___fladd@grs^0,w,c
 18426  0030B2  0901               	iorlw	1
 18427  0030B4  6E32               	movwf	___fladd@grs^0,c
 18428  0030B6  EF5F  F018         	goto	l11286
 18429  0030BA                     l11284:
 18430  0030BA  90D8               	bcf	status,0,c
 18431  0030BC  3232               	rrcf	___fladd@grs^0,f,c
 18432  0030BE                     l11286:
 18433  0030BE  A023               	btfss	___fladd@b^0,0,c
 18434  0030C0  EF64  F018         	goto	u10381
 18435  0030C4  EF66  F018         	goto	u10380
 18436  0030C8                     u10381:
 18437  0030C8  EF67  F018         	goto	l11290
 18438  0030CC                     u10380:
 18439  0030CC  8E32               	bsf	___fladd@grs^0,7,c
 18440  0030CE                     l11290:
 18441  0030CE  3426               	rlcf	(___fladd@b+3)^0,w,c
 18442  0030D0  3226               	rrcf	(___fladd@b+3)^0,f,c
 18443  0030D2  3225               	rrcf	(___fladd@b+2)^0,f,c
 18444  0030D4  3224               	rrcf	(___fladd@b+1)^0,f,c
 18445  0030D6  3223               	rrcf	___fladd@b^0,f,c
 18446  0030D8  2A31               	incf	___fladd@bexp^0,f,c
 18447  0030DA  EFFC  F018         	goto	l11330
 18448  0030DE                     l11294:
 18449  0030DE  5027               	movf	___fladd@a^0,w,c
 18450  0030E0  5C23               	subwf	___fladd@b^0,w,c
 18451  0030E2  5028               	movf	(___fladd@a+1)^0,w,c
 18452  0030E4  5824               	subwfb	(___fladd@b+1)^0,w,c
 18453  0030E6  5029               	movf	(___fladd@a+2)^0,w,c
 18454  0030E8  5825               	subwfb	(___fladd@b+2)^0,w,c
 18455  0030EA  5026               	movf	(___fladd@b+3)^0,w,c
 18456  0030EC  0A80               	xorlw	128
 18457  0030EE  6E2B               	movwf	??___fladd^0,c
 18458  0030F0  502A               	movf	(___fladd@a+3)^0,w,c
 18459  0030F2  0A80               	xorlw	128
 18460  0030F4  582B               	subwfb	??___fladd^0,w,c
 18461  0030F6  B0D8               	btfsc	status,0,c
 18462  0030F8  EF80  F018         	goto	u10391
 18463  0030FC  EF82  F018         	goto	u10390
 18464  003100                     u10391:
 18465  003100  EFAD  F018         	goto	l11304
 18466  003104                     u10390:
 18467  003104  5023               	movf	___fladd@b^0,w,c
 18468  003106  5C27               	subwf	___fladd@a^0,w,c
 18469  003108  6E2B               	movwf	??___fladd^0,c
 18470  00310A  5024               	movf	(___fladd@b+1)^0,w,c
 18471  00310C  5828               	subwfb	(___fladd@a+1)^0,w,c
 18472  00310E  6E2C               	movwf	(??___fladd+1)^0,c
 18473  003110  5025               	movf	(___fladd@b+2)^0,w,c
 18474  003112  5829               	subwfb	(___fladd@a+2)^0,w,c
 18475  003114  6E2D               	movwf	(??___fladd+2)^0,c
 18476  003116  5026               	movf	(___fladd@b+3)^0,w,c
 18477  003118  582A               	subwfb	(___fladd@a+3)^0,w,c
 18478  00311A  6E2E               	movwf	(??___fladd+3)^0,c
 18479  00311C  0EFF               	movlw	255
 18480  00311E  242B               	addwf	??___fladd^0,w,c
 18481  003120  6E23               	movwf	___fladd@b^0,c
 18482  003122  0EFF               	movlw	255
 18483  003124  202C               	addwfc	(??___fladd+1)^0,w,c
 18484  003126  6E24               	movwf	(___fladd@b+1)^0,c
 18485  003128  0EFF               	movlw	255
 18486  00312A  202D               	addwfc	(??___fladd+2)^0,w,c
 18487  00312C  6E25               	movwf	(___fladd@b+2)^0,c
 18488  00312E  0EFF               	movlw	255
 18489  003130  202E               	addwfc	(??___fladd+3)^0,w,c
 18490  003132  6E26               	movwf	(___fladd@b+3)^0,c
 18491  003134  0E80               	movlw	128
 18492  003136  1A2F               	xorwf	___fladd@signs^0,f,c
 18493  003138  6C32               	negf	___fladd@grs^0,c
 18494  00313A  5032               	movf	___fladd@grs^0,w,c
 18495  00313C  A4D8               	btfss	status,2,c
 18496  00313E  EFA3  F018         	goto	u10401
 18497  003142  EFA5  F018         	goto	u10400
 18498  003146                     u10401:
 18499  003146  EFB5  F018         	goto	l2144
 18500  00314A                     u10400:
 18501  00314A  0E01               	movlw	1
 18502  00314C  2623               	addwf	___fladd@b^0,f,c
 18503  00314E  0E00               	movlw	0
 18504  003150  2224               	addwfc	(___fladd@b+1)^0,f,c
 18505  003152  2225               	addwfc	(___fladd@b+2)^0,f,c
 18506  003154  2226               	addwfc	(___fladd@b+3)^0,f,c
 18507  003156  EFB5  F018         	goto	l2144
 18508  00315A                     l11304:
 18509  00315A  5027               	movf	___fladd@a^0,w,c
 18510  00315C  5E23               	subwf	___fladd@b^0,f,c
 18511  00315E  5028               	movf	(___fladd@a+1)^0,w,c
 18512  003160  5A24               	subwfb	(___fladd@b+1)^0,f,c
 18513  003162  5029               	movf	(___fladd@a+2)^0,w,c
 18514  003164  5A25               	subwfb	(___fladd@b+2)^0,f,c
 18515  003166  502A               	movf	(___fladd@a+3)^0,w,c
 18516  003168  5A26               	subwfb	(___fladd@b+3)^0,f,c
 18517  00316A                     l2144:
 18518  00316A  5023               	movf	___fladd@b^0,w,c
 18519  00316C  1024               	iorwf	(___fladd@b+1)^0,w,c
 18520  00316E  1025               	iorwf	(___fladd@b+2)^0,w,c
 18521  003170  1026               	iorwf	(___fladd@b+3)^0,w,c
 18522  003172  A4D8               	btfss	status,2,c
 18523  003174  EFBE  F018         	goto	u10411
 18524  003178  EFC0  F018         	goto	u10410
 18525  00317C                     u10411:
 18526  00317C  EFF5  F018         	goto	l11328
 18527  003180                     u10410:
 18528  003180  5032               	movf	___fladd@grs^0,w,c
 18529  003182  A4D8               	btfss	status,2,c
 18530  003184  EFC6  F018         	goto	u10421
 18531  003188  EFC8  F018         	goto	u10420
 18532  00318C                     u10421:
 18533  00318C  EFF5  F018         	goto	l11328
 18534  003190                     u10420:
 18535  003190  0E00               	movlw	0
 18536  003192  6E23               	movwf	?___fladd^0,c
 18537  003194  0E00               	movlw	0
 18538  003196  6E24               	movwf	(?___fladd+1)^0,c
 18539  003198  0E00               	movlw	0
 18540  00319A  6E25               	movwf	(?___fladd+2)^0,c
 18541  00319C  0E00               	movlw	0
 18542  00319E  6E26               	movwf	(?___fladd+3)^0,c
 18543  0031A0  EF90  F019         	goto	l2136
 18544  0031A4                     l11312:
 18545  0031A4  90D8               	bcf	status,0,c
 18546  0031A6  3623               	rlcf	___fladd@b^0,f,c
 18547  0031A8  3624               	rlcf	(___fladd@b+1)^0,f,c
 18548  0031AA  3625               	rlcf	(___fladd@b+2)^0,f,c
 18549  0031AC  3626               	rlcf	(___fladd@b+3)^0,f,c
 18550  0031AE  AE32               	btfss	___fladd@grs^0,7,c
 18551  0031B0  EFDC  F018         	goto	u10431
 18552  0031B4  EFDE  F018         	goto	u10430
 18553  0031B8                     u10431:
 18554  0031B8  EFDF  F018         	goto	l11318
 18555  0031BC                     u10430:
 18556  0031BC  8023               	bsf	___fladd@b^0,0,c
 18557  0031BE                     l11318:
 18558  0031BE  A032               	btfss	___fladd@grs^0,0,c
 18559  0031C0  EFE4  F018         	goto	u10441
 18560  0031C4  EFE6  F018         	goto	u10440
 18561  0031C8                     u10441:
 18562  0031C8  EFEA  F018         	goto	l11322
 18563  0031CC                     u10440:
 18564  0031CC  80D8               	bsf	status,0,c
 18565  0031CE  3632               	rlcf	___fladd@grs^0,f,c
 18566  0031D0  EFEC  F018         	goto	l11324
 18567  0031D4                     l11322:
 18568  0031D4  90D8               	bcf	status,0,c
 18569  0031D6  3632               	rlcf	___fladd@grs^0,f,c
 18570  0031D8                     l11324:
 18571  0031D8  5031               	movf	___fladd@bexp^0,w,c
 18572  0031DA  B4D8               	btfsc	status,2,c
 18573  0031DC  EFF2  F018         	goto	u10451
 18574  0031E0  EFF4  F018         	goto	u10450
 18575  0031E4                     u10451:
 18576  0031E4  EFF5  F018         	goto	l11328
 18577  0031E8                     u10450:
 18578  0031E8  0631               	decf	___fladd@bexp^0,f,c
 18579  0031EA                     l11328:
 18580  0031EA  AE25               	btfss	(___fladd@b+2)^0,7,c
 18581  0031EC  EFFA  F018         	goto	u10461
 18582  0031F0  EFFC  F018         	goto	u10460
 18583  0031F4                     u10461:
 18584  0031F4  EFD2  F018         	goto	l11312
 18585  0031F8                     u10460:
 18586  0031F8                     l11330:
 18587  0031F8  0E00               	movlw	0
 18588  0031FA  6E30               	movwf	___fladd@aexp^0,c
 18589  0031FC  AE32               	btfss	___fladd@grs^0,7,c
 18590  0031FE  EF03  F019         	goto	u10471
 18591  003202  EF05  F019         	goto	u10470
 18592  003206                     u10471:
 18593  003206  EF1D  F019         	goto	l2153
 18594  00320A                     u10470:
 18595  00320A  C032  F02B         	movff	___fladd@grs,??___fladd
 18596  00320E  0E7F               	movlw	127
 18597  003210  162B               	andwf	??___fladd^0,f,c
 18598  003212  B4D8               	btfsc	status,2,c
 18599  003214  EF0E  F019         	goto	u10481
 18600  003218  EF10  F019         	goto	u10480
 18601  00321C                     u10481:
 18602  00321C  EF14  F019         	goto	l2154
 18603  003220                     u10480:
 18604  003220                     l11336:
 18605  003220  0E01               	movlw	1
 18606  003222  6E30               	movwf	___fladd@aexp^0,c
 18607  003224  EF1D  F019         	goto	l2153
 18608  003228                     l2154:
 18609  003228  A023               	btfss	___fladd@b^0,0,c
 18610  00322A  EF19  F019         	goto	u10491
 18611  00322E  EF1B  F019         	goto	u10490
 18612  003232                     u10491:
 18613  003232  EF1D  F019         	goto	l2153
 18614  003236                     u10490:
 18615  003236  EF10  F019         	goto	l11336
 18616  00323A                     l2153:
 18617  00323A  5030               	movf	___fladd@aexp^0,w,c
 18618  00323C  B4D8               	btfsc	status,2,c
 18619  00323E  EF23  F019         	goto	u10501
 18620  003242  EF25  F019         	goto	u10500
 18621  003246                     u10501:
 18622  003246  EF50  F019         	goto	l11348
 18623  00324A                     u10500:
 18624  00324A  0E01               	movlw	1
 18625  00324C  2623               	addwf	___fladd@b^0,f,c
 18626  00324E  0E00               	movlw	0
 18627  003250  2224               	addwfc	(___fladd@b+1)^0,f,c
 18628  003252  2225               	addwfc	(___fladd@b+2)^0,f,c
 18629  003254  2226               	addwfc	(___fladd@b+3)^0,f,c
 18630  003256  A026               	btfss	(___fladd@b+3)^0,0,c
 18631  003258  EF30  F019         	goto	u10511
 18632  00325C  EF32  F019         	goto	u10510
 18633  003260                     u10511:
 18634  003260  EF50  F019         	goto	l11348
 18635  003264                     u10510:
 18636  003264  C023  F02B         	movff	___fladd@b,??___fladd
 18637  003268  C024  F02C         	movff	___fladd@b+1,??___fladd+1
 18638  00326C  C025  F02D         	movff	___fladd@b+2,??___fladd+2
 18639  003270  C026  F02E         	movff	___fladd@b+3,??___fladd+3
 18640  003274  342E               	rlcf	(??___fladd+3)^0,w,c
 18641  003276  322E               	rrcf	(??___fladd+3)^0,f,c
 18642  003278  322D               	rrcf	(??___fladd+2)^0,f,c
 18643  00327A  322C               	rrcf	(??___fladd+1)^0,f,c
 18644  00327C  322B               	rrcf	??___fladd^0,f,c
 18645  00327E  C02B  F023         	movff	??___fladd,___fladd@b
 18646  003282  C02C  F024         	movff	??___fladd+1,___fladd@b+1
 18647  003286  C02D  F025         	movff	??___fladd+2,___fladd@b+2
 18648  00328A  C02E  F026         	movff	??___fladd+3,___fladd@b+3
 18649  00328E  2831               	incf	___fladd@bexp^0,w,c
 18650  003290  B4D8               	btfsc	status,2,c
 18651  003292  EF4D  F019         	goto	u10521
 18652  003296  EF4F  F019         	goto	u10520
 18653  00329A                     u10521:
 18654  00329A  EF50  F019         	goto	l11348
 18655  00329E                     u10520:
 18656  00329E  2A31               	incf	___fladd@bexp^0,f,c
 18657  0032A0                     l11348:
 18658  0032A0  2831               	incf	___fladd@bexp^0,w,c
 18659  0032A2  B4D8               	btfsc	status,2,c
 18660  0032A4  EF56  F019         	goto	u10531
 18661  0032A8  EF58  F019         	goto	u10530
 18662  0032AC                     u10531:
 18663  0032AC  EF60  F019         	goto	l11352
 18664  0032B0                     u10530:
 18665  0032B0  5031               	movf	___fladd@bexp^0,w,c
 18666  0032B2  A4D8               	btfss	status,2,c
 18667  0032B4  EF5E  F019         	goto	u10541
 18668  0032B8  EF60  F019         	goto	u10540
 18669  0032BC                     u10541:
 18670  0032BC  EF72  F019         	goto	l11356
 18671  0032C0                     u10540:
 18672  0032C0                     l11352:
 18673  0032C0  0E00               	movlw	0
 18674  0032C2  6E23               	movwf	___fladd@b^0,c
 18675  0032C4  0E00               	movlw	0
 18676  0032C6  6E24               	movwf	(___fladd@b+1)^0,c
 18677  0032C8  0E00               	movlw	0
 18678  0032CA  6E25               	movwf	(___fladd@b+2)^0,c
 18679  0032CC  0E00               	movlw	0
 18680  0032CE  6E26               	movwf	(___fladd@b+3)^0,c
 18681  0032D0  5031               	movf	___fladd@bexp^0,w,c
 18682  0032D2  A4D8               	btfss	status,2,c
 18683  0032D4  EF6E  F019         	goto	u10551
 18684  0032D8  EF70  F019         	goto	u10550
 18685  0032DC                     u10551:
 18686  0032DC  EF72  F019         	goto	l11356
 18687  0032E0                     u10550:
 18688  0032E0  0E00               	movlw	0
 18689  0032E2  6E2F               	movwf	___fladd@signs^0,c
 18690  0032E4                     l11356:
 18691  0032E4  A031               	btfss	___fladd@bexp^0,0,c
 18692  0032E6  EF77  F019         	goto	u10561
 18693  0032EA  EF79  F019         	goto	u10560
 18694  0032EE                     u10561:
 18695  0032EE  EF7C  F019         	goto	l11360
 18696  0032F2                     u10560:
 18697  0032F2  8E25               	bsf	(___fladd@b+2)^0,7,c
 18698  0032F4  EF7D  F019         	goto	l11362
 18699  0032F8                     l11360:
 18700  0032F8  9E25               	bcf	(___fladd@b+2)^0,7,c
 18701  0032FA                     l11362:
 18702  0032FA  90D8               	bcf	status,0,c
 18703  0032FC  3031               	rrcf	___fladd@bexp^0,w,c
 18704  0032FE  6E26               	movwf	(___fladd@b+3)^0,c
 18705  003300  AE2F               	btfss	___fladd@signs^0,7,c
 18706  003302  EF85  F019         	goto	u10571
 18707  003306  EF87  F019         	goto	u10570
 18708  00330A                     u10571:
 18709  00330A  EF88  F019         	goto	l11368
 18710  00330E                     u10570:
 18711  00330E  8E26               	bsf	(___fladd@b+3)^0,7,c
 18712  003310                     l11368:
 18713  003310  C023  F023         	movff	___fladd@b,?___fladd
 18714  003314  C024  F024         	movff	___fladd@b+1,?___fladd+1
 18715  003318  C025  F025         	movff	___fladd@b+2,?___fladd+2
 18716  00331C  C026  F026         	movff	___fladd@b+3,?___fladd+3
 18717  003320                     l2136:
 18718  003320  0012               	return		;funcret
 18719  003322                     __end_of___fladd:
 18720                           	callstack 0
 18721                           
 18722 ;; *************** function ___flmul *****************
 18723 ;; Defined at:
 18724 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 18725 ;; Parameters:    Size  Location     Type
 18726 ;;  b               4    9[COMRAM] unsigned char 
 18727 ;;  a               4   13[COMRAM] unsigned char 
 18728 ;; Auto vars:     Size  Location     Type
 18729 ;;  prod            4   28[COMRAM] struct .
 18730 ;;  grs             4   23[COMRAM] unsigned long 
 18731 ;;  temp            2   32[COMRAM] struct .
 18732 ;;  bexp            1   27[COMRAM] unsigned char 
 18733 ;;  aexp            1   22[COMRAM] unsigned char 
 18734 ;;  sign            1   21[COMRAM] unsigned char 
 18735 ;; Return value:  Size  Location     Type
 18736 ;;                  4    9[COMRAM] unsigned char 
 18737 ;; Registers used:
 18738 ;;		wreg, status,2, status,0, prodl, prodh
 18739 ;; Tracked objects:
 18740 ;;		On entry : 0/0
 18741 ;;		On exit  : 0/0
 18742 ;;		Unchanged: 0/0
 18743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18744 ;;      Params:         8       0       0       0       0       0       0
 18745 ;;      Locals:        13       0       0       0       0       0       0
 18746 ;;      Temps:          4       0       0       0       0       0       0
 18747 ;;      Totals:        25       0       0       0       0       0       0
 18748 ;;Total ram usage:       25 bytes
 18749 ;; Hardware stack levels used: 1
 18750 ;; Hardware stack levels required when called: 4
 18751 ;; This function calls:
 18752 ;;		Nothing
 18753 ;; This function is called by:
 18754 ;;		_SRV_ADT7410_ReadMeanSensor
 18755 ;;		_convertFloatToBuffer
 18756 ;;		_DirectNet_Run
 18757 ;;		_efgtoa
 18758 ;;		_Convert_ftochar
 18759 ;; This function uses a non-reentrant model
 18760 ;;
 18761                           
 18762                           	psect	text93
 18763  003752                     __ptext93:
 18764                           	callstack 0
 18765  003752                     ___flmul:
 18766                           	callstack 23
 18767  003752  500D               	movf	(___flmul@b+3)^0,w,c
 18768  003754  0B80               	andlw	128
 18769  003756  6E16               	movwf	___flmul@sign^0,c
 18770  003758  500D               	movf	(___flmul@b+3)^0,w,c
 18771  00375A  240D               	addwf	(___flmul@b+3)^0,w,c
 18772  00375C  6E1C               	movwf	___flmul@bexp^0,c
 18773  00375E  AE0C               	btfss	(___flmul@b+2)^0,7,c
 18774  003760  EFB4  F01B         	goto	u11011
 18775  003764  EFB6  F01B         	goto	u11010
 18776  003768                     u11011:
 18777  003768  EFB7  F01B         	goto	l11658
 18778  00376C                     u11010:
 18779  00376C  801C               	bsf	___flmul@bexp^0,0,c
 18780  00376E                     l11658:
 18781  00376E  501C               	movf	___flmul@bexp^0,w,c
 18782  003770  B4D8               	btfsc	status,2,c
 18783  003772  EFBD  F01B         	goto	u11021
 18784  003776  EFBF  F01B         	goto	u11020
 18785  00377A                     u11021:
 18786  00377A  EFD2  F01B         	goto	l11666
 18787  00377E                     u11020:
 18788  00377E  281C               	incf	___flmul@bexp^0,w,c
 18789  003780  A4D8               	btfss	status,2,c
 18790  003782  EFC5  F01B         	goto	u11031
 18791  003786  EFC7  F01B         	goto	u11030
 18792  00378A                     u11031:
 18793  00378A  EFCF  F01B         	goto	l11664
 18794  00378E                     u11030:
 18795  00378E  0E00               	movlw	0
 18796  003790  6E0A               	movwf	___flmul@b^0,c
 18797  003792  0E00               	movlw	0
 18798  003794  6E0B               	movwf	(___flmul@b+1)^0,c
 18799  003796  0E00               	movlw	0
 18800  003798  6E0C               	movwf	(___flmul@b+2)^0,c
 18801  00379A  0E00               	movlw	0
 18802  00379C  6E0D               	movwf	(___flmul@b+3)^0,c
 18803  00379E                     l11664:
 18804  00379E  8E0C               	bsf	(___flmul@b+2)^0,7,c
 18805  0037A0  EFDA  F01B         	goto	l11668
 18806  0037A4                     l11666:
 18807  0037A4  0E00               	movlw	0
 18808  0037A6  6E0A               	movwf	___flmul@b^0,c
 18809  0037A8  0E00               	movlw	0
 18810  0037AA  6E0B               	movwf	(___flmul@b+1)^0,c
 18811  0037AC  0E00               	movlw	0
 18812  0037AE  6E0C               	movwf	(___flmul@b+2)^0,c
 18813  0037B0  0E00               	movlw	0
 18814  0037B2  6E0D               	movwf	(___flmul@b+3)^0,c
 18815  0037B4                     l11668:
 18816  0037B4  5011               	movf	(___flmul@a+3)^0,w,c
 18817  0037B6  0B80               	andlw	128
 18818  0037B8  1A16               	xorwf	___flmul@sign^0,f,c
 18819  0037BA  5011               	movf	(___flmul@a+3)^0,w,c
 18820  0037BC  2411               	addwf	(___flmul@a+3)^0,w,c
 18821  0037BE  6E17               	movwf	___flmul@aexp^0,c
 18822  0037C0  AE10               	btfss	(___flmul@a+2)^0,7,c
 18823  0037C2  EFE5  F01B         	goto	u11041
 18824  0037C6  EFE7  F01B         	goto	u11040
 18825  0037CA                     u11041:
 18826  0037CA  EFE8  F01B         	goto	l11676
 18827  0037CE                     u11040:
 18828  0037CE  8017               	bsf	___flmul@aexp^0,0,c
 18829  0037D0                     l11676:
 18830  0037D0  5017               	movf	___flmul@aexp^0,w,c
 18831  0037D2  B4D8               	btfsc	status,2,c
 18832  0037D4  EFEE  F01B         	goto	u11051
 18833  0037D8  EFF0  F01B         	goto	u11050
 18834  0037DC                     u11051:
 18835  0037DC  EF03  F01C         	goto	l11684
 18836  0037E0                     u11050:
 18837  0037E0  2817               	incf	___flmul@aexp^0,w,c
 18838  0037E2  A4D8               	btfss	status,2,c
 18839  0037E4  EFF6  F01B         	goto	u11061
 18840  0037E8  EFF8  F01B         	goto	u11060
 18841  0037EC                     u11061:
 18842  0037EC  EF00  F01C         	goto	l11682
 18843  0037F0                     u11060:
 18844  0037F0  0E00               	movlw	0
 18845  0037F2  6E0E               	movwf	___flmul@a^0,c
 18846  0037F4  0E00               	movlw	0
 18847  0037F6  6E0F               	movwf	(___flmul@a+1)^0,c
 18848  0037F8  0E00               	movlw	0
 18849  0037FA  6E10               	movwf	(___flmul@a+2)^0,c
 18850  0037FC  0E00               	movlw	0
 18851  0037FE  6E11               	movwf	(___flmul@a+3)^0,c
 18852  003800                     l11682:
 18853  003800  8E10               	bsf	(___flmul@a+2)^0,7,c
 18854  003802  EF0B  F01C         	goto	l2213
 18855  003806                     l11684:
 18856  003806  0E00               	movlw	0
 18857  003808  6E0E               	movwf	___flmul@a^0,c
 18858  00380A  0E00               	movlw	0
 18859  00380C  6E0F               	movwf	(___flmul@a+1)^0,c
 18860  00380E  0E00               	movlw	0
 18861  003810  6E10               	movwf	(___flmul@a+2)^0,c
 18862  003812  0E00               	movlw	0
 18863  003814  6E11               	movwf	(___flmul@a+3)^0,c
 18864  003816                     l2213:
 18865  003816  5017               	movf	___flmul@aexp^0,w,c
 18866  003818  B4D8               	btfsc	status,2,c
 18867  00381A  EF11  F01C         	goto	u11071
 18868  00381E  EF13  F01C         	goto	u11070
 18869  003822                     u11071:
 18870  003822  EF1B  F01C         	goto	l11688
 18871  003826                     u11070:
 18872  003826  501C               	movf	___flmul@bexp^0,w,c
 18873  003828  A4D8               	btfss	status,2,c
 18874  00382A  EF19  F01C         	goto	u11081
 18875  00382E  EF1B  F01C         	goto	u11080
 18876  003832                     u11081:
 18877  003832  EF25  F01C         	goto	l11692
 18878  003836                     u11080:
 18879  003836                     l11688:
 18880  003836  0E00               	movlw	0
 18881  003838  6E0A               	movwf	?___flmul^0,c
 18882  00383A  0E00               	movlw	0
 18883  00383C  6E0B               	movwf	(?___flmul+1)^0,c
 18884  00383E  0E00               	movlw	0
 18885  003840  6E0C               	movwf	(?___flmul+2)^0,c
 18886  003842  0E00               	movlw	0
 18887  003844  6E0D               	movwf	(?___flmul+3)^0,c
 18888  003846  EFBD  F01D         	goto	l2217
 18889  00384A                     l11692:
 18890  00384A  5010               	movf	(___flmul@a+2)^0,w,c
 18891  00384C  020A               	mulwf	___flmul@b^0,c
 18892  00384E  CFF3 F021          	movff	prodl,___flmul@temp
 18893  003852  CFF4 F022          	movff	prodh,___flmul@temp+1
 18894  003856  5021               	movf	___flmul@temp^0,w,c
 18895  003858  6E18               	movwf	___flmul@grs^0,c
 18896  00385A  6A19               	clrf	(___flmul@grs+1)^0,c
 18897  00385C  6A1A               	clrf	(___flmul@grs+2)^0,c
 18898  00385E  6A1B               	clrf	(___flmul@grs+3)^0,c
 18899  003860  5022               	movf	(___flmul@temp+1)^0,w,c
 18900  003862  6E1D               	movwf	___flmul@prod^0,c
 18901  003864  6A1E               	clrf	(___flmul@prod+1)^0,c
 18902  003866  6A1F               	clrf	(___flmul@prod+2)^0,c
 18903  003868  6A20               	clrf	(___flmul@prod+3)^0,c
 18904  00386A  500F               	movf	(___flmul@a+1)^0,w,c
 18905  00386C  020B               	mulwf	(___flmul@b+1)^0,c
 18906  00386E  CFF3 F021          	movff	prodl,___flmul@temp
 18907  003872  CFF4 F022          	movff	prodh,___flmul@temp+1
 18908  003876  5021               	movf	___flmul@temp^0,w,c
 18909  003878  2618               	addwf	___flmul@grs^0,f,c
 18910  00387A  0E00               	movlw	0
 18911  00387C  2219               	addwfc	(___flmul@grs+1)^0,f,c
 18912  00387E  221A               	addwfc	(___flmul@grs+2)^0,f,c
 18913  003880  221B               	addwfc	(___flmul@grs+3)^0,f,c
 18914  003882  5022               	movf	(___flmul@temp+1)^0,w,c
 18915  003884  261D               	addwf	___flmul@prod^0,f,c
 18916  003886  0E00               	movlw	0
 18917  003888  221E               	addwfc	(___flmul@prod+1)^0,f,c
 18918  00388A  221F               	addwfc	(___flmul@prod+2)^0,f,c
 18919  00388C  2220               	addwfc	(___flmul@prod+3)^0,f,c
 18920  00388E  500E               	movf	___flmul@a^0,w,c
 18921  003890  020C               	mulwf	(___flmul@b+2)^0,c
 18922  003892  CFF3 F021          	movff	prodl,___flmul@temp
 18923  003896  CFF4 F022          	movff	prodh,___flmul@temp+1
 18924  00389A  5021               	movf	___flmul@temp^0,w,c
 18925  00389C  2618               	addwf	___flmul@grs^0,f,c
 18926  00389E  0E00               	movlw	0
 18927  0038A0  2219               	addwfc	(___flmul@grs+1)^0,f,c
 18928  0038A2  221A               	addwfc	(___flmul@grs+2)^0,f,c
 18929  0038A4  221B               	addwfc	(___flmul@grs+3)^0,f,c
 18930  0038A6  5022               	movf	(___flmul@temp+1)^0,w,c
 18931  0038A8  261D               	addwf	___flmul@prod^0,f,c
 18932  0038AA  0E00               	movlw	0
 18933  0038AC  221E               	addwfc	(___flmul@prod+1)^0,f,c
 18934  0038AE  221F               	addwfc	(___flmul@prod+2)^0,f,c
 18935  0038B0  2220               	addwfc	(___flmul@prod+3)^0,f,c
 18936  0038B2  C01A  F01B         	movff	___flmul@grs+2,___flmul@grs+3
 18937  0038B6  C019  F01A         	movff	___flmul@grs+1,___flmul@grs+2
 18938  0038BA  C018  F019         	movff	___flmul@grs,___flmul@grs+1
 18939  0038BE  6A18               	clrf	___flmul@grs^0,c
 18940  0038C0  500E               	movf	___flmul@a^0,w,c
 18941  0038C2  020B               	mulwf	(___flmul@b+1)^0,c
 18942  0038C4  CFF3 F021          	movff	prodl,___flmul@temp
 18943  0038C8  CFF4 F022          	movff	prodh,___flmul@temp+1
 18944  0038CC  5021               	movf	___flmul@temp^0,w,c
 18945  0038CE  2618               	addwf	___flmul@grs^0,f,c
 18946  0038D0  5022               	movf	(___flmul@temp+1)^0,w,c
 18947  0038D2  2219               	addwfc	(___flmul@grs+1)^0,f,c
 18948  0038D4  0E00               	movlw	0
 18949  0038D6  221A               	addwfc	(___flmul@grs+2)^0,f,c
 18950  0038D8  0E00               	movlw	0
 18951  0038DA  221B               	addwfc	(___flmul@grs+3)^0,f,c
 18952  0038DC  500F               	movf	(___flmul@a+1)^0,w,c
 18953  0038DE  020A               	mulwf	___flmul@b^0,c
 18954  0038E0  CFF3 F021          	movff	prodl,___flmul@temp
 18955  0038E4  CFF4 F022          	movff	prodh,___flmul@temp+1
 18956  0038E8  5021               	movf	___flmul@temp^0,w,c
 18957  0038EA  2618               	addwf	___flmul@grs^0,f,c
 18958  0038EC  5022               	movf	(___flmul@temp+1)^0,w,c
 18959  0038EE  2219               	addwfc	(___flmul@grs+1)^0,f,c
 18960  0038F0  0E00               	movlw	0
 18961  0038F2  221A               	addwfc	(___flmul@grs+2)^0,f,c
 18962  0038F4  0E00               	movlw	0
 18963  0038F6  221B               	addwfc	(___flmul@grs+3)^0,f,c
 18964  0038F8  C01A  F01B         	movff	___flmul@grs+2,___flmul@grs+3
 18965  0038FC  C019  F01A         	movff	___flmul@grs+1,___flmul@grs+2
 18966  003900  C018  F019         	movff	___flmul@grs,___flmul@grs+1
 18967  003904  6A18               	clrf	___flmul@grs^0,c
 18968  003906  500E               	movf	___flmul@a^0,w,c
 18969  003908  020A               	mulwf	___flmul@b^0,c
 18970  00390A  CFF3 F021          	movff	prodl,___flmul@temp
 18971  00390E  CFF4 F022          	movff	prodh,___flmul@temp+1
 18972  003912  5021               	movf	___flmul@temp^0,w,c
 18973  003914  2618               	addwf	___flmul@grs^0,f,c
 18974  003916  5022               	movf	(___flmul@temp+1)^0,w,c
 18975  003918  2219               	addwfc	(___flmul@grs+1)^0,f,c
 18976  00391A  0E00               	movlw	0
 18977  00391C  221A               	addwfc	(___flmul@grs+2)^0,f,c
 18978  00391E  0E00               	movlw	0
 18979  003920  221B               	addwfc	(___flmul@grs+3)^0,f,c
 18980  003922  5010               	movf	(___flmul@a+2)^0,w,c
 18981  003924  020B               	mulwf	(___flmul@b+1)^0,c
 18982  003926  CFF3 F021          	movff	prodl,___flmul@temp
 18983  00392A  CFF4 F022          	movff	prodh,___flmul@temp+1
 18984  00392E  5021               	movf	___flmul@temp^0,w,c
 18985  003930  261D               	addwf	___flmul@prod^0,f,c
 18986  003932  5022               	movf	(___flmul@temp+1)^0,w,c
 18987  003934  221E               	addwfc	(___flmul@prod+1)^0,f,c
 18988  003936  0E00               	movlw	0
 18989  003938  221F               	addwfc	(___flmul@prod+2)^0,f,c
 18990  00393A  0E00               	movlw	0
 18991  00393C  2220               	addwfc	(___flmul@prod+3)^0,f,c
 18992  00393E  500F               	movf	(___flmul@a+1)^0,w,c
 18993  003940  020C               	mulwf	(___flmul@b+2)^0,c
 18994  003942  CFF3 F021          	movff	prodl,___flmul@temp
 18995  003946  CFF4 F022          	movff	prodh,___flmul@temp+1
 18996  00394A  5021               	movf	___flmul@temp^0,w,c
 18997  00394C  261D               	addwf	___flmul@prod^0,f,c
 18998  00394E  5022               	movf	(___flmul@temp+1)^0,w,c
 18999  003950  221E               	addwfc	(___flmul@prod+1)^0,f,c
 19000  003952  0E00               	movlw	0
 19001  003954  221F               	addwfc	(___flmul@prod+2)^0,f,c
 19002  003956  0E00               	movlw	0
 19003  003958  2220               	addwfc	(___flmul@prod+3)^0,f,c
 19004  00395A  5010               	movf	(___flmul@a+2)^0,w,c
 19005  00395C  020C               	mulwf	(___flmul@b+2)^0,c
 19006  00395E  CFF3 F021          	movff	prodl,___flmul@temp
 19007  003962  CFF4 F022          	movff	prodh,___flmul@temp+1
 19008  003966  5021               	movf	___flmul@temp^0,w,c
 19009  003968  6E12               	movwf	??___flmul^0,c
 19010  00396A  5022               	movf	(___flmul@temp+1)^0,w,c
 19011  00396C  6E13               	movwf	(??___flmul+1)^0,c
 19012  00396E  6A14               	clrf	(??___flmul+2)^0,c
 19013  003970  6A15               	clrf	(??___flmul+3)^0,c
 19014  003972  C014  F015         	movff	??___flmul+2,??___flmul+3
 19015  003976  C013  F014         	movff	??___flmul+1,??___flmul+2
 19016  00397A  C012  F013         	movff	??___flmul,??___flmul+1
 19017  00397E  6A12               	clrf	??___flmul^0,c
 19018  003980  5012               	movf	??___flmul^0,w,c
 19019  003982  261D               	addwf	___flmul@prod^0,f,c
 19020  003984  5013               	movf	(??___flmul+1)^0,w,c
 19021  003986  221E               	addwfc	(___flmul@prod+1)^0,f,c
 19022  003988  5014               	movf	(??___flmul+2)^0,w,c
 19023  00398A  221F               	addwfc	(___flmul@prod+2)^0,f,c
 19024  00398C  5015               	movf	(??___flmul+3)^0,w,c
 19025  00398E  2220               	addwfc	(___flmul@prod+3)^0,f,c
 19026  003990  C018  F012         	movff	___flmul@grs,??___flmul
 19027  003994  C019  F013         	movff	___flmul@grs+1,??___flmul+1
 19028  003998  C01A  F014         	movff	___flmul@grs+2,??___flmul+2
 19029  00399C  C01B  F015         	movff	___flmul@grs+3,??___flmul+3
 19030  0039A0  0E19               	movlw	25
 19031  0039A2  EFD8  F01C         	goto	u11090
 19032  0039A6                     u11095:
 19033  0039A6  90D8               	bcf	status,0,c
 19034  0039A8  3215               	rrcf	(??___flmul+3)^0,f,c
 19035  0039AA  3214               	rrcf	(??___flmul+2)^0,f,c
 19036  0039AC  3213               	rrcf	(??___flmul+1)^0,f,c
 19037  0039AE  3212               	rrcf	??___flmul^0,f,c
 19038  0039B0                     u11090:
 19039  0039B0  2EE8               	decfsz	wreg,f,c
 19040  0039B2  EFD3  F01C         	goto	u11095
 19041  0039B6  5012               	movf	??___flmul^0,w,c
 19042  0039B8  261D               	addwf	___flmul@prod^0,f,c
 19043  0039BA  5013               	movf	(??___flmul+1)^0,w,c
 19044  0039BC  221E               	addwfc	(___flmul@prod+1)^0,f,c
 19045  0039BE  5014               	movf	(??___flmul+2)^0,w,c
 19046  0039C0  221F               	addwfc	(___flmul@prod+2)^0,f,c
 19047  0039C2  5015               	movf	(??___flmul+3)^0,w,c
 19048  0039C4  2220               	addwfc	(___flmul@prod+3)^0,f,c
 19049  0039C6  C01A  F01B         	movff	___flmul@grs+2,___flmul@grs+3
 19050  0039CA  C019  F01A         	movff	___flmul@grs+1,___flmul@grs+2
 19051  0039CE  C018  F019         	movff	___flmul@grs,___flmul@grs+1
 19052  0039D2  6A18               	clrf	___flmul@grs^0,c
 19053  0039D4  5017               	movf	___flmul@aexp^0,w,c
 19054  0039D6  C01C  F012         	movff	___flmul@bexp,??___flmul
 19055  0039DA  6A13               	clrf	(??___flmul+1)^0,c
 19056  0039DC  2612               	addwf	??___flmul^0,f,c
 19057  0039DE  0E00               	movlw	0
 19058  0039E0  2213               	addwfc	(??___flmul+1)^0,f,c
 19059  0039E2  0E82               	movlw	130
 19060  0039E4  2412               	addwf	??___flmul^0,w,c
 19061  0039E6  6E21               	movwf	___flmul@temp^0,c
 19062  0039E8  0EFF               	movlw	255
 19063  0039EA  2013               	addwfc	(??___flmul+1)^0,w,c
 19064  0039EC  6E22               	movwf	(___flmul@temp+1)^0,c
 19065  0039EE  EF0E  F01D         	goto	l11740
 19066  0039F2                     l11734:
 19067  0039F2  90D8               	bcf	status,0,c
 19068  0039F4  361D               	rlcf	___flmul@prod^0,f,c
 19069  0039F6  361E               	rlcf	(___flmul@prod+1)^0,f,c
 19070  0039F8  361F               	rlcf	(___flmul@prod+2)^0,f,c
 19071  0039FA  3620               	rlcf	(___flmul@prod+3)^0,f,c
 19072  0039FC  AE1B               	btfss	(___flmul@grs+3)^0,7,c
 19073  0039FE  EF03  F01D         	goto	u11101
 19074  003A02  EF05  F01D         	goto	u11100
 19075  003A06                     u11101:
 19076  003A06  EF06  F01D         	goto	l2220
 19077  003A0A                     u11100:
 19078  003A0A  801D               	bsf	___flmul@prod^0,0,c
 19079  003A0C                     l2220:
 19080  003A0C  90D8               	bcf	status,0,c
 19081  003A0E  3618               	rlcf	___flmul@grs^0,f,c
 19082  003A10  3619               	rlcf	(___flmul@grs+1)^0,f,c
 19083  003A12  361A               	rlcf	(___flmul@grs+2)^0,f,c
 19084  003A14  361B               	rlcf	(___flmul@grs+3)^0,f,c
 19085  003A16  0621               	decf	___flmul@temp^0,f,c
 19086  003A18  A0D8               	btfss	status,0,c
 19087  003A1A  0622               	decf	(___flmul@temp+1)^0,f,c
 19088  003A1C                     l11740:
 19089  003A1C  AE1F               	btfss	(___flmul@prod+2)^0,7,c
 19090  003A1E  EF13  F01D         	goto	u11111
 19091  003A22  EF15  F01D         	goto	u11110
 19092  003A26                     u11111:
 19093  003A26  EFF9  F01C         	goto	l11734
 19094  003A2A                     u11110:
 19095  003A2A  0E00               	movlw	0
 19096  003A2C  6E17               	movwf	___flmul@aexp^0,c
 19097  003A2E  AE1B               	btfss	(___flmul@grs+3)^0,7,c
 19098  003A30  EF1C  F01D         	goto	u11121
 19099  003A34  EF1E  F01D         	goto	u11120
 19100  003A38                     u11121:
 19101  003A38  EF42  F01D         	goto	l2222
 19102  003A3C                     u11120:
 19103  003A3C  0EFF               	movlw	255
 19104  003A3E  1418               	andwf	___flmul@grs^0,w,c
 19105  003A40  6E12               	movwf	??___flmul^0,c
 19106  003A42  0EFF               	movlw	255
 19107  003A44  1419               	andwf	(___flmul@grs+1)^0,w,c
 19108  003A46  6E13               	movwf	(??___flmul+1)^0,c
 19109  003A48  0EFF               	movlw	255
 19110  003A4A  141A               	andwf	(___flmul@grs+2)^0,w,c
 19111  003A4C  6E14               	movwf	(??___flmul+2)^0,c
 19112  003A4E  0E7F               	movlw	127
 19113  003A50  141B               	andwf	(___flmul@grs+3)^0,w,c
 19114  003A52  6E15               	movwf	(??___flmul+3)^0,c
 19115  003A54  5012               	movf	??___flmul^0,w,c
 19116  003A56  1013               	iorwf	(??___flmul+1)^0,w,c
 19117  003A58  1014               	iorwf	(??___flmul+2)^0,w,c
 19118  003A5A  1015               	iorwf	(??___flmul+3)^0,w,c
 19119  003A5C  B4D8               	btfsc	status,2,c
 19120  003A5E  EF33  F01D         	goto	u11131
 19121  003A62  EF35  F01D         	goto	u11130
 19122  003A66                     u11131:
 19123  003A66  EF39  F01D         	goto	l2223
 19124  003A6A                     u11130:
 19125  003A6A                     l11748:
 19126  003A6A  0E01               	movlw	1
 19127  003A6C  6E17               	movwf	___flmul@aexp^0,c
 19128  003A6E  EF42  F01D         	goto	l2222
 19129  003A72                     l2223:
 19130  003A72  A01D               	btfss	___flmul@prod^0,0,c
 19131  003A74  EF3E  F01D         	goto	u11141
 19132  003A78  EF40  F01D         	goto	u11140
 19133  003A7C                     u11141:
 19134  003A7C  EF42  F01D         	goto	l2222
 19135  003A80                     u11140:
 19136  003A80  EF35  F01D         	goto	l11748
 19137  003A84                     l2222:
 19138  003A84  5017               	movf	___flmul@aexp^0,w,c
 19139  003A86  B4D8               	btfsc	status,2,c
 19140  003A88  EF48  F01D         	goto	u11151
 19141  003A8C  EF4A  F01D         	goto	u11150
 19142  003A90                     u11151:
 19143  003A90  EF6E  F01D         	goto	l11760
 19144  003A94                     u11150:
 19145  003A94  0E01               	movlw	1
 19146  003A96  261D               	addwf	___flmul@prod^0,f,c
 19147  003A98  0E00               	movlw	0
 19148  003A9A  221E               	addwfc	(___flmul@prod+1)^0,f,c
 19149  003A9C  221F               	addwfc	(___flmul@prod+2)^0,f,c
 19150  003A9E  2220               	addwfc	(___flmul@prod+3)^0,f,c
 19151  003AA0  A020               	btfss	(___flmul@prod+3)^0,0,c
 19152  003AA2  EF55  F01D         	goto	u11161
 19153  003AA6  EF57  F01D         	goto	u11160
 19154  003AAA                     u11161:
 19155  003AAA  EF6E  F01D         	goto	l11760
 19156  003AAE                     u11160:
 19157  003AAE  C01D  F012         	movff	___flmul@prod,??___flmul
 19158  003AB2  C01E  F013         	movff	___flmul@prod+1,??___flmul+1
 19159  003AB6  C01F  F014         	movff	___flmul@prod+2,??___flmul+2
 19160  003ABA  C020  F015         	movff	___flmul@prod+3,??___flmul+3
 19161  003ABE  3415               	rlcf	(??___flmul+3)^0,w,c
 19162  003AC0  3215               	rrcf	(??___flmul+3)^0,f,c
 19163  003AC2  3214               	rrcf	(??___flmul+2)^0,f,c
 19164  003AC4  3213               	rrcf	(??___flmul+1)^0,f,c
 19165  003AC6  3212               	rrcf	??___flmul^0,f,c
 19166  003AC8  C012  F01D         	movff	??___flmul,___flmul@prod
 19167  003ACC  C013  F01E         	movff	??___flmul+1,___flmul@prod+1
 19168  003AD0  C014  F01F         	movff	??___flmul+2,___flmul@prod+2
 19169  003AD4  C015  F020         	movff	??___flmul+3,___flmul@prod+3
 19170  003AD8  4A21               	infsnz	___flmul@temp^0,f,c
 19171  003ADA  2A22               	incf	(___flmul@temp+1)^0,f,c
 19172  003ADC                     l11760:
 19173  003ADC  BE22               	btfsc	(___flmul@temp+1)^0,7,c
 19174  003ADE  EF79  F01D         	goto	u11171
 19175  003AE2  5022               	movf	(___flmul@temp+1)^0,w,c
 19176  003AE4  E108               	bnz	u11170
 19177  003AE6  2821               	incf	___flmul@temp^0,w,c
 19178  003AE8  A0D8               	btfss	status,0,c
 19179  003AEA  EF79  F01D         	goto	u11171
 19180  003AEE  EF7B  F01D         	goto	u11170
 19181  003AF2                     u11171:
 19182  003AF2  EF85  F01D         	goto	l11764
 19183  003AF6                     u11170:
 19184  003AF6  0E00               	movlw	0
 19185  003AF8  6E1D               	movwf	___flmul@prod^0,c
 19186  003AFA  0E00               	movlw	0
 19187  003AFC  6E1E               	movwf	(___flmul@prod+1)^0,c
 19188  003AFE  0E80               	movlw	128
 19189  003B00  6E1F               	movwf	(___flmul@prod+2)^0,c
 19190  003B02  0E7F               	movlw	127
 19191  003B04  6E20               	movwf	(___flmul@prod+3)^0,c
 19192  003B06  EFB3  F01D         	goto	l11776
 19193  003B0A                     l11764:
 19194  003B0A  BE22               	btfsc	(___flmul@temp+1)^0,7,c
 19195  003B0C  EF92  F01D         	goto	u11180
 19196  003B10  5022               	movf	(___flmul@temp+1)^0,w,c
 19197  003B12  E106               	bnz	u11181
 19198  003B14  0421               	decf	___flmul@temp^0,w,c
 19199  003B16  B0D8               	btfsc	status,0,c
 19200  003B18  EF90  F01D         	goto	u11181
 19201  003B1C  EF92  F01D         	goto	u11180
 19202  003B20                     u11181:
 19203  003B20  EF9E  F01D         	goto	l2230
 19204  003B24                     u11180:
 19205  003B24  0E00               	movlw	0
 19206  003B26  6E1D               	movwf	___flmul@prod^0,c
 19207  003B28  0E00               	movlw	0
 19208  003B2A  6E1E               	movwf	(___flmul@prod+1)^0,c
 19209  003B2C  0E00               	movlw	0
 19210  003B2E  6E1F               	movwf	(___flmul@prod+2)^0,c
 19211  003B30  0E00               	movlw	0
 19212  003B32  6E20               	movwf	(___flmul@prod+3)^0,c
 19213  003B34  0E00               	movlw	0
 19214  003B36  6E16               	movwf	___flmul@sign^0,c
 19215  003B38  EFB3  F01D         	goto	l11776
 19216  003B3C                     l2230:
 19217  003B3C  C021  F01C         	movff	___flmul@temp,___flmul@bexp
 19218  003B40  0EFF               	movlw	255
 19219  003B42  161D               	andwf	___flmul@prod^0,f,c
 19220  003B44  0EFF               	movlw	255
 19221  003B46  161E               	andwf	(___flmul@prod+1)^0,f,c
 19222  003B48  0E7F               	movlw	127
 19223  003B4A  161F               	andwf	(___flmul@prod+2)^0,f,c
 19224  003B4C  0E00               	movlw	0
 19225  003B4E  1620               	andwf	(___flmul@prod+3)^0,f,c
 19226  003B50  A01C               	btfss	___flmul@bexp^0,0,c
 19227  003B52  EFAD  F01D         	goto	u11191
 19228  003B56  EFAF  F01D         	goto	u11190
 19229  003B5A                     u11191:
 19230  003B5A  EFB0  F01D         	goto	l11774
 19231  003B5E                     u11190:
 19232  003B5E  8E1F               	bsf	(___flmul@prod+2)^0,7,c
 19233  003B60                     l11774:
 19234  003B60  90D8               	bcf	status,0,c
 19235  003B62  301C               	rrcf	___flmul@bexp^0,w,c
 19236  003B64  6E20               	movwf	(___flmul@prod+3)^0,c
 19237  003B66                     l11776:
 19238  003B66  5016               	movf	___flmul@sign^0,w,c
 19239  003B68  1220               	iorwf	(___flmul@prod+3)^0,f,c
 19240  003B6A  C01D  F00A         	movff	___flmul@prod,?___flmul
 19241  003B6E  C01E  F00B         	movff	___flmul@prod+1,?___flmul+1
 19242  003B72  C01F  F00C         	movff	___flmul@prod+2,?___flmul+2
 19243  003B76  C020  F00D         	movff	___flmul@prod+3,?___flmul+3
 19244  003B7A                     l2217:
 19245  003B7A  0012               	return		;funcret
 19246  003B7C                     __end_of___flmul:
 19247                           	callstack 0
 19248                           
 19249 ;; *************** function ___fldiv *****************
 19250 ;; Defined at:
 19251 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
 19252 ;; Parameters:    Size  Location     Type
 19253 ;;  b               4   58[COMRAM] unsigned char 
 19254 ;;  a               4   62[COMRAM] unsigned char 
 19255 ;; Auto vars:     Size  Location     Type
 19256 ;;  grs             4    7[BANK0 ] unsigned long 
 19257 ;;  rem             4    0[BANK0 ] unsigned long 
 19258 ;;  new_exp         2    5[BANK0 ] short 
 19259 ;;  aexp            1   12[BANK0 ] unsigned char 
 19260 ;;  bexp            1   11[BANK0 ] unsigned char 
 19261 ;;  sign            1    4[BANK0 ] unsigned char 
 19262 ;; Return value:  Size  Location     Type
 19263 ;;                  4   58[COMRAM] unsigned char 
 19264 ;; Registers used:
 19265 ;;		wreg, status,2, status,0
 19266 ;; Tracked objects:
 19267 ;;		On entry : 0/0
 19268 ;;		On exit  : 0/0
 19269 ;;		Unchanged: 0/0
 19270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19271 ;;      Params:         8       0       0       0       0       0       0
 19272 ;;      Locals:         0      13       0       0       0       0       0
 19273 ;;      Temps:          4       0       0       0       0       0       0
 19274 ;;      Totals:        12      13       0       0       0       0       0
 19275 ;;Total ram usage:       25 bytes
 19276 ;; Hardware stack levels used: 1
 19277 ;; Hardware stack levels required when called: 4
 19278 ;; This function calls:
 19279 ;;		Nothing
 19280 ;; This function is called by:
 19281 ;;		_SRV_ADT7410_ReadMeanSensor
 19282 ;;		_efgtoa
 19283 ;; This function uses a non-reentrant model
 19284 ;;
 19285                           
 19286                           	psect	text94
 19287  003B7C                     __ptext94:
 19288                           	callstack 0
 19289  003B7C                     ___fldiv:
 19290                           	callstack 23
 19291  003B7C  503E               	movf	(___fldiv@b+3)^0,w,c
 19292  003B7E  0B80               	andlw	128
 19293  003B80  0100               	movlb	0	; () banked
 19294  003B82  6F64               	movwf	___fldiv@sign& (0+255),b
 19295  003B84  503E               	movf	(___fldiv@b+3)^0,w,c
 19296  003B86  243E               	addwf	(___fldiv@b+3)^0,w,c
 19297  003B88  6F6B               	movwf	___fldiv@bexp& (0+255),b
 19298  003B8A                     
 19299                           ; BSR set to: 0
 19300  003B8A  AE3D               	btfss	(___fldiv@b+2)^0,7,c
 19301  003B8C  EFCA  F01D         	goto	u10781
 19302  003B90  EFCC  F01D         	goto	u10780
 19303  003B94                     u10781:
 19304  003B94  EFCD  F01D         	goto	l11520
 19305  003B98                     u10780:
 19306  003B98                     
 19307                           ; BSR set to: 0
 19308  003B98  816B               	bsf	___fldiv@bexp& (0+255),0,b
 19309  003B9A                     l11520:
 19310                           
 19311                           ; BSR set to: 0
 19312  003B9A  516B               	movf	___fldiv@bexp& (0+255),w,b
 19313  003B9C  B4D8               	btfsc	status,2,c
 19314  003B9E  EFD3  F01D         	goto	u10791
 19315  003BA2  EFD5  F01D         	goto	u10790
 19316  003BA6                     u10791:
 19317  003BA6  EFEA  F01D         	goto	l11530
 19318  003BAA                     u10790:
 19319  003BAA                     
 19320                           ; BSR set to: 0
 19321  003BAA  296B               	incf	___fldiv@bexp& (0+255),w,b
 19322  003BAC  A4D8               	btfss	status,2,c
 19323  003BAE  EFDB  F01D         	goto	u10801
 19324  003BB2  EFDD  F01D         	goto	u10800
 19325  003BB6                     u10801:
 19326  003BB6  EFE5  F01D         	goto	l11526
 19327  003BBA                     u10800:
 19328  003BBA                     
 19329                           ; BSR set to: 0
 19330  003BBA  0E00               	movlw	0
 19331  003BBC  6E3B               	movwf	___fldiv@b^0,c
 19332  003BBE  0E00               	movlw	0
 19333  003BC0  6E3C               	movwf	(___fldiv@b+1)^0,c
 19334  003BC2  0E00               	movlw	0
 19335  003BC4  6E3D               	movwf	(___fldiv@b+2)^0,c
 19336  003BC6  0E00               	movlw	0
 19337  003BC8  6E3E               	movwf	(___fldiv@b+3)^0,c
 19338  003BCA                     l11526:
 19339                           
 19340                           ; BSR set to: 0
 19341  003BCA  8E3D               	bsf	(___fldiv@b+2)^0,7,c
 19342  003BCC                     
 19343                           ; BSR set to: 0
 19344  003BCC  0E00               	movlw	0
 19345  003BCE  6E3E               	movwf	(___fldiv@b+3)^0,c
 19346  003BD0  EFF2  F01D         	goto	l11532
 19347  003BD4                     l11530:
 19348                           
 19349                           ; BSR set to: 0
 19350  003BD4  0E00               	movlw	0
 19351  003BD6  6E3B               	movwf	___fldiv@b^0,c
 19352  003BD8  0E00               	movlw	0
 19353  003BDA  6E3C               	movwf	(___fldiv@b+1)^0,c
 19354  003BDC  0E00               	movlw	0
 19355  003BDE  6E3D               	movwf	(___fldiv@b+2)^0,c
 19356  003BE0  0E00               	movlw	0
 19357  003BE2  6E3E               	movwf	(___fldiv@b+3)^0,c
 19358  003BE4                     l11532:
 19359                           
 19360                           ; BSR set to: 0
 19361  003BE4  5042               	movf	(___fldiv@a+3)^0,w,c
 19362  003BE6  0B80               	andlw	128
 19363  003BE8  1B64               	xorwf	___fldiv@sign& (0+255),f,b
 19364  003BEA                     
 19365                           ; BSR set to: 0
 19366  003BEA  5042               	movf	(___fldiv@a+3)^0,w,c
 19367  003BEC  2442               	addwf	(___fldiv@a+3)^0,w,c
 19368  003BEE  6F6C               	movwf	___fldiv@aexp& (0+255),b
 19369  003BF0                     
 19370                           ; BSR set to: 0
 19371  003BF0  AE41               	btfss	(___fldiv@a+2)^0,7,c
 19372  003BF2  EFFD  F01D         	goto	u10811
 19373  003BF6  EFFF  F01D         	goto	u10810
 19374  003BFA                     u10811:
 19375  003BFA  EF00  F01E         	goto	l11540
 19376  003BFE                     u10810:
 19377  003BFE                     
 19378                           ; BSR set to: 0
 19379  003BFE  816C               	bsf	___fldiv@aexp& (0+255),0,b
 19380  003C00                     l11540:
 19381                           
 19382                           ; BSR set to: 0
 19383  003C00  516C               	movf	___fldiv@aexp& (0+255),w,b
 19384  003C02  B4D8               	btfsc	status,2,c
 19385  003C04  EF06  F01E         	goto	u10821
 19386  003C08  EF08  F01E         	goto	u10820
 19387  003C0C                     u10821:
 19388  003C0C  EF1D  F01E         	goto	l11550
 19389  003C10                     u10820:
 19390  003C10                     
 19391                           ; BSR set to: 0
 19392  003C10  296C               	incf	___fldiv@aexp& (0+255),w,b
 19393  003C12  A4D8               	btfss	status,2,c
 19394  003C14  EF0E  F01E         	goto	u10831
 19395  003C18  EF10  F01E         	goto	u10830
 19396  003C1C                     u10831:
 19397  003C1C  EF18  F01E         	goto	l11546
 19398  003C20                     u10830:
 19399  003C20                     
 19400                           ; BSR set to: 0
 19401  003C20  0E00               	movlw	0
 19402  003C22  6E3F               	movwf	___fldiv@a^0,c
 19403  003C24  0E00               	movlw	0
 19404  003C26  6E40               	movwf	(___fldiv@a+1)^0,c
 19405  003C28  0E00               	movlw	0
 19406  003C2A  6E41               	movwf	(___fldiv@a+2)^0,c
 19407  003C2C  0E00               	movlw	0
 19408  003C2E  6E42               	movwf	(___fldiv@a+3)^0,c
 19409  003C30                     l11546:
 19410                           
 19411                           ; BSR set to: 0
 19412  003C30  8E41               	bsf	(___fldiv@a+2)^0,7,c
 19413  003C32                     
 19414                           ; BSR set to: 0
 19415  003C32  0E00               	movlw	0
 19416  003C34  6E42               	movwf	(___fldiv@a+3)^0,c
 19417  003C36  EF25  F01E         	goto	l11552
 19418  003C3A                     l11550:
 19419                           
 19420                           ; BSR set to: 0
 19421  003C3A  0E00               	movlw	0
 19422  003C3C  6E3F               	movwf	___fldiv@a^0,c
 19423  003C3E  0E00               	movlw	0
 19424  003C40  6E40               	movwf	(___fldiv@a+1)^0,c
 19425  003C42  0E00               	movlw	0
 19426  003C44  6E41               	movwf	(___fldiv@a+2)^0,c
 19427  003C46  0E00               	movlw	0
 19428  003C48  6E42               	movwf	(___fldiv@a+3)^0,c
 19429  003C4A                     l11552:
 19430                           
 19431                           ; BSR set to: 0
 19432  003C4A  503F               	movf	___fldiv@a^0,w,c
 19433  003C4C  1040               	iorwf	(___fldiv@a+1)^0,w,c
 19434  003C4E  1041               	iorwf	(___fldiv@a+2)^0,w,c
 19435  003C50  1042               	iorwf	(___fldiv@a+3)^0,w,c
 19436  003C52  A4D8               	btfss	status,2,c
 19437  003C54  EF2E  F01E         	goto	u10841
 19438  003C58  EF30  F01E         	goto	u10840
 19439  003C5C                     u10841:
 19440  003C5C  EF48  F01E         	goto	l11564
 19441  003C60                     u10840:
 19442  003C60                     
 19443                           ; BSR set to: 0
 19444  003C60  0E00               	movlw	0
 19445  003C62  6E3B               	movwf	___fldiv@b^0,c
 19446  003C64  0E00               	movlw	0
 19447  003C66  6E3C               	movwf	(___fldiv@b+1)^0,c
 19448  003C68  0E00               	movlw	0
 19449  003C6A  6E3D               	movwf	(___fldiv@b+2)^0,c
 19450  003C6C  0E00               	movlw	0
 19451  003C6E  6E3E               	movwf	(___fldiv@b+3)^0,c
 19452  003C70                     
 19453                           ; BSR set to: 0
 19454  003C70  0E80               	movlw	128
 19455  003C72  123D               	iorwf	(___fldiv@b+2)^0,f,c
 19456  003C74  0E7F               	movlw	127
 19457  003C76  123E               	iorwf	(___fldiv@b+3)^0,f,c
 19458  003C78                     l11558:
 19459                           
 19460                           ; BSR set to: 0
 19461  003C78  5164               	movf	___fldiv@sign& (0+255),w,b
 19462  003C7A  123E               	iorwf	(___fldiv@b+3)^0,f,c
 19463  003C7C                     
 19464                           ; BSR set to: 0
 19465  003C7C  C03B  F03B         	movff	___fldiv@b,?___fldiv
 19466  003C80  C03C  F03C         	movff	___fldiv@b+1,?___fldiv+1
 19467  003C84  C03D  F03D         	movff	___fldiv@b+2,?___fldiv+2
 19468  003C88  C03E  F03E         	movff	___fldiv@b+3,?___fldiv+3
 19469  003C8C  EF8B  F01F         	goto	l2181
 19470  003C90                     l11564:
 19471                           
 19472                           ; BSR set to: 0
 19473  003C90  516B               	movf	___fldiv@bexp& (0+255),w,b
 19474  003C92  A4D8               	btfss	status,2,c
 19475  003C94  EF4E  F01E         	goto	u10851
 19476  003C98  EF50  F01E         	goto	u10850
 19477  003C9C                     u10851:
 19478  003C9C  EF5A  F01E         	goto	l11572
 19479  003CA0                     u10850:
 19480  003CA0                     
 19481                           ; BSR set to: 0
 19482  003CA0  0E00               	movlw	0
 19483  003CA2  6E3B               	movwf	?___fldiv^0,c
 19484  003CA4  0E00               	movlw	0
 19485  003CA6  6E3C               	movwf	(?___fldiv+1)^0,c
 19486  003CA8  0E00               	movlw	0
 19487  003CAA  6E3D               	movwf	(?___fldiv+2)^0,c
 19488  003CAC  0E00               	movlw	0
 19489  003CAE  6E3E               	movwf	(?___fldiv+3)^0,c
 19490  003CB0  EF8B  F01F         	goto	l2181
 19491  003CB4                     l11572:
 19492                           
 19493                           ; BSR set to: 0
 19494  003CB4  516C               	movf	___fldiv@aexp& (0+255),w,b
 19495  003CB6  C06B  F043         	movff	___fldiv@bexp,??___fldiv
 19496  003CBA  6A44               	clrf	(??___fldiv+1)^0,c
 19497  003CBC  5E43               	subwf	??___fldiv^0,f,c
 19498  003CBE  0E00               	movlw	0
 19499  003CC0  5A44               	subwfb	(??___fldiv+1)^0,f,c
 19500  003CC2  0E7F               	movlw	127
 19501  003CC4  2443               	addwf	??___fldiv^0,w,c
 19502  003CC6  6F65               	movwf	___fldiv@new_exp& (0+255),b
 19503  003CC8  0E00               	movlw	0
 19504  003CCA  2044               	addwfc	(??___fldiv+1)^0,w,c
 19505  003CCC  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 19506  003CCE                     
 19507                           ; BSR set to: 0
 19508  003CCE  C03B  F060         	movff	___fldiv@b,___fldiv@rem
 19509  003CD2  C03C  F061         	movff	___fldiv@b+1,___fldiv@rem+1
 19510  003CD6  C03D  F062         	movff	___fldiv@b+2,___fldiv@rem+2
 19511  003CDA  C03E  F063         	movff	___fldiv@b+3,___fldiv@rem+3
 19512  003CDE                     
 19513                           ; BSR set to: 0
 19514  003CDE  0E00               	movlw	0
 19515  003CE0  6E3B               	movwf	___fldiv@b^0,c
 19516  003CE2  0E00               	movlw	0
 19517  003CE4  6E3C               	movwf	(___fldiv@b+1)^0,c
 19518  003CE6  0E00               	movlw	0
 19519  003CE8  6E3D               	movwf	(___fldiv@b+2)^0,c
 19520  003CEA  0E00               	movlw	0
 19521  003CEC  6E3E               	movwf	(___fldiv@b+3)^0,c
 19522  003CEE                     
 19523                           ; BSR set to: 0
 19524  003CEE  0E00               	movlw	0
 19525  003CF0  6F67               	movwf	___fldiv@grs& (0+255),b
 19526  003CF2  0E00               	movlw	0
 19527  003CF4  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
 19528  003CF6  0E00               	movlw	0
 19529  003CF8  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
 19530  003CFA  0E00               	movlw	0
 19531  003CFC  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
 19532  003CFE                     
 19533                           ; BSR set to: 0
 19534  003CFE  0E00               	movlw	0
 19535  003D00  6F6C               	movwf	___fldiv@aexp& (0+255),b
 19536  003D02  EFBB  F01E         	goto	l2183
 19537  003D06                     l11582:
 19538                           
 19539                           ; BSR set to: 0
 19540  003D06  516C               	movf	___fldiv@aexp& (0+255),w,b
 19541  003D08  B4D8               	btfsc	status,2,c
 19542  003D0A  EF89  F01E         	goto	u10861
 19543  003D0E  EF8B  F01E         	goto	u10860
 19544  003D12                     u10861:
 19545  003D12  EFA2  F01E         	goto	l11590
 19546  003D16                     u10860:
 19547  003D16                     
 19548                           ; BSR set to: 0
 19549  003D16  90D8               	bcf	status,0,c
 19550  003D18  3760               	rlcf	___fldiv@rem& (0+255),f,b
 19551  003D1A  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 19552  003D1C  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 19553  003D1E  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 19554  003D20  90D8               	bcf	status,0,c
 19555  003D22  363B               	rlcf	___fldiv@b^0,f,c
 19556  003D24  363C               	rlcf	(___fldiv@b+1)^0,f,c
 19557  003D26  363D               	rlcf	(___fldiv@b+2)^0,f,c
 19558  003D28  363E               	rlcf	(___fldiv@b+3)^0,f,c
 19559  003D2A                     
 19560                           ; BSR set to: 0
 19561  003D2A  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 19562  003D2C  EF9A  F01E         	goto	u10871
 19563  003D30  EF9C  F01E         	goto	u10870
 19564  003D34                     u10871:
 19565  003D34  EF9D  F01E         	goto	l2186
 19566  003D38                     u10870:
 19567  003D38                     
 19568                           ; BSR set to: 0
 19569  003D38  803B               	bsf	___fldiv@b^0,0,c
 19570  003D3A                     l2186:
 19571                           
 19572                           ; BSR set to: 0
 19573  003D3A  90D8               	bcf	status,0,c
 19574  003D3C  3767               	rlcf	___fldiv@grs& (0+255),f,b
 19575  003D3E  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 19576  003D40  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 19577  003D42  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 19578  003D44                     l11590:
 19579                           
 19580                           ; BSR set to: 0
 19581  003D44  503F               	movf	___fldiv@a^0,w,c
 19582  003D46  5D60               	subwf	___fldiv@rem& (0+255),w,b
 19583  003D48  5040               	movf	(___fldiv@a+1)^0,w,c
 19584  003D4A  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 19585  003D4C  5041               	movf	(___fldiv@a+2)^0,w,c
 19586  003D4E  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 19587  003D50  5042               	movf	(___fldiv@a+3)^0,w,c
 19588  003D52  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 19589  003D54  A0D8               	btfss	status,0,c
 19590  003D56  EFAF  F01E         	goto	u10881
 19591  003D5A  EFB1  F01E         	goto	u10880
 19592  003D5E                     u10881:
 19593  003D5E  EFBA  F01E         	goto	l11596
 19594  003D62                     u10880:
 19595  003D62                     
 19596                           ; BSR set to: 0
 19597  003D62  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
 19598  003D64                     
 19599                           ; BSR set to: 0
 19600  003D64  503F               	movf	___fldiv@a^0,w,c
 19601  003D66  5F60               	subwf	___fldiv@rem& (0+255),f,b
 19602  003D68  5040               	movf	(___fldiv@a+1)^0,w,c
 19603  003D6A  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 19604  003D6C  5041               	movf	(___fldiv@a+2)^0,w,c
 19605  003D6E  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 19606  003D70  5042               	movf	(___fldiv@a+3)^0,w,c
 19607  003D72  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 19608  003D74                     l11596:
 19609                           
 19610                           ; BSR set to: 0
 19611  003D74  2B6C               	incf	___fldiv@aexp& (0+255),f,b
 19612  003D76                     l2183:
 19613                           
 19614                           ; BSR set to: 0
 19615  003D76  0E19               	movlw	25
 19616  003D78  656C               	cpfsgt	___fldiv@aexp& (0+255),b
 19617  003D7A  EFC1  F01E         	goto	u10891
 19618  003D7E  EFC3  F01E         	goto	u10890
 19619  003D82                     u10891:
 19620  003D82  EF83  F01E         	goto	l11582
 19621  003D86                     u10890:
 19622  003D86                     
 19623                           ; BSR set to: 0
 19624  003D86  5160               	movf	___fldiv@rem& (0+255),w,b
 19625  003D88  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 19626  003D8A  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 19627  003D8C  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 19628  003D8E  B4D8               	btfsc	status,2,c
 19629  003D90  EFCC  F01E         	goto	u10901
 19630  003D94  EFCE  F01E         	goto	u10900
 19631  003D98                     u10901:
 19632  003D98  EFE6  F01E         	goto	l11608
 19633  003D9C                     u10900:
 19634  003D9C                     
 19635                           ; BSR set to: 0
 19636  003D9C  8167               	bsf	___fldiv@grs& (0+255),0,b
 19637  003D9E  EFE6  F01E         	goto	l11608
 19638  003DA2                     l11602:
 19639                           
 19640                           ; BSR set to: 0
 19641  003DA2  90D8               	bcf	status,0,c
 19642  003DA4  363B               	rlcf	___fldiv@b^0,f,c
 19643  003DA6  363C               	rlcf	(___fldiv@b+1)^0,f,c
 19644  003DA8  363D               	rlcf	(___fldiv@b+2)^0,f,c
 19645  003DAA  363E               	rlcf	(___fldiv@b+3)^0,f,c
 19646  003DAC                     
 19647                           ; BSR set to: 0
 19648  003DAC  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 19649  003DAE  EFDB  F01E         	goto	u10911
 19650  003DB2  EFDD  F01E         	goto	u10910
 19651  003DB6                     u10911:
 19652  003DB6  EFDE  F01E         	goto	l2192
 19653  003DBA                     u10910:
 19654  003DBA                     
 19655                           ; BSR set to: 0
 19656  003DBA  803B               	bsf	___fldiv@b^0,0,c
 19657  003DBC                     l2192:
 19658                           
 19659                           ; BSR set to: 0
 19660  003DBC  90D8               	bcf	status,0,c
 19661  003DBE  3767               	rlcf	___fldiv@grs& (0+255),f,b
 19662  003DC0  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 19663  003DC2  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 19664  003DC4  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 19665  003DC6  0765               	decf	___fldiv@new_exp& (0+255),f,b
 19666  003DC8  A0D8               	btfss	status,0,c
 19667  003DCA  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 19668  003DCC                     l11608:
 19669                           
 19670                           ; BSR set to: 0
 19671  003DCC  AE3D               	btfss	(___fldiv@b+2)^0,7,c
 19672  003DCE  EFEB  F01E         	goto	u10921
 19673  003DD2  EFED  F01E         	goto	u10920
 19674  003DD6                     u10921:
 19675  003DD6  EFD1  F01E         	goto	l11602
 19676  003DDA                     u10920:
 19677  003DDA                     
 19678                           ; BSR set to: 0
 19679  003DDA  0E00               	movlw	0
 19680  003DDC  6F6C               	movwf	___fldiv@aexp& (0+255),b
 19681  003DDE                     
 19682                           ; BSR set to: 0
 19683  003DDE  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 19684  003DE0  EFF4  F01E         	goto	u10931
 19685  003DE4  EFF6  F01E         	goto	u10930
 19686  003DE8                     u10931:
 19687  003DE8  EF1A  F01F         	goto	l2194
 19688  003DEC                     u10930:
 19689  003DEC                     
 19690                           ; BSR set to: 0
 19691  003DEC  0EFF               	movlw	255
 19692  003DEE  1567               	andwf	___fldiv@grs& (0+255),w,b
 19693  003DF0  6E43               	movwf	??___fldiv^0,c
 19694  003DF2  0EFF               	movlw	255
 19695  003DF4  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
 19696  003DF6  6E44               	movwf	(??___fldiv+1)^0,c
 19697  003DF8  0EFF               	movlw	255
 19698  003DFA  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
 19699  003DFC  6E45               	movwf	(??___fldiv+2)^0,c
 19700  003DFE  0E7F               	movlw	127
 19701  003E00  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
 19702  003E02  6E46               	movwf	(??___fldiv+3)^0,c
 19703  003E04  5043               	movf	??___fldiv^0,w,c
 19704  003E06  1044               	iorwf	(??___fldiv+1)^0,w,c
 19705  003E08  1045               	iorwf	(??___fldiv+2)^0,w,c
 19706  003E0A  1046               	iorwf	(??___fldiv+3)^0,w,c
 19707  003E0C  B4D8               	btfsc	status,2,c
 19708  003E0E  EF0B  F01F         	goto	u10941
 19709  003E12  EF0D  F01F         	goto	u10940
 19710  003E16                     u10941:
 19711  003E16  EF11  F01F         	goto	l2195
 19712  003E1A                     u10940:
 19713  003E1A                     l11616:
 19714                           
 19715                           ; BSR set to: 0
 19716  003E1A  0E01               	movlw	1
 19717  003E1C  6F6C               	movwf	___fldiv@aexp& (0+255),b
 19718  003E1E  EF1A  F01F         	goto	l2194
 19719  003E22                     l2195:
 19720                           
 19721                           ; BSR set to: 0
 19722  003E22  A03B               	btfss	___fldiv@b^0,0,c
 19723  003E24  EF16  F01F         	goto	u10951
 19724  003E28  EF18  F01F         	goto	u10950
 19725  003E2C                     u10951:
 19726  003E2C  EF1A  F01F         	goto	l2194
 19727  003E30                     u10950:
 19728  003E30  EF0D  F01F         	goto	l11616
 19729  003E34                     l2194:
 19730                           
 19731                           ; BSR set to: 0
 19732  003E34  516C               	movf	___fldiv@aexp& (0+255),w,b
 19733  003E36  B4D8               	btfsc	status,2,c
 19734  003E38  EF20  F01F         	goto	u10961
 19735  003E3C  EF22  F01F         	goto	u10960
 19736  003E40                     u10961:
 19737  003E40  EF46  F01F         	goto	l11628
 19738  003E44                     u10960:
 19739  003E44                     
 19740                           ; BSR set to: 0
 19741  003E44  0E01               	movlw	1
 19742  003E46  263B               	addwf	___fldiv@b^0,f,c
 19743  003E48  0E00               	movlw	0
 19744  003E4A  223C               	addwfc	(___fldiv@b+1)^0,f,c
 19745  003E4C  223D               	addwfc	(___fldiv@b+2)^0,f,c
 19746  003E4E  223E               	addwfc	(___fldiv@b+3)^0,f,c
 19747  003E50                     
 19748                           ; BSR set to: 0
 19749  003E50  A03E               	btfss	(___fldiv@b+3)^0,0,c
 19750  003E52  EF2D  F01F         	goto	u10971
 19751  003E56  EF2F  F01F         	goto	u10970
 19752  003E5A                     u10971:
 19753  003E5A  EF46  F01F         	goto	l11628
 19754  003E5E                     u10970:
 19755  003E5E                     
 19756                           ; BSR set to: 0
 19757  003E5E  C03B  F043         	movff	___fldiv@b,??___fldiv
 19758  003E62  C03C  F044         	movff	___fldiv@b+1,??___fldiv+1
 19759  003E66  C03D  F045         	movff	___fldiv@b+2,??___fldiv+2
 19760  003E6A  C03E  F046         	movff	___fldiv@b+3,??___fldiv+3
 19761  003E6E  3446               	rlcf	(??___fldiv+3)^0,w,c
 19762  003E70  3246               	rrcf	(??___fldiv+3)^0,f,c
 19763  003E72  3245               	rrcf	(??___fldiv+2)^0,f,c
 19764  003E74  3244               	rrcf	(??___fldiv+1)^0,f,c
 19765  003E76  3243               	rrcf	??___fldiv^0,f,c
 19766  003E78  C043  F03B         	movff	??___fldiv,___fldiv@b
 19767  003E7C  C044  F03C         	movff	??___fldiv+1,___fldiv@b+1
 19768  003E80  C045  F03D         	movff	??___fldiv+2,___fldiv@b+2
 19769  003E84  C046  F03E         	movff	??___fldiv+3,___fldiv@b+3
 19770  003E88                     
 19771                           ; BSR set to: 0
 19772  003E88  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
 19773  003E8A  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 19774  003E8C                     l11628:
 19775                           
 19776                           ; BSR set to: 0
 19777  003E8C  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 19778  003E8E  EF51  F01F         	goto	u10981
 19779  003E92  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 19780  003E94  E108               	bnz	u10980
 19781  003E96  2965               	incf	___fldiv@new_exp& (0+255),w,b
 19782  003E98  A0D8               	btfss	status,0,c
 19783  003E9A  EF51  F01F         	goto	u10981
 19784  003E9E  EF53  F01F         	goto	u10980
 19785  003EA2                     u10981:
 19786  003EA2  EF5E  F01F         	goto	l11632
 19787  003EA6                     u10980:
 19788  003EA6                     
 19789                           ; BSR set to: 0
 19790  003EA6  0E00               	movlw	0
 19791  003EA8  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 19792  003EAA  6965               	setf	___fldiv@new_exp& (0+255),b
 19793  003EAC  0E00               	movlw	0
 19794  003EAE  6E3B               	movwf	___fldiv@b^0,c
 19795  003EB0  0E00               	movlw	0
 19796  003EB2  6E3C               	movwf	(___fldiv@b+1)^0,c
 19797  003EB4  0E00               	movlw	0
 19798  003EB6  6E3D               	movwf	(___fldiv@b+2)^0,c
 19799  003EB8  0E00               	movlw	0
 19800  003EBA  6E3E               	movwf	(___fldiv@b+3)^0,c
 19801  003EBC                     l11632:
 19802                           
 19803                           ; BSR set to: 0
 19804  003EBC  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 19805  003EBE  EF6B  F01F         	goto	u10990
 19806  003EC2  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 19807  003EC4  E106               	bnz	u10991
 19808  003EC6  0565               	decf	___fldiv@new_exp& (0+255),w,b
 19809  003EC8  B0D8               	btfsc	status,0,c
 19810  003ECA  EF69  F01F         	goto	u10991
 19811  003ECE  EF6B  F01F         	goto	u10990
 19812  003ED2                     u10991:
 19813  003ED2  EF79  F01F         	goto	l11636
 19814  003ED6                     u10990:
 19815  003ED6                     
 19816                           ; BSR set to: 0
 19817  003ED6  0E00               	movlw	0
 19818  003ED8  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 19819  003EDA  0E00               	movlw	0
 19820  003EDC  6F65               	movwf	___fldiv@new_exp& (0+255),b
 19821  003EDE  0E00               	movlw	0
 19822  003EE0  6E3B               	movwf	___fldiv@b^0,c
 19823  003EE2  0E00               	movlw	0
 19824  003EE4  6E3C               	movwf	(___fldiv@b+1)^0,c
 19825  003EE6  0E00               	movlw	0
 19826  003EE8  6E3D               	movwf	(___fldiv@b+2)^0,c
 19827  003EEA  0E00               	movlw	0
 19828  003EEC  6E3E               	movwf	(___fldiv@b+3)^0,c
 19829  003EEE  0E00               	movlw	0
 19830  003EF0  6F64               	movwf	___fldiv@sign& (0+255),b
 19831  003EF2                     l11636:
 19832                           
 19833                           ; BSR set to: 0
 19834  003EF2  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
 19835  003EF6                     
 19836                           ; BSR set to: 0
 19837  003EF6  A16B               	btfss	___fldiv@bexp& (0+255),0,b
 19838  003EF8  EF80  F01F         	goto	u11001
 19839  003EFC  EF82  F01F         	goto	u11000
 19840  003F00                     u11001:
 19841  003F00  EF85  F01F         	goto	l11642
 19842  003F04                     u11000:
 19843  003F04                     
 19844                           ; BSR set to: 0
 19845  003F04  8E3D               	bsf	(___fldiv@b+2)^0,7,c
 19846  003F06  EF86  F01F         	goto	l11644
 19847  003F0A                     l11642:
 19848                           
 19849                           ; BSR set to: 0
 19850  003F0A  9E3D               	bcf	(___fldiv@b+2)^0,7,c
 19851  003F0C                     l11644:
 19852                           
 19853                           ; BSR set to: 0
 19854  003F0C  90D8               	bcf	status,0,c
 19855  003F0E  316B               	rrcf	___fldiv@bexp& (0+255),w,b
 19856  003F10  6E3E               	movwf	(___fldiv@b+3)^0,c
 19857  003F12  EF3C  F01E         	goto	l11558
 19858  003F16                     l2181:
 19859                           
 19860                           ; BSR set to: 0
 19861  003F16  0012               	return		;funcret
 19862  003F18                     __end_of___fldiv:
 19863                           	callstack 0
 19864                           
 19865 ;; *************** function _SRV_ADT7410_Read *****************
 19866 ;; Defined at:
 19867 ;;		line 122 in file "ServiceADT7410.c"
 19868 ;; Parameters:    Size  Location     Type
 19869 ;;  address         1    wreg     enum E519
 19870 ;; Auto vars:     Size  Location     Type
 19871 ;;  address         1   44[COMRAM] enum E519
 19872 ;;  data            2   45[COMRAM] unsigned char [2]
 19873 ;;  temp            2   47[COMRAM] unsigned short 
 19874 ;; Return value:  Size  Location     Type
 19875 ;;                  2   42[COMRAM] unsigned short 
 19876 ;; Registers used:
 19877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19878 ;; Tracked objects:
 19879 ;;		On entry : 0/0
 19880 ;;		On exit  : 0/0
 19881 ;;		Unchanged: 0/0
 19882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19883 ;;      Params:         2       0       0       0       0       0       0
 19884 ;;      Locals:         5       0       0       0       0       0       0
 19885 ;;      Temps:          0       0       0       0       0       0       0
 19886 ;;      Totals:         7       0       0       0       0       0       0
 19887 ;;Total ram usage:        7 bytes
 19888 ;; Hardware stack levels used: 1
 19889 ;; Hardware stack levels required when called: 13
 19890 ;; This function calls:
 19891 ;;		_DRV_ADT7410_Read
 19892 ;;		_SRV_ADT7410_multiplex_off
 19893 ;;		_SRV_ADT7410_multiplex_on
 19894 ;; This function is called by:
 19895 ;;		_SRV_ADT7410_ReadMeanSensor
 19896 ;; This function uses a non-reentrant model
 19897 ;;
 19898                           
 19899                           	psect	text95
 19900  006ED2                     __ptext95:
 19901                           	callstack 0
 19902  006ED2                     _SRV_ADT7410_Read:
 19903                           	callstack 14
 19904                           
 19905                           ; BSR set to: 0
 19906                           ;incstack = 0
 19907                           ;SRV_ADT7410_Read@address stored from wreg
 19908  006ED2  6E2D               	movwf	SRV_ADT7410_Read@address^0,c
 19909  006ED4                     
 19910                           ;ServiceADT7410.c: 122: static uint16_t SRV_ADT7410_Read(Sensor_e address);ServiceADT741
      +                          0.c: 123: {;ServiceADT7410.c: 124:     uint8_t data[2] = {0};
 19911  006ED4  0E00               	movlw	0
 19912  006ED6  6E2F               	movwf	(SRV_ADT7410_Read@data+1)^0,c
 19913  006ED8  0E00               	movlw	0
 19914  006EDA  6E2E               	movwf	SRV_ADT7410_Read@data^0,c
 19915  006EDC                     
 19916                           ;ServiceADT7410.c: 127:     SRV_ADT7410_multiplex_on(address);
 19917  006EDC  502D               	movf	SRV_ADT7410_Read@address^0,w,c
 19918  006EDE  EC9C  F036         	call	_SRV_ADT7410_multiplex_on
 19919  006EE2                     
 19920                           ;ServiceADT7410.c: 129:     DRV_ADT7410_Read(0x48, 0x00, data, 2);
 19921  006EE2  0E00               	movlw	0
 19922  006EE4  6E19               	movwf	DRV_ADT7410_Read@reg^0,c
 19923  006EE6  0E2E               	movlw	low SRV_ADT7410_Read@data
 19924  006EE8  6E1A               	movwf	DRV_ADT7410_Read@data^0,c
 19925  006EEA  0E00               	movlw	high SRV_ADT7410_Read@data
 19926  006EEC  6E1B               	movwf	(DRV_ADT7410_Read@data+1)^0,c
 19927  006EEE  0E00               	movlw	0
 19928  006EF0  6E1D               	movwf	(DRV_ADT7410_Read@len+1)^0,c
 19929  006EF2  0E02               	movlw	2
 19930  006EF4  6E1C               	movwf	DRV_ADT7410_Read@len^0,c
 19931  006EF6  0E48               	movlw	72
 19932  006EF8  EC9E  F028         	call	_DRV_ADT7410_Read
 19933  006EFC                     
 19934                           ;ServiceADT7410.c: 131:     temp = (uint16_t)((uint16_t)(data[0]) << 8);
 19935  006EFC  502E               	movf	SRV_ADT7410_Read@data^0,w,c
 19936  006EFE  6E31               	movwf	(SRV_ADT7410_Read@temp+1)^0,c
 19937  006F00  6A30               	clrf	SRV_ADT7410_Read@temp^0,c
 19938  006F02                     
 19939                           ;ServiceADT7410.c: 132:     temp = (temp | data[1]);
 19940  006F02  5030               	movf	SRV_ADT7410_Read@temp^0,w,c
 19941  006F04  102F               	iorwf	(SRV_ADT7410_Read@data+1)^0,w,c
 19942  006F06  6E30               	movwf	SRV_ADT7410_Read@temp^0,c
 19943  006F08  5031               	movf	(SRV_ADT7410_Read@temp+1)^0,w,c
 19944  006F0A  6E31               	movwf	(SRV_ADT7410_Read@temp+1)^0,c
 19945  006F0C                     
 19946                           ;ServiceADT7410.c: 134:     SRV_ADT7410_multiplex_off();
 19947  006F0C  ECAC  F03B         	call	_SRV_ADT7410_multiplex_off	;wreg free
 19948  006F10                     
 19949                           ;ServiceADT7410.c: 136:     return temp;
 19950  006F10  C030  F02B         	movff	SRV_ADT7410_Read@temp,?_SRV_ADT7410_Read
 19951  006F14  C031  F02C         	movff	SRV_ADT7410_Read@temp+1,?_SRV_ADT7410_Read+1
 19952  006F18  0012               	return		;funcret
 19953  006F1A                     __end_of_SRV_ADT7410_Read:
 19954                           	callstack 0
 19955                           
 19956 ;; *************** function _SRV_ADT7410_multiplex_on *****************
 19957 ;; Defined at:
 19958 ;;		line 25 in file "ServiceADT7410.c"
 19959 ;; Parameters:    Size  Location     Type
 19960 ;;  address         1    wreg     enum E519
 19961 ;; Auto vars:     Size  Location     Type
 19962 ;;  address         1   11[COMRAM] enum E519
 19963 ;; Return value:  Size  Location     Type
 19964 ;;                  1    wreg      void 
 19965 ;; Registers used:
 19966 ;;		wreg, status,2, status,0
 19967 ;; Tracked objects:
 19968 ;;		On entry : 0/0
 19969 ;;		On exit  : 0/0
 19970 ;;		Unchanged: 0/0
 19971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19972 ;;      Params:         0       0       0       0       0       0       0
 19973 ;;      Locals:         1       0       0       0       0       0       0
 19974 ;;      Temps:          2       0       0       0       0       0       0
 19975 ;;      Totals:         3       0       0       0       0       0       0
 19976 ;;Total ram usage:        3 bytes
 19977 ;; Hardware stack levels used: 1
 19978 ;; Hardware stack levels required when called: 4
 19979 ;; This function calls:
 19980 ;;		Nothing
 19981 ;; This function is called by:
 19982 ;;		_SRV_ADT7410_Read
 19983 ;; This function uses a non-reentrant model
 19984 ;;
 19985                           
 19986                           	psect	text96
 19987  006D38                     __ptext96:
 19988                           	callstack 0
 19989  006D38                     _SRV_ADT7410_multiplex_on:
 19990                           	callstack 22
 19991                           
 19992                           ;incstack = 0
 19993                           ;SRV_ADT7410_multiplex_on@address stored from wreg
 19994  006D38  6E0C               	movwf	SRV_ADT7410_multiplex_on@address^0,c
 19995  006D3A                     
 19996                           ;ServiceADT7410.c: 25: void SRV_ADT7410_multiplex_on(Sensor_e address);ServiceADT7410.c:
      +                           26: {;ServiceADT7410.c: 27:    switch(address)
 19997  006D3A  EFAE  F036         	goto	l12626
 19998  006D3E                     l1223:
 19999  006D3E  8E8A               	bsf	138,7,c	;volatile
 20000  006D40  9C8A               	bcf	138,6,c	;volatile
 20001  006D42  9889               	bcf	137,4,c	;volatile
 20002  006D44  EFC7  F036         	goto	l1244
 20003  006D48                     l1231:
 20004  006D48  9E8A               	bcf	138,7,c	;volatile
 20005  006D4A  8C8A               	bsf	138,6,c	;volatile
 20006  006D4C  9889               	bcf	137,4,c	;volatile
 20007  006D4E  EFC7  F036         	goto	l1244
 20008  006D52                     l1238:
 20009  006D52  9E8A               	bcf	138,7,c	;volatile
 20010  006D54  9C8A               	bcf	138,6,c	;volatile
 20011  006D56  8889               	bsf	137,4,c	;volatile
 20012  006D58  EFC7  F036         	goto	l1244
 20013  006D5C                     l12626:
 20014  006D5C  500C               	movf	SRV_ADT7410_multiplex_on@address^0,w,c
 20015  006D5E  6E0A               	movwf	??_SRV_ADT7410_multiplex_on^0,c
 20016  006D60  6A0B               	clrf	(??_SRV_ADT7410_multiplex_on+1)^0,c
 20017                           
 20018                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20019                           ; Switch size 1, requested type "simple"
 20020                           ; Number of cases is 1, Range of values is 0 to 0
 20021                           ; switch strategies available:
 20022                           ; Name         Instructions Cycles
 20023                           ; simple_byte            4     3 (average)
 20024                           ;	Chosen strategy is simple_byte
 20025  006D62  500B               	movf	(??_SRV_ADT7410_multiplex_on+1)^0,w,c
 20026  006D64  0A00               	xorlw	0	; case 0
 20027  006D66  B4D8               	btfsc	status,2,c
 20028  006D68  EFB8  F036         	goto	l14120
 20029  006D6C  EFC7  F036         	goto	l1244
 20030  006D70                     l14120:
 20031                           
 20032                           ; Switch size 1, requested type "simple"
 20033                           ; Number of cases is 3, Range of values is 1 to 3
 20034                           ; switch strategies available:
 20035                           ; Name         Instructions Cycles
 20036                           ; simple_byte           10     6 (average)
 20037                           ;	Chosen strategy is simple_byte
 20038  006D70  500A               	movf	??_SRV_ADT7410_multiplex_on^0,w,c
 20039  006D72  0A01               	xorlw	1	; case 1
 20040  006D74  B4D8               	btfsc	status,2,c
 20041  006D76  EF9F  F036         	goto	l1223
 20042  006D7A  0A03               	xorlw	3	; case 2
 20043  006D7C  B4D8               	btfsc	status,2,c
 20044  006D7E  EFA4  F036         	goto	l1231
 20045  006D82  0A01               	xorlw	1	; case 3
 20046  006D84  B4D8               	btfsc	status,2,c
 20047  006D86  EFA9  F036         	goto	l1238
 20048  006D8A  EFC7  F036         	goto	l1244
 20049  006D8E                     l1244:
 20050  006D8E  0012               	return		;funcret
 20051  006D90                     __end_of_SRV_ADT7410_multiplex_on:
 20052                           	callstack 0
 20053                           
 20054 ;; *************** function _SRV_ADT7410_multiplex_off *****************
 20055 ;; Defined at:
 20056 ;;		line 48 in file "ServiceADT7410.c"
 20057 ;; Parameters:    Size  Location     Type
 20058 ;;		None
 20059 ;; Auto vars:     Size  Location     Type
 20060 ;;		None
 20061 ;; Return value:  Size  Location     Type
 20062 ;;                  1    wreg      void 
 20063 ;; Registers used:
 20064 ;;		None
 20065 ;; Tracked objects:
 20066 ;;		On entry : 0/0
 20067 ;;		On exit  : 0/0
 20068 ;;		Unchanged: 0/0
 20069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20070 ;;      Params:         0       0       0       0       0       0       0
 20071 ;;      Locals:         0       0       0       0       0       0       0
 20072 ;;      Temps:          0       0       0       0       0       0       0
 20073 ;;      Totals:         0       0       0       0       0       0       0
 20074 ;;Total ram usage:        0 bytes
 20075 ;; Hardware stack levels used: 1
 20076 ;; Hardware stack levels required when called: 4
 20077 ;; This function calls:
 20078 ;;		Nothing
 20079 ;; This function is called by:
 20080 ;;		_SRV_ADT7410_Read
 20081 ;; This function uses a non-reentrant model
 20082 ;;
 20083                           
 20084                           	psect	text97
 20085  007758                     __ptext97:
 20086                           	callstack 0
 20087  007758                     _SRV_ADT7410_multiplex_off:
 20088                           	callstack 22
 20089  007758  9E8A               	bcf	138,7,c	;volatile
 20090  00775A  9C8A               	bcf	138,6,c	;volatile
 20091  00775C  9889               	bcf	137,4,c	;volatile
 20092  00775E  0012               	return		;funcret
 20093  007760                     __end_of_SRV_ADT7410_multiplex_off:
 20094                           	callstack 0
 20095                           
 20096 ;; *************** function _DRV_ADT7410_Read *****************
 20097 ;; Defined at:
 20098 ;;		line 23 in file "DriverADT7410TRZ.c"
 20099 ;; Parameters:    Size  Location     Type
 20100 ;;  address         1    wreg     unsigned char 
 20101 ;;  reg             1   24[COMRAM] unsigned char 
 20102 ;;  data            2   25[COMRAM] PTR unsigned char 
 20103 ;;		 -> SRV_ADT7410_Read@data(2), 
 20104 ;;  len             2   27[COMRAM] unsigned int 
 20105 ;; Auto vars:     Size  Location     Type
 20106 ;;  address         1   33[COMRAM] unsigned char 
 20107 ;;  bufferBlock     4   38[COMRAM] struct .
 20108 ;;  timeOut         4   34[COMRAM] unsigned long 
 20109 ;; Return value:  Size  Location     Type
 20110 ;;                  1    wreg      void 
 20111 ;; Registers used:
 20112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20113 ;; Tracked objects:
 20114 ;;		On entry : 0/0
 20115 ;;		On exit  : 0/0
 20116 ;;		Unchanged: 0/0
 20117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20118 ;;      Params:         5       0       0       0       0       0       0
 20119 ;;      Locals:         9       0       0       0       0       0       0
 20120 ;;      Temps:          4       0       0       0       0       0       0
 20121 ;;      Totals:        18       0       0       0       0       0       0
 20122 ;;Total ram usage:       18 bytes
 20123 ;; Hardware stack levels used: 1
 20124 ;; Hardware stack levels required when called: 12
 20125 ;; This function calls:
 20126 ;;		_I2C1_Close
 20127 ;;		_I2C1_MasterWrite
 20128 ;;		_I2C1_Open
 20129 ;;		_I2C1_SetAddressNackCallback
 20130 ;;		_I2C1_SetBuffer
 20131 ;;		_I2C1_SetDataCompleteCallback
 20132 ;; This function is called by:
 20133 ;;		_SRV_ADT7410_Read
 20134 ;; This function uses a non-reentrant model
 20135 ;;
 20136                           
 20137                           	psect	text98
 20138  00513C                     __ptext98:
 20139                           	callstack 0
 20140  00513C                     _DRV_ADT7410_Read:
 20141                           	callstack 14
 20142                           
 20143                           ;incstack = 0
 20144                           ;DRV_ADT7410_Read@address stored from wreg
 20145  00513C  6E22               	movwf	DRV_ADT7410_Read@address^0,c
 20146  00513E                     
 20147                           ;DriverADT7410TRZ.c: 23: void DRV_ADT7410_Read(i2c1_address_t address, uint8_t reg, uint
      +                          8_t *data, size_t len);DriverADT7410TRZ.c: 24: {;DriverADT7410TRZ.c: 25:     uint32_t ti
      +                          meOut = 0;
 20148  00513E  0E00               	movlw	0
 20149  005140  6E23               	movwf	DRV_ADT7410_Read@timeOut^0,c
 20150  005142  0E00               	movlw	0
 20151  005144  6E24               	movwf	(DRV_ADT7410_Read@timeOut+1)^0,c
 20152  005146  0E00               	movlw	0
 20153  005148  6E25               	movwf	(DRV_ADT7410_Read@timeOut+2)^0,c
 20154  00514A  0E00               	movlw	0
 20155  00514C  6E26               	movwf	(DRV_ADT7410_Read@timeOut+3)^0,c
 20156  00514E                     
 20157                           ;DriverADT7410TRZ.c: 26:     i2c1_buffer_t bufferBlock;;DriverADT7410TRZ.c: 27:     buff
      +                          erBlock.data = data;
 20158  00514E  C01A  F029         	movff	DRV_ADT7410_Read@data,DRV_ADT7410_Read@bufferBlock+2
 20159  005152  C01B  F02A         	movff	DRV_ADT7410_Read@data+1,DRV_ADT7410_Read@bufferBlock+3
 20160  005156                     
 20161                           ;DriverADT7410TRZ.c: 28:     bufferBlock.len = len;
 20162  005156  C01C  F027         	movff	DRV_ADT7410_Read@len,DRV_ADT7410_Read@bufferBlock
 20163  00515A  C01D  F028         	movff	DRV_ADT7410_Read@len+1,DRV_ADT7410_Read@bufferBlock+1
 20164                           
 20165                           ;DriverADT7410TRZ.c: 30:     while(!I2C1_Open(address)){
 20166  00515E  EFCD  F028         	goto	l12604
 20167  005162                     l12598:
 20168                           
 20169                           ;DriverADT7410TRZ.c: 31:        if(timeOut++ > 30)
 20170  005162  C023  F01E         	movff	DRV_ADT7410_Read@timeOut,??_DRV_ADT7410_Read
 20171  005166  C024  F01F         	movff	DRV_ADT7410_Read@timeOut+1,??_DRV_ADT7410_Read+1
 20172  00516A  C025  F020         	movff	DRV_ADT7410_Read@timeOut+2,??_DRV_ADT7410_Read+2
 20173  00516E  C026  F021         	movff	DRV_ADT7410_Read@timeOut+3,??_DRV_ADT7410_Read+3
 20174  005172  2A23               	incf	DRV_ADT7410_Read@timeOut^0,f,c
 20175  005174  0E00               	movlw	0
 20176  005176  2224               	addwfc	(DRV_ADT7410_Read@timeOut+1)^0,f,c
 20177  005178  2225               	addwfc	(DRV_ADT7410_Read@timeOut+2)^0,f,c
 20178  00517A  2226               	addwfc	(DRV_ADT7410_Read@timeOut+3)^0,f,c
 20179  00517C  5021               	movf	(??_DRV_ADT7410_Read+3)^0,w,c
 20180  00517E  1020               	iorwf	(??_DRV_ADT7410_Read+2)^0,w,c
 20181  005180  101F               	iorwf	(??_DRV_ADT7410_Read+1)^0,w,c
 20182  005182  E109               	bnz	u12670
 20183  005184  0E1F               	movlw	31
 20184  005186  5C1E               	subwf	??_DRV_ADT7410_Read^0,w,c
 20185  005188  A0D8               	btfss	status,0,c
 20186  00518A  EFC9  F028         	goto	u12671
 20187  00518E  EFCB  F028         	goto	u12670
 20188  005192                     u12671:
 20189  005192  EFCD  F028         	goto	l12604
 20190  005196                     u12670:
 20191  005196                     l12600:
 20192  005196  EF20  F029         	goto	l1183
 20193  00519A                     l12604:
 20194                           
 20195                           ;DriverADT7410TRZ.c: 30:     while(!I2C1_Open(address)){
 20196  00519A  5022               	movf	DRV_ADT7410_Read@address^0,w,c
 20197  00519C  EC10  F033         	call	_I2C1_Open
 20198  0051A0  0900               	iorlw	0
 20199  0051A2  B4D8               	btfsc	status,2,c
 20200  0051A4  EFD6  F028         	goto	u12681
 20201  0051A8  EFD8  F028         	goto	u12680
 20202  0051AC                     u12681:
 20203  0051AC  EFB1  F028         	goto	l12598
 20204  0051B0                     u12680:
 20205  0051B0                     
 20206                           ;DriverADT7410TRZ.c: 37:     I2C1_SetDataCompleteCallback(rdBlkRegCompleteHandler,&buffe
      +                          rBlock);
 20207  0051B0  0EA8               	movlw	low _rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621
 20208  0051B2  6E0F               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 20209  0051B4  0E70               	movlw	high _rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621
 20210  0051B6  6E10               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 20211  0051B8  0E27               	movlw	low DRV_ADT7410_Read@bufferBlock
 20212  0051BA  6E11               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 20213  0051BC  0E00               	movlw	high DRV_ADT7410_Read@bufferBlock
 20214  0051BE  6E12               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 20215  0051C0  EC03  F03B         	call	_I2C1_SetDataCompleteCallback	;wreg free
 20216  0051C4                     
 20217                           ;DriverADT7410TRZ.c: 38:     I2C1_SetBuffer(&reg,1);
 20218  0051C4  0E19               	movlw	low DRV_ADT7410_Read@reg
 20219  0051C6  6E0A               	movwf	I2C1_SetBuffer@buffer^0,c
 20220  0051C8  0E00               	movlw	high DRV_ADT7410_Read@reg
 20221  0051CA  6E0B               	movwf	(I2C1_SetBuffer@buffer+1)^0,c
 20222  0051CC  0E00               	movlw	0
 20223  0051CE  6E0D               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 20224  0051D0  0E01               	movlw	1
 20225  0051D2  6E0C               	movwf	I2C1_SetBuffer@bufferSize^0,c
 20226  0051D4  EC3D  F03A         	call	_I2C1_SetBuffer	;wreg free
 20227  0051D8                     
 20228                           ;DriverADT7410TRZ.c: 39:     I2C1_SetAddressNackCallback(((void*)0),((void*)0));
 20229  0051D8  0E00               	movlw	0
 20230  0051DA  6E0F               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 20231  0051DC  0E00               	movlw	0
 20232  0051DE  6E10               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 20233  0051E0  0E00               	movlw	0
 20234  0051E2  6E11               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 20235  0051E4  0E00               	movlw	0
 20236  0051E6  6E12               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 20237  0051E8  ECF7  F03A         	call	_I2C1_SetAddressNackCallback	;wreg free
 20238  0051EC                     
 20239                           ;DriverADT7410TRZ.c: 40:     I2C1_MasterWrite();
 20240  0051EC  ECB0  F03B         	call	_I2C1_MasterWrite	;wreg free
 20241                           
 20242                           ;DriverADT7410TRZ.c: 41:     while(I2C1_BUSY == I2C1_Close()){
 20243  0051F0  EF16  F029         	goto	l12620
 20244  0051F4                     l12614:
 20245                           
 20246                           ;DriverADT7410TRZ.c: 42:       if(timeOut++ > 30)
 20247  0051F4  C023  F01E         	movff	DRV_ADT7410_Read@timeOut,??_DRV_ADT7410_Read
 20248  0051F8  C024  F01F         	movff	DRV_ADT7410_Read@timeOut+1,??_DRV_ADT7410_Read+1
 20249  0051FC  C025  F020         	movff	DRV_ADT7410_Read@timeOut+2,??_DRV_ADT7410_Read+2
 20250  005200  C026  F021         	movff	DRV_ADT7410_Read@timeOut+3,??_DRV_ADT7410_Read+3
 20251  005204  2A23               	incf	DRV_ADT7410_Read@timeOut^0,f,c
 20252  005206  0E00               	movlw	0
 20253  005208  2224               	addwfc	(DRV_ADT7410_Read@timeOut+1)^0,f,c
 20254  00520A  2225               	addwfc	(DRV_ADT7410_Read@timeOut+2)^0,f,c
 20255  00520C  2226               	addwfc	(DRV_ADT7410_Read@timeOut+3)^0,f,c
 20256  00520E  5021               	movf	(??_DRV_ADT7410_Read+3)^0,w,c
 20257  005210  1020               	iorwf	(??_DRV_ADT7410_Read+2)^0,w,c
 20258  005212  101F               	iorwf	(??_DRV_ADT7410_Read+1)^0,w,c
 20259  005214  E109               	bnz	u12690
 20260  005216  0E1F               	movlw	31
 20261  005218  5C1E               	subwf	??_DRV_ADT7410_Read^0,w,c
 20262  00521A  A0D8               	btfss	status,0,c
 20263  00521C  EF12  F029         	goto	u12691
 20264  005220  EF14  F029         	goto	u12690
 20265  005224                     u12691:
 20266  005224  EF16  F029         	goto	l12620
 20267  005228                     u12690:
 20268  005228  EFCB  F028         	goto	l12600
 20269  00522C                     l12620:
 20270                           
 20271                           ;DriverADT7410TRZ.c: 41:     while(I2C1_BUSY == I2C1_Close()){
 20272  00522C  ECFE  F039         	call	_I2C1_Close	;wreg free
 20273  005230  06E8               	decf	wreg,f,c
 20274  005232  B4D8               	btfsc	status,2,c
 20275  005234  EF1E  F029         	goto	u12701
 20276  005238  EF20  F029         	goto	u12700
 20277  00523C                     u12701:
 20278  00523C  EFFA  F028         	goto	l12614
 20279  005240                     u12700:
 20280  005240                     l1183:
 20281  005240  0012               	return		;funcret
 20282  005242                     __end_of_DRV_ADT7410_Read:
 20283                           	callstack 0
 20284                           
 20285 ;; *************** function _I2C1_SetAddressNackCallback *****************
 20286 ;; Defined at:
 20287 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 20288 ;; Parameters:    Size  Location     Type
 20289 ;;  cb              2   14[COMRAM] PTR FTN(PTR void ,)enum 
 20290 ;;		 -> Absolute function(1), 
 20291 ;;  ptr             2   16[COMRAM] PTR void 
 20292 ;;		 -> NULL(0), 
 20293 ;; Auto vars:     Size  Location     Type
 20294 ;;		None
 20295 ;; Return value:  Size  Location     Type
 20296 ;;                  1    wreg      void 
 20297 ;; Registers used:
 20298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20299 ;; Tracked objects:
 20300 ;;		On entry : 0/0
 20301 ;;		On exit  : 0/0
 20302 ;;		Unchanged: 0/0
 20303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20304 ;;      Params:         4       0       0       0       0       0       0
 20305 ;;      Locals:         0       0       0       0       0       0       0
 20306 ;;      Temps:          0       0       0       0       0       0       0
 20307 ;;      Totals:         4       0       0       0       0       0       0
 20308 ;;Total ram usage:        4 bytes
 20309 ;; Hardware stack levels used: 1
 20310 ;; Hardware stack levels required when called: 5
 20311 ;; This function calls:
 20312 ;;		_I2C1_SetCallback
 20313 ;; This function is called by:
 20314 ;;		_DRV_ADT7410_Read
 20315 ;;		_I2C1_Read1ByteRegister
 20316 ;;		_I2C1_Read2ByteRegister
 20317 ;;		_I2C1_Write1ByteRegister
 20318 ;;		_I2C1_Write2ByteRegister
 20319 ;;		_I2C1_WriteNBytes
 20320 ;;		_I2C1_ReadDataBlock
 20321 ;; This function uses a non-reentrant model
 20322 ;;
 20323                           
 20324                           	psect	text99
 20325  0075EE                     __ptext99:
 20326                           	callstack 0
 20327  0075EE                     _I2C1_SetAddressNackCallback:
 20328                           	callstack 20
 20329  0075EE                     
 20330                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 20331  0075EE  C00F  F00A         	movff	I2C1_SetAddressNackCallback@cb,I2C1_SetCallback@cb
 20332  0075F2  C010  F00B         	movff	I2C1_SetAddressNackCallback@cb+1,I2C1_SetCallback@cb+1
 20333  0075F6  C011  F00C         	movff	I2C1_SetAddressNackCallback@ptr,I2C1_SetCallback@ptr
 20334  0075FA  C012  F00D         	movff	I2C1_SetAddressNackCallback@ptr+1,I2C1_SetCallback@ptr+1
 20335  0075FE  0E02               	movlw	2
 20336  007600  ECDB  F033         	call	_I2C1_SetCallback
 20337  007604  0012               	return		;funcret
 20338  007606                     __end_of_I2C1_SetAddressNackCallback:
 20339                           	callstack 0
 20340                           
 20341 ;; *************** function _I2C1_Open *****************
 20342 ;; Defined at:
 20343 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 20344 ;; Parameters:    Size  Location     Type
 20345 ;;  address         1    wreg     unsigned char 
 20346 ;; Auto vars:     Size  Location     Type
 20347 ;;  address         1    9[COMRAM] unsigned char 
 20348 ;;  returnValue     1   10[COMRAM] enum E355
 20349 ;; Return value:  Size  Location     Type
 20350 ;;                  1    wreg      enum E355
 20351 ;; Registers used:
 20352 ;;		wreg, status,2, status,0, cstack
 20353 ;; Tracked objects:
 20354 ;;		On entry : 0/0
 20355 ;;		On exit  : 0/0
 20356 ;;		Unchanged: 0/0
 20357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20358 ;;      Params:         0       0       0       0       0       0       0
 20359 ;;      Locals:         2       0       0       0       0       0       0
 20360 ;;      Temps:          0       0       0       0       0       0       0
 20361 ;;      Totals:         2       0       0       0       0       0       0
 20362 ;;Total ram usage:        2 bytes
 20363 ;; Hardware stack levels used: 1
 20364 ;; Hardware stack levels required when called: 5
 20365 ;; This function calls:
 20366 ;;		_I2C1_MasterClearIrq
 20367 ;;		_I2C1_MasterOpen
 20368 ;; This function is called by:
 20369 ;;		_DRV_ADT7410_Read
 20370 ;;		_I2C1_Read1ByteRegister
 20371 ;;		_I2C1_Read2ByteRegister
 20372 ;;		_I2C1_Write1ByteRegister
 20373 ;;		_I2C1_Write2ByteRegister
 20374 ;;		_I2C1_WriteNBytes
 20375 ;;		_I2C1_ReadNBytes
 20376 ;;		_I2C1_ReadDataBlock
 20377 ;; This function uses a non-reentrant model
 20378 ;;
 20379                           
 20380                           	psect	text100
 20381  006620                     __ptext100:
 20382                           	callstack 0
 20383  006620                     _I2C1_Open:
 20384                           	callstack 20
 20385                           
 20386                           ;incstack = 0
 20387                           ;I2C1_Open@address stored from wreg
 20388  006620  6E0A               	movwf	I2C1_Open@address^0,c
 20389  006622                     
 20390                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 20391  006622  0E01               	movlw	1
 20392  006624  6E0B               	movwf	I2C1_Open@returnValue^0,c
 20393  006626                     
 20394                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 20395  006626  0101               	movlb	1	; () banked
 20396  006628  B523               	btfsc	(_I2C1_Status+35)& (0+255),2,b
 20397  00662A  EF19  F033         	goto	u11791
 20398  00662E  EF1B  F033         	goto	u11790
 20399  006632                     u11791:
 20400  006632  EF55  F033         	goto	l12108
 20401  006636                     u11790:
 20402  006636                     
 20403                           ; BSR set to: 1
 20404                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 20405  006636  C00A  F11C         	movff	I2C1_Open@address,_I2C1_Status+28
 20406  00663A                     
 20407                           ; BSR set to: 1
 20408                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 20409  00663A  9323               	bcf	(_I2C1_Status+35)& (0+255),1,b
 20410  00663C                     
 20411                           ; BSR set to: 1
 20412                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 20413  00663C  8523               	bsf	(_I2C1_Status+35)& (0+255),2,b
 20414  00663E                     
 20415                           ; BSR set to: 1
 20416                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 20417  00663E  9123               	bcf	(_I2C1_Status+35)& (0+255),0,b
 20418  006640                     
 20419                           ; BSR set to: 1
 20420                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 20421  006640  0E0E               	movlw	14
 20422  006642  6F21               	movwf	(_I2C1_Status+33)& (0+255),b
 20423  006644                     
 20424                           ; BSR set to: 1
 20425                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 20426  006644  0E01               	movlw	1
 20427  006646  6F1B               	movwf	(_I2C1_Status+27)& (0+255),b
 20428  006648  0EF4               	movlw	244
 20429  00664A  6F1A               	movwf	(_I2C1_Status+26)& (0+255),b
 20430  00664C                     
 20431                           ; BSR set to: 1
 20432                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 20433  00664C  8723               	bsf	(_I2C1_Status+35)& (0+255),3,b
 20434  00664E                     
 20435                           ; BSR set to: 1
 20436                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 20437  00664E  0EE2               	movlw	low _I2C1_CallbackReturnStop
 20438  006650  6F00               	movwf	_I2C1_Status& (0+255),b
 20439  006652  0E77               	movlw	high _I2C1_CallbackReturnStop
 20440  006654  6F01               	movwf	(_I2C1_Status+1)& (0+255),b
 20441  006656                     
 20442                           ; BSR set to: 1
 20443                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 20444  006656  0E00               	movlw	0
 20445  006658  6F0C               	movwf	(_I2C1_Status+12)& (0+255),b
 20446  00665A  0E00               	movlw	0
 20447  00665C  6F0D               	movwf	(_I2C1_Status+13)& (0+255),b
 20448  00665E                     
 20449                           ; BSR set to: 1
 20450                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 20451  00665E  0EE2               	movlw	low _I2C1_CallbackReturnStop
 20452  006660  6F02               	movwf	(_I2C1_Status+2)& (0+255),b
 20453  006662  0E77               	movlw	high _I2C1_CallbackReturnStop
 20454  006664  6F03               	movwf	(_I2C1_Status+3)& (0+255),b
 20455  006666                     
 20456                           ; BSR set to: 1
 20457                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 20458  006666  0E00               	movlw	0
 20459  006668  6F0E               	movwf	(_I2C1_Status+14)& (0+255),b
 20460  00666A  0E00               	movlw	0
 20461  00666C  6F0F               	movwf	(_I2C1_Status+15)& (0+255),b
 20462  00666E                     
 20463                           ; BSR set to: 1
 20464                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 20465  00666E  0EE2               	movlw	low _I2C1_CallbackReturnStop
 20466  006670  6F04               	movwf	(_I2C1_Status+4)& (0+255),b
 20467  006672  0E77               	movlw	high _I2C1_CallbackReturnStop
 20468  006674  6F05               	movwf	(_I2C1_Status+5)& (0+255),b
 20469  006676                     
 20470                           ; BSR set to: 1
 20471                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 20472  006676  0E00               	movlw	0
 20473  006678  6F10               	movwf	(_I2C1_Status+16)& (0+255),b
 20474  00667A  0E00               	movlw	0
 20475  00667C  6F11               	movwf	(_I2C1_Status+17)& (0+255),b
 20476  00667E                     
 20477                           ; BSR set to: 1
 20478                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 20479  00667E  0EE2               	movlw	low _I2C1_CallbackReturnStop
 20480  006680  6F06               	movwf	(_I2C1_Status+6)& (0+255),b
 20481  006682  0E77               	movlw	high _I2C1_CallbackReturnStop
 20482  006684  6F07               	movwf	(_I2C1_Status+7)& (0+255),b
 20483  006686                     
 20484                           ; BSR set to: 1
 20485                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 20486  006686  0E00               	movlw	0
 20487  006688  6F12               	movwf	(_I2C1_Status+18)& (0+255),b
 20488  00668A  0E00               	movlw	0
 20489  00668C  6F13               	movwf	(_I2C1_Status+19)& (0+255),b
 20490  00668E                     
 20491                           ; BSR set to: 1
 20492                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 20493  00668E  0EDE               	movlw	low _I2C1_CallbackReturnReset
 20494  006690  6F08               	movwf	(_I2C1_Status+8)& (0+255),b
 20495  006692  0E77               	movlw	high _I2C1_CallbackReturnReset
 20496  006694  6F09               	movwf	(_I2C1_Status+9)& (0+255),b
 20497  006696                     
 20498                           ; BSR set to: 1
 20499                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 20500  006696  0E00               	movlw	0
 20501  006698  6F14               	movwf	(_I2C1_Status+20)& (0+255),b
 20502  00669A  0E00               	movlw	0
 20503  00669C  6F15               	movwf	(_I2C1_Status+21)& (0+255),b
 20504  00669E                     
 20505                           ; BSR set to: 1
 20506                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 20507  00669E  ECFD  F03B         	call	_I2C1_MasterClearIrq	;wreg free
 20508  0066A2                     
 20509                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 20510  0066A2  EC4F  F03A         	call	_I2C1_MasterOpen	;wreg free
 20511  0066A6                     
 20512                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 20513  0066A6  0E00               	movlw	0
 20514  0066A8  6E0B               	movwf	I2C1_Open@returnValue^0,c
 20515  0066AA                     l12108:
 20516                           
 20517                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 20518  0066AA  500B               	movf	I2C1_Open@returnValue^0,w,c
 20519  0066AC  0012               	return		;funcret
 20520  0066AE                     __end_of_I2C1_Open:
 20521                           	callstack 0
 20522                           
 20523 ;; *************** function _I2C1_MasterOpen *****************
 20524 ;; Defined at:
 20525 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 20526 ;; Parameters:    Size  Location     Type
 20527 ;;		None
 20528 ;; Auto vars:     Size  Location     Type
 20529 ;;		None
 20530 ;; Return value:  Size  Location     Type
 20531 ;;                  1    wreg      _Bool 
 20532 ;; Registers used:
 20533 ;;		wreg, status,2
 20534 ;; Tracked objects:
 20535 ;;		On entry : 0/0
 20536 ;;		On exit  : 0/0
 20537 ;;		Unchanged: 0/0
 20538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20539 ;;      Params:         0       0       0       0       0       0       0
 20540 ;;      Locals:         0       0       0       0       0       0       0
 20541 ;;      Temps:          0       0       0       0       0       0       0
 20542 ;;      Totals:         0       0       0       0       0       0       0
 20543 ;;Total ram usage:        0 bytes
 20544 ;; Hardware stack levels used: 1
 20545 ;; Hardware stack levels required when called: 4
 20546 ;; This function calls:
 20547 ;;		Nothing
 20548 ;; This function is called by:
 20549 ;;		_I2C1_Open
 20550 ;; This function uses a non-reentrant model
 20551 ;;
 20552                           
 20553                           	psect	text101
 20554  00749E                     __ptext101:
 20555                           	callstack 0
 20556  00749E                     _I2C1_MasterOpen:
 20557                           	callstack 20
 20558  00749E                     
 20559                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 20560  00749E  BAC6               	btfsc	198,5,c	;volatile
 20561  0074A0  EF54  F03A         	goto	u10621
 20562  0074A4  EF56  F03A         	goto	u10620
 20563  0074A8                     u10621:
 20564  0074A8  EF5F  F03A         	goto	l614
 20565  0074AC                     u10620:
 20566  0074AC                     
 20567                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x00;
 20568  0074AC  0E00               	movlw	0
 20569  0074AE  6EC7               	movwf	199,c	;volatile
 20570                           
 20571                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 20572  0074B0  0E08               	movlw	8
 20573  0074B2  6EC6               	movwf	198,c	;volatile
 20574                           
 20575                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 20576  0074B4  0E00               	movlw	0
 20577  0074B6  6EC5               	movwf	197,c	;volatile
 20578                           
 20579                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x63;
 20580  0074B8  0E63               	movlw	99
 20581  0074BA  6EC8               	movwf	200,c	;volatile
 20582  0074BC                     
 20583                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 20584  0074BC  8AC6               	bsf	198,5,c	;volatile
 20585  0074BE                     l614:
 20586  0074BE  0012               	return		;funcret
 20587  0074C0                     __end_of_I2C1_MasterOpen:
 20588                           	callstack 0
 20589                           
 20590 ;; *************** function _I2C1_MasterWrite *****************
 20591 ;; Defined at:
 20592 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 20593 ;; Parameters:    Size  Location     Type
 20594 ;;		None
 20595 ;; Auto vars:     Size  Location     Type
 20596 ;;		None
 20597 ;; Return value:  Size  Location     Type
 20598 ;;                  1    wreg      enum E355
 20599 ;; Registers used:
 20600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20601 ;; Tracked objects:
 20602 ;;		On entry : 0/0
 20603 ;;		On exit  : 0/0
 20604 ;;		Unchanged: 0/0
 20605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20606 ;;      Params:         0       0       0       0       0       0       0
 20607 ;;      Locals:         0       0       0       0       0       0       0
 20608 ;;      Temps:          0       0       0       0       0       0       0
 20609 ;;      Totals:         0       0       0       0       0       0       0
 20610 ;;Total ram usage:        0 bytes
 20611 ;; Hardware stack levels used: 1
 20612 ;; Hardware stack levels required when called: 11
 20613 ;; This function calls:
 20614 ;;		_I2C1_MasterOperation
 20615 ;; This function is called by:
 20616 ;;		_DRV_ADT7410_Read
 20617 ;;		_I2C1_Read1ByteRegister
 20618 ;;		_I2C1_Read2ByteRegister
 20619 ;;		_I2C1_Write1ByteRegister
 20620 ;;		_I2C1_Write2ByteRegister
 20621 ;;		_I2C1_WriteNBytes
 20622 ;;		_I2C1_ReadDataBlock
 20623 ;; This function uses a non-reentrant model
 20624 ;;
 20625                           
 20626                           	psect	text102
 20627  007760                     __ptext102:
 20628                           	callstack 0
 20629  007760                     _I2C1_MasterWrite:
 20630                           	callstack 14
 20631  007760                     
 20632                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 20633  007760  0E00               	movlw	0
 20634  007762  ECD2  F037         	call	_I2C1_MasterOperation
 20635  007766  0012               	return		;funcret
 20636  007768                     __end_of_I2C1_MasterWrite:
 20637                           	callstack 0
 20638                           
 20639 ;; *************** function _I2C1_MasterOperation *****************
 20640 ;; Defined at:
 20641 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 20642 ;; Parameters:    Size  Location     Type
 20643 ;;  read            1    wreg     _Bool 
 20644 ;; Auto vars:     Size  Location     Type
 20645 ;;  read            1   22[COMRAM] _Bool 
 20646 ;;  returnValue     1   23[COMRAM] enum E355
 20647 ;; Return value:  Size  Location     Type
 20648 ;;                  1    wreg      enum E355
 20649 ;; Registers used:
 20650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20651 ;; Tracked objects:
 20652 ;;		On entry : 0/0
 20653 ;;		On exit  : 0/0
 20654 ;;		Unchanged: 0/0
 20655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20656 ;;      Params:         0       0       0       0       0       0       0
 20657 ;;      Locals:         2       0       0       0       0       0       0
 20658 ;;      Temps:          0       0       0       0       0       0       0
 20659 ;;      Totals:         2       0       0       0       0       0       0
 20660 ;;Total ram usage:        2 bytes
 20661 ;; Hardware stack levels used: 1
 20662 ;; Hardware stack levels required when called: 10
 20663 ;; This function calls:
 20664 ;;		_I2C1_MasterStart
 20665 ;;		_I2C1_Poller
 20666 ;; This function is called by:
 20667 ;;		_I2C1_MasterWrite
 20668 ;;		_I2C1_MasterRead
 20669 ;; This function uses a non-reentrant model
 20670 ;;
 20671                           
 20672                           	psect	text103
 20673  006FA4                     __ptext103:
 20674                           	callstack 0
 20675  006FA4                     _I2C1_MasterOperation:
 20676                           	callstack 14
 20677                           
 20678                           ;incstack = 0
 20679                           ;I2C1_MasterOperation@read stored from wreg
 20680  006FA4  6E17               	movwf	I2C1_MasterOperation@read^0,c
 20681  006FA6                     
 20682                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 20683  006FA6  0E01               	movlw	1
 20684  006FA8  6E18               	movwf	I2C1_MasterOperation@returnValue^0,c
 20685  006FAA                     
 20686                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 20687  006FAA  0101               	movlb	1	; () banked
 20688  006FAC  B323               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 20689  006FAE  EFDB  F037         	goto	u10631
 20690  006FB2  EFDD  F037         	goto	u10630
 20691  006FB6                     u10631:
 20692  006FB6  EFF2  F037         	goto	l11424
 20693  006FBA                     u10630:
 20694  006FBA                     
 20695                           ; BSR set to: 1
 20696                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 20697  006FBA  8323               	bsf	(_I2C1_Status+35)& (0+255),1,b
 20698  006FBC                     
 20699                           ; BSR set to: 1
 20700                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 20701  006FBC  0E00               	movlw	0
 20702  006FBE  6E18               	movwf	I2C1_MasterOperation@returnValue^0,c
 20703  006FC0                     
 20704                           ; BSR set to: 1
 20705                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 20706  006FC0  5017               	movf	I2C1_MasterOperation@read^0,w,c
 20707  006FC2  B4D8               	btfsc	status,2,c
 20708  006FC4  EFE6  F037         	goto	u10641
 20709  006FC8  EFE8  F037         	goto	u10640
 20710  006FCC                     u10641:
 20711  006FCC  EFEC  F037         	goto	l11418
 20712  006FD0                     u10640:
 20713  006FD0                     
 20714                           ; BSR set to: 1
 20715                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 20716  006FD0  0E01               	movlw	1
 20717  006FD2  6F21               	movwf	(_I2C1_Status+33)& (0+255),b
 20718                           
 20719                           ;mcc_generated_files/i2c1_master.c: 235:         }
 20720  006FD4  EFEE  F037         	goto	l11420
 20721  006FD8                     l11418:
 20722                           
 20723                           ; BSR set to: 1
 20724                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 20725  006FD8  0E02               	movlw	2
 20726  006FDA  6F21               	movwf	(_I2C1_Status+33)& (0+255),b
 20727  006FDC                     l11420:
 20728                           
 20729                           ; BSR set to: 1
 20730                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 20731  006FDC  ECF7  F03B         	call	_I2C1_MasterStart	;wreg free
 20732  006FE0                     
 20733                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 20734  006FE0  EC9C  F03A         	call	_I2C1_Poller	;wreg free
 20735  006FE4                     l11424:
 20736                           
 20737                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 20738  006FE4  5018               	movf	I2C1_MasterOperation@returnValue^0,w,c
 20739  006FE6  0012               	return		;funcret
 20740  006FE8                     __end_of_I2C1_MasterOperation:
 20741                           	callstack 0
 20742                           
 20743 ;; *************** function _I2C1_Poller *****************
 20744 ;; Defined at:
 20745 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 20746 ;; Parameters:    Size  Location     Type
 20747 ;;		None
 20748 ;; Auto vars:     Size  Location     Type
 20749 ;;		None
 20750 ;; Return value:  Size  Location     Type
 20751 ;;                  1    wreg      void 
 20752 ;; Registers used:
 20753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20754 ;; Tracked objects:
 20755 ;;		On entry : 0/0
 20756 ;;		On exit  : 0/0
 20757 ;;		Unchanged: 0/0
 20758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20759 ;;      Params:         0       0       0       0       0       0       0
 20760 ;;      Locals:         0       0       0       0       0       0       0
 20761 ;;      Temps:          0       0       0       0       0       0       0
 20762 ;;      Totals:         0       0       0       0       0       0       0
 20763 ;;Total ram usage:        0 bytes
 20764 ;; Hardware stack levels used: 1
 20765 ;; Hardware stack levels required when called: 9
 20766 ;; This function calls:
 20767 ;;		_I2C1_MasterFsm
 20768 ;;		_I2C1_MasterWaitForEvent
 20769 ;; This function is called by:
 20770 ;;		_I2C1_MasterOperation
 20771 ;; This function uses a non-reentrant model
 20772 ;;
 20773                           
 20774                           	psect	text104
 20775  007538                     __ptext104:
 20776                           	callstack 0
 20777  007538                     _I2C1_Poller:
 20778                           	callstack 14
 20779  007538                     
 20780                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 20781  007538  EFA2  F03A         	goto	l11168
 20782  00753C                     l11164:
 20783                           
 20784                           ; BSR set to: 1
 20785                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 20786  00753C  EC62  F03B         	call	_I2C1_MasterWaitForEvent	;wreg free
 20787  007540                     
 20788                           ;mcc_generated_files/i2c1_master.c: 317:         I2C1_MasterFsm();
 20789  007540  EC26  F035         	call	_I2C1_MasterFsm	;wreg free
 20790  007544                     l11168:
 20791                           
 20792                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 20793  007544  0101               	movlb	1	; () banked
 20794  007546  B323               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 20795  007548  EFA8  F03A         	goto	u10181
 20796  00754C  EFAA  F03A         	goto	u10180
 20797  007550                     u10181:
 20798  007550  EF9E  F03A         	goto	l11164
 20799  007554                     u10180:
 20800  007554                     
 20801                           ; BSR set to: 1
 20802  007554  0012               	return		;funcret
 20803  007556                     __end_of_I2C1_Poller:
 20804                           	callstack 0
 20805                           
 20806 ;; *************** function _I2C1_MasterWaitForEvent *****************
 20807 ;; Defined at:
 20808 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 20809 ;; Parameters:    Size  Location     Type
 20810 ;;		None
 20811 ;; Auto vars:     Size  Location     Type
 20812 ;;		None
 20813 ;; Return value:  Size  Location     Type
 20814 ;;                  1    wreg      void 
 20815 ;; Registers used:
 20816 ;;		None
 20817 ;; Tracked objects:
 20818 ;;		On entry : 0/0
 20819 ;;		On exit  : 0/0
 20820 ;;		Unchanged: 0/0
 20821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20822 ;;      Params:         0       0       0       0       0       0       0
 20823 ;;      Locals:         0       0       0       0       0       0       0
 20824 ;;      Temps:          0       0       0       0       0       0       0
 20825 ;;      Totals:         0       0       0       0       0       0       0
 20826 ;;Total ram usage:        0 bytes
 20827 ;; Hardware stack levels used: 1
 20828 ;; Hardware stack levels required when called: 4
 20829 ;; This function calls:
 20830 ;;		Nothing
 20831 ;; This function is called by:
 20832 ;;		_I2C1_Poller
 20833 ;; This function uses a non-reentrant model
 20834 ;;
 20835                           
 20836                           	psect	text105
 20837  0076C4                     __ptext105:
 20838                           	callstack 0
 20839  0076C4                     _I2C1_MasterWaitForEvent:
 20840                           	callstack 18
 20841  0076C4                     l671:
 20842                           
 20843                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR1bits.SSP1IF)
 20844  0076C4  A69E               	btfss	158,3,c	;volatile
 20845  0076C6  EF67  F03B         	goto	u10101
 20846  0076CA  EF69  F03B         	goto	u10100
 20847  0076CE                     u10101:
 20848  0076CE  EF62  F03B         	goto	l671
 20849  0076D2                     u10100:
 20850  0076D2  0012               	return		;funcret
 20851  0076D4                     __end_of_I2C1_MasterWaitForEvent:
 20852                           	callstack 0
 20853                           
 20854 ;; *************** function _I2C1_MasterFsm *****************
 20855 ;; Defined at:
 20856 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 20857 ;; Parameters:    Size  Location     Type
 20858 ;;		None
 20859 ;; Auto vars:     Size  Location     Type
 20860 ;;		None
 20861 ;; Return value:  Size  Location     Type
 20862 ;;                  1    wreg      void 
 20863 ;; Registers used:
 20864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20865 ;; Tracked objects:
 20866 ;;		On entry : 0/0
 20867 ;;		On exit  : 0/0
 20868 ;;		Unchanged: 0/0
 20869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20870 ;;      Params:         0       0       0       0       0       0       0
 20871 ;;      Locals:         0       0       0       0       0       0       0
 20872 ;;      Temps:          0       0       0       0       0       0       0
 20873 ;;      Totals:         0       0       0       0       0       0       0
 20874 ;;Total ram usage:        0 bytes
 20875 ;; Hardware stack levels used: 1
 20876 ;; Hardware stack levels required when called: 8
 20877 ;; This function calls:
 20878 ;;		_I2C1_DO_ADDRESS_NACK
 20879 ;;		_I2C1_DO_IDLE
 20880 ;;		_I2C1_DO_RCEN
 20881 ;;		_I2C1_DO_RESET
 20882 ;;		_I2C1_DO_RX
 20883 ;;		_I2C1_DO_RX_ACK
 20884 ;;		_I2C1_DO_RX_NACK_RESTART
 20885 ;;		_I2C1_DO_RX_NACK_STOP
 20886 ;;		_I2C1_DO_SEND_ADR_READ
 20887 ;;		_I2C1_DO_SEND_ADR_WRITE
 20888 ;;		_I2C1_DO_SEND_RESTART
 20889 ;;		_I2C1_DO_SEND_RESTART_READ
 20890 ;;		_I2C1_DO_SEND_RESTART_WRITE
 20891 ;;		_I2C1_DO_SEND_STOP
 20892 ;;		_I2C1_DO_TX
 20893 ;;		_I2C1_DO_TX_EMPTY
 20894 ;;		_I2C1_MasterClearIrq
 20895 ;;		_I2C1_MasterIsNack
 20896 ;; This function is called by:
 20897 ;;		_I2C1_Poller
 20898 ;; This function uses a non-reentrant model
 20899 ;;
 20900                           
 20901                           	psect	text106
 20902  006A4C                     __ptext106:
 20903                           	callstack 0
 20904  006A4C                     _I2C1_MasterFsm:
 20905                           	callstack 14
 20906  006A4C                     
 20907                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 20908  006A4C  ECFD  F03B         	call	_I2C1_MasterClearIrq	;wreg free
 20909  006A50                     
 20910                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 20911  006A50  0101               	movlb	1	; () banked
 20912  006A52  A123               	btfss	(_I2C1_Status+35)& (0+255),0,b
 20913  006A54  EF2E  F035         	goto	u10111
 20914  006A58  EF30  F035         	goto	u10110
 20915  006A5C                     u10111:
 20916  006A5C  EF3D  F035         	goto	l11144
 20917  006A60                     u10110:
 20918  006A60                     
 20919                           ; BSR set to: 1
 20920  006A60  EC4F  F03B         	call	_I2C1_MasterIsNack	;wreg free
 20921  006A64  0900               	iorlw	0
 20922  006A66  B4D8               	btfsc	status,2,c
 20923  006A68  EF38  F035         	goto	u10121
 20924  006A6C  EF3A  F035         	goto	u10120
 20925  006A70                     u10121:
 20926  006A70  EF3D  F035         	goto	l11144
 20927  006A74                     u10120:
 20928  006A74                     
 20929                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 20930  006A74  0E0F               	movlw	15
 20931  006A76  0101               	movlb	1	; () banked
 20932  006A78  6F21               	movwf	(_I2C1_Status+33)& (0+255),b
 20933  006A7A                     l11144:
 20934                           
 20935                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 20936  006A7A  0101               	movlb	1	; () banked
 20937  006A7C  5121               	movf	(_I2C1_Status+33)& (0+255),w,b
 20938  006A7E  0D02               	mullw	2
 20939  006A80  0E01               	movlw	low _i2c1_fsmStateTable
 20940  006A82  24F3               	addwf	243,w,c
 20941  006A84  6EF6               	movwf	tblptrl,c
 20942  006A86  0E06               	movlw	high _i2c1_fsmStateTable
 20943  006A88  20F4               	addwfc	244,w,c
 20944  006A8A  6EF7               	movwf	tblptrh,c
 20945  006A8C                     	if	0	;There are less than 3 active tblptr bytes
 20946  006A8C                     	endif
 20947  006A8C  D802               	call	u10138
 20948  006A8E  EF55  F035         	goto	u10139
 20949  006A92                     u10138:
 20950  006A92  0005               	push	
 20951  006A94  6EFA               	movwf	pclath,c
 20952  006A96  0009               	tblrd		*+
 20953  006A98  50F5               	movf	tablat,w,c
 20954  006A9A  6EFD               	movwf	tosl,c
 20955  006A9C  0009               	tblrd		*+
 20956  006A9E  50F5               	movf	tablat,w,c
 20957  006AA0  6EFE               	movwf	tosh,c
 20958  006AA2  50F8               	movf	tblptru,w,c
 20959  006AA4  6EFF               	movwf	tosu,c
 20960  006AA6  50FA               	movf	pclath,w,c
 20961  006AA8  0012               	return		;indir
 20962  006AAA                     u10139:
 20963  006AAA  0101               	movlb	1	; () banked
 20964  006AAC  6F21               	movwf	(_I2C1_Status+33)& (0+255),b
 20965  006AAE                     
 20966                           ; BSR set to: 1
 20967  006AAE  0012               	return		;funcret
 20968  006AB0                     __end_of_I2C1_MasterFsm:
 20969                           	callstack 0
 20970                           
 20971 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 20972 ;; Defined at:
 20973 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 20974 ;; Parameters:    Size  Location     Type
 20975 ;;		None
 20976 ;; Auto vars:     Size  Location     Type
 20977 ;;		None
 20978 ;; Return value:  Size  Location     Type
 20979 ;;                  1    wreg      enum E6125
 20980 ;; Registers used:
 20981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20982 ;; Tracked objects:
 20983 ;;		On entry : 0/0
 20984 ;;		On exit  : 0/0
 20985 ;;		Unchanged: 0/0
 20986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20987 ;;      Params:         0       0       0       0       0       0       0
 20988 ;;      Locals:         0       0       0       0       0       0       0
 20989 ;;      Temps:          2       0       0       0       0       0       0
 20990 ;;      Totals:         2       0       0       0       0       0       0
 20991 ;;Total ram usage:        2 bytes
 20992 ;; Hardware stack levels used: 1
 20993 ;; Hardware stack levels required when called: 7
 20994 ;; This function calls:
 20995 ;;		Absolute function
 20996 ;;		_I2C1_CallbackReturnReset
 20997 ;;		_I2C1_CallbackReturnStop
 20998 ;;		_I2C1_DO_SEND_RESTART
 20999 ;;		_I2C1_DO_SEND_STOP
 21000 ;;		_rd1RegCompleteHandler
 21001 ;;		_rd2RegCompleteHandler
 21002 ;;		_rdBlkRegCompleteHandler
 21003 ;;		_rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621
 21004 ;;		_wr1RegCompleteHandler
 21005 ;;		_wr2RegCompleteHandler
 21006 ;; This function is called by:
 21007 ;;		_I2C1_MasterFsm
 21008 ;; This function uses a non-reentrant model
 21009 ;;
 21010                           
 21011                           	psect	text107
 21012  00690C                     __ptext107:
 21013                           	callstack 0
 21014  00690C                     _I2C1_DO_ADDRESS_NACK:
 21015                           	callstack 14
 21016  00690C                     
 21017                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 21018  00690C  0101               	movlb	1	; () banked
 21019  00690E  9123               	bcf	(_I2C1_Status+35)& (0+255),0,b
 21020  006910                     
 21021                           ; BSR set to: 1
 21022                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 21023  006910  0E02               	movlw	2
 21024  006912  6F22               	movwf	(_I2C1_Status+34)& (0+255),b
 21025                           
 21026                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 21027  006914  EF94  F034         	goto	l11126
 21028  006918                     l11116:
 21029                           
 21030                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 21031  006918  ECC4  F03B         	call	_I2C1_DO_SEND_RESTART	;wreg free
 21032  00691C  EFBB  F034         	goto	l593
 21033  006920                     l11120:
 21034                           
 21035                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 21036  006920  ECC0  F03B         	call	_I2C1_DO_SEND_STOP	;wreg free
 21037  006924  EFBB  F034         	goto	l593
 21038  006928                     l11126:
 21039                           
 21040                           ; BSR set to: 1
 21041  006928  C110  F013         	movff	_I2C1_Status+16,rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621@ptr
 21042  00692C  C111  F014         	movff	_I2C1_Status+17,rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621@ptr+1
 21043  006930  EE21  F004         	lfsr	2,_I2C1_Status+4
 21044  006934  D802               	call	u10098
 21045  006936  EFA7  F034         	goto	u10099
 21046  00693A                     u10098:
 21047  00693A  0005               	push	
 21048  00693C  6EFA               	movwf	pclath,c
 21049  00693E  50DE               	movf	postinc2,w,c
 21050  006940  6EFD               	movwf	tosl,c
 21051  006942  50DE               	movf	postinc2,w,c
 21052  006944  6EFE               	movwf	tosh,c
 21053  006946  50F8               	movf	tblptru,w,c
 21054  006948  6EFF               	movwf	tosu,c
 21055  00694A  50FA               	movf	pclath,w,c
 21056  00694C  0012               	return		;indir
 21057  00694E                     u10099:
 21058  00694E  6E15               	movwf	??_I2C1_DO_ADDRESS_NACK^0,c
 21059  006950  6A16               	clrf	(??_I2C1_DO_ADDRESS_NACK+1)^0,c
 21060                           
 21061                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21062                           ; Switch size 1, requested type "simple"
 21063                           ; Number of cases is 1, Range of values is 0 to 0
 21064                           ; switch strategies available:
 21065                           ; Name         Instructions Cycles
 21066                           ; simple_byte            4     3 (average)
 21067                           ;	Chosen strategy is simple_byte
 21068  006952  5016               	movf	(??_I2C1_DO_ADDRESS_NACK+1)^0,w,c
 21069  006954  0A00               	xorlw	0	; case 0
 21070  006956  B4D8               	btfsc	status,2,c
 21071  006958  EFB0  F034         	goto	l14122
 21072  00695C  EF90  F034         	goto	l11120
 21073  006960                     l14122:
 21074                           
 21075                           ; Switch size 1, requested type "simple"
 21076                           ; Number of cases is 2, Range of values is 2 to 3
 21077                           ; switch strategies available:
 21078                           ; Name         Instructions Cycles
 21079                           ; simple_byte            7     4 (average)
 21080                           ;	Chosen strategy is simple_byte
 21081  006960  5015               	movf	??_I2C1_DO_ADDRESS_NACK^0,w,c
 21082  006962  0A02               	xorlw	2	; case 2
 21083  006964  B4D8               	btfsc	status,2,c
 21084  006966  EF8C  F034         	goto	l11116
 21085  00696A  0A01               	xorlw	1	; case 3
 21086  00696C  B4D8               	btfsc	status,2,c
 21087  00696E  EF8C  F034         	goto	l11116
 21088  006972  EF90  F034         	goto	l11120
 21089  006976                     l593:
 21090  006976  0012               	return		;funcret
 21091  006978                     __end_of_I2C1_DO_ADDRESS_NACK:
 21092                           	callstack 0
 21093                           
 21094 ;; *************** function _I2C1_DO_RESET *****************
 21095 ;; Defined at:
 21096 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 21097 ;; Parameters:    Size  Location     Type
 21098 ;;		None
 21099 ;; Auto vars:     Size  Location     Type
 21100 ;;		None
 21101 ;; Return value:  Size  Location     Type
 21102 ;;                  1    wreg      enum E6125
 21103 ;; Registers used:
 21104 ;;		wreg, status,2
 21105 ;; Tracked objects:
 21106 ;;		On entry : 0/0
 21107 ;;		On exit  : 0/0
 21108 ;;		Unchanged: 0/0
 21109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21110 ;;      Params:         0       0       0       0       0       0       0
 21111 ;;      Locals:         0       0       0       0       0       0       0
 21112 ;;      Temps:          0       0       0       0       0       0       0
 21113 ;;      Totals:         0       0       0       0       0       0       0
 21114 ;;Total ram usage:        0 bytes
 21115 ;; Hardware stack levels used: 1
 21116 ;; Hardware stack levels required when called: 4
 21117 ;; This function calls:
 21118 ;;		Nothing
 21119 ;; This function is called by:
 21120 ;;		_I2C1_MasterFsm
 21121 ;; This function uses a non-reentrant model
 21122 ;;
 21123                           
 21124                           	psect	text108
 21125  007702                     __ptext108:
 21126                           	callstack 0
 21127  007702                     _I2C1_DO_RESET:
 21128                           	callstack 17
 21129  007702                     
 21130                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 21131  007702  0101               	movlb	1	; () banked
 21132  007704  9323               	bcf	(_I2C1_Status+35)& (0+255),1,b
 21133  007706                     
 21134                           ; BSR set to: 1
 21135                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 21136  007706  0E00               	movlw	0
 21137  007708  6F22               	movwf	(_I2C1_Status+34)& (0+255),b
 21138  00770A                     
 21139                           ; BSR set to: 1
 21140                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 21141  00770A  0E0E               	movlw	14
 21142  00770C                     
 21143                           ; BSR set to: 1
 21144  00770C  0012               	return		;funcret
 21145  00770E                     __end_of_I2C1_DO_RESET:
 21146                           	callstack 0
 21147                           
 21148 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 21149 ;; Defined at:
 21150 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 21151 ;; Parameters:    Size  Location     Type
 21152 ;;		None
 21153 ;; Auto vars:     Size  Location     Type
 21154 ;;		None
 21155 ;; Return value:  Size  Location     Type
 21156 ;;                  1    wreg      enum E6125
 21157 ;; Registers used:
 21158 ;;		wreg, cstack
 21159 ;; Tracked objects:
 21160 ;;		On entry : 0/0
 21161 ;;		On exit  : 0/0
 21162 ;;		Unchanged: 0/0
 21163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21164 ;;      Params:         0       0       0       0       0       0       0
 21165 ;;      Locals:         0       0       0       0       0       0       0
 21166 ;;      Temps:          0       0       0       0       0       0       0
 21167 ;;      Totals:         0       0       0       0       0       0       0
 21168 ;;Total ram usage:        0 bytes
 21169 ;; Hardware stack levels used: 1
 21170 ;; Hardware stack levels required when called: 5
 21171 ;; This function calls:
 21172 ;;		_I2C1_MasterSendNack
 21173 ;; This function is called by:
 21174 ;;		_I2C1_DO_RX
 21175 ;;		_I2C1_MasterFsm
 21176 ;; This function uses a non-reentrant model
 21177 ;;
 21178                           
 21179                           	psect	text109
 21180  007768                     __ptext109:
 21181                           	callstack 0
 21182  007768                     _I2C1_DO_RX_NACK_RESTART:
 21183                           	callstack 16
 21184  007768                     
 21185                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 21186  007768  ECDA  F03B         	call	_I2C1_MasterSendNack	;wreg free
 21187  00776C                     
 21188                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 21189  00776C  0E09               	movlw	9
 21190  00776E  0012               	return		;funcret
 21191  007770                     __end_of_I2C1_DO_RX_NACK_RESTART:
 21192                           	callstack 0
 21193                           
 21194 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 21195 ;; Defined at:
 21196 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 21197 ;; Parameters:    Size  Location     Type
 21198 ;;		None
 21199 ;; Auto vars:     Size  Location     Type
 21200 ;;		None
 21201 ;; Return value:  Size  Location     Type
 21202 ;;                  1    wreg      enum E6125
 21203 ;; Registers used:
 21204 ;;		wreg, cstack
 21205 ;; Tracked objects:
 21206 ;;		On entry : 0/0
 21207 ;;		On exit  : 0/0
 21208 ;;		Unchanged: 0/0
 21209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21210 ;;      Params:         0       0       0       0       0       0       0
 21211 ;;      Locals:         0       0       0       0       0       0       0
 21212 ;;      Temps:          0       0       0       0       0       0       0
 21213 ;;      Totals:         0       0       0       0       0       0       0
 21214 ;;Total ram usage:        0 bytes
 21215 ;; Hardware stack levels used: 1
 21216 ;; Hardware stack levels required when called: 5
 21217 ;; This function calls:
 21218 ;;		_I2C1_MasterSendNack
 21219 ;; This function is called by:
 21220 ;;		_I2C1_DO_RX
 21221 ;;		_I2C1_MasterFsm
 21222 ;; This function uses a non-reentrant model
 21223 ;;
 21224                           
 21225                           	psect	text110
 21226  007770                     __ptext110:
 21227                           	callstack 0
 21228  007770                     _I2C1_DO_RX_NACK_STOP:
 21229                           	callstack 16
 21230  007770                     
 21231                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 21232  007770  ECDA  F03B         	call	_I2C1_MasterSendNack	;wreg free
 21233  007774                     
 21234                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 21235  007774  0E0A               	movlw	10
 21236  007776  0012               	return		;funcret
 21237  007778                     __end_of_I2C1_DO_RX_NACK_STOP:
 21238                           	callstack 0
 21239                           
 21240 ;; *************** function _I2C1_DO_RX_ACK *****************
 21241 ;; Defined at:
 21242 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 21243 ;; Parameters:    Size  Location     Type
 21244 ;;		None
 21245 ;; Auto vars:     Size  Location     Type
 21246 ;;		None
 21247 ;; Return value:  Size  Location     Type
 21248 ;;                  1    wreg      enum E6125
 21249 ;; Registers used:
 21250 ;;		wreg, cstack
 21251 ;; Tracked objects:
 21252 ;;		On entry : 0/0
 21253 ;;		On exit  : 0/0
 21254 ;;		Unchanged: 0/0
 21255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21256 ;;      Params:         0       0       0       0       0       0       0
 21257 ;;      Locals:         0       0       0       0       0       0       0
 21258 ;;      Temps:          0       0       0       0       0       0       0
 21259 ;;      Totals:         0       0       0       0       0       0       0
 21260 ;;Total ram usage:        0 bytes
 21261 ;; Hardware stack levels used: 1
 21262 ;; Hardware stack levels required when called: 5
 21263 ;; This function calls:
 21264 ;;		_I2C1_MasterSendAck
 21265 ;; This function is called by:
 21266 ;;		_I2C1_MasterFsm
 21267 ;; This function uses a non-reentrant model
 21268 ;;
 21269                           
 21270                           	psect	text111
 21271  007778                     __ptext111:
 21272                           	callstack 0
 21273  007778                     _I2C1_DO_RX_ACK:
 21274                           	callstack 16
 21275  007778                     
 21276                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 21277  007778  ECD7  F03B         	call	_I2C1_MasterSendAck	;wreg free
 21278  00777C                     
 21279                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 21280  00777C  0E05               	movlw	5
 21281  00777E  0012               	return		;funcret
 21282  007780                     __end_of_I2C1_DO_RX_ACK:
 21283                           	callstack 0
 21284                           
 21285 ;; *************** function _I2C1_DO_SEND_STOP *****************
 21286 ;; Defined at:
 21287 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 21288 ;; Parameters:    Size  Location     Type
 21289 ;;		None
 21290 ;; Auto vars:     Size  Location     Type
 21291 ;;		None
 21292 ;; Return value:  Size  Location     Type
 21293 ;;                  1    wreg      enum E6125
 21294 ;; Registers used:
 21295 ;;		wreg, cstack
 21296 ;; Tracked objects:
 21297 ;;		On entry : 0/0
 21298 ;;		On exit  : 0/0
 21299 ;;		Unchanged: 0/0
 21300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21301 ;;      Params:         0       0       0       0       0       0       0
 21302 ;;      Locals:         0       0       0       0       0       0       0
 21303 ;;      Temps:          0       0       0       0       0       0       0
 21304 ;;      Totals:         0       0       0       0       0       0       0
 21305 ;;Total ram usage:        0 bytes
 21306 ;; Hardware stack levels used: 1
 21307 ;; Hardware stack levels required when called: 5
 21308 ;; This function calls:
 21309 ;;		_I2C1_MasterStop
 21310 ;; This function is called by:
 21311 ;;		_I2C1_DO_TX
 21312 ;;		_I2C1_DO_TX_EMPTY
 21313 ;;		_I2C1_DO_ADDRESS_NACK
 21314 ;;		_I2C1_MasterFsm
 21315 ;; This function uses a non-reentrant model
 21316 ;;
 21317                           
 21318                           	psect	text112
 21319  007780                     __ptext112:
 21320                           	callstack 0
 21321  007780                     _I2C1_DO_SEND_STOP:
 21322                           	callstack 15
 21323  007780                     
 21324                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 21325  007780  ECF3  F03B         	call	_I2C1_MasterStop	;wreg free
 21326  007784                     
 21327                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 21328  007784  0E00               	movlw	0
 21329  007786  0012               	return		;funcret
 21330  007788                     __end_of_I2C1_DO_SEND_STOP:
 21331                           	callstack 0
 21332                           
 21333 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 21334 ;; Defined at:
 21335 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 21336 ;; Parameters:    Size  Location     Type
 21337 ;;		None
 21338 ;; Auto vars:     Size  Location     Type
 21339 ;;		None
 21340 ;; Return value:  Size  Location     Type
 21341 ;;                  1    wreg      enum E6125
 21342 ;; Registers used:
 21343 ;;		wreg, cstack
 21344 ;; Tracked objects:
 21345 ;;		On entry : 0/0
 21346 ;;		On exit  : 0/0
 21347 ;;		Unchanged: 0/0
 21348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21349 ;;      Params:         0       0       0       0       0       0       0
 21350 ;;      Locals:         0       0       0       0       0       0       0
 21351 ;;      Temps:          0       0       0       0       0       0       0
 21352 ;;      Totals:         0       0       0       0       0       0       0
 21353 ;;Total ram usage:        0 bytes
 21354 ;; Hardware stack levels used: 1
 21355 ;; Hardware stack levels required when called: 5
 21356 ;; This function calls:
 21357 ;;		_I2C1_MasterEnableRestart
 21358 ;; This function is called by:
 21359 ;;		_I2C1_DO_TX_EMPTY
 21360 ;;		_I2C1_DO_ADDRESS_NACK
 21361 ;;		_I2C1_MasterFsm
 21362 ;; This function uses a non-reentrant model
 21363 ;;
 21364                           
 21365                           	psect	text113
 21366  007788                     __ptext113:
 21367                           	callstack 0
 21368  007788                     _I2C1_DO_SEND_RESTART:
 21369                           	callstack 15
 21370  007788                     
 21371                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 21372  007788  ECF5  F03B         	call	_I2C1_MasterEnableRestart	;wreg free
 21373  00778C                     
 21374                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 21375  00778C  0E01               	movlw	1
 21376  00778E  0012               	return		;funcret
 21377  007790                     __end_of_I2C1_DO_SEND_RESTART:
 21378                           	callstack 0
 21379                           
 21380 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 21381 ;; Defined at:
 21382 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 21383 ;; Parameters:    Size  Location     Type
 21384 ;;		None
 21385 ;; Auto vars:     Size  Location     Type
 21386 ;;		None
 21387 ;; Return value:  Size  Location     Type
 21388 ;;                  1    wreg      enum E6125
 21389 ;; Registers used:
 21390 ;;		wreg, cstack
 21391 ;; Tracked objects:
 21392 ;;		On entry : 0/0
 21393 ;;		On exit  : 0/0
 21394 ;;		Unchanged: 0/0
 21395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21396 ;;      Params:         0       0       0       0       0       0       0
 21397 ;;      Locals:         0       0       0       0       0       0       0
 21398 ;;      Temps:          0       0       0       0       0       0       0
 21399 ;;      Totals:         0       0       0       0       0       0       0
 21400 ;;Total ram usage:        0 bytes
 21401 ;; Hardware stack levels used: 1
 21402 ;; Hardware stack levels required when called: 5
 21403 ;; This function calls:
 21404 ;;		_I2C1_MasterEnableRestart
 21405 ;; This function is called by:
 21406 ;;		_I2C1_DO_TX
 21407 ;;		_I2C1_MasterFsm
 21408 ;; This function uses a non-reentrant model
 21409 ;;
 21410                           
 21411                           	psect	text114
 21412  007790                     __ptext114:
 21413                           	callstack 0
 21414  007790                     _I2C1_DO_SEND_RESTART_WRITE:
 21415                           	callstack 15
 21416  007790                     
 21417                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 21418  007790  ECF5  F03B         	call	_I2C1_MasterEnableRestart	;wreg free
 21419  007794                     
 21420                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 21421  007794  0E02               	movlw	2
 21422  007796  0012               	return		;funcret
 21423  007798                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 21424                           	callstack 0
 21425                           
 21426 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 21427 ;; Defined at:
 21428 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 21429 ;; Parameters:    Size  Location     Type
 21430 ;;		None
 21431 ;; Auto vars:     Size  Location     Type
 21432 ;;		None
 21433 ;; Return value:  Size  Location     Type
 21434 ;;                  1    wreg      enum E6125
 21435 ;; Registers used:
 21436 ;;		wreg, cstack
 21437 ;; Tracked objects:
 21438 ;;		On entry : 0/0
 21439 ;;		On exit  : 0/0
 21440 ;;		Unchanged: 0/0
 21441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21442 ;;      Params:         0       0       0       0       0       0       0
 21443 ;;      Locals:         0       0       0       0       0       0       0
 21444 ;;      Temps:          0       0       0       0       0       0       0
 21445 ;;      Totals:         0       0       0       0       0       0       0
 21446 ;;Total ram usage:        0 bytes
 21447 ;; Hardware stack levels used: 1
 21448 ;; Hardware stack levels required when called: 5
 21449 ;; This function calls:
 21450 ;;		_I2C1_MasterEnableRestart
 21451 ;; This function is called by:
 21452 ;;		_I2C1_DO_TX
 21453 ;;		_I2C1_MasterFsm
 21454 ;; This function uses a non-reentrant model
 21455 ;;
 21456                           
 21457                           	psect	text115
 21458  007798                     __ptext115:
 21459                           	callstack 0
 21460  007798                     _I2C1_DO_SEND_RESTART_READ:
 21461                           	callstack 15
 21462  007798                     
 21463                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 21464  007798  ECF5  F03B         	call	_I2C1_MasterEnableRestart	;wreg free
 21465  00779C                     
 21466                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 21467  00779C  0E01               	movlw	1
 21468  00779E  0012               	return		;funcret
 21469  0077A0                     __end_of_I2C1_DO_SEND_RESTART_READ:
 21470                           	callstack 0
 21471                           
 21472 ;; *************** function _I2C1_DO_RCEN *****************
 21473 ;; Defined at:
 21474 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 21475 ;; Parameters:    Size  Location     Type
 21476 ;;		None
 21477 ;; Auto vars:     Size  Location     Type
 21478 ;;		None
 21479 ;; Return value:  Size  Location     Type
 21480 ;;                  1    wreg      enum E6125
 21481 ;; Registers used:
 21482 ;;		wreg, cstack
 21483 ;; Tracked objects:
 21484 ;;		On entry : 0/0
 21485 ;;		On exit  : 0/0
 21486 ;;		Unchanged: 0/0
 21487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21488 ;;      Params:         0       0       0       0       0       0       0
 21489 ;;      Locals:         0       0       0       0       0       0       0
 21490 ;;      Temps:          0       0       0       0       0       0       0
 21491 ;;      Totals:         0       0       0       0       0       0       0
 21492 ;;Total ram usage:        0 bytes
 21493 ;; Hardware stack levels used: 1
 21494 ;; Hardware stack levels required when called: 5
 21495 ;; This function calls:
 21496 ;;		_I2C1_MasterStartRx
 21497 ;; This function is called by:
 21498 ;;		_I2C1_MasterFsm
 21499 ;; This function uses a non-reentrant model
 21500 ;;
 21501                           
 21502                           	psect	text116
 21503  00770E                     __ptext116:
 21504                           	callstack 0
 21505  00770E                     _I2C1_DO_RCEN:
 21506                           	callstack 16
 21507  00770E                     
 21508                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 21509  00770E  0101               	movlb	1	; () banked
 21510  007710  9123               	bcf	(_I2C1_Status+35)& (0+255),0,b
 21511  007712                     
 21512                           ; BSR set to: 1
 21513                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 21514  007712  ECED  F03B         	call	_I2C1_MasterStartRx	;wreg free
 21515  007716                     
 21516                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 21517  007716  0E04               	movlw	4
 21518  007718  0012               	return		;funcret
 21519  00771A                     __end_of_I2C1_DO_RCEN:
 21520                           	callstack 0
 21521                           
 21522 ;; *************** function _I2C1_DO_RX *****************
 21523 ;; Defined at:
 21524 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 21525 ;; Parameters:    Size  Location     Type
 21526 ;;		None
 21527 ;; Auto vars:     Size  Location     Type
 21528 ;;		None
 21529 ;; Return value:  Size  Location     Type
 21530 ;;                  1    wreg      enum E6125
 21531 ;; Registers used:
 21532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 21533 ;; Tracked objects:
 21534 ;;		On entry : 0/0
 21535 ;;		On exit  : 0/0
 21536 ;;		Unchanged: 0/0
 21537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21538 ;;      Params:         0       0       0       0       0       0       0
 21539 ;;      Locals:         0       0       0       0       0       0       0
 21540 ;;      Temps:          2       0       0       0       0       0       0
 21541 ;;      Totals:         2       0       0       0       0       0       0
 21542 ;;Total ram usage:        2 bytes
 21543 ;; Hardware stack levels used: 1
 21544 ;; Hardware stack levels required when called: 7
 21545 ;; This function calls:
 21546 ;;		Absolute function
 21547 ;;		_I2C1_CallbackReturnReset
 21548 ;;		_I2C1_CallbackReturnStop
 21549 ;;		_I2C1_DO_RX_NACK_RESTART
 21550 ;;		_I2C1_DO_RX_NACK_STOP
 21551 ;;		_I2C1_MasterGetRxData
 21552 ;;		_I2C1_MasterSendAck
 21553 ;;		_rd1RegCompleteHandler
 21554 ;;		_rd2RegCompleteHandler
 21555 ;;		_rdBlkRegCompleteHandler
 21556 ;;		_rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621
 21557 ;;		_wr1RegCompleteHandler
 21558 ;;		_wr2RegCompleteHandler
 21559 ;; This function is called by:
 21560 ;;		_I2C1_MasterFsm
 21561 ;; This function uses a non-reentrant model
 21562 ;;
 21563                           
 21564                           	psect	text117
 21565  00643E                     __ptext117:
 21566                           	callstack 0
 21567  00643E                     _I2C1_DO_RX:
 21568                           	callstack 14
 21569  00643E                     
 21570                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 21571  00643E  ECEB  F03B         	call	_I2C1_MasterGetRxData	;wreg free
 21572  006442  C11D  FFD9         	movff	_I2C1_Status+29,fsr2l
 21573  006446  C11E  FFDA         	movff	_I2C1_Status+30,fsr2h
 21574  00644A  6EDF               	movwf	indf2,c
 21575  00644C  0101               	movlb	1	; () banked
 21576  00644E  4B1D               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 21577  006450  2B1E               	incf	(_I2C1_Status+30)& (0+255),f,b
 21578  006452                     
 21579                           ; BSR set to: 1
 21580                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 21581  006452  071F               	decf	(_I2C1_Status+31)& (0+255),f,b
 21582  006454  A0D8               	btfss	status,0,c
 21583  006456  0720               	decf	(_I2C1_Status+32)& (0+255),f,b
 21584  006458  511F               	movf	(_I2C1_Status+31)& (0+255),w,b
 21585  00645A  1120               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 21586  00645C  B4D8               	btfsc	status,2,c
 21587  00645E  EF33  F032         	goto	u10061
 21588  006462  EF35  F032         	goto	u10060
 21589  006466                     u10061:
 21590  006466  EF3A  F032         	goto	l530
 21591  00646A                     u10060:
 21592  00646A                     
 21593                           ; BSR set to: 1
 21594                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 21595  00646A  ECD7  F03B         	call	_I2C1_MasterSendAck	;wreg free
 21596  00646E                     
 21597                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 21598  00646E  0E05               	movlw	5
 21599  006470  EF72  F032         	goto	l531
 21600  006474                     l530:
 21601                           
 21602                           ; BSR set to: 1
 21603                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 21604  006474  8723               	bsf	(_I2C1_Status+35)& (0+255),3,b
 21605                           
 21606                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 21607  006476  EF45  F032         	goto	l11056
 21608  00647A                     l11046:
 21609                           
 21610                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 21611  00647A  ECB4  F03B         	call	_I2C1_DO_RX_NACK_RESTART	;wreg free
 21612  00647E  EF72  F032         	goto	l531
 21613  006482                     l11050:
 21614                           
 21615                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 21616  006482  ECB8  F03B         	call	_I2C1_DO_RX_NACK_STOP	;wreg free
 21617  006486  EF72  F032         	goto	l531
 21618  00648A                     l11056:
 21619                           
 21620                           ; BSR set to: 1
 21621  00648A  C10C  F013         	movff	_I2C1_Status+12,rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621@ptr
 21622  00648E  C10D  F014         	movff	_I2C1_Status+13,rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621@ptr+1
 21623  006492  D802               	call	u10078
 21624  006494  EF56  F032         	goto	u10079
 21625  006498                     u10078:
 21626  006498  0005               	push	
 21627  00649A  6EFA               	movwf	pclath,c
 21628  00649C  5100               	movf	_I2C1_Status& (0+255),w,b
 21629  00649E  6EFD               	movwf	tosl,c
 21630  0064A0  5101               	movf	(_I2C1_Status+1)& (0+255),w,b
 21631  0064A2  6EFE               	movwf	tosh,c
 21632  0064A4  50F8               	movf	tblptru,w,c
 21633  0064A6  6EFF               	movwf	tosu,c
 21634  0064A8  50FA               	movf	pclath,w,c
 21635  0064AA  0012               	return		;indir
 21636  0064AC                     u10079:
 21637  0064AC  6E15               	movwf	??_I2C1_DO_RX^0,c
 21638  0064AE  6A16               	clrf	(??_I2C1_DO_RX+1)^0,c
 21639                           
 21640                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21641                           ; Switch size 1, requested type "simple"
 21642                           ; Number of cases is 1, Range of values is 0 to 0
 21643                           ; switch strategies available:
 21644                           ; Name         Instructions Cycles
 21645                           ; simple_byte            4     3 (average)
 21646                           ;	Chosen strategy is simple_byte
 21647  0064B0  5016               	movf	(??_I2C1_DO_RX+1)^0,w,c
 21648  0064B2  0A00               	xorlw	0	; case 0
 21649  0064B4  B4D8               	btfsc	status,2,c
 21650  0064B6  EF5F  F032         	goto	l14124
 21651  0064BA  EF41  F032         	goto	l11050
 21652  0064BE                     l14124:
 21653                           
 21654                           ; Switch size 1, requested type "simple"
 21655                           ; Number of cases is 4, Range of values is 1 to 4
 21656                           ; switch strategies available:
 21657                           ; Name         Instructions Cycles
 21658                           ; simple_byte           13     7 (average)
 21659                           ;	Chosen strategy is simple_byte
 21660  0064BE  5015               	movf	??_I2C1_DO_RX^0,w,c
 21661  0064C0  0A01               	xorlw	1	; case 1
 21662  0064C2  B4D8               	btfsc	status,2,c
 21663  0064C4  EF41  F032         	goto	l11050
 21664  0064C8  0A03               	xorlw	3	; case 2
 21665  0064CA  B4D8               	btfsc	status,2,c
 21666  0064CC  EF3D  F032         	goto	l11046
 21667  0064D0  0A01               	xorlw	1	; case 3
 21668  0064D2  B4D8               	btfsc	status,2,c
 21669  0064D4  EF3D  F032         	goto	l11046
 21670  0064D8  0A07               	xorlw	7	; case 4
 21671  0064DA  B4D8               	btfsc	status,2,c
 21672  0064DC  EF41  F032         	goto	l11050
 21673  0064E0  EF41  F032         	goto	l11050
 21674  0064E4                     l531:
 21675  0064E4  0012               	return		;funcret
 21676  0064E6                     __end_of_I2C1_DO_RX:
 21677                           	callstack 0
 21678                           
 21679 ;; *************** function _I2C1_DO_TX *****************
 21680 ;; Defined at:
 21681 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 21682 ;; Parameters:    Size  Location     Type
 21683 ;;		None
 21684 ;; Auto vars:     Size  Location     Type
 21685 ;;		None
 21686 ;; Return value:  Size  Location     Type
 21687 ;;                  1    wreg      enum E6125
 21688 ;; Registers used:
 21689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 21690 ;; Tracked objects:
 21691 ;;		On entry : 0/0
 21692 ;;		On exit  : 0/0
 21693 ;;		Unchanged: 0/0
 21694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21695 ;;      Params:         0       0       0       0       0       0       0
 21696 ;;      Locals:         0       0       0       0       0       0       0
 21697 ;;      Temps:          2       0       0       0       0       0       0
 21698 ;;      Totals:         2       0       0       0       0       0       0
 21699 ;;Total ram usage:        2 bytes
 21700 ;; Hardware stack levels used: 1
 21701 ;; Hardware stack levels required when called: 7
 21702 ;; This function calls:
 21703 ;;		Absolute function
 21704 ;;		_I2C1_CallbackReturnReset
 21705 ;;		_I2C1_CallbackReturnStop
 21706 ;;		_I2C1_DO_SEND_RESTART_READ
 21707 ;;		_I2C1_DO_SEND_RESTART_WRITE
 21708 ;;		_I2C1_DO_SEND_STOP
 21709 ;;		_I2C1_MasterIsNack
 21710 ;;		_I2C1_MasterSendTxData
 21711 ;;		_rd1RegCompleteHandler
 21712 ;;		_rd2RegCompleteHandler
 21713 ;;		_rdBlkRegCompleteHandler
 21714 ;;		_rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621
 21715 ;;		_wr1RegCompleteHandler
 21716 ;;		_wr2RegCompleteHandler
 21717 ;; This function is called by:
 21718 ;;		_I2C1_MasterFsm
 21719 ;; This function uses a non-reentrant model
 21720 ;;
 21721                           
 21722                           	psect	text118
 21723  005C62                     __ptext118:
 21724                           	callstack 0
 21725  005C62                     _I2C1_DO_TX:
 21726                           	callstack 14
 21727  005C62                     
 21728                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 21729  005C62  EC4F  F03B         	call	_I2C1_MasterIsNack	;wreg free
 21730  005C66  0900               	iorlw	0
 21731  005C68  B4D8               	btfsc	status,2,c
 21732  005C6A  EF39  F02E         	goto	u10031
 21733  005C6E  EF3B  F02E         	goto	u10030
 21734  005C72                     u10031:
 21735  005C72  EF78  F02E         	goto	l514
 21736  005C76                     u10030:
 21737  005C76  EF49  F02E         	goto	l11016
 21738  005C7A                     l11002:
 21739                           
 21740                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 21741  005C7A  ECCC  F03B         	call	_I2C1_DO_SEND_RESTART_READ	;wreg free
 21742  005C7E  EF94  F02E         	goto	l517
 21743  005C82                     l11006:
 21744                           
 21745                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 21746  005C82  ECC8  F03B         	call	_I2C1_DO_SEND_RESTART_WRITE	;wreg free
 21747  005C86  EF94  F02E         	goto	l517
 21748  005C8A                     l11010:
 21749                           
 21750                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 21751  005C8A  ECC0  F03B         	call	_I2C1_DO_SEND_STOP	;wreg free
 21752  005C8E  EF94  F02E         	goto	l517
 21753  005C92                     l11016:
 21754  005C92  C112  F013         	movff	_I2C1_Status+18,rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621@ptr
 21755  005C96  C113  F014         	movff	_I2C1_Status+19,rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621@ptr+1
 21756  005C9A  EE21  F006         	lfsr	2,_I2C1_Status+6
 21757  005C9E  D802               	call	u10048
 21758  005CA0  EF5C  F02E         	goto	u10049
 21759  005CA4                     u10048:
 21760  005CA4  0005               	push	
 21761  005CA6  6EFA               	movwf	pclath,c
 21762  005CA8  50DE               	movf	postinc2,w,c
 21763  005CAA  6EFD               	movwf	tosl,c
 21764  005CAC  50DE               	movf	postinc2,w,c
 21765  005CAE  6EFE               	movwf	tosh,c
 21766  005CB0  50F8               	movf	tblptru,w,c
 21767  005CB2  6EFF               	movwf	tosu,c
 21768  005CB4  50FA               	movf	pclath,w,c
 21769  005CB6  0012               	return		;indir
 21770  005CB8                     u10049:
 21771  005CB8  6E15               	movwf	??_I2C1_DO_TX^0,c
 21772  005CBA  6A16               	clrf	(??_I2C1_DO_TX+1)^0,c
 21773                           
 21774                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21775                           ; Switch size 1, requested type "simple"
 21776                           ; Number of cases is 1, Range of values is 0 to 0
 21777                           ; switch strategies available:
 21778                           ; Name         Instructions Cycles
 21779                           ; simple_byte            4     3 (average)
 21780                           ;	Chosen strategy is simple_byte
 21781  005CBC  5016               	movf	(??_I2C1_DO_TX+1)^0,w,c
 21782  005CBE  0A00               	xorlw	0	; case 0
 21783  005CC0  B4D8               	btfsc	status,2,c
 21784  005CC2  EF65  F02E         	goto	l14126
 21785  005CC6  EF45  F02E         	goto	l11010
 21786  005CCA                     l14126:
 21787                           
 21788                           ; Switch size 1, requested type "simple"
 21789                           ; Number of cases is 4, Range of values is 1 to 4
 21790                           ; switch strategies available:
 21791                           ; Name         Instructions Cycles
 21792                           ; simple_byte           13     7 (average)
 21793                           ;	Chosen strategy is simple_byte
 21794  005CCA  5015               	movf	??_I2C1_DO_TX^0,w,c
 21795  005CCC  0A01               	xorlw	1	; case 1
 21796  005CCE  B4D8               	btfsc	status,2,c
 21797  005CD0  EF45  F02E         	goto	l11010
 21798  005CD4  0A03               	xorlw	3	; case 2
 21799  005CD6  B4D8               	btfsc	status,2,c
 21800  005CD8  EF3D  F02E         	goto	l11002
 21801  005CDC  0A01               	xorlw	1	; case 3
 21802  005CDE  B4D8               	btfsc	status,2,c
 21803  005CE0  EF41  F02E         	goto	l11006
 21804  005CE4  0A07               	xorlw	7	; case 4
 21805  005CE6  B4D8               	btfsc	status,2,c
 21806  005CE8  EF45  F02E         	goto	l11010
 21807  005CEC  EF45  F02E         	goto	l11010
 21808  005CF0                     l514:
 21809                           
 21810                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 21811  005CF0  0101               	movlb	1	; () banked
 21812  005CF2  9123               	bcf	(_I2C1_Status+35)& (0+255),0,b
 21813  005CF4                     
 21814                           ; BSR set to: 1
 21815                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 21816  005CF4  C11D  FFD9         	movff	_I2C1_Status+29,fsr2l
 21817  005CF8  C11E  FFDA         	movff	_I2C1_Status+30,fsr2h
 21818  005CFC  4B1D               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 21819  005CFE  2B1E               	incf	(_I2C1_Status+30)& (0+255),f,b
 21820  005D00  50DF               	movf	indf2,w,c
 21821  005D02  ECD0  F03B         	call	_I2C1_MasterSendTxData
 21822  005D06                     
 21823                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 21824  005D06  0101               	movlb	1	; () banked
 21825  005D08  071F               	decf	(_I2C1_Status+31)& (0+255),f,b
 21826  005D0A  A0D8               	btfss	status,0,c
 21827  005D0C  0720               	decf	(_I2C1_Status+32)& (0+255),f,b
 21828  005D0E  511F               	movf	(_I2C1_Status+31)& (0+255),w,b
 21829  005D10  1120               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 21830  005D12  A4D8               	btfss	status,2,c
 21831  005D14  EF8E  F02E         	goto	u10051
 21832  005D18  EF90  F02E         	goto	u10050
 21833  005D1C                     u10051:
 21834  005D1C  EF93  F02E         	goto	l11024
 21835  005D20                     u10050:
 21836  005D20                     
 21837                           ; BSR set to: 1
 21838  005D20  0E06               	movlw	6
 21839  005D22  EF94  F02E         	goto	l517
 21840  005D26                     l11024:
 21841                           
 21842                           ; BSR set to: 1
 21843  005D26  0E03               	movlw	3
 21844  005D28                     l517:
 21845  005D28  0012               	return		;funcret
 21846  005D2A                     __end_of_I2C1_DO_TX:
 21847                           	callstack 0
 21848                           
 21849 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 21850 ;; Defined at:
 21851 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 21852 ;; Parameters:    Size  Location     Type
 21853 ;;		None
 21854 ;; Auto vars:     Size  Location     Type
 21855 ;;		None
 21856 ;; Return value:  Size  Location     Type
 21857 ;;                  1    wreg      enum E6125
 21858 ;; Registers used:
 21859 ;;		wreg, status,2, status,0, cstack
 21860 ;; Tracked objects:
 21861 ;;		On entry : 0/0
 21862 ;;		On exit  : 0/0
 21863 ;;		Unchanged: 0/0
 21864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21865 ;;      Params:         0       0       0       0       0       0       0
 21866 ;;      Locals:         0       0       0       0       0       0       0
 21867 ;;      Temps:          0       0       0       0       0       0       0
 21868 ;;      Totals:         0       0       0       0       0       0       0
 21869 ;;Total ram usage:        0 bytes
 21870 ;; Hardware stack levels used: 1
 21871 ;; Hardware stack levels required when called: 5
 21872 ;; This function calls:
 21873 ;;		_I2C1_MasterSendTxData
 21874 ;; This function is called by:
 21875 ;;		_I2C1_MasterFsm
 21876 ;; This function uses a non-reentrant model
 21877 ;;
 21878                           
 21879                           	psect	text119
 21880  0076D4                     __ptext119:
 21881                           	callstack 0
 21882  0076D4                     _I2C1_DO_SEND_ADR_WRITE:
 21883                           	callstack 16
 21884  0076D4                     
 21885                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 21886  0076D4  0101               	movlb	1	; () banked
 21887  0076D6  8123               	bsf	(_I2C1_Status+35)& (0+255),0,b
 21888  0076D8                     
 21889                           ; BSR set to: 1
 21890                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 21891  0076D8  511C               	movf	(_I2C1_Status+28)& (0+255),w,b
 21892  0076DA  251C               	addwf	(_I2C1_Status+28)& (0+255),w,b
 21893  0076DC  ECD0  F03B         	call	_I2C1_MasterSendTxData
 21894  0076E0                     
 21895                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 21896  0076E0  0E03               	movlw	3
 21897  0076E2  0012               	return		;funcret
 21898  0076E4                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 21899                           	callstack 0
 21900                           
 21901 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 21902 ;; Defined at:
 21903 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 21904 ;; Parameters:    Size  Location     Type
 21905 ;;		None
 21906 ;; Auto vars:     Size  Location     Type
 21907 ;;		None
 21908 ;; Return value:  Size  Location     Type
 21909 ;;                  1    wreg      enum E6125
 21910 ;; Registers used:
 21911 ;;		wreg, status,0, cstack
 21912 ;; Tracked objects:
 21913 ;;		On entry : 0/0
 21914 ;;		On exit  : 0/0
 21915 ;;		Unchanged: 0/0
 21916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21917 ;;      Params:         0       0       0       0       0       0       0
 21918 ;;      Locals:         0       0       0       0       0       0       0
 21919 ;;      Temps:          0       0       0       0       0       0       0
 21920 ;;      Totals:         0       0       0       0       0       0       0
 21921 ;;Total ram usage:        0 bytes
 21922 ;; Hardware stack levels used: 1
 21923 ;; Hardware stack levels required when called: 5
 21924 ;; This function calls:
 21925 ;;		_I2C1_MasterSendTxData
 21926 ;; This function is called by:
 21927 ;;		_I2C1_MasterFsm
 21928 ;; This function uses a non-reentrant model
 21929 ;;
 21930                           
 21931                           	psect	text120
 21932  0076E4                     __ptext120:
 21933                           	callstack 0
 21934  0076E4                     _I2C1_DO_SEND_ADR_READ:
 21935                           	callstack 16
 21936  0076E4                     
 21937                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 21938  0076E4  0101               	movlb	1	; () banked
 21939  0076E6  8123               	bsf	(_I2C1_Status+35)& (0+255),0,b
 21940  0076E8                     
 21941                           ; BSR set to: 1
 21942                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 21943  0076E8  80D8               	bsf	status,0,c
 21944  0076EA  351C               	rlcf	(_I2C1_Status+28)& (0+255),w,b
 21945  0076EC  ECD0  F03B         	call	_I2C1_MasterSendTxData
 21946  0076F0                     
 21947                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 21948  0076F0  0E05               	movlw	5
 21949  0076F2  0012               	return		;funcret
 21950  0076F4                     __end_of_I2C1_DO_SEND_ADR_READ:
 21951                           	callstack 0
 21952                           
 21953 ;; *************** function _I2C1_DO_IDLE *****************
 21954 ;; Defined at:
 21955 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 21956 ;; Parameters:    Size  Location     Type
 21957 ;;		None
 21958 ;; Auto vars:     Size  Location     Type
 21959 ;;		None
 21960 ;; Return value:  Size  Location     Type
 21961 ;;                  1    wreg      enum E6125
 21962 ;; Registers used:
 21963 ;;		wreg, status,2
 21964 ;; Tracked objects:
 21965 ;;		On entry : 0/0
 21966 ;;		On exit  : 0/0
 21967 ;;		Unchanged: 0/0
 21968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21969 ;;      Params:         0       0       0       0       0       0       0
 21970 ;;      Locals:         0       0       0       0       0       0       0
 21971 ;;      Temps:          0       0       0       0       0       0       0
 21972 ;;      Totals:         0       0       0       0       0       0       0
 21973 ;;Total ram usage:        0 bytes
 21974 ;; Hardware stack levels used: 1
 21975 ;; Hardware stack levels required when called: 4
 21976 ;; This function calls:
 21977 ;;		Nothing
 21978 ;; This function is called by:
 21979 ;;		_I2C1_MasterFsm
 21980 ;; This function uses a non-reentrant model
 21981 ;;
 21982                           
 21983                           	psect	text121
 21984  00771A                     __ptext121:
 21985                           	callstack 0
 21986  00771A                     _I2C1_DO_IDLE:
 21987                           	callstack 17
 21988  00771A                     
 21989                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 21990  00771A  0101               	movlb	1	; () banked
 21991  00771C  9323               	bcf	(_I2C1_Status+35)& (0+255),1,b
 21992  00771E                     
 21993                           ; BSR set to: 1
 21994                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 21995  00771E  0E00               	movlw	0
 21996  007720  6F22               	movwf	(_I2C1_Status+34)& (0+255),b
 21997  007722                     
 21998                           ; BSR set to: 1
 21999                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 22000  007722  0E0E               	movlw	14
 22001  007724                     
 22002                           ; BSR set to: 1
 22003  007724  0012               	return		;funcret
 22004  007726                     __end_of_I2C1_DO_IDLE:
 22005                           	callstack 0
 22006                           
 22007 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 22008 ;; Defined at:
 22009 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 22010 ;; Parameters:    Size  Location     Type
 22011 ;;		None
 22012 ;; Auto vars:     Size  Location     Type
 22013 ;;		None
 22014 ;; Return value:  Size  Location     Type
 22015 ;;                  1    wreg      enum E6125
 22016 ;; Registers used:
 22017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 22018 ;; Tracked objects:
 22019 ;;		On entry : 0/0
 22020 ;;		On exit  : 0/0
 22021 ;;		Unchanged: 0/0
 22022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22023 ;;      Params:         0       0       0       0       0       0       0
 22024 ;;      Locals:         0       0       0       0       0       0       0
 22025 ;;      Temps:          2       0       0       0       0       0       0
 22026 ;;      Totals:         2       0       0       0       0       0       0
 22027 ;;Total ram usage:        2 bytes
 22028 ;; Hardware stack levels used: 1
 22029 ;; Hardware stack levels required when called: 7
 22030 ;; This function calls:
 22031 ;;		Absolute function
 22032 ;;		_I2C1_CallbackReturnReset
 22033 ;;		_I2C1_CallbackReturnStop
 22034 ;;		_I2C1_DO_SEND_RESTART
 22035 ;;		_I2C1_DO_SEND_STOP
 22036 ;;		_I2C1_MasterSetIrq
 22037 ;;		_rd1RegCompleteHandler
 22038 ;;		_rd2RegCompleteHandler
 22039 ;;		_rdBlkRegCompleteHandler
 22040 ;;		_rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621
 22041 ;;		_wr1RegCompleteHandler
 22042 ;;		_wr2RegCompleteHandler
 22043 ;; This function is called by:
 22044 ;;		_I2C1_MasterFsm
 22045 ;; This function uses a non-reentrant model
 22046 ;;
 22047                           
 22048                           	psect	text122
 22049  006738                     __ptext122:
 22050                           	callstack 0
 22051  006738                     _I2C1_DO_TX_EMPTY:
 22052                           	callstack 14
 22053  006738                     
 22054                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 22055  006738  0101               	movlb	1	; () banked
 22056  00673A  8723               	bsf	(_I2C1_Status+35)& (0+255),3,b
 22057                           
 22058                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 22059  00673C  EFAD  F033         	goto	l11090
 22060  006740                     l11074:
 22061                           
 22062                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 22063  006740  ECC4  F03B         	call	_I2C1_DO_SEND_RESTART	;wreg free
 22064  006744  EFDA  F033         	goto	l548
 22065  006748                     l11078:
 22066                           
 22067                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 22068  006748  ECE9  F03B         	call	_I2C1_MasterSetIrq	;wreg free
 22069  00674C                     
 22070                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 22071  00674C  0E03               	movlw	3
 22072  00674E  EFDA  F033         	goto	l548
 22073  006752                     l11084:
 22074                           
 22075                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 22076  006752  ECC0  F03B         	call	_I2C1_DO_SEND_STOP	;wreg free
 22077  006756  EFDA  F033         	goto	l548
 22078  00675A                     l11090:
 22079                           
 22080                           ; BSR set to: 1
 22081  00675A  C10C  F013         	movff	_I2C1_Status+12,rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621@ptr
 22082  00675E  C10D  F014         	movff	_I2C1_Status+13,rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621@ptr+1
 22083  006762  D802               	call	u10088
 22084  006764  EFBE  F033         	goto	u10089
 22085  006768                     u10088:
 22086  006768  0005               	push	
 22087  00676A  6EFA               	movwf	pclath,c
 22088  00676C  5100               	movf	_I2C1_Status& (0+255),w,b
 22089  00676E  6EFD               	movwf	tosl,c
 22090  006770  5101               	movf	(_I2C1_Status+1)& (0+255),w,b
 22091  006772  6EFE               	movwf	tosh,c
 22092  006774  50F8               	movf	tblptru,w,c
 22093  006776  6EFF               	movwf	tosu,c
 22094  006778  50FA               	movf	pclath,w,c
 22095  00677A  0012               	return		;indir
 22096  00677C                     u10089:
 22097  00677C  6E15               	movwf	??_I2C1_DO_TX_EMPTY^0,c
 22098  00677E  6A16               	clrf	(??_I2C1_DO_TX_EMPTY+1)^0,c
 22099                           
 22100                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22101                           ; Switch size 1, requested type "simple"
 22102                           ; Number of cases is 1, Range of values is 0 to 0
 22103                           ; switch strategies available:
 22104                           ; Name         Instructions Cycles
 22105                           ; simple_byte            4     3 (average)
 22106                           ;	Chosen strategy is simple_byte
 22107  006780  5016               	movf	(??_I2C1_DO_TX_EMPTY+1)^0,w,c
 22108  006782  0A00               	xorlw	0	; case 0
 22109  006784  B4D8               	btfsc	status,2,c
 22110  006786  EFC7  F033         	goto	l14128
 22111  00678A  EFA9  F033         	goto	l11084
 22112  00678E                     l14128:
 22113                           
 22114                           ; Switch size 1, requested type "simple"
 22115                           ; Number of cases is 4, Range of values is 1 to 4
 22116                           ; switch strategies available:
 22117                           ; Name         Instructions Cycles
 22118                           ; simple_byte           13     7 (average)
 22119                           ;	Chosen strategy is simple_byte
 22120  00678E  5015               	movf	??_I2C1_DO_TX_EMPTY^0,w,c
 22121  006790  0A01               	xorlw	1	; case 1
 22122  006792  B4D8               	btfsc	status,2,c
 22123  006794  EFA9  F033         	goto	l11084
 22124  006798  0A03               	xorlw	3	; case 2
 22125  00679A  B4D8               	btfsc	status,2,c
 22126  00679C  EFA0  F033         	goto	l11074
 22127  0067A0  0A01               	xorlw	1	; case 3
 22128  0067A2  B4D8               	btfsc	status,2,c
 22129  0067A4  EFA0  F033         	goto	l11074
 22130  0067A8  0A07               	xorlw	7	; case 4
 22131  0067AA  B4D8               	btfsc	status,2,c
 22132  0067AC  EFA4  F033         	goto	l11078
 22133  0067B0  EFA9  F033         	goto	l11084
 22134  0067B4                     l548:
 22135  0067B4  0012               	return		;funcret
 22136  0067B6                     __end_of_I2C1_DO_TX_EMPTY:
 22137                           	callstack 0
 22138                           
 22139 ;; *************** function _I2C1_MasterSetIrq *****************
 22140 ;; Defined at:
 22141 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 22142 ;; Parameters:    Size  Location     Type
 22143 ;;		None
 22144 ;; Auto vars:     Size  Location     Type
 22145 ;;		None
 22146 ;; Return value:  Size  Location     Type
 22147 ;;                  1    wreg      void 
 22148 ;; Registers used:
 22149 ;;		None
 22150 ;; Tracked objects:
 22151 ;;		On entry : 0/0
 22152 ;;		On exit  : 0/0
 22153 ;;		Unchanged: 0/0
 22154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22155 ;;      Params:         0       0       0       0       0       0       0
 22156 ;;      Locals:         0       0       0       0       0       0       0
 22157 ;;      Temps:          0       0       0       0       0       0       0
 22158 ;;      Totals:         0       0       0       0       0       0       0
 22159 ;;Total ram usage:        0 bytes
 22160 ;; Hardware stack levels used: 1
 22161 ;; Hardware stack levels required when called: 4
 22162 ;; This function calls:
 22163 ;;		Nothing
 22164 ;; This function is called by:
 22165 ;;		_I2C1_DO_TX_EMPTY
 22166 ;; This function uses a non-reentrant model
 22167 ;;
 22168                           
 22169                           	psect	text123
 22170  0077D2                     __ptext123:
 22171                           	callstack 0
 22172  0077D2                     _I2C1_MasterSetIrq:
 22173                           	callstack 16
 22174  0077D2                     
 22175                           ;mcc_generated_files/i2c1_master.c: 647:     PIR1bits.SSP1IF = 1;
 22176  0077D2  869E               	bsf	158,3,c	;volatile
 22177  0077D4  0012               	return		;funcret
 22178  0077D6                     __end_of_I2C1_MasterSetIrq:
 22179                           	callstack 0
 22180                           
 22181 ;; *************** function _I2C1_MasterIsNack *****************
 22182 ;; Defined at:
 22183 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 22184 ;; Parameters:    Size  Location     Type
 22185 ;;		None
 22186 ;; Auto vars:     Size  Location     Type
 22187 ;;		None
 22188 ;; Return value:  Size  Location     Type
 22189 ;;                  1    wreg      _Bool 
 22190 ;; Registers used:
 22191 ;;		wreg
 22192 ;; Tracked objects:
 22193 ;;		On entry : 0/0
 22194 ;;		On exit  : 0/0
 22195 ;;		Unchanged: 0/0
 22196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22197 ;;      Params:         0       0       0       0       0       0       0
 22198 ;;      Locals:         0       0       0       0       0       0       0
 22199 ;;      Temps:          0       0       0       0       0       0       0
 22200 ;;      Totals:         0       0       0       0       0       0       0
 22201 ;;Total ram usage:        0 bytes
 22202 ;; Hardware stack levels used: 1
 22203 ;; Hardware stack levels required when called: 4
 22204 ;; This function calls:
 22205 ;;		Nothing
 22206 ;; This function is called by:
 22207 ;;		_I2C1_MasterFsm
 22208 ;;		_I2C1_DO_TX
 22209 ;; This function uses a non-reentrant model
 22210 ;;
 22211                           
 22212                           	psect	text124
 22213  00769E                     __ptext124:
 22214                           	callstack 0
 22215  00769E                     _I2C1_MasterIsNack:
 22216                           	callstack 17
 22217  00769E                     
 22218                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 22219  00769E  BCC5               	btfsc	197,6,c	;volatile
 22220  0076A0  EF54  F03B         	goto	u10021
 22221  0076A4  EF57  F03B         	goto	u10020
 22222  0076A8                     u10021:
 22223  0076A8  0E01               	movlw	1
 22224  0076AA  EF58  F03B         	goto	u10026
 22225  0076AE                     u10020:
 22226  0076AE  0E00               	movlw	0
 22227  0076B0                     u10026:
 22228  0076B0  0012               	return		;funcret
 22229  0076B2                     __end_of_I2C1_MasterIsNack:
 22230                           	callstack 0
 22231                           
 22232 ;; *************** function _I2C1_MasterSendTxData *****************
 22233 ;; Defined at:
 22234 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 22235 ;; Parameters:    Size  Location     Type
 22236 ;;  data            1    wreg     unsigned char 
 22237 ;; Auto vars:     Size  Location     Type
 22238 ;;  data            1    9[COMRAM] unsigned char 
 22239 ;; Return value:  Size  Location     Type
 22240 ;;                  1    wreg      void 
 22241 ;; Registers used:
 22242 ;;		wreg
 22243 ;; Tracked objects:
 22244 ;;		On entry : 0/0
 22245 ;;		On exit  : 0/0
 22246 ;;		Unchanged: 0/0
 22247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22248 ;;      Params:         0       0       0       0       0       0       0
 22249 ;;      Locals:         1       0       0       0       0       0       0
 22250 ;;      Temps:          0       0       0       0       0       0       0
 22251 ;;      Totals:         1       0       0       0       0       0       0
 22252 ;;Total ram usage:        1 bytes
 22253 ;; Hardware stack levels used: 1
 22254 ;; Hardware stack levels required when called: 4
 22255 ;; This function calls:
 22256 ;;		Nothing
 22257 ;; This function is called by:
 22258 ;;		_I2C1_DO_SEND_ADR_READ
 22259 ;;		_I2C1_DO_SEND_ADR_WRITE
 22260 ;;		_I2C1_DO_TX
 22261 ;; This function uses a non-reentrant model
 22262 ;;
 22263                           
 22264                           	psect	text125
 22265  0077A0                     __ptext125:
 22266                           	callstack 0
 22267  0077A0                     _I2C1_MasterSendTxData:
 22268                           	callstack 16
 22269                           
 22270                           ;incstack = 0
 22271                           ;I2C1_MasterSendTxData@data stored from wreg
 22272  0077A0  6E0A               	movwf	I2C1_MasterSendTxData@data^0,c
 22273  0077A2                     
 22274                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 22275  0077A2  C00A  FFC9         	movff	I2C1_MasterSendTxData@data,4041	;volatile
 22276  0077A6  0012               	return		;funcret
 22277  0077A8                     __end_of_I2C1_MasterSendTxData:
 22278                           	callstack 0
 22279                           
 22280 ;; *************** function _I2C1_MasterSendAck *****************
 22281 ;; Defined at:
 22282 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 22283 ;; Parameters:    Size  Location     Type
 22284 ;;		None
 22285 ;; Auto vars:     Size  Location     Type
 22286 ;;		None
 22287 ;; Return value:  Size  Location     Type
 22288 ;;                  1    wreg      void 
 22289 ;; Registers used:
 22290 ;;		None
 22291 ;; Tracked objects:
 22292 ;;		On entry : 0/0
 22293 ;;		On exit  : 0/0
 22294 ;;		Unchanged: 0/0
 22295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22296 ;;      Params:         0       0       0       0       0       0       0
 22297 ;;      Locals:         0       0       0       0       0       0       0
 22298 ;;      Temps:          0       0       0       0       0       0       0
 22299 ;;      Totals:         0       0       0       0       0       0       0
 22300 ;;Total ram usage:        0 bytes
 22301 ;; Hardware stack levels used: 1
 22302 ;; Hardware stack levels required when called: 4
 22303 ;; This function calls:
 22304 ;;		Nothing
 22305 ;; This function is called by:
 22306 ;;		_I2C1_DO_RX
 22307 ;;		_I2C1_DO_RX_ACK
 22308 ;; This function uses a non-reentrant model
 22309 ;;
 22310                           
 22311                           	psect	text126
 22312  0077AE                     __ptext126:
 22313                           	callstack 0
 22314  0077AE                     _I2C1_MasterSendAck:
 22315                           	callstack 16
 22316  0077AE                     
 22317                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 22318  0077AE  9AC5               	bcf	197,5,c	;volatile
 22319                           
 22320                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 22321  0077B0  88C5               	bsf	197,4,c	;volatile
 22322  0077B2  0012               	return		;funcret
 22323  0077B4                     __end_of_I2C1_MasterSendAck:
 22324                           	callstack 0
 22325                           
 22326 ;; *************** function _I2C1_MasterGetRxData *****************
 22327 ;; Defined at:
 22328 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 22329 ;; Parameters:    Size  Location     Type
 22330 ;;		None
 22331 ;; Auto vars:     Size  Location     Type
 22332 ;;		None
 22333 ;; Return value:  Size  Location     Type
 22334 ;;                  1    wreg      unsigned char 
 22335 ;; Registers used:
 22336 ;;		wreg, status,2
 22337 ;; Tracked objects:
 22338 ;;		On entry : 0/0
 22339 ;;		On exit  : 0/0
 22340 ;;		Unchanged: 0/0
 22341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22342 ;;      Params:         0       0       0       0       0       0       0
 22343 ;;      Locals:         0       0       0       0       0       0       0
 22344 ;;      Temps:          0       0       0       0       0       0       0
 22345 ;;      Totals:         0       0       0       0       0       0       0
 22346 ;;Total ram usage:        0 bytes
 22347 ;; Hardware stack levels used: 1
 22348 ;; Hardware stack levels required when called: 4
 22349 ;; This function calls:
 22350 ;;		Nothing
 22351 ;; This function is called by:
 22352 ;;		_I2C1_DO_RX
 22353 ;; This function uses a non-reentrant model
 22354 ;;
 22355                           
 22356                           	psect	text127
 22357  0077D6                     __ptext127:
 22358                           	callstack 0
 22359  0077D6                     _I2C1_MasterGetRxData:
 22360                           	callstack 16
 22361  0077D6                     
 22362                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 22363  0077D6  50C9               	movf	201,w,c	;volatile
 22364  0077D8  0012               	return		;funcret
 22365  0077DA                     __end_of_I2C1_MasterGetRxData:
 22366                           	callstack 0
 22367                           
 22368 ;; *************** function _I2C1_MasterSendNack *****************
 22369 ;; Defined at:
 22370 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 22371 ;; Parameters:    Size  Location     Type
 22372 ;;		None
 22373 ;; Auto vars:     Size  Location     Type
 22374 ;;		None
 22375 ;; Return value:  Size  Location     Type
 22376 ;;                  1    wreg      void 
 22377 ;; Registers used:
 22378 ;;		None
 22379 ;; Tracked objects:
 22380 ;;		On entry : 0/0
 22381 ;;		On exit  : 0/0
 22382 ;;		Unchanged: 0/0
 22383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22384 ;;      Params:         0       0       0       0       0       0       0
 22385 ;;      Locals:         0       0       0       0       0       0       0
 22386 ;;      Temps:          0       0       0       0       0       0       0
 22387 ;;      Totals:         0       0       0       0       0       0       0
 22388 ;;Total ram usage:        0 bytes
 22389 ;; Hardware stack levels used: 1
 22390 ;; Hardware stack levels required when called: 4
 22391 ;; This function calls:
 22392 ;;		Nothing
 22393 ;; This function is called by:
 22394 ;;		_I2C1_DO_RX_NACK_STOP
 22395 ;;		_I2C1_DO_RX_NACK_RESTART
 22396 ;; This function uses a non-reentrant model
 22397 ;;
 22398                           
 22399                           	psect	text128
 22400  0077B4                     __ptext128:
 22401                           	callstack 0
 22402  0077B4                     _I2C1_MasterSendNack:
 22403                           	callstack 16
 22404  0077B4                     
 22405                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 22406  0077B4  8AC5               	bsf	197,5,c	;volatile
 22407                           
 22408                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 22409  0077B6  88C5               	bsf	197,4,c	;volatile
 22410  0077B8  0012               	return		;funcret
 22411  0077BA                     __end_of_I2C1_MasterSendNack:
 22412                           	callstack 0
 22413                           
 22414 ;; *************** function _I2C1_MasterStartRx *****************
 22415 ;; Defined at:
 22416 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 22417 ;; Parameters:    Size  Location     Type
 22418 ;;		None
 22419 ;; Auto vars:     Size  Location     Type
 22420 ;;		None
 22421 ;; Return value:  Size  Location     Type
 22422 ;;                  1    wreg      void 
 22423 ;; Registers used:
 22424 ;;		None
 22425 ;; Tracked objects:
 22426 ;;		On entry : 0/0
 22427 ;;		On exit  : 0/0
 22428 ;;		Unchanged: 0/0
 22429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22430 ;;      Params:         0       0       0       0       0       0       0
 22431 ;;      Locals:         0       0       0       0       0       0       0
 22432 ;;      Temps:          0       0       0       0       0       0       0
 22433 ;;      Totals:         0       0       0       0       0       0       0
 22434 ;;Total ram usage:        0 bytes
 22435 ;; Hardware stack levels used: 1
 22436 ;; Hardware stack levels required when called: 4
 22437 ;; This function calls:
 22438 ;;		Nothing
 22439 ;; This function is called by:
 22440 ;;		_I2C1_DO_RCEN
 22441 ;; This function uses a non-reentrant model
 22442 ;;
 22443                           
 22444                           	psect	text129
 22445  0077DA                     __ptext129:
 22446                           	callstack 0
 22447  0077DA                     _I2C1_MasterStartRx:
 22448                           	callstack 16
 22449  0077DA                     
 22450                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 22451  0077DA  86C5               	bsf	197,3,c	;volatile
 22452  0077DC  0012               	return		;funcret
 22453  0077DE                     __end_of_I2C1_MasterStartRx:
 22454                           	callstack 0
 22455                           
 22456 ;; *************** function _rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621 *****************
 22457 ;; Defined at:
 22458 ;;		line 15 in file "DriverADT7410TRZ.c"
 22459 ;; Parameters:    Size  Location     Type
 22460 ;;  ptr             2   18[COMRAM] PTR void 
 22461 ;;		 -> DRV_ADT7410_Read@bufferBlock(4), I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1
      +ByteRegister@data(1), 
 22462 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 22463 ;; Auto vars:     Size  Location     Type
 22464 ;;		None
 22465 ;; Return value:  Size  Location     Type
 22466 ;;                  1    wreg      enum E360
 22467 ;; Registers used:
 22468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22469 ;; Tracked objects:
 22470 ;;		On entry : 0/0
 22471 ;;		On exit  : 0/0
 22472 ;;		Unchanged: 0/0
 22473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22474 ;;      Params:         2       0       0       0       0       0       0
 22475 ;;      Locals:         0       0       0       0       0       0       0
 22476 ;;      Temps:          0       0       0       0       0       0       0
 22477 ;;      Totals:         2       0       0       0       0       0       0
 22478 ;;Total ram usage:        2 bytes
 22479 ;; Hardware stack levels used: 1
 22480 ;; Hardware stack levels required when called: 6
 22481 ;; This function calls:
 22482 ;;		_I2C1_SetBuffer
 22483 ;;		_I2C1_SetDataCompleteCallback
 22484 ;; This function is called by:
 22485 ;;		_DRV_ADT7410_Read
 22486 ;;		_I2C1_DO_TX
 22487 ;;		_I2C1_DO_RX
 22488 ;;		_I2C1_DO_TX_EMPTY
 22489 ;;		_I2C1_DO_ADDRESS_NACK
 22490 ;;		_I2C1_DO_RX_EMPTY
 22491 ;; This function uses a non-reentrant model
 22492 ;;
 22493                           
 22494                           	psect	text130
 22495  0070A8                     __ptext130:
 22496                           	callstack 0
 22497  0070A8                     _rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621:
 22498                           	callstack 14
 22499  0070A8                     
 22500                           ;DriverADT7410TRZ.c: 15: static i2c1_operations_t rdBlkRegCompleteHandler(void *ptr);Dri
      +                          verADT7410TRZ.c: 16: {;DriverADT7410TRZ.c: 17:     I2C1_SetBuffer(((i2c1_buffer_t *)ptr)
      +                          ->data,((i2c1_buffer_t*)ptr)->len);
 22501  0070A8  EE20 F002          	lfsr	2,2
 22502  0070AC  5013               	movf	rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621@ptr^0,w,c
 22503  0070AE  26D9               	addwf	fsr2l,f,c
 22504  0070B0  5014               	movf	(rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621@ptr+1)^0,w,c
 22505  0070B2  22DA               	addwfc	fsr2h,f,c
 22506  0070B4  CFDE F00A          	movff	postinc2,I2C1_SetBuffer@buffer
 22507  0070B8  CFDD F00B          	movff	postdec2,I2C1_SetBuffer@buffer+1
 22508  0070BC  C013  FFD9         	movff	rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621@ptr,fsr2l
 22509  0070C0  C014  FFDA         	movff	rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621@ptr+1,fsr2h
 22510  0070C4  CFDE F00C          	movff	postinc2,I2C1_SetBuffer@bufferSize
 22511  0070C8  CFDD F00D          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 22512  0070CC  EC3D  F03A         	call	_I2C1_SetBuffer	;wreg free
 22513  0070D0                     
 22514                           ;DriverADT7410TRZ.c: 18:     I2C1_SetDataCompleteCallback(((void*)0),((void*)0));
 22515  0070D0  0E00               	movlw	0
 22516  0070D2  6E0F               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 22517  0070D4  0E00               	movlw	0
 22518  0070D6  6E10               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 22519  0070D8  0E00               	movlw	0
 22520  0070DA  6E11               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 22521  0070DC  0E00               	movlw	0
 22522  0070DE  6E12               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 22523  0070E0  EC03  F03B         	call	_I2C1_SetDataCompleteCallback	;wreg free
 22524  0070E4                     
 22525                           ;DriverADT7410TRZ.c: 19:     return I2C1_RESTART_READ;
 22526  0070E4  0E02               	movlw	2
 22527  0070E6  0012               	return		;funcret
 22528  0070E8                     __end_of_rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621:
 22529                           	callstack 0
 22530                           
 22531 ;; *************** function _I2C1_CallbackReturnReset *****************
 22532 ;; Defined at:
 22533 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 22534 ;; Parameters:    Size  Location     Type
 22535 ;;  funPtr          2   18[COMRAM] PTR void 
 22536 ;;		 -> DRV_ADT7410_Read@bufferBlock(4), I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1
      +ByteRegister@data(1), 
 22537 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 22538 ;; Auto vars:     Size  Location     Type
 22539 ;;		None
 22540 ;; Return value:  Size  Location     Type
 22541 ;;                  1    wreg      enum E360
 22542 ;; Registers used:
 22543 ;;		wreg
 22544 ;; Tracked objects:
 22545 ;;		On entry : 0/0
 22546 ;;		On exit  : 0/0
 22547 ;;		Unchanged: 0/0
 22548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22549 ;;      Params:         2       0       0       0       0       0       0
 22550 ;;      Locals:         0       0       0       0       0       0       0
 22551 ;;      Temps:          0       0       0       0       0       0       0
 22552 ;;      Totals:         2       0       0       0       0       0       0
 22553 ;;Total ram usage:        2 bytes
 22554 ;; Hardware stack levels used: 1
 22555 ;; Hardware stack levels required when called: 4
 22556 ;; This function calls:
 22557 ;;		Nothing
 22558 ;; This function is called by:
 22559 ;;		_I2C1_Open
 22560 ;;		_I2C1_DO_TX
 22561 ;;		_I2C1_DO_RX
 22562 ;;		_I2C1_DO_TX_EMPTY
 22563 ;;		_I2C1_DO_ADDRESS_NACK
 22564 ;;		_I2C1_DO_RX_EMPTY
 22565 ;; This function uses a non-reentrant model
 22566 ;;
 22567                           
 22568                           	psect	text131
 22569  0077DE                     __ptext131:
 22570                           	callstack 0
 22571  0077DE                     _I2C1_CallbackReturnReset:
 22572                           	callstack 16
 22573  0077DE                     
 22574                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 22575  0077DE  0E05               	movlw	5
 22576  0077E0  0012               	return		;funcret
 22577  0077E2                     __end_of_I2C1_CallbackReturnReset:
 22578                           	callstack 0
 22579                           
 22580 ;; *************** function _I2C1_CallbackReturnStop *****************
 22581 ;; Defined at:
 22582 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 22583 ;; Parameters:    Size  Location     Type
 22584 ;;  funPtr          2   18[COMRAM] PTR void 
 22585 ;;		 -> DRV_ADT7410_Read@bufferBlock(4), I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1
      +ByteRegister@data(1), 
 22586 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 22587 ;; Auto vars:     Size  Location     Type
 22588 ;;		None
 22589 ;; Return value:  Size  Location     Type
 22590 ;;                  1    wreg      enum E360
 22591 ;; Registers used:
 22592 ;;		wreg
 22593 ;; Tracked objects:
 22594 ;;		On entry : 0/0
 22595 ;;		On exit  : 0/0
 22596 ;;		Unchanged: 0/0
 22597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22598 ;;      Params:         2       0       0       0       0       0       0
 22599 ;;      Locals:         0       0       0       0       0       0       0
 22600 ;;      Temps:          0       0       0       0       0       0       0
 22601 ;;      Totals:         2       0       0       0       0       0       0
 22602 ;;Total ram usage:        2 bytes
 22603 ;; Hardware stack levels used: 1
 22604 ;; Hardware stack levels required when called: 4
 22605 ;; This function calls:
 22606 ;;		Nothing
 22607 ;; This function is called by:
 22608 ;;		_I2C1_Open
 22609 ;;		_I2C1_SetCallback
 22610 ;;		_I2C1_DO_TX
 22611 ;;		_I2C1_DO_RX
 22612 ;;		_I2C1_DO_TX_EMPTY
 22613 ;;		_I2C1_DO_ADDRESS_NACK
 22614 ;;		_I2C1_DO_RX_EMPTY
 22615 ;; This function uses a non-reentrant model
 22616 ;;
 22617                           
 22618                           	psect	text132
 22619  0077E2                     __ptext132:
 22620                           	callstack 0
 22621  0077E2                     _I2C1_CallbackReturnStop:
 22622                           	callstack 16
 22623  0077E2                     
 22624                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 22625  0077E2  0E01               	movlw	1
 22626  0077E4  0012               	return		;funcret
 22627  0077E6                     __end_of_I2C1_CallbackReturnStop:
 22628                           	callstack 0
 22629                           
 22630 ;; *************** function _rdBlkRegCompleteHandler *****************
 22631 ;; Defined at:
 22632 ;;		line 170 in file "mcc_generated_files/examples/i2c1_master_example.c"
 22633 ;; Parameters:    Size  Location     Type
 22634 ;;  ptr             2   18[COMRAM] PTR void 
 22635 ;;		 -> DRV_ADT7410_Read@bufferBlock(4), I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1
      +ByteRegister@data(1), 
 22636 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 22637 ;; Auto vars:     Size  Location     Type
 22638 ;;		None
 22639 ;; Return value:  Size  Location     Type
 22640 ;;                  1    wreg      enum E360
 22641 ;; Registers used:
 22642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22643 ;; Tracked objects:
 22644 ;;		On entry : 0/0
 22645 ;;		On exit  : 0/0
 22646 ;;		Unchanged: 0/0
 22647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22648 ;;      Params:         2       0       0       0       0       0       0
 22649 ;;      Locals:         0       0       0       0       0       0       0
 22650 ;;      Temps:          0       0       0       0       0       0       0
 22651 ;;      Totals:         2       0       0       0       0       0       0
 22652 ;;Total ram usage:        2 bytes
 22653 ;; Hardware stack levels used: 1
 22654 ;; Hardware stack levels required when called: 6
 22655 ;; This function calls:
 22656 ;;		_I2C1_SetBuffer
 22657 ;;		_I2C1_SetDataCompleteCallback
 22658 ;; This function is called by:
 22659 ;;		_I2C1_ReadDataBlock
 22660 ;;		_I2C1_DO_TX
 22661 ;;		_I2C1_DO_RX
 22662 ;;		_I2C1_DO_TX_EMPTY
 22663 ;;		_I2C1_DO_ADDRESS_NACK
 22664 ;;		_I2C1_DO_RX_EMPTY
 22665 ;; This function uses a non-reentrant model
 22666 ;;
 22667                           
 22668                           	psect	text133
 22669  0070E8                     __ptext133:
 22670                           	callstack 0
 22671  0070E8                     _rdBlkRegCompleteHandler:
 22672                           	callstack 14
 22673  0070E8                     
 22674                           ;mcc_generated_files/examples/i2c1_master_example.c: 170: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 22675  0070E8  EE20 F002          	lfsr	2,2
 22676  0070EC  5013               	movf	rdBlkRegCompleteHandler@ptr^0,w,c
 22677  0070EE  26D9               	addwf	fsr2l,f,c
 22678  0070F0  5014               	movf	(rdBlkRegCompleteHandler@ptr+1)^0,w,c
 22679  0070F2  22DA               	addwfc	fsr2h,f,c
 22680  0070F4  CFDE F00A          	movff	postinc2,I2C1_SetBuffer@buffer
 22681  0070F8  CFDD F00B          	movff	postdec2,I2C1_SetBuffer@buffer+1
 22682  0070FC  C013  FFD9         	movff	rdBlkRegCompleteHandler@ptr,fsr2l
 22683  007100  C014  FFDA         	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
 22684  007104  CFDE F00C          	movff	postinc2,I2C1_SetBuffer@bufferSize
 22685  007108  CFDD F00D          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 22686  00710C  EC3D  F03A         	call	_I2C1_SetBuffer	;wreg free
 22687  007110                     
 22688                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 22689  007110  0E00               	movlw	0
 22690  007112  6E0F               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 22691  007114  0E00               	movlw	0
 22692  007116  6E10               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 22693  007118  0E00               	movlw	0
 22694  00711A  6E11               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 22695  00711C  0E00               	movlw	0
 22696  00711E  6E12               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 22697  007120  EC03  F03B         	call	_I2C1_SetDataCompleteCallback	;wreg free
 22698  007124                     
 22699                           ;mcc_generated_files/examples/i2c1_master_example.c: 174:     return I2C1_RESTART_READ;
 22700  007124  0E02               	movlw	2
 22701  007126  0012               	return		;funcret
 22702  007128                     __end_of_rdBlkRegCompleteHandler:
 22703                           	callstack 0
 22704                           
 22705 ;; *************** function _wr1RegCompleteHandler *****************
 22706 ;; Defined at:
 22707 ;;		line 156 in file "mcc_generated_files/examples/i2c1_master_example.c"
 22708 ;; Parameters:    Size  Location     Type
 22709 ;;  ptr             2   18[COMRAM] PTR void 
 22710 ;;		 -> DRV_ADT7410_Read@bufferBlock(4), I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1
      +ByteRegister@data(1), 
 22711 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 22712 ;; Auto vars:     Size  Location     Type
 22713 ;;		None
 22714 ;; Return value:  Size  Location     Type
 22715 ;;                  1    wreg      enum E360
 22716 ;; Registers used:
 22717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22718 ;; Tracked objects:
 22719 ;;		On entry : 0/0
 22720 ;;		On exit  : 0/0
 22721 ;;		Unchanged: 0/0
 22722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22723 ;;      Params:         2       0       0       0       0       0       0
 22724 ;;      Locals:         0       0       0       0       0       0       0
 22725 ;;      Temps:          0       0       0       0       0       0       0
 22726 ;;      Totals:         2       0       0       0       0       0       0
 22727 ;;Total ram usage:        2 bytes
 22728 ;; Hardware stack levels used: 1
 22729 ;; Hardware stack levels required when called: 6
 22730 ;; This function calls:
 22731 ;;		_I2C1_SetBuffer
 22732 ;;		_I2C1_SetDataCompleteCallback
 22733 ;; This function is called by:
 22734 ;;		_I2C1_Write1ByteRegister
 22735 ;;		_I2C1_DO_TX
 22736 ;;		_I2C1_DO_RX
 22737 ;;		_I2C1_DO_TX_EMPTY
 22738 ;;		_I2C1_DO_ADDRESS_NACK
 22739 ;;		_I2C1_DO_RX_EMPTY
 22740 ;; This function uses a non-reentrant model
 22741 ;;
 22742                           
 22743                           	psect	text134
 22744  00734C                     __ptext134:
 22745                           	callstack 0
 22746  00734C                     _wr1RegCompleteHandler:
 22747                           	callstack 14
 22748  00734C                     
 22749                           ;mcc_generated_files/examples/i2c1_master_example.c: 156: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetBuffer(ptr,1);
 22750  00734C  C013  F00A         	movff	wr1RegCompleteHandler@ptr,I2C1_SetBuffer@buffer
 22751  007350  C014  F00B         	movff	wr1RegCompleteHandler@ptr+1,I2C1_SetBuffer@buffer+1
 22752  007354  0E00               	movlw	0
 22753  007356  6E0D               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 22754  007358  0E01               	movlw	1
 22755  00735A  6E0C               	movwf	I2C1_SetBuffer@bufferSize^0,c
 22756  00735C  EC3D  F03A         	call	_I2C1_SetBuffer	;wreg free
 22757  007360                     
 22758                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 22759  007360  0E00               	movlw	0
 22760  007362  6E0F               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 22761  007364  0E00               	movlw	0
 22762  007366  6E10               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 22763  007368  0E00               	movlw	0
 22764  00736A  6E11               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 22765  00736C  0E00               	movlw	0
 22766  00736E  6E12               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 22767  007370  EC03  F03B         	call	_I2C1_SetDataCompleteCallback	;wreg free
 22768  007374                     
 22769                           ;mcc_generated_files/examples/i2c1_master_example.c: 160:     return I2C1_CONTINUE;
 22770  007374  0E04               	movlw	4
 22771  007376  0012               	return		;funcret
 22772  007378                     __end_of_wr1RegCompleteHandler:
 22773                           	callstack 0
 22774                           
 22775 ;; *************** function _rd2RegCompleteHandler *****************
 22776 ;; Defined at:
 22777 ;;		line 149 in file "mcc_generated_files/examples/i2c1_master_example.c"
 22778 ;; Parameters:    Size  Location     Type
 22779 ;;  ptr             2   18[COMRAM] PTR void 
 22780 ;;		 -> DRV_ADT7410_Read@bufferBlock(4), I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1
      +ByteRegister@data(1), 
 22781 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 22782 ;; Auto vars:     Size  Location     Type
 22783 ;;		None
 22784 ;; Return value:  Size  Location     Type
 22785 ;;                  1    wreg      enum E360
 22786 ;; Registers used:
 22787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22788 ;; Tracked objects:
 22789 ;;		On entry : 0/0
 22790 ;;		On exit  : 0/0
 22791 ;;		Unchanged: 0/0
 22792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22793 ;;      Params:         2       0       0       0       0       0       0
 22794 ;;      Locals:         0       0       0       0       0       0       0
 22795 ;;      Temps:          0       0       0       0       0       0       0
 22796 ;;      Totals:         2       0       0       0       0       0       0
 22797 ;;Total ram usage:        2 bytes
 22798 ;; Hardware stack levels used: 1
 22799 ;; Hardware stack levels required when called: 6
 22800 ;; This function calls:
 22801 ;;		_I2C1_SetBuffer
 22802 ;;		_I2C1_SetDataCompleteCallback
 22803 ;; This function is called by:
 22804 ;;		_I2C1_Read2ByteRegister
 22805 ;;		_I2C1_DO_TX
 22806 ;;		_I2C1_DO_RX
 22807 ;;		_I2C1_DO_TX_EMPTY
 22808 ;;		_I2C1_DO_ADDRESS_NACK
 22809 ;;		_I2C1_DO_RX_EMPTY
 22810 ;; This function uses a non-reentrant model
 22811 ;;
 22812                           
 22813                           	psect	text135
 22814  007378                     __ptext135:
 22815                           	callstack 0
 22816  007378                     _rd2RegCompleteHandler:
 22817                           	callstack 14
 22818  007378                     
 22819                           ;mcc_generated_files/examples/i2c1_master_example.c: 149: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetBuffer(ptr,2);
 22820  007378  C013  F00A         	movff	rd2RegCompleteHandler@ptr,I2C1_SetBuffer@buffer
 22821  00737C  C014  F00B         	movff	rd2RegCompleteHandler@ptr+1,I2C1_SetBuffer@buffer+1
 22822  007380  0E00               	movlw	0
 22823  007382  6E0D               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 22824  007384  0E02               	movlw	2
 22825  007386  6E0C               	movwf	I2C1_SetBuffer@bufferSize^0,c
 22826  007388  EC3D  F03A         	call	_I2C1_SetBuffer	;wreg free
 22827  00738C                     
 22828                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 22829  00738C  0E00               	movlw	0
 22830  00738E  6E0F               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 22831  007390  0E00               	movlw	0
 22832  007392  6E10               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 22833  007394  0E00               	movlw	0
 22834  007396  6E11               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 22835  007398  0E00               	movlw	0
 22836  00739A  6E12               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 22837  00739C  EC03  F03B         	call	_I2C1_SetDataCompleteCallback	;wreg free
 22838  0073A0                     
 22839                           ;mcc_generated_files/examples/i2c1_master_example.c: 153:     return I2C1_RESTART_READ;
 22840  0073A0  0E02               	movlw	2
 22841  0073A2  0012               	return		;funcret
 22842  0073A4                     __end_of_rd2RegCompleteHandler:
 22843                           	callstack 0
 22844                           
 22845 ;; *************** function _rd1RegCompleteHandler *****************
 22846 ;; Defined at:
 22847 ;;		line 142 in file "mcc_generated_files/examples/i2c1_master_example.c"
 22848 ;; Parameters:    Size  Location     Type
 22849 ;;  ptr             2   18[COMRAM] PTR void 
 22850 ;;		 -> DRV_ADT7410_Read@bufferBlock(4), I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1
      +ByteRegister@data(1), 
 22851 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 22852 ;; Auto vars:     Size  Location     Type
 22853 ;;		None
 22854 ;; Return value:  Size  Location     Type
 22855 ;;                  1    wreg      enum E360
 22856 ;; Registers used:
 22857 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22858 ;; Tracked objects:
 22859 ;;		On entry : 0/0
 22860 ;;		On exit  : 0/0
 22861 ;;		Unchanged: 0/0
 22862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22863 ;;      Params:         2       0       0       0       0       0       0
 22864 ;;      Locals:         0       0       0       0       0       0       0
 22865 ;;      Temps:          0       0       0       0       0       0       0
 22866 ;;      Totals:         2       0       0       0       0       0       0
 22867 ;;Total ram usage:        2 bytes
 22868 ;; Hardware stack levels used: 1
 22869 ;; Hardware stack levels required when called: 6
 22870 ;; This function calls:
 22871 ;;		_I2C1_SetBuffer
 22872 ;;		_I2C1_SetDataCompleteCallback
 22873 ;; This function is called by:
 22874 ;;		_I2C1_Read1ByteRegister
 22875 ;;		_I2C1_DO_TX
 22876 ;;		_I2C1_DO_RX
 22877 ;;		_I2C1_DO_TX_EMPTY
 22878 ;;		_I2C1_DO_ADDRESS_NACK
 22879 ;;		_I2C1_DO_RX_EMPTY
 22880 ;; This function uses a non-reentrant model
 22881 ;;
 22882                           
 22883                           	psect	text136
 22884  0073A4                     __ptext136:
 22885                           	callstack 0
 22886  0073A4                     _rd1RegCompleteHandler:
 22887                           	callstack 14
 22888  0073A4                     
 22889                           ;mcc_generated_files/examples/i2c1_master_example.c: 142: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 144:     I2C1_SetBuffer(ptr,1);
 22890  0073A4  C013  F00A         	movff	rd1RegCompleteHandler@ptr,I2C1_SetBuffer@buffer
 22891  0073A8  C014  F00B         	movff	rd1RegCompleteHandler@ptr+1,I2C1_SetBuffer@buffer+1
 22892  0073AC  0E00               	movlw	0
 22893  0073AE  6E0D               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 22894  0073B0  0E01               	movlw	1
 22895  0073B2  6E0C               	movwf	I2C1_SetBuffer@bufferSize^0,c
 22896  0073B4  EC3D  F03A         	call	_I2C1_SetBuffer	;wreg free
 22897  0073B8                     
 22898                           ;mcc_generated_files/examples/i2c1_master_example.c: 145:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 22899  0073B8  0E00               	movlw	0
 22900  0073BA  6E0F               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 22901  0073BC  0E00               	movlw	0
 22902  0073BE  6E10               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 22903  0073C0  0E00               	movlw	0
 22904  0073C2  6E11               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 22905  0073C4  0E00               	movlw	0
 22906  0073C6  6E12               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 22907  0073C8  EC03  F03B         	call	_I2C1_SetDataCompleteCallback	;wreg free
 22908  0073CC                     
 22909                           ;mcc_generated_files/examples/i2c1_master_example.c: 146:     return I2C1_RESTART_READ;
 22910  0073CC  0E02               	movlw	2
 22911  0073CE  0012               	return		;funcret
 22912  0073D0                     __end_of_rd1RegCompleteHandler:
 22913                           	callstack 0
 22914                           
 22915 ;; *************** function _wr2RegCompleteHandler *****************
 22916 ;; Defined at:
 22917 ;;		line 163 in file "mcc_generated_files/examples/i2c1_master_example.c"
 22918 ;; Parameters:    Size  Location     Type
 22919 ;;  ptr             2   18[COMRAM] PTR void 
 22920 ;;		 -> DRV_ADT7410_Read@bufferBlock(4), I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1
      +ByteRegister@data(1), 
 22921 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 22922 ;; Auto vars:     Size  Location     Type
 22923 ;;		None
 22924 ;; Return value:  Size  Location     Type
 22925 ;;                  1    wreg      enum E360
 22926 ;; Registers used:
 22927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22928 ;; Tracked objects:
 22929 ;;		On entry : 0/0
 22930 ;;		On exit  : 0/0
 22931 ;;		Unchanged: 0/0
 22932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22933 ;;      Params:         2       0       0       0       0       0       0
 22934 ;;      Locals:         0       0       0       0       0       0       0
 22935 ;;      Temps:          0       0       0       0       0       0       0
 22936 ;;      Totals:         2       0       0       0       0       0       0
 22937 ;;Total ram usage:        2 bytes
 22938 ;; Hardware stack levels used: 1
 22939 ;; Hardware stack levels required when called: 6
 22940 ;; This function calls:
 22941 ;;		_I2C1_SetBuffer
 22942 ;;		_I2C1_SetDataCompleteCallback
 22943 ;; This function is called by:
 22944 ;;		_I2C1_Write2ByteRegister
 22945 ;;		_I2C1_DO_TX
 22946 ;;		_I2C1_DO_RX
 22947 ;;		_I2C1_DO_TX_EMPTY
 22948 ;;		_I2C1_DO_ADDRESS_NACK
 22949 ;;		_I2C1_DO_RX_EMPTY
 22950 ;; This function uses a non-reentrant model
 22951 ;;
 22952                           
 22953                           	psect	text137
 22954  0073D0                     __ptext137:
 22955                           	callstack 0
 22956  0073D0                     _wr2RegCompleteHandler:
 22957                           	callstack 14
 22958  0073D0                     
 22959                           ;mcc_generated_files/examples/i2c1_master_example.c: 163: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetBuffer(ptr,2);
 22960  0073D0  C013  F00A         	movff	wr2RegCompleteHandler@ptr,I2C1_SetBuffer@buffer
 22961  0073D4  C014  F00B         	movff	wr2RegCompleteHandler@ptr+1,I2C1_SetBuffer@buffer+1
 22962  0073D8  0E00               	movlw	0
 22963  0073DA  6E0D               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 22964  0073DC  0E02               	movlw	2
 22965  0073DE  6E0C               	movwf	I2C1_SetBuffer@bufferSize^0,c
 22966  0073E0  EC3D  F03A         	call	_I2C1_SetBuffer	;wreg free
 22967  0073E4                     
 22968                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 22969  0073E4  0E00               	movlw	0
 22970  0073E6  6E0F               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 22971  0073E8  0E00               	movlw	0
 22972  0073EA  6E10               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 22973  0073EC  0E00               	movlw	0
 22974  0073EE  6E11               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 22975  0073F0  0E00               	movlw	0
 22976  0073F2  6E12               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 22977  0073F4  EC03  F03B         	call	_I2C1_SetDataCompleteCallback	;wreg free
 22978  0073F8                     
 22979                           ;mcc_generated_files/examples/i2c1_master_example.c: 167:     return I2C1_CONTINUE;
 22980  0073F8  0E04               	movlw	4
 22981  0073FA  0012               	return		;funcret
 22982  0073FC                     __end_of_wr2RegCompleteHandler:
 22983                           	callstack 0
 22984                           
 22985 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 22986 ;; Defined at:
 22987 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 22988 ;; Parameters:    Size  Location     Type
 22989 ;;  cb              2   14[COMRAM] PTR FTN(PTR void ,)enum 
 22990 ;;		 -> rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621(1), Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompl
      +eteHandler(1), 
 22991 ;;		 -> wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 22992 ;;  ptr             2   16[COMRAM] PTR void 
 22993 ;;		 -> DRV_ADT7410_Read@bufferBlock(4), I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1
      +ByteRegister@data(1), 
 22994 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 22995 ;; Auto vars:     Size  Location     Type
 22996 ;;		None
 22997 ;; Return value:  Size  Location     Type
 22998 ;;                  1    wreg      void 
 22999 ;; Registers used:
 23000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23001 ;; Tracked objects:
 23002 ;;		On entry : 0/0
 23003 ;;		On exit  : 0/0
 23004 ;;		Unchanged: 0/0
 23005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23006 ;;      Params:         4       0       0       0       0       0       0
 23007 ;;      Locals:         0       0       0       0       0       0       0
 23008 ;;      Temps:          0       0       0       0       0       0       0
 23009 ;;      Totals:         4       0       0       0       0       0       0
 23010 ;;Total ram usage:        4 bytes
 23011 ;; Hardware stack levels used: 1
 23012 ;; Hardware stack levels required when called: 5
 23013 ;; This function calls:
 23014 ;;		_I2C1_SetCallback
 23015 ;; This function is called by:
 23016 ;;		_rd1RegCompleteHandler
 23017 ;;		_rd2RegCompleteHandler
 23018 ;;		_wr1RegCompleteHandler
 23019 ;;		_wr2RegCompleteHandler
 23020 ;;		_rdBlkRegCompleteHandler
 23021 ;;		_rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621
 23022 ;;		_DRV_ADT7410_Read
 23023 ;;		_I2C1_Read1ByteRegister
 23024 ;;		_I2C1_Read2ByteRegister
 23025 ;;		_I2C1_Write1ByteRegister
 23026 ;;		_I2C1_Write2ByteRegister
 23027 ;;		_I2C1_ReadDataBlock
 23028 ;; This function uses a non-reentrant model
 23029 ;;
 23030                           
 23031                           	psect	text138
 23032  007606                     __ptext138:
 23033                           	callstack 0
 23034  007606                     _I2C1_SetDataCompleteCallback:
 23035                           	callstack 20
 23036  007606                     
 23037                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 23038  007606  C00F  F00A         	movff	I2C1_SetDataCompleteCallback@cb,I2C1_SetCallback@cb
 23039  00760A  C010  F00B         	movff	I2C1_SetDataCompleteCallback@cb+1,I2C1_SetCallback@cb+1
 23040  00760E  C011  F00C         	movff	I2C1_SetDataCompleteCallback@ptr,I2C1_SetCallback@ptr
 23041  007612  C012  F00D         	movff	I2C1_SetDataCompleteCallback@ptr+1,I2C1_SetCallback@ptr+1
 23042  007616  0E00               	movlw	0
 23043  007618  ECDB  F033         	call	_I2C1_SetCallback
 23044  00761C  0012               	return		;funcret
 23045  00761E                     __end_of_I2C1_SetDataCompleteCallback:
 23046                           	callstack 0
 23047                           
 23048 ;; *************** function _I2C1_SetCallback *****************
 23049 ;; Defined at:
 23050 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 23051 ;; Parameters:    Size  Location     Type
 23052 ;;  idx             1    wreg     enum E6143
 23053 ;;  cb              2    9[COMRAM] PTR FTN(PTR void ,)enum 
 23054 ;;		 -> rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621(1), Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompl
      +eteHandler(1), 
 23055 ;;		 -> wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 23056 ;;  ptr             2   11[COMRAM] PTR void 
 23057 ;;		 -> DRV_ADT7410_Read@bufferBlock(4), I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1
      +ByteRegister@data(1), 
 23058 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 23059 ;; Auto vars:     Size  Location     Type
 23060 ;;  idx             1   13[COMRAM] enum E6143
 23061 ;; Return value:  Size  Location     Type
 23062 ;;                  1    wreg      void 
 23063 ;; Registers used:
 23064 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23065 ;; Tracked objects:
 23066 ;;		On entry : 0/0
 23067 ;;		On exit  : 0/0
 23068 ;;		Unchanged: 0/0
 23069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23070 ;;      Params:         4       0       0       0       0       0       0
 23071 ;;      Locals:         1       0       0       0       0       0       0
 23072 ;;      Temps:          0       0       0       0       0       0       0
 23073 ;;      Totals:         5       0       0       0       0       0       0
 23074 ;;Total ram usage:        5 bytes
 23075 ;; Hardware stack levels used: 1
 23076 ;; Hardware stack levels required when called: 4
 23077 ;; This function calls:
 23078 ;;		Nothing
 23079 ;; This function is called by:
 23080 ;;		_I2C1_SetDataCompleteCallback
 23081 ;;		_I2C1_SetAddressNackCallback
 23082 ;;		_I2C1_SetWriteCollisionCallback
 23083 ;;		_I2C1_SetDataNackCallback
 23084 ;;		_I2C1_SetTimeoutCallback
 23085 ;; This function uses a non-reentrant model
 23086 ;;
 23087                           
 23088                           	psect	text139
 23089  0067B6                     __ptext139:
 23090                           	callstack 0
 23091  0067B6                     _I2C1_SetCallback:
 23092                           	callstack 20
 23093                           
 23094                           ;incstack = 0
 23095                           ;I2C1_SetCallback@idx stored from wreg
 23096  0067B6  6E0E               	movwf	I2C1_SetCallback@idx^0,c
 23097  0067B8                     
 23098                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 23099  0067B8  500A               	movf	I2C1_SetCallback@cb^0,w,c
 23100  0067BA  100B               	iorwf	(I2C1_SetCallback@cb+1)^0,w,c
 23101  0067BC  B4D8               	btfsc	status,2,c
 23102  0067BE  EFE3  F033         	goto	u10001
 23103  0067C2  EFE5  F033         	goto	u10000
 23104  0067C6                     u10001:
 23105  0067C6  EFFF  F033         	goto	l10846
 23106  0067CA                     u10000:
 23107  0067CA                     
 23108                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 23109  0067CA  500E               	movf	I2C1_SetCallback@idx^0,w,c
 23110  0067CC  0D02               	mullw	2
 23111  0067CE  0E00               	movlw	low _I2C1_Status
 23112  0067D0  24F3               	addwf	243,w,c
 23113  0067D2  6ED9               	movwf	fsr2l,c
 23114  0067D4  0E01               	movlw	high _I2C1_Status
 23115  0067D6  20F4               	addwfc	prodh,w,c
 23116  0067D8  6EDA               	movwf	fsr2h,c
 23117  0067DA  C00A  FFDE         	movff	I2C1_SetCallback@cb,postinc2
 23118  0067DE  C00B  FFDD         	movff	I2C1_SetCallback@cb+1,postdec2
 23119                           
 23120                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 23121  0067E2  500E               	movf	I2C1_SetCallback@idx^0,w,c
 23122  0067E4  0D02               	mullw	2
 23123  0067E6  0E0C               	movlw	low (_I2C1_Status+12)
 23124  0067E8  24F3               	addwf	243,w,c
 23125  0067EA  6ED9               	movwf	fsr2l,c
 23126  0067EC  0E01               	movlw	high (_I2C1_Status+12)
 23127  0067EE  20F4               	addwfc	prodh,w,c
 23128  0067F0  6EDA               	movwf	fsr2h,c
 23129  0067F2  C00C  FFDE         	movff	I2C1_SetCallback@ptr,postinc2
 23130  0067F6  C00D  FFDD         	movff	I2C1_SetCallback@ptr+1,postdec2
 23131                           
 23132                           ;mcc_generated_files/i2c1_master.c: 304:     }
 23133  0067FA  EF17  F034         	goto	l492
 23134  0067FE                     l10846:
 23135                           
 23136                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 23137  0067FE  500E               	movf	I2C1_SetCallback@idx^0,w,c
 23138  006800  0D02               	mullw	2
 23139  006802  0E00               	movlw	low _I2C1_Status
 23140  006804  24F3               	addwf	243,w,c
 23141  006806  6ED9               	movwf	fsr2l,c
 23142  006808  0E01               	movlw	high _I2C1_Status
 23143  00680A  20F4               	addwfc	prodh,w,c
 23144  00680C  6EDA               	movwf	fsr2h,c
 23145  00680E  0EE2               	movlw	low _I2C1_CallbackReturnStop
 23146  006810  6EDE               	movwf	postinc2,c
 23147  006812  0E77               	movlw	high _I2C1_CallbackReturnStop
 23148  006814  6EDD               	movwf	postdec2,c
 23149                           
 23150                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 23151  006816  500E               	movf	I2C1_SetCallback@idx^0,w,c
 23152  006818  0D02               	mullw	2
 23153  00681A  0E0C               	movlw	low (_I2C1_Status+12)
 23154  00681C  24F3               	addwf	243,w,c
 23155  00681E  6ED9               	movwf	fsr2l,c
 23156  006820  0E01               	movlw	high (_I2C1_Status+12)
 23157  006822  20F4               	addwfc	prodh,w,c
 23158  006824  6EDA               	movwf	fsr2h,c
 23159  006826  0E00               	movlw	0
 23160  006828  6EDE               	movwf	postinc2,c
 23161  00682A  0E00               	movlw	0
 23162  00682C  6EDD               	movwf	postdec2,c
 23163  00682E                     l492:
 23164  00682E  0012               	return		;funcret
 23165  006830                     __end_of_I2C1_SetCallback:
 23166                           	callstack 0
 23167                           
 23168 ;; *************** function _I2C1_SetBuffer *****************
 23169 ;; Defined at:
 23170 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 23171 ;; Parameters:    Size  Location     Type
 23172 ;;  buffer          2    9[COMRAM] PTR void 
 23173 ;;		 -> SRV_ADT7410_Read@data(2), DRV_ADT7410_Read@reg(1), DRV_ADT7410_Read@bufferBlock(4), I2C1_ReadDataBlock@reg(1), 
 23174 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteRegister@data(2), I2C1_Write1B
      +yteRegister@reg(1), 
 23175 ;;		 -> I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRegister@returnValue(2), NULL(0), 
 23176 ;;		 -> I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), 
 23177 ;;  bufferSize      2   11[COMRAM] unsigned int 
 23178 ;; Auto vars:     Size  Location     Type
 23179 ;;		None
 23180 ;; Return value:  Size  Location     Type
 23181 ;;                  1    wreg      void 
 23182 ;; Registers used:
 23183 ;;		wreg, status,2, status,0
 23184 ;; Tracked objects:
 23185 ;;		On entry : 0/0
 23186 ;;		On exit  : 0/0
 23187 ;;		Unchanged: 0/0
 23188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23189 ;;      Params:         4       0       0       0       0       0       0
 23190 ;;      Locals:         0       0       0       0       0       0       0
 23191 ;;      Temps:          0       0       0       0       0       0       0
 23192 ;;      Totals:         4       0       0       0       0       0       0
 23193 ;;Total ram usage:        4 bytes
 23194 ;; Hardware stack levels used: 1
 23195 ;; Hardware stack levels required when called: 4
 23196 ;; This function calls:
 23197 ;;		Nothing
 23198 ;; This function is called by:
 23199 ;;		_rd1RegCompleteHandler
 23200 ;;		_rd2RegCompleteHandler
 23201 ;;		_wr1RegCompleteHandler
 23202 ;;		_wr2RegCompleteHandler
 23203 ;;		_rdBlkRegCompleteHandler
 23204 ;;		_rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621
 23205 ;;		_DRV_ADT7410_Read
 23206 ;;		_I2C1_Read1ByteRegister
 23207 ;;		_I2C1_Read2ByteRegister
 23208 ;;		_I2C1_Write1ByteRegister
 23209 ;;		_I2C1_Write2ByteRegister
 23210 ;;		_I2C1_WriteNBytes
 23211 ;;		_I2C1_ReadNBytes
 23212 ;;		_I2C1_ReadDataBlock
 23213 ;; This function uses a non-reentrant model
 23214 ;;
 23215                           
 23216                           	psect	text140
 23217  00747A                     __ptext140:
 23218                           	callstack 0
 23219  00747A                     _I2C1_SetBuffer:
 23220                           	callstack 21
 23221  00747A                     
 23222                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 23223  00747A  0101               	movlb	1	; () banked
 23224  00747C  A723               	btfss	(_I2C1_Status+35)& (0+255),3,b
 23225  00747E  EF43  F03A         	goto	u10011
 23226  007482  EF45  F03A         	goto	u10010
 23227  007486                     u10011:
 23228  007486  EF4E  F03A         	goto	l472
 23229  00748A                     u10010:
 23230  00748A                     
 23231                           ; BSR set to: 1
 23232                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 23233  00748A  C00A  F11D         	movff	I2C1_SetBuffer@buffer,_I2C1_Status+29
 23234  00748E  C00B  F11E         	movff	I2C1_SetBuffer@buffer+1,_I2C1_Status+30
 23235  007492                     
 23236                           ; BSR set to: 1
 23237                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 23238  007492  C00C  F11F         	movff	I2C1_SetBuffer@bufferSize,_I2C1_Status+31
 23239  007496  C00D  F120         	movff	I2C1_SetBuffer@bufferSize+1,_I2C1_Status+32
 23240  00749A                     
 23241                           ; BSR set to: 1
 23242                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 23243  00749A  9723               	bcf	(_I2C1_Status+35)& (0+255),3,b
 23244  00749C                     l472:
 23245                           
 23246                           ; BSR set to: 1
 23247  00749C  0012               	return		;funcret
 23248  00749E                     __end_of_I2C1_SetBuffer:
 23249                           	callstack 0
 23250                           
 23251 ;; *************** function _I2C1_MasterStop *****************
 23252 ;; Defined at:
 23253 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 23254 ;; Parameters:    Size  Location     Type
 23255 ;;		None
 23256 ;; Auto vars:     Size  Location     Type
 23257 ;;		None
 23258 ;; Return value:  Size  Location     Type
 23259 ;;                  1    wreg      void 
 23260 ;; Registers used:
 23261 ;;		None
 23262 ;; Tracked objects:
 23263 ;;		On entry : 0/0
 23264 ;;		On exit  : 0/0
 23265 ;;		Unchanged: 0/0
 23266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23267 ;;      Params:         0       0       0       0       0       0       0
 23268 ;;      Locals:         0       0       0       0       0       0       0
 23269 ;;      Temps:          0       0       0       0       0       0       0
 23270 ;;      Totals:         0       0       0       0       0       0       0
 23271 ;;Total ram usage:        0 bytes
 23272 ;; Hardware stack levels used: 1
 23273 ;; Hardware stack levels required when called: 4
 23274 ;; This function calls:
 23275 ;;		Nothing
 23276 ;; This function is called by:
 23277 ;;		_I2C1_DO_SEND_STOP
 23278 ;; This function uses a non-reentrant model
 23279 ;;
 23280                           
 23281                           	psect	text141
 23282  0077E6                     __ptext141:
 23283                           	callstack 0
 23284  0077E6                     _I2C1_MasterStop:
 23285                           	callstack 15
 23286  0077E6                     
 23287                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 23288  0077E6  84C5               	bsf	197,2,c	;volatile
 23289  0077E8  0012               	return		;funcret
 23290  0077EA                     __end_of_I2C1_MasterStop:
 23291                           	callstack 0
 23292                           
 23293 ;; *************** function _I2C1_MasterEnableRestart *****************
 23294 ;; Defined at:
 23295 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 23296 ;; Parameters:    Size  Location     Type
 23297 ;;		None
 23298 ;; Auto vars:     Size  Location     Type
 23299 ;;		None
 23300 ;; Return value:  Size  Location     Type
 23301 ;;                  1    wreg      void 
 23302 ;; Registers used:
 23303 ;;		None
 23304 ;; Tracked objects:
 23305 ;;		On entry : 0/0
 23306 ;;		On exit  : 0/0
 23307 ;;		Unchanged: 0/0
 23308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23309 ;;      Params:         0       0       0       0       0       0       0
 23310 ;;      Locals:         0       0       0       0       0       0       0
 23311 ;;      Temps:          0       0       0       0       0       0       0
 23312 ;;      Totals:         0       0       0       0       0       0       0
 23313 ;;Total ram usage:        0 bytes
 23314 ;; Hardware stack levels used: 1
 23315 ;; Hardware stack levels required when called: 4
 23316 ;; This function calls:
 23317 ;;		Nothing
 23318 ;; This function is called by:
 23319 ;;		_I2C1_DO_SEND_RESTART_READ
 23320 ;;		_I2C1_DO_SEND_RESTART_WRITE
 23321 ;;		_I2C1_DO_SEND_RESTART
 23322 ;;		_I2C1_DO_RX_EMPTY
 23323 ;; This function uses a non-reentrant model
 23324 ;;
 23325                           
 23326                           	psect	text142
 23327  0077EA                     __ptext142:
 23328                           	callstack 0
 23329  0077EA                     _I2C1_MasterEnableRestart:
 23330                           	callstack 15
 23331  0077EA                     
 23332                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 23333  0077EA  82C5               	bsf	197,1,c	;volatile
 23334  0077EC  0012               	return		;funcret
 23335  0077EE                     __end_of_I2C1_MasterEnableRestart:
 23336                           	callstack 0
 23337                           
 23338 ;; *************** function _I2C1_MasterStart *****************
 23339 ;; Defined at:
 23340 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 23341 ;; Parameters:    Size  Location     Type
 23342 ;;		None
 23343 ;; Auto vars:     Size  Location     Type
 23344 ;;		None
 23345 ;; Return value:  Size  Location     Type
 23346 ;;                  1    wreg      void 
 23347 ;; Registers used:
 23348 ;;		None
 23349 ;; Tracked objects:
 23350 ;;		On entry : 0/0
 23351 ;;		On exit  : 0/0
 23352 ;;		Unchanged: 0/0
 23353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23354 ;;      Params:         0       0       0       0       0       0       0
 23355 ;;      Locals:         0       0       0       0       0       0       0
 23356 ;;      Temps:          0       0       0       0       0       0       0
 23357 ;;      Totals:         0       0       0       0       0       0       0
 23358 ;;Total ram usage:        0 bytes
 23359 ;; Hardware stack levels used: 1
 23360 ;; Hardware stack levels required when called: 4
 23361 ;; This function calls:
 23362 ;;		Nothing
 23363 ;; This function is called by:
 23364 ;;		_I2C1_MasterOperation
 23365 ;; This function uses a non-reentrant model
 23366 ;;
 23367                           
 23368                           	psect	text143
 23369  0077EE                     __ptext143:
 23370                           	callstack 0
 23371  0077EE                     _I2C1_MasterStart:
 23372                           	callstack 19
 23373  0077EE                     
 23374                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 23375  0077EE  80C5               	bsf	197,0,c	;volatile
 23376  0077F0  0012               	return		;funcret
 23377  0077F2                     __end_of_I2C1_MasterStart:
 23378                           	callstack 0
 23379                           
 23380 ;; *************** function _I2C1_Close *****************
 23381 ;; Defined at:
 23382 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 23383 ;; Parameters:    Size  Location     Type
 23384 ;;		None
 23385 ;; Auto vars:     Size  Location     Type
 23386 ;;  returnValue     1    9[COMRAM] enum E355
 23387 ;; Return value:  Size  Location     Type
 23388 ;;                  1    wreg      enum E355
 23389 ;; Registers used:
 23390 ;;		wreg, status,2, cstack
 23391 ;; Tracked objects:
 23392 ;;		On entry : 0/0
 23393 ;;		On exit  : 0/0
 23394 ;;		Unchanged: 0/0
 23395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23396 ;;      Params:         0       0       0       0       0       0       0
 23397 ;;      Locals:         1       0       0       0       0       0       0
 23398 ;;      Temps:          0       0       0       0       0       0       0
 23399 ;;      Totals:         1       0       0       0       0       0       0
 23400 ;;Total ram usage:        1 bytes
 23401 ;; Hardware stack levels used: 1
 23402 ;; Hardware stack levels required when called: 5
 23403 ;; This function calls:
 23404 ;;		_I2C1_MasterClearIrq
 23405 ;;		_I2C1_MasterClose
 23406 ;;		_I2C1_MasterDisableIrq
 23407 ;; This function is called by:
 23408 ;;		_DRV_ADT7410_Read
 23409 ;;		_I2C1_Read1ByteRegister
 23410 ;;		_I2C1_Read2ByteRegister
 23411 ;;		_I2C1_Write1ByteRegister
 23412 ;;		_I2C1_Write2ByteRegister
 23413 ;;		_I2C1_WriteNBytes
 23414 ;;		_I2C1_ReadNBytes
 23415 ;;		_I2C1_ReadDataBlock
 23416 ;; This function uses a non-reentrant model
 23417 ;;
 23418                           
 23419                           	psect	text144
 23420  0073FC                     __ptext144:
 23421                           	callstack 0
 23422  0073FC                     _I2C1_Close:
 23423                           	callstack 20
 23424  0073FC                     
 23425                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 23426  0073FC  0E01               	movlw	1
 23427  0073FE  6E0A               	movwf	I2C1_Close@returnValue^0,c
 23428  007400                     
 23429                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 23430  007400  0101               	movlb	1	; () banked
 23431  007402  B323               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 23432  007404  EF06  F03A         	goto	u11801
 23433  007408  EF08  F03A         	goto	u11800
 23434  00740C                     u11801:
 23435  00740C  EF12  F03A         	goto	l12128
 23436  007410                     u11800:
 23437  007410                     
 23438                           ; BSR set to: 1
 23439                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 23440  007410  9523               	bcf	(_I2C1_Status+35)& (0+255),2,b
 23441                           
 23442                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 23443  007412  691C               	setf	(_I2C1_Status+28)& (0+255),b
 23444  007414                     
 23445                           ; BSR set to: 1
 23446                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 23447  007414  ECFD  F03B         	call	_I2C1_MasterClearIrq	;wreg free
 23448                           
 23449                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 23450  007418  ECF9  F03B         	call	_I2C1_MasterDisableIrq	;wreg free
 23451                           
 23452                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 23453  00741C  ECFB  F03B         	call	_I2C1_MasterClose	;wreg free
 23454  007420                     
 23455                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 23456  007420  C122  F00A         	movff	_I2C1_Status+34,I2C1_Close@returnValue
 23457  007424                     l12128:
 23458                           
 23459                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 23460  007424  500A               	movf	I2C1_Close@returnValue^0,w,c
 23461  007426  0012               	return		;funcret
 23462  007428                     __end_of_I2C1_Close:
 23463                           	callstack 0
 23464                           
 23465 ;; *************** function _I2C1_MasterDisableIrq *****************
 23466 ;; Defined at:
 23467 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 23468 ;; Parameters:    Size  Location     Type
 23469 ;;		None
 23470 ;; Auto vars:     Size  Location     Type
 23471 ;;		None
 23472 ;; Return value:  Size  Location     Type
 23473 ;;                  1    wreg      void 
 23474 ;; Registers used:
 23475 ;;		None
 23476 ;; Tracked objects:
 23477 ;;		On entry : 0/0
 23478 ;;		On exit  : 0/0
 23479 ;;		Unchanged: 0/0
 23480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23481 ;;      Params:         0       0       0       0       0       0       0
 23482 ;;      Locals:         0       0       0       0       0       0       0
 23483 ;;      Temps:          0       0       0       0       0       0       0
 23484 ;;      Totals:         0       0       0       0       0       0       0
 23485 ;;Total ram usage:        0 bytes
 23486 ;; Hardware stack levels used: 1
 23487 ;; Hardware stack levels required when called: 4
 23488 ;; This function calls:
 23489 ;;		Nothing
 23490 ;; This function is called by:
 23491 ;;		_I2C1_Close
 23492 ;;		_I2C1_SetTimeOut
 23493 ;; This function uses a non-reentrant model
 23494 ;;
 23495                           
 23496                           	psect	text145
 23497  0077F2                     __ptext145:
 23498                           	callstack 0
 23499  0077F2                     _I2C1_MasterDisableIrq:
 23500                           	callstack 20
 23501  0077F2                     
 23502                           ;mcc_generated_files/i2c1_master.c: 637:     PIE1bits.SSP1IE = 0;
 23503  0077F2  969D               	bcf	157,3,c	;volatile
 23504  0077F4  0012               	return		;funcret
 23505  0077F6                     __end_of_I2C1_MasterDisableIrq:
 23506                           	callstack 0
 23507                           
 23508 ;; *************** function _I2C1_MasterClose *****************
 23509 ;; Defined at:
 23510 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 23511 ;; Parameters:    Size  Location     Type
 23512 ;;		None
 23513 ;; Auto vars:     Size  Location     Type
 23514 ;;		None
 23515 ;; Return value:  Size  Location     Type
 23516 ;;                  1    wreg      void 
 23517 ;; Registers used:
 23518 ;;		None
 23519 ;; Tracked objects:
 23520 ;;		On entry : 0/0
 23521 ;;		On exit  : 0/0
 23522 ;;		Unchanged: 0/0
 23523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23524 ;;      Params:         0       0       0       0       0       0       0
 23525 ;;      Locals:         0       0       0       0       0       0       0
 23526 ;;      Temps:          0       0       0       0       0       0       0
 23527 ;;      Totals:         0       0       0       0       0       0       0
 23528 ;;Total ram usage:        0 bytes
 23529 ;; Hardware stack levels used: 1
 23530 ;; Hardware stack levels required when called: 4
 23531 ;; This function calls:
 23532 ;;		Nothing
 23533 ;; This function is called by:
 23534 ;;		_I2C1_Close
 23535 ;; This function uses a non-reentrant model
 23536 ;;
 23537                           
 23538                           	psect	text146
 23539  0077F6                     __ptext146:
 23540                           	callstack 0
 23541  0077F6                     _I2C1_MasterClose:
 23542                           	callstack 20
 23543  0077F6                     
 23544                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 23545  0077F6  9AC6               	bcf	198,5,c	;volatile
 23546  0077F8  0012               	return		;funcret
 23547  0077FA                     __end_of_I2C1_MasterClose:
 23548                           	callstack 0
 23549                           
 23550 ;; *************** function _I2C1_MasterClearIrq *****************
 23551 ;; Defined at:
 23552 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 23553 ;; Parameters:    Size  Location     Type
 23554 ;;		None
 23555 ;; Auto vars:     Size  Location     Type
 23556 ;;		None
 23557 ;; Return value:  Size  Location     Type
 23558 ;;                  1    wreg      void 
 23559 ;; Registers used:
 23560 ;;		None
 23561 ;; Tracked objects:
 23562 ;;		On entry : 0/0
 23563 ;;		On exit  : 0/0
 23564 ;;		Unchanged: 0/0
 23565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23566 ;;      Params:         0       0       0       0       0       0       0
 23567 ;;      Locals:         0       0       0       0       0       0       0
 23568 ;;      Temps:          0       0       0       0       0       0       0
 23569 ;;      Totals:         0       0       0       0       0       0       0
 23570 ;;Total ram usage:        0 bytes
 23571 ;; Hardware stack levels used: 1
 23572 ;; Hardware stack levels required when called: 4
 23573 ;; This function calls:
 23574 ;;		Nothing
 23575 ;; This function is called by:
 23576 ;;		_I2C1_Open
 23577 ;;		_I2C1_Close
 23578 ;;		_I2C1_MasterFsm
 23579 ;; This function uses a non-reentrant model
 23580 ;;
 23581                           
 23582                           	psect	text147
 23583  0077FA                     __ptext147:
 23584                           	callstack 0
 23585  0077FA                     _I2C1_MasterClearIrq:
 23586                           	callstack 20
 23587  0077FA                     
 23588                           ;mcc_generated_files/i2c1_master.c: 642:     PIR1bits.SSP1IF = 0;
 23589  0077FA  969E               	bcf	158,3,c	;volatile
 23590  0077FC  0012               	return		;funcret
 23591  0077FE                     __end_of_I2C1_MasterClearIrq:
 23592                           	callstack 0
 23593                           
 23594 ;; *************** function _Driver_Analog_Init *****************
 23595 ;; Defined at:
 23596 ;;		line 23 in file "Driver_Analog.c"
 23597 ;; Parameters:    Size  Location     Type
 23598 ;;		None
 23599 ;; Auto vars:     Size  Location     Type
 23600 ;;		None
 23601 ;; Return value:  Size  Location     Type
 23602 ;;                  1    wreg      void 
 23603 ;; Registers used:
 23604 ;;		wreg, status,2
 23605 ;; Tracked objects:
 23606 ;;		On entry : 0/0
 23607 ;;		On exit  : 0/0
 23608 ;;		Unchanged: 0/0
 23609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23610 ;;      Params:         0       0       0       0       0       0       0
 23611 ;;      Locals:         0       0       0       0       0       0       0
 23612 ;;      Temps:          0       0       0       0       0       0       0
 23613 ;;      Totals:         0       0       0       0       0       0       0
 23614 ;;Total ram usage:        0 bytes
 23615 ;; Hardware stack levels used: 1
 23616 ;; Hardware stack levels required when called: 4
 23617 ;; This function calls:
 23618 ;;		Nothing
 23619 ;; This function is called by:
 23620 ;;		_App_HTAD_init
 23621 ;; This function uses a non-reentrant model
 23622 ;;
 23623                           
 23624                           	psect	text148
 23625  0076F4                     __ptext148:
 23626                           	callstack 0
 23627  0076F4                     _Driver_Analog_Init:
 23628                           	callstack 25
 23629  0076F4                     
 23630                           ;Driver_Analog.c: 25:     ADCON0 = 0x01;
 23631  0076F4  0E01               	movlw	1
 23632  0076F6  6EC2               	movwf	194,c	;volatile
 23633                           
 23634                           ;Driver_Analog.c: 26:     ADCON1 = 0x80;
 23635  0076F8  0E80               	movlw	128
 23636  0076FA  6EC1               	movwf	193,c	;volatile
 23637                           
 23638                           ;Driver_Analog.c: 27:     ADCON2 = 0x92;
 23639  0076FC  0E92               	movlw	146
 23640  0076FE  6EC0               	movwf	192,c	;volatile
 23641  007700  0012               	return		;funcret
 23642  007702                     __end_of_Driver_Analog_Init:
 23643                           	callstack 0
 23644                           
 23645 ;; *************** function _DirectNet_Init *****************
 23646 ;; Defined at:
 23647 ;;		line 346 in file "Driver_DirectNet.c"
 23648 ;; Parameters:    Size  Location     Type
 23649 ;;		None
 23650 ;; Auto vars:     Size  Location     Type
 23651 ;;		None
 23652 ;; Return value:  Size  Location     Type
 23653 ;;                  1    wreg      void 
 23654 ;; Registers used:
 23655 ;;		None
 23656 ;; Tracked objects:
 23657 ;;		On entry : 0/0
 23658 ;;		On exit  : 0/0
 23659 ;;		Unchanged: 0/0
 23660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23661 ;;      Params:         0       0       0       0       0       0       0
 23662 ;;      Locals:         0       0       0       0       0       0       0
 23663 ;;      Temps:          0       0       0       0       0       0       0
 23664 ;;      Totals:         0       0       0       0       0       0       0
 23665 ;;Total ram usage:        0 bytes
 23666 ;; Hardware stack levels used: 1
 23667 ;; Hardware stack levels required when called: 4
 23668 ;; This function calls:
 23669 ;;		Nothing
 23670 ;; This function is called by:
 23671 ;;		_App_HTAD_init
 23672 ;; This function uses a non-reentrant model
 23673 ;;
 23674                           
 23675                           	psect	text149
 23676  007804                     __ptext149:
 23677                           	callstack 0
 23678  007804                     _DirectNet_Init:
 23679                           	callstack 25
 23680  007804  0012               	return		;funcret
 23681  007806                     __end_of_DirectNet_Init:
 23682                           	callstack 0
 23683                           
 23684 ;; *************** function _INTERRUPT_InterruptManager *****************
 23685 ;; Defined at:
 23686 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 23687 ;; Parameters:    Size  Location     Type
 23688 ;;		None
 23689 ;; Auto vars:     Size  Location     Type
 23690 ;;		None
 23691 ;; Return value:  Size  Location     Type
 23692 ;;                  1    wreg      void 
 23693 ;; Registers used:
 23694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 23695 ;; Tracked objects:
 23696 ;;		On entry : 0/0
 23697 ;;		On exit  : 0/0
 23698 ;;		Unchanged: 0/0
 23699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23700 ;;      Params:         0       0       0       0       0       0       0
 23701 ;;      Locals:         0       0       0       0       0       0       0
 23702 ;;      Temps:          4       0       0       0       0       0       0
 23703 ;;      Totals:         4       0       0       0       0       0       0
 23704 ;;Total ram usage:        4 bytes
 23705 ;; Hardware stack levels used: 1
 23706 ;; Hardware stack levels required when called: 3
 23707 ;; This function calls:
 23708 ;;		Absolute function
 23709 ;;		_EUSART1_Receive_ISR
 23710 ;;		_TMR0_ISR
 23711 ;; This function is called by:
 23712 ;;		Interrupt level 2
 23713 ;; This function uses a non-reentrant model
 23714 ;;
 23715                           
 23716                           	psect	intcode
 23717  000008                     __pintcode:
 23718                           	callstack 0
 23719  000008                     _INTERRUPT_InterruptManager:
 23720                           	callstack 14
 23721                           
 23722                           ;incstack = 0
 23723  000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 23724  00000A  CFFA F006          	movff	pclath,??_INTERRUPT_InterruptManager
 23725  00000E  CFFB F007          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 23726  000012  CFD9 F008          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 23727  000016  CFDA F009          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 23728  00001A                     
 23729                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
 23730  00001A  AAF2               	btfss	242,5,c	;volatile
 23731  00001C  EF12  F000         	goto	i2u992_41
 23732  000020  EF14  F000         	goto	i2u992_40
 23733  000024                     i2u992_41:
 23734  000024  EF1F  F000         	goto	i2l229
 23735  000028                     i2u992_40:
 23736  000028  A4F2               	btfss	242,2,c	;volatile
 23737  00002A  EF19  F000         	goto	i2u993_41
 23738  00002E  EF1B  F000         	goto	i2u993_40
 23739  000032                     i2u993_41:
 23740  000032  EF1F  F000         	goto	i2l229
 23741  000036                     i2u993_40:
 23742  000036                     
 23743                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 23744  000036  ECB2  F038         	call	_TMR0_ISR	;wreg free
 23745                           
 23746                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 23747  00003A  EF44  F000         	goto	i2l235
 23748  00003E                     i2l229:
 23749  00003E  ACF2               	btfss	242,6,c	;volatile
 23750  000040  EF24  F000         	goto	i2u994_41
 23751  000044  EF26  F000         	goto	i2u994_40
 23752  000048                     i2u994_41:
 23753  000048  EF44  F000         	goto	i2l235
 23754  00004C                     i2u994_40:
 23755  00004C                     
 23756                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
 23757  00004C  AA9D               	btfss	157,5,c	;volatile
 23758  00004E  EF2B  F000         	goto	i2u995_41
 23759  000052  EF2D  F000         	goto	i2u995_40
 23760  000056                     i2u995_41:
 23761  000056  EF44  F000         	goto	i2l234
 23762  00005A                     i2u995_40:
 23763  00005A  AA9E               	btfss	158,5,c	;volatile
 23764  00005C  EF32  F000         	goto	i2u996_41
 23765  000060  EF34  F000         	goto	i2u996_40
 23766  000064                     i2u996_41:
 23767  000064  EF44  F000         	goto	i2l234
 23768  000068                     i2u996_40:
 23769  000068                     
 23770                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:           EUSART1_RxDefaultInterruptHandler();
 23771  000068  D802               	call	i2u997_48
 23772  00006A  EF42  F000         	goto	i2u997_49
 23773  00006E                     i2u997_48:
 23774  00006E  0005               	push	
 23775  000070  0101               	movlb	1	; () banked
 23776  000072  6EFA               	movwf	pclath,c
 23777  000074  5199               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 23778  000076  6EFD               	movwf	tosl,c
 23779  000078  519A               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 23780  00007A  6EFE               	movwf	tosh,c
 23781  00007C  50F8               	movf	tblptru,w,c
 23782  00007E  6EFF               	movwf	tosu,c
 23783  000080  50FA               	movf	pclath,w,c
 23784  000082  0012               	return		;indir
 23785  000084                     i2u997_49:
 23786                           
 23787                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 23788  000084  EF44  F000         	goto	i2l235
 23789  000088                     i2l234:
 23790  000088                     i2l235:
 23791  000088  C009  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 23792  00008C  C008  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 23793  000090  C007  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 23794  000094  C006  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 23795  000098  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 23796  00009A  0011               	retfie		f
 23797  00009C                     __end_of_INTERRUPT_InterruptManager:
 23798                           	callstack 0
 23799                           
 23800 ;; *************** function _TMR0_ISR *****************
 23801 ;; Defined at:
 23802 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 23803 ;; Parameters:    Size  Location     Type
 23804 ;;		None
 23805 ;; Auto vars:     Size  Location     Type
 23806 ;;		None
 23807 ;; Return value:  Size  Location     Type
 23808 ;;                  1    wreg      void 
 23809 ;; Registers used:
 23810 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 23811 ;; Tracked objects:
 23812 ;;		On entry : 0/0
 23813 ;;		On exit  : 0/0
 23814 ;;		Unchanged: 0/0
 23815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23816 ;;      Params:         0       0       0       0       0       0       0
 23817 ;;      Locals:         0       0       0       0       0       0       0
 23818 ;;      Temps:          0       0       0       0       0       0       0
 23819 ;;      Totals:         0       0       0       0       0       0       0
 23820 ;;Total ram usage:        0 bytes
 23821 ;; Hardware stack levels used: 1
 23822 ;; Hardware stack levels required when called: 1
 23823 ;; This function calls:
 23824 ;;		Absolute function
 23825 ;;		_SRV_TIMER_TickInterrupt
 23826 ;;		_TMR0_DefaultInterruptHandler
 23827 ;; This function is called by:
 23828 ;;		_INTERRUPT_InterruptManager
 23829 ;; This function uses a non-reentrant model
 23830 ;;
 23831                           
 23832                           	psect	text151
 23833  007164                     __ptext151:
 23834                           	callstack 0
 23835  007164                     _TMR0_ISR:
 23836                           	callstack 15
 23837  007164                     
 23838                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
 23839  007164  94F2               	bcf	242,2,c	;volatile
 23840  007166                     
 23841                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
 23842  007166  5052               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
 23843  007168  6ED7               	movwf	215,c	;volatile
 23844  00716A                     
 23845                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
 23846  00716A  C051  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 23847  00716E                     
 23848                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
 23849  00716E  0101               	movlb	1	; () banked
 23850  007170  519B               	movf	_TMR0_InterruptHandler& (0+255),w,b
 23851  007172  119C               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 23852  007174  B4D8               	btfsc	status,2,c
 23853  007176  EFBF  F038         	goto	i2u967_41
 23854  00717A  EFC1  F038         	goto	i2u967_40
 23855  00717E                     i2u967_41:
 23856  00717E  EFCE  F038         	goto	i2l203
 23857  007182                     i2u967_40:
 23858  007182                     
 23859                           ; BSR set to: 1
 23860                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
 23861  007182  D802               	call	i2u968_48
 23862  007184  EFCE  F038         	goto	i2u968_49
 23863  007188                     i2u968_48:
 23864  007188  0005               	push	
 23865  00718A  6EFA               	movwf	pclath,c
 23866  00718C  519B               	movf	_TMR0_InterruptHandler& (0+255),w,b
 23867  00718E  6EFD               	movwf	tosl,c
 23868  007190  519C               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 23869  007192  6EFE               	movwf	tosh,c
 23870  007194  50F8               	movf	tblptru,w,c
 23871  007196  6EFF               	movwf	tosu,c
 23872  007198  50FA               	movf	pclath,w,c
 23873  00719A  0012               	return		;indir
 23874  00719C                     i2u968_49:
 23875  00719C                     i2l203:
 23876  00719C  0012               	return		;funcret
 23877  00719E                     __end_of_TMR0_ISR:
 23878                           	callstack 0
 23879                           
 23880 ;; *************** function _SRV_TIMER_TickInterrupt *****************
 23881 ;; Defined at:
 23882 ;;		line 22 in file "ServiceTimer.c"
 23883 ;; Parameters:    Size  Location     Type
 23884 ;;		None
 23885 ;; Auto vars:     Size  Location     Type
 23886 ;;		None
 23887 ;; Return value:  Size  Location     Type
 23888 ;;                  1    wreg      void 
 23889 ;; Registers used:
 23890 ;;		wreg, status,2, status,0
 23891 ;; Tracked objects:
 23892 ;;		On entry : 0/0
 23893 ;;		On exit  : 0/0
 23894 ;;		Unchanged: 0/0
 23895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23896 ;;      Params:         0       0       0       0       0       0       0
 23897 ;;      Locals:         0       0       0       0       0       0       0
 23898 ;;      Temps:          0       0       0       0       0       0       0
 23899 ;;      Totals:         0       0       0       0       0       0       0
 23900 ;;Total ram usage:        0 bytes
 23901 ;; Hardware stack levels used: 1
 23902 ;; This function calls:
 23903 ;;		Nothing
 23904 ;; This function is called by:
 23905 ;;		_SRV_TIMER_Init
 23906 ;;		_TMR0_ISR
 23907 ;; This function uses a non-reentrant model
 23908 ;;
 23909                           
 23910                           	psect	text152
 23911  007128                     __ptext152:
 23912                           	callstack 0
 23913  007128                     _SRV_TIMER_TickInterrupt:
 23914                           	callstack 15
 23915  007128                     
 23916                           ;ServiceTimer.c: 24:     tickRate++;
 23917  007128  0E01               	movlw	1
 23918  00712A  0101               	movlb	1	; () banked
 23919  00712C  27D1               	addwf	_tickRate& (0+255),f,b	;volatile
 23920  00712E  0E00               	movlw	0
 23921  007130  23D2               	addwfc	(_tickRate+1)& (0+255),f,b	;volatile
 23922  007132  23D3               	addwfc	(_tickRate+2)& (0+255),f,b	;volatile
 23923  007134  23D4               	addwfc	(_tickRate+3)& (0+255),f,b	;volatile
 23924                           
 23925                           ;ServiceTimer.c: 25:     if(tickRate > 10000){
 23926  007136  51D4               	movf	(_tickRate+3)& (0+255),w,b	;volatile
 23927  007138  11D3               	iorwf	(_tickRate+2)& (0+255),w,b	;volatile
 23928  00713A  E10B               	bnz	i2u966_40
 23929  00713C  0E11               	movlw	17
 23930  00713E  5DD1               	subwf	_tickRate& (0+255),w,b	;volatile
 23931  007140  0E27               	movlw	39
 23932  007142  59D2               	subwfb	(_tickRate+1)& (0+255),w,b	;volatile
 23933  007144  A0D8               	btfss	status,0,c
 23934  007146  EFA7  F038         	goto	i2u966_41
 23935  00714A  EFA9  F038         	goto	i2u966_40
 23936  00714E                     i2u966_41:
 23937  00714E  EFB1  F038         	goto	i2l1159
 23938  007152                     i2u966_40:
 23939  007152                     
 23940                           ; BSR set to: 1
 23941                           ;ServiceTimer.c: 26:         tickRate = 0;
 23942  007152  0E00               	movlw	0
 23943  007154  6FD1               	movwf	_tickRate& (0+255),b	;volatile
 23944  007156  0E00               	movlw	0
 23945  007158  6FD2               	movwf	(_tickRate+1)& (0+255),b	;volatile
 23946  00715A  0E00               	movlw	0
 23947  00715C  6FD3               	movwf	(_tickRate+2)& (0+255),b	;volatile
 23948  00715E  0E00               	movlw	0
 23949  007160  6FD4               	movwf	(_tickRate+3)& (0+255),b	;volatile
 23950  007162                     i2l1159:
 23951                           
 23952                           ; BSR set to: 1
 23953  007162  0012               	return		;funcret
 23954  007164                     __end_of_SRV_TIMER_TickInterrupt:
 23955                           	callstack 0
 23956                           
 23957 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 23958 ;; Defined at:
 23959 ;;		line 160 in file "mcc_generated_files/tmr0.c"
 23960 ;; Parameters:    Size  Location     Type
 23961 ;;		None
 23962 ;; Auto vars:     Size  Location     Type
 23963 ;;		None
 23964 ;; Return value:  Size  Location     Type
 23965 ;;                  1    wreg      void 
 23966 ;; Registers used:
 23967 ;;		None
 23968 ;; Tracked objects:
 23969 ;;		On entry : 0/0
 23970 ;;		On exit  : 0/0
 23971 ;;		Unchanged: 0/0
 23972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23973 ;;      Params:         0       0       0       0       0       0       0
 23974 ;;      Locals:         0       0       0       0       0       0       0
 23975 ;;      Temps:          0       0       0       0       0       0       0
 23976 ;;      Totals:         0       0       0       0       0       0       0
 23977 ;;Total ram usage:        0 bytes
 23978 ;; Hardware stack levels used: 1
 23979 ;; This function calls:
 23980 ;;		Nothing
 23981 ;; This function is called by:
 23982 ;;		_TMR0_Initialize
 23983 ;;		_TMR0_ISR
 23984 ;; This function uses a non-reentrant model
 23985 ;;
 23986                           
 23987                           	psect	text153
 23988  007806                     __ptext153:
 23989                           	callstack 0
 23990  007806                     _TMR0_DefaultInterruptHandler:
 23991                           	callstack 15
 23992  007806  0012               	return		;funcret
 23993  007808                     __end_of_TMR0_DefaultInterruptHandler:
 23994                           	callstack 0
 23995                           
 23996 ;; *************** function _EUSART1_Receive_ISR *****************
 23997 ;; Defined at:
 23998 ;;		line 175 in file "mcc_generated_files/eusart1.c"
 23999 ;; Parameters:    Size  Location     Type
 24000 ;;		None
 24001 ;; Auto vars:     Size  Location     Type
 24002 ;;		None
 24003 ;; Return value:  Size  Location     Type
 24004 ;;                  1    wreg      void 
 24005 ;; Registers used:
 24006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 24007 ;; Tracked objects:
 24008 ;;		On entry : 0/0
 24009 ;;		On exit  : 0/0
 24010 ;;		Unchanged: 0/0
 24011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 24012 ;;      Params:         0       0       0       0       0       0       0
 24013 ;;      Locals:         0       0       0       0       0       0       0
 24014 ;;      Temps:          0       0       0       0       0       0       0
 24015 ;;      Totals:         0       0       0       0       0       0       0
 24016 ;;Total ram usage:        0 bytes
 24017 ;; Hardware stack levels used: 1
 24018 ;; Hardware stack levels required when called: 2
 24019 ;; This function calls:
 24020 ;;		Absolute function
 24021 ;;		_DirectNet_Send
 24022 ;;		_EUSART1_DefaultErrorHandler
 24023 ;;		_EUSART1_DefaultFramingErrorHandler
 24024 ;;		_EUSART1_DefaultOverrunErrorHandler
 24025 ;;		_EUSART1_RxDataHandler
 24026 ;; This function is called by:
 24027 ;;		_EUSART1_Initialize
 24028 ;;		_INTERRUPT_InterruptManager
 24029 ;; This function uses a non-reentrant model
 24030 ;;
 24031                           
 24032                           	psect	text154
 24033  005D2A                     __ptext154:
 24034                           	callstack 0
 24035  005D2A                     _EUSART1_Receive_ISR:
 24036                           	callstack 14
 24037  005D2A                     
 24038                           ;mcc_generated_files/eusart1.c: 178:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 24039  005D2A  0E42               	movlw	low _eusart1RxStatusBuffer
 24040  005D2C  2455               	addwf	_eusart1RxHead^0,w,c	;volatile
 24041  005D2E  6ED9               	movwf	fsr2l,c
 24042  005D30  6ADA               	clrf	fsr2h,c
 24043  005D32  0E01               	movlw	high _eusart1RxStatusBuffer
 24044  005D34  22DA               	addwfc	fsr2h,f,c
 24045  005D36  0E00               	movlw	0
 24046  005D38  6EDF               	movwf	indf2,c
 24047  005D3A                     
 24048                           ;mcc_generated_files/eusart1.c: 180:     if(RCSTA1bits.FERR){
 24049  005D3A  A4AB               	btfss	171,2,c	;volatile
 24050  005D3C  EFA2  F02E         	goto	i2u969_41
 24051  005D40  EFA4  F02E         	goto	i2u969_40
 24052  005D44                     i2u969_41:
 24053  005D44  EFB9  F02E         	goto	i2l10310
 24054  005D48                     i2u969_40:
 24055  005D48                     
 24056                           ;mcc_generated_files/eusart1.c: 181:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 24057  005D48  0E42               	movlw	low _eusart1RxStatusBuffer
 24058  005D4A  2455               	addwf	_eusart1RxHead^0,w,c	;volatile
 24059  005D4C  6ED9               	movwf	fsr2l,c
 24060  005D4E  6ADA               	clrf	fsr2h,c
 24061  005D50  0E01               	movlw	high _eusart1RxStatusBuffer
 24062  005D52  22DA               	addwfc	fsr2h,f,c
 24063  005D54  0101               	movlb	1	; () banked
 24064  005D56  82DF               	bsf	indf2,1,c
 24065  005D58                     
 24066                           ; BSR set to: 1
 24067                           ;mcc_generated_files/eusart1.c: 182:         EUSART1_FramingErrorHandler();
 24068  005D58  D802               	call	i2u970_48
 24069  005D5A  EFB9  F02E         	goto	i2u970_49
 24070  005D5E                     i2u970_48:
 24071  005D5E  0005               	push	
 24072  005D60  6EFA               	movwf	pclath,c
 24073  005D62  5195               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 24074  005D64  6EFD               	movwf	tosl,c
 24075  005D66  5196               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 24076  005D68  6EFE               	movwf	tosh,c
 24077  005D6A  50F8               	movf	tblptru,w,c
 24078  005D6C  6EFF               	movwf	tosu,c
 24079  005D6E  50FA               	movf	pclath,w,c
 24080  005D70  0012               	return		;indir
 24081  005D72                     i2u970_49:
 24082  005D72                     i2l10310:
 24083                           
 24084                           ;mcc_generated_files/eusart1.c: 185:     if(RCSTA1bits.OERR){
 24085  005D72  A2AB               	btfss	171,1,c	;volatile
 24086  005D74  EFBE  F02E         	goto	i2u971_41
 24087  005D78  EFC0  F02E         	goto	i2u971_40
 24088  005D7C                     i2u971_41:
 24089  005D7C  EFD5  F02E         	goto	i2l10316
 24090  005D80                     i2u971_40:
 24091  005D80                     
 24092                           ;mcc_generated_files/eusart1.c: 186:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 24093  005D80  0E42               	movlw	low _eusart1RxStatusBuffer
 24094  005D82  2455               	addwf	_eusart1RxHead^0,w,c	;volatile
 24095  005D84  6ED9               	movwf	fsr2l,c
 24096  005D86  6ADA               	clrf	fsr2h,c
 24097  005D88  0E01               	movlw	high _eusart1RxStatusBuffer
 24098  005D8A  22DA               	addwfc	fsr2h,f,c
 24099  005D8C  0101               	movlb	1	; () banked
 24100  005D8E  84DF               	bsf	indf2,2,c
 24101  005D90                     
 24102                           ; BSR set to: 1
 24103                           ;mcc_generated_files/eusart1.c: 187:         EUSART1_OverrunErrorHandler();
 24104  005D90  D802               	call	i2u972_48
 24105  005D92  EFD5  F02E         	goto	i2u972_49
 24106  005D96                     i2u972_48:
 24107  005D96  0005               	push	
 24108  005D98  6EFA               	movwf	pclath,c
 24109  005D9A  5193               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 24110  005D9C  6EFD               	movwf	tosl,c
 24111  005D9E  5194               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 24112  005DA0  6EFE               	movwf	tosh,c
 24113  005DA2  50F8               	movf	tblptru,w,c
 24114  005DA4  6EFF               	movwf	tosu,c
 24115  005DA6  50FA               	movf	pclath,w,c
 24116  005DA8  0012               	return		;indir
 24117  005DAA                     i2u972_49:
 24118  005DAA                     i2l10316:
 24119                           
 24120                           ;mcc_generated_files/eusart1.c: 190:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 24121  005DAA  0E42               	movlw	low _eusart1RxStatusBuffer
 24122  005DAC  2455               	addwf	_eusart1RxHead^0,w,c	;volatile
 24123  005DAE  6ED9               	movwf	fsr2l,c
 24124  005DB0  6ADA               	clrf	fsr2h,c
 24125  005DB2  0E01               	movlw	high _eusart1RxStatusBuffer
 24126  005DB4  22DA               	addwfc	fsr2h,f,c
 24127  005DB6  50DF               	movf	indf2,w,c
 24128  005DB8  B4D8               	btfsc	status,2,c
 24129  005DBA  EFE1  F02E         	goto	i2u973_41
 24130  005DBE  EFE3  F02E         	goto	i2u973_40
 24131  005DC2                     i2u973_41:
 24132  005DC2  EFF3  F02E         	goto	i2l10320
 24133  005DC6                     i2u973_40:
 24134  005DC6                     
 24135                           ;mcc_generated_files/eusart1.c: 191:         EUSART1_ErrorHandler();
 24136  005DC6  D802               	call	i2u974_48
 24137  005DC8  EFF1  F02E         	goto	i2u974_49
 24138  005DCC                     i2u974_48:
 24139  005DCC  0005               	push	
 24140  005DCE  0101               	movlb	1	; () banked
 24141  005DD0  6EFA               	movwf	pclath,c
 24142  005DD2  5191               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 24143  005DD4  6EFD               	movwf	tosl,c
 24144  005DD6  5192               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 24145  005DD8  6EFE               	movwf	tosh,c
 24146  005DDA  50F8               	movf	tblptru,w,c
 24147  005DDC  6EFF               	movwf	tosu,c
 24148  005DDE  50FA               	movf	pclath,w,c
 24149  005DE0  0012               	return		;indir
 24150  005DE2                     i2u974_49:
 24151                           
 24152                           ;mcc_generated_files/eusart1.c: 192:     } else {
 24153  005DE2  EFF5  F02E         	goto	i2l775
 24154  005DE6                     i2l10320:
 24155                           
 24156                           ;mcc_generated_files/eusart1.c: 193:         EUSART1_RxDataHandler();
 24157  005DE6  EC14  F03A         	call	_EUSART1_RxDataHandler	;wreg free
 24158  005DEA                     i2l775:
 24159                           
 24160                           ;mcc_generated_files/eusart1.c: 197:     DirectNet_Send();
 24161  005DEA  EC43  F037         	call	_DirectNet_Send	;wreg free
 24162  005DEE  0012               	return		;funcret
 24163  005DF0                     __end_of_EUSART1_Receive_ISR:
 24164                           	callstack 0
 24165                           
 24166 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 24167 ;; Defined at:
 24168 ;;		line 213 in file "mcc_generated_files/eusart1.c"
 24169 ;; Parameters:    Size  Location     Type
 24170 ;;		None
 24171 ;; Auto vars:     Size  Location     Type
 24172 ;;		None
 24173 ;; Return value:  Size  Location     Type
 24174 ;;                  1    wreg      void 
 24175 ;; Registers used:
 24176 ;;		None
 24177 ;; Tracked objects:
 24178 ;;		On entry : 0/0
 24179 ;;		On exit  : 0/0
 24180 ;;		Unchanged: 0/0
 24181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 24182 ;;      Params:         0       0       0       0       0       0       0
 24183 ;;      Locals:         0       0       0       0       0       0       0
 24184 ;;      Temps:          0       0       0       0       0       0       0
 24185 ;;      Totals:         0       0       0       0       0       0       0
 24186 ;;Total ram usage:        0 bytes
 24187 ;; Hardware stack levels used: 1
 24188 ;; This function calls:
 24189 ;;		Nothing
 24190 ;; This function is called by:
 24191 ;;		_EUSART1_Initialize
 24192 ;;		_EUSART1_Receive_ISR
 24193 ;; This function uses a non-reentrant model
 24194 ;;
 24195                           
 24196                           	psect	text155
 24197  0077BA                     __ptext155:
 24198                           	callstack 0
 24199  0077BA                     _EUSART1_DefaultOverrunErrorHandler:
 24200                           	callstack 15
 24201  0077BA                     
 24202                           ;mcc_generated_files/eusart1.c: 216:     RCSTA1bits.CREN = 0;
 24203  0077BA  98AB               	bcf	171,4,c	;volatile
 24204                           
 24205                           ;mcc_generated_files/eusart1.c: 217:     RCSTA1bits.CREN = 1;
 24206  0077BC  88AB               	bsf	171,4,c	;volatile
 24207  0077BE  0012               	return		;funcret
 24208  0077C0                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 24209                           	callstack 0
 24210                           
 24211 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 24212 ;; Defined at:
 24213 ;;		line 211 in file "mcc_generated_files/eusart1.c"
 24214 ;; Parameters:    Size  Location     Type
 24215 ;;		None
 24216 ;; Auto vars:     Size  Location     Type
 24217 ;;		None
 24218 ;; Return value:  Size  Location     Type
 24219 ;;                  1    wreg      void 
 24220 ;; Registers used:
 24221 ;;		None
 24222 ;; Tracked objects:
 24223 ;;		On entry : 0/0
 24224 ;;		On exit  : 0/0
 24225 ;;		Unchanged: 0/0
 24226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 24227 ;;      Params:         0       0       0       0       0       0       0
 24228 ;;      Locals:         0       0       0       0       0       0       0
 24229 ;;      Temps:          0       0       0       0       0       0       0
 24230 ;;      Totals:         0       0       0       0       0       0       0
 24231 ;;Total ram usage:        0 bytes
 24232 ;; Hardware stack levels used: 1
 24233 ;; This function calls:
 24234 ;;		Nothing
 24235 ;; This function is called by:
 24236 ;;		_EUSART1_Initialize
 24237 ;;		_EUSART1_Receive_ISR
 24238 ;; This function uses a non-reentrant model
 24239 ;;
 24240                           
 24241                           	psect	text156
 24242  007808                     __ptext156:
 24243                           	callstack 0
 24244  007808                     _EUSART1_DefaultFramingErrorHandler:
 24245                           	callstack 15
 24246  007808  0012               	return		;funcret
 24247  00780A                     __end_of_EUSART1_DefaultFramingErrorHandler:
 24248                           	callstack 0
 24249                           
 24250 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 24251 ;; Defined at:
 24252 ;;		line 221 in file "mcc_generated_files/eusart1.c"
 24253 ;; Parameters:    Size  Location     Type
 24254 ;;		None
 24255 ;; Auto vars:     Size  Location     Type
 24256 ;;		None
 24257 ;; Return value:  Size  Location     Type
 24258 ;;                  1    wreg      void 
 24259 ;; Registers used:
 24260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24261 ;; Tracked objects:
 24262 ;;		On entry : 0/0
 24263 ;;		On exit  : 0/0
 24264 ;;		Unchanged: 0/0
 24265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 24266 ;;      Params:         0       0       0       0       0       0       0
 24267 ;;      Locals:         0       0       0       0       0       0       0
 24268 ;;      Temps:          0       0       0       0       0       0       0
 24269 ;;      Totals:         0       0       0       0       0       0       0
 24270 ;;Total ram usage:        0 bytes
 24271 ;; Hardware stack levels used: 1
 24272 ;; Hardware stack levels required when called: 1
 24273 ;; This function calls:
 24274 ;;		_EUSART1_RxDataHandler
 24275 ;; This function is called by:
 24276 ;;		_EUSART1_Initialize
 24277 ;;		_EUSART1_Receive_ISR
 24278 ;; This function uses a non-reentrant model
 24279 ;;
 24280                           
 24281                           	psect	text157
 24282  0077C0                     __ptext157:
 24283                           	callstack 0
 24284  0077C0                     _EUSART1_DefaultErrorHandler:
 24285                           	callstack 14
 24286  0077C0                     
 24287                           ;mcc_generated_files/eusart1.c: 222:     EUSART1_RxDataHandler();
 24288  0077C0  EC14  F03A         	call	_EUSART1_RxDataHandler	;wreg free
 24289  0077C4  0012               	return		;funcret
 24290  0077C6                     __end_of_EUSART1_DefaultErrorHandler:
 24291                           	callstack 0
 24292                           
 24293 ;; *************** function _EUSART1_RxDataHandler *****************
 24294 ;; Defined at:
 24295 ;;		line 201 in file "mcc_generated_files/eusart1.c"
 24296 ;; Parameters:    Size  Location     Type
 24297 ;;		None
 24298 ;; Auto vars:     Size  Location     Type
 24299 ;;		None
 24300 ;; Return value:  Size  Location     Type
 24301 ;;                  1    wreg      void 
 24302 ;; Registers used:
 24303 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24304 ;; Tracked objects:
 24305 ;;		On entry : 0/0
 24306 ;;		On exit  : 0/0
 24307 ;;		Unchanged: 0/0
 24308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 24309 ;;      Params:         0       0       0       0       0       0       0
 24310 ;;      Locals:         0       0       0       0       0       0       0
 24311 ;;      Temps:          0       0       0       0       0       0       0
 24312 ;;      Totals:         0       0       0       0       0       0       0
 24313 ;;Total ram usage:        0 bytes
 24314 ;; Hardware stack levels used: 1
 24315 ;; This function calls:
 24316 ;;		Nothing
 24317 ;; This function is called by:
 24318 ;;		_EUSART1_Receive_ISR
 24319 ;;		_EUSART1_DefaultErrorHandler
 24320 ;; This function uses a non-reentrant model
 24321 ;;
 24322                           
 24323                           	psect	text158
 24324  007428                     __ptext158:
 24325                           	callstack 0
 24326  007428                     _EUSART1_RxDataHandler:
 24327                           	callstack 15
 24328  007428                     
 24329                           ;mcc_generated_files/eusart1.c: 203:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
 24330  007428  0E4A               	movlw	low _eusart1RxBuffer
 24331  00742A  2455               	addwf	_eusart1RxHead^0,w,c	;volatile
 24332  00742C  6ED9               	movwf	fsr2l,c
 24333  00742E  6ADA               	clrf	fsr2h,c
 24334  007430  0E01               	movlw	high _eusart1RxBuffer
 24335  007432  22DA               	addwfc	fsr2h,f,c
 24336  007434  CFAE FFDF          	movff	4014,indf2	;volatile
 24337  007438  2A55               	incf	_eusart1RxHead^0,f,c	;volatile
 24338  00743A                     
 24339                           ;mcc_generated_files/eusart1.c: 204:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 24340  00743A  0E07               	movlw	7
 24341  00743C  6455               	cpfsgt	_eusart1RxHead^0,c	;volatile
 24342  00743E  EF23  F03A         	goto	i2u837_41
 24343  007442  EF25  F03A         	goto	i2u837_40
 24344  007446                     i2u837_41:
 24345  007446  EF27  F03A         	goto	i2l9116
 24346  00744A                     i2u837_40:
 24347  00744A                     
 24348                           ;mcc_generated_files/eusart1.c: 205:     {;mcc_generated_files/eusart1.c: 206:         e
      +                          usart1RxHead = 0;
 24349  00744A  0E00               	movlw	0
 24350  00744C  6E55               	movwf	_eusart1RxHead^0,c	;volatile
 24351  00744E                     i2l9116:
 24352                           
 24353                           ;mcc_generated_files/eusart1.c: 208:     eusart1RxCount++;
 24354  00744E  0100               	movlb	0	; () banked
 24355  007450  2BF9               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 24356  007452                     
 24357                           ; BSR set to: 0
 24358  007452  0012               	return		;funcret
 24359  007454                     __end_of_EUSART1_RxDataHandler:
 24360                           	callstack 0
 24361                           
 24362 ;; *************** function _DirectNet_Send *****************
 24363 ;; Defined at:
 24364 ;;		line 167 in file "Driver_DirectNet.c"
 24365 ;; Parameters:    Size  Location     Type
 24366 ;;		None
 24367 ;; Auto vars:     Size  Location     Type
 24368 ;;  rx              1    4[COMRAM] unsigned char 
 24369 ;; Return value:  Size  Location     Type
 24370 ;;                  1    wreg      void 
 24371 ;; Registers used:
 24372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24373 ;; Tracked objects:
 24374 ;;		On entry : 0/0
 24375 ;;		On exit  : 0/0
 24376 ;;		Unchanged: 0/0
 24377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 24378 ;;      Params:         0       0       0       0       0       0       0
 24379 ;;      Locals:         1       0       0       0       0       0       0
 24380 ;;      Temps:          0       0       0       0       0       0       0
 24381 ;;      Totals:         1       0       0       0       0       0       0
 24382 ;;Total ram usage:        1 bytes
 24383 ;; Hardware stack levels used: 1
 24384 ;; Hardware stack levels required when called: 1
 24385 ;; This function calls:
 24386 ;;		_EUSART1_Read
 24387 ;;		_EUSART1_is_rx_ready
 24388 ;;		i2_SRV_TIMER_GetTick
 24389 ;; This function is called by:
 24390 ;;		_EUSART1_Receive_ISR
 24391 ;; This function uses a non-reentrant model
 24392 ;;
 24393                           
 24394                           	psect	text159
 24395  006E86                     __ptext159:
 24396                           	callstack 0
 24397  006E86                     _DirectNet_Send:
 24398                           	callstack 14
 24399  006E86                     
 24400                           ;Driver_DirectNet.c: 169:     if (EUSART1_is_rx_ready()) {
 24401  006E86  EC0F  F03B         	call	_EUSART1_is_rx_ready	;wreg free
 24402  006E8A  0900               	iorlw	0
 24403  006E8C  B4D8               	btfsc	status,2,c
 24404  006E8E  EF4B  F037         	goto	i2u890_41
 24405  006E92  EF4D  F037         	goto	i2u890_40
 24406  006E96                     i2u890_41:
 24407  006E96  EF68  F037         	goto	i2l1551
 24408  006E9A                     i2u890_40:
 24409  006E9A                     
 24410                           ;Driver_DirectNet.c: 171:         uint8_t rx = EUSART1_Read();
 24411  006E9A  ECC8  F036         	call	_EUSART1_Read	;wreg free
 24412  006E9E  6E05               	movwf	DirectNet_Send@rx^0,c
 24413  006EA0                     
 24414                           ;Driver_DirectNet.c: 172:         recebeu[contRX] = rx;
 24415  006EA0  0E00               	movlw	low _recebeu
 24416  006EA2  0101               	movlb	1	; () banked
 24417  006EA4  2587               	addwf	_contRX& (0+255),w,b
 24418  006EA6  6ED9               	movwf	fsr2l,c
 24419  006EA8  0E02               	movlw	high _recebeu
 24420  006EAA  2188               	addwfc	(_contRX+1)& (0+255),w,b
 24421  006EAC  6EDA               	movwf	fsr2h,c
 24422  006EAE  C005  FFDF         	movff	DirectNet_Send@rx,indf2
 24423  006EB2                     
 24424                           ; BSR set to: 1
 24425                           ;Driver_DirectNet.c: 173:         contRX++;
 24426  006EB2  4B87               	infsnz	_contRX& (0+255),f,b
 24427  006EB4  2B88               	incf	(_contRX+1)& (0+255),f,b
 24428  006EB6                     
 24429                           ; BSR set to: 1
 24430                           ;Driver_DirectNet.c: 174:         tempo = SRV_TIMER_GetTick();
 24431  006EB6  ECC6  F03A         	call	i2_SRV_TIMER_GetTick	;wreg free
 24432  006EBA  C001  F161         	movff	?i2_SRV_TIMER_GetTick,_tempo
 24433  006EBE  C002  F162         	movff	?i2_SRV_TIMER_GetTick+1,_tempo+1
 24434  006EC2  C003  F163         	movff	?i2_SRV_TIMER_GetTick+2,_tempo+2
 24435  006EC6  C004  F164         	movff	?i2_SRV_TIMER_GetTick+3,_tempo+3
 24436  006ECA                     
 24437                           ;Driver_DirectNet.c: 175:         recebeu_Serial = 1;
 24438  006ECA  0E01               	movlw	1
 24439  006ECC  0101               	movlb	1	; () banked
 24440  006ECE  6FA1               	movwf	_recebeu_Serial& (0+255),b
 24441  006ED0                     i2l1551:
 24442  006ED0  0012               	return		;funcret
 24443  006ED2                     __end_of_DirectNet_Send:
 24444                           	callstack 0
 24445                           
 24446 ;; *************** function i2_SRV_TIMER_GetTick *****************
 24447 ;; Defined at:
 24448 ;;		line 31 in file "ServiceTimer.c"
 24449 ;; Parameters:    Size  Location     Type
 24450 ;;		None
 24451 ;; Auto vars:     Size  Location     Type
 24452 ;;		None
 24453 ;; Return value:  Size  Location     Type
 24454 ;;                  4    0[COMRAM] unsigned long 
 24455 ;; Registers used:
 24456 ;;		fsr2l, fsr2h
 24457 ;; Tracked objects:
 24458 ;;		On entry : 0/0
 24459 ;;		On exit  : 0/0
 24460 ;;		Unchanged: 0/0
 24461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 24462 ;;      Params:         4       0       0       0       0       0       0
 24463 ;;      Locals:         0       0       0       0       0       0       0
 24464 ;;      Temps:          0       0       0       0       0       0       0
 24465 ;;      Totals:         4       0       0       0       0       0       0
 24466 ;;Total ram usage:        4 bytes
 24467 ;; Hardware stack levels used: 1
 24468 ;; This function calls:
 24469 ;;		Nothing
 24470 ;; This function is called by:
 24471 ;;		_DirectNet_Send
 24472 ;; This function uses a non-reentrant model
 24473 ;;
 24474                           
 24475                           	psect	text160
 24476  00758C                     __ptext160:
 24477                           	callstack 0
 24478  00758C                     i2_SRV_TIMER_GetTick:
 24479                           	callstack 14
 24480  00758C                     
 24481                           ;ServiceTimer.c: 33:     return *count_aux;
 24482  00758C  C18F  FFD9         	movff	_count_aux,fsr2l
 24483  007590  C190  FFDA         	movff	_count_aux+1,fsr2h
 24484  007594  CFDE F001          	movff	postinc2,?i2_SRV_TIMER_GetTick
 24485  007598  CFDE F002          	movff	postinc2,?i2_SRV_TIMER_GetTick+1
 24486  00759C  CFDE F003          	movff	postinc2,?i2_SRV_TIMER_GetTick+2
 24487  0075A0  CFDE F004          	movff	postinc2,?i2_SRV_TIMER_GetTick+3
 24488  0075A4  0012               	return		;funcret
 24489  0075A6                     __end_ofi2_SRV_TIMER_GetTick:
 24490                           	callstack 0
 24491                           
 24492 ;; *************** function _EUSART1_is_rx_ready *****************
 24493 ;; Defined at:
 24494 ;;		line 128 in file "mcc_generated_files/eusart1.c"
 24495 ;; Parameters:    Size  Location     Type
 24496 ;;		None
 24497 ;; Auto vars:     Size  Location     Type
 24498 ;;		None
 24499 ;; Return value:  Size  Location     Type
 24500 ;;                  1    wreg      _Bool 
 24501 ;; Registers used:
 24502 ;;		wreg, status,2
 24503 ;; Tracked objects:
 24504 ;;		On entry : 0/0
 24505 ;;		On exit  : 0/0
 24506 ;;		Unchanged: 0/0
 24507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 24508 ;;      Params:         0       0       0       0       0       0       0
 24509 ;;      Locals:         0       0       0       0       0       0       0
 24510 ;;      Temps:          0       0       0       0       0       0       0
 24511 ;;      Totals:         0       0       0       0       0       0       0
 24512 ;;Total ram usage:        0 bytes
 24513 ;; Hardware stack levels used: 1
 24514 ;; This function calls:
 24515 ;;		Nothing
 24516 ;; This function is called by:
 24517 ;;		_DirectNet_Send
 24518 ;; This function uses a non-reentrant model
 24519 ;;
 24520                           
 24521                           	psect	text161
 24522  00761E                     __ptext161:
 24523                           	callstack 0
 24524  00761E                     _EUSART1_is_rx_ready:
 24525                           	callstack 14
 24526  00761E                     
 24527                           ;mcc_generated_files/eusart1.c: 130:     return (eusart1RxCount ? 1 : 0);
 24528  00761E  0100               	movlb	0	; () banked
 24529  007620  51F9               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 24530  007622  A4D8               	btfss	status,2,c
 24531  007624  EF16  F03B         	goto	i2u832_41
 24532  007628  EF19  F03B         	goto	i2u832_40
 24533  00762C                     i2u832_41:
 24534  00762C  0E01               	movlw	1
 24535  00762E  EF1A  F03B         	goto	i2u833_40
 24536  007632                     i2u832_40:
 24537  007632  0E00               	movlw	0
 24538  007634                     i2u833_40:
 24539  007634                     
 24540                           ; BSR set to: 0
 24541  007634  0012               	return		;funcret
 24542  007636                     __end_of_EUSART1_is_rx_ready:
 24543                           	callstack 0
 24544                           
 24545 ;; *************** function _EUSART1_Read *****************
 24546 ;; Defined at:
 24547 ;;		line 142 in file "mcc_generated_files/eusart1.c"
 24548 ;; Parameters:    Size  Location     Type
 24549 ;;		None
 24550 ;; Auto vars:     Size  Location     Type
 24551 ;;  readValue       1    0[COMRAM] unsigned char 
 24552 ;; Return value:  Size  Location     Type
 24553 ;;                  1    wreg      unsigned char 
 24554 ;; Registers used:
 24555 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24556 ;; Tracked objects:
 24557 ;;		On entry : 0/0
 24558 ;;		On exit  : 0/0
 24559 ;;		Unchanged: 0/0
 24560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 24561 ;;      Params:         0       0       0       0       0       0       0
 24562 ;;      Locals:         1       0       0       0       0       0       0
 24563 ;;      Temps:          0       0       0       0       0       0       0
 24564 ;;      Totals:         1       0       0       0       0       0       0
 24565 ;;Total ram usage:        1 bytes
 24566 ;; Hardware stack levels used: 1
 24567 ;; This function calls:
 24568 ;;		Nothing
 24569 ;; This function is called by:
 24570 ;;		_DirectNet_Send
 24571 ;; This function uses a non-reentrant model
 24572 ;;
 24573                           
 24574                           	psect	text162
 24575  006D90                     __ptext162:
 24576                           	callstack 0
 24577  006D90                     _EUSART1_Read:
 24578                           	callstack 14
 24579  006D90                     i2l9088:
 24580                           
 24581                           ;mcc_generated_files/eusart1.c: 146:     while(0 == eusart1RxCount)
 24582  006D90  0100               	movlb	0	; () banked
 24583  006D92  51F9               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 24584  006D94  B4D8               	btfsc	status,2,c
 24585  006D96  EFCF  F036         	goto	i2u835_41
 24586  006D9A  EFD1  F036         	goto	i2u835_40
 24587  006D9E                     i2u835_41:
 24588  006D9E  EFC8  F036         	goto	i2l9088
 24589  006DA2                     i2u835_40:
 24590  006DA2                     
 24591                           ; BSR set to: 0
 24592                           ;mcc_generated_files/eusart1.c: 150:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 24593  006DA2  0E42               	movlw	low _eusart1RxStatusBuffer
 24594  006DA4  2454               	addwf	_eusart1RxTail^0,w,c	;volatile
 24595  006DA6  6ED9               	movwf	fsr2l,c
 24596  006DA8  6ADA               	clrf	fsr2h,c
 24597  006DAA  0E01               	movlw	high _eusart1RxStatusBuffer
 24598  006DAC  22DA               	addwfc	fsr2h,f,c
 24599  006DAE  50DF               	movf	indf2,w,c
 24600  006DB0  0101               	movlb	1	; () banked
 24601  006DB2  6FAE               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 24602                           
 24603                           ;mcc_generated_files/eusart1.c: 152:     readValue = eusart1RxBuffer[eusart1RxTail++];
 24604  006DB4  0E4A               	movlw	low _eusart1RxBuffer
 24605  006DB6  2454               	addwf	_eusart1RxTail^0,w,c	;volatile
 24606  006DB8  6ED9               	movwf	fsr2l,c
 24607  006DBA  6ADA               	clrf	fsr2h,c
 24608  006DBC  0E01               	movlw	high _eusart1RxBuffer
 24609  006DBE  22DA               	addwfc	fsr2h,f,c
 24610  006DC0  50DF               	movf	indf2,w,c
 24611  006DC2  6E01               	movwf	EUSART1_Read@readValue^0,c
 24612  006DC4                     
 24613                           ; BSR set to: 1
 24614  006DC4  2A54               	incf	_eusart1RxTail^0,f,c	;volatile
 24615  006DC6                     
 24616                           ; BSR set to: 1
 24617                           ;mcc_generated_files/eusart1.c: 153:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 24618  006DC6  0E07               	movlw	7
 24619  006DC8  6454               	cpfsgt	_eusart1RxTail^0,c	;volatile
 24620  006DCA  EFE9  F036         	goto	i2u836_41
 24621  006DCE  EFEB  F036         	goto	i2u836_40
 24622  006DD2                     i2u836_41:
 24623  006DD2  EFED  F036         	goto	i2l9098
 24624  006DD6                     i2u836_40:
 24625  006DD6                     
 24626                           ; BSR set to: 1
 24627                           ;mcc_generated_files/eusart1.c: 154:     {;mcc_generated_files/eusart1.c: 155:         e
      +                          usart1RxTail = 0;
 24628  006DD6  0E00               	movlw	0
 24629  006DD8  6E54               	movwf	_eusart1RxTail^0,c	;volatile
 24630  006DDA                     i2l9098:
 24631                           
 24632                           ; BSR set to: 1
 24633                           ;mcc_generated_files/eusart1.c: 157:     PIE1bits.RC1IE = 0;
 24634  006DDA  9A9D               	bcf	157,5,c	;volatile
 24635  006DDC                     
 24636                           ; BSR set to: 1
 24637                           ;mcc_generated_files/eusart1.c: 158:     eusart1RxCount--;
 24638  006DDC  0100               	movlb	0	; () banked
 24639  006DDE  07F9               	decf	_eusart1RxCount& (0+255),f,b	;volatile
 24640  006DE0                     
 24641                           ; BSR set to: 0
 24642                           ;mcc_generated_files/eusart1.c: 159:     PIE1bits.RC1IE = 1;
 24643  006DE0  8A9D               	bsf	157,5,c	;volatile
 24644  006DE2                     
 24645                           ; BSR set to: 0
 24646                           ;mcc_generated_files/eusart1.c: 161:     return readValue;
 24647  006DE2  5001               	movf	EUSART1_Read@readValue^0,w,c
 24648  006DE4                     
 24649                           ; BSR set to: 0
 24650  006DE4  0012               	return		;funcret
 24651  006DE6                     __end_of_EUSART1_Read:
 24652                           	callstack 0
 24653                           
 24654                           	psect	text163
 24655  000000                     __ptext163:
 24656                           	callstack 0
 24657  000000                     
 24658                           	psect	rparam
 24659  0000                     
 24660                           	psect	temp
 24661  000056                     btemp:
 24662                           	callstack 0
 24663  000056                     	ds	1
 24664  0000                     int$flags	set	btemp
 24665  0000                     wtemp8	set	btemp+1
 24666  0000                     ttemp5	set	btemp+1
 24667  0000                     ttemp6	set	btemp+4
 24668  0000                     ttemp7	set	btemp+8
 24669                           
 24670                           	psect	idloc
 24671                           
 24672                           ;Config register IDLOC0 @ 0x200000
 24673                           ;	unspecified, using default values
 24674  200000                     	org	2097152
 24675  200000  FF                 	db	255
 24676                           
 24677                           ;Config register IDLOC1 @ 0x200001
 24678                           ;	unspecified, using default values
 24679  200001                     	org	2097153
 24680  200001  FF                 	db	255
 24681                           
 24682                           ;Config register IDLOC2 @ 0x200002
 24683                           ;	unspecified, using default values
 24684  200002                     	org	2097154
 24685  200002  FF                 	db	255
 24686                           
 24687                           ;Config register IDLOC3 @ 0x200003
 24688                           ;	unspecified, using default values
 24689  200003                     	org	2097155
 24690  200003  FF                 	db	255
 24691                           
 24692                           ;Config register IDLOC4 @ 0x200004
 24693                           ;	unspecified, using default values
 24694  200004                     	org	2097156
 24695  200004  FF                 	db	255
 24696                           
 24697                           ;Config register IDLOC5 @ 0x200005
 24698                           ;	unspecified, using default values
 24699  200005                     	org	2097157
 24700  200005  FF                 	db	255
 24701                           
 24702                           ;Config register IDLOC6 @ 0x200006
 24703                           ;	unspecified, using default values
 24704  200006                     	org	2097158
 24705  200006  FF                 	db	255
 24706                           
 24707                           ;Config register IDLOC7 @ 0x200007
 24708                           ;	unspecified, using default values
 24709  200007                     	org	2097159
 24710  200007  FF                 	db	255
 24711                           
 24712                           	psect	config
 24713                           
 24714                           ; Padding undefined space
 24715  300000                     	org	3145728
 24716  300000  FF                 	db	255
 24717                           
 24718                           ;Config register CONFIG1H @ 0x300001
 24719                           ;	Oscillator Selection bits
 24720                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
 24721                           ;	4X PLL Enable
 24722                           ;	PLLCFG = ON, Oscillator multiplied by 4
 24723                           ;	Primary clock enable bit
 24724                           ;	PRICLKEN = ON, Primary clock enabled
 24725                           ;	Fail-Safe Clock Monitor Enable bit
 24726                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 24727                           ;	Internal/External Oscillator Switchover bit
 24728                           ;	IESO = OFF, Oscillator Switchover mode disabled
 24729  300001                     	org	3145729
 24730  300001  33                 	db	51
 24731                           
 24732                           ;Config register CONFIG2L @ 0x300002
 24733                           ;	Power-up Timer Enable bit
 24734                           ;	PWRTEN = OFF, Power up timer disabled
 24735                           ;	Brown-out Reset Enable bits
 24736                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 24737                           ;	Brown Out Reset Voltage bits
 24738                           ;	BORV = 190, VBOR set to 1.90 V nominal
 24739  300002                     	org	3145730
 24740  300002  1F                 	db	31
 24741                           
 24742                           ;Config register CONFIG2H @ 0x300003
 24743                           ;	Watchdog Timer Enable bits
 24744                           ;	WDTEN = ON, WDT is always enabled. SWDTEN bit has no effect
 24745                           ;	Watchdog Timer Postscale Select bits
 24746                           ;	WDTPS = 512, 1:512
 24747  300003                     	org	3145731
 24748  300003  27                 	db	39
 24749                           
 24750                           ; Padding undefined space
 24751  300004                     	org	3145732
 24752  300004  FF                 	db	255
 24753                           
 24754                           ;Config register CONFIG3H @ 0x300005
 24755                           ;	CCP2 MUX bit
 24756                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 24757                           ;	PORTB A/D Enable bit
 24758                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
 24759                           ;	P3A/CCP3 Mux bit
 24760                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 24761                           ;	HFINTOSC Fast Start-up
 24762                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 24763                           ;	Timer3 Clock input mux bit
 24764                           ;	T3CMX = PORTC0, T3CKI is on RC0
 24765                           ;	ECCP2 B output mux bit
 24766                           ;	P2BMX = PORTB5, P2B is on RB5
 24767                           ;	MCLR Pin Enable bit
 24768                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 24769  300005                     	org	3145733
 24770  300005  BF                 	db	191
 24771                           
 24772                           ;Config register CONFIG4L @ 0x300006
 24773                           ;	Stack Full/Underflow Reset Enable bit
 24774                           ;	STVREN = ON, Stack full/underflow will cause Reset
 24775                           ;	Single-Supply ICSP Enable bit
 24776                           ;	LVP = OFF, Single-Supply ICSP disabled
 24777                           ;	Extended Instruction Set Enable bit
 24778                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 24779                           ;	Background Debug
 24780                           ;	DEBUG = OFF, Disabled
 24781  300006                     	org	3145734
 24782  300006  81                 	db	129
 24783                           
 24784                           ; Padding undefined space
 24785  300007                     	org	3145735
 24786  300007  FF                 	db	255
 24787                           
 24788                           ;Config register CONFIG5L @ 0x300008
 24789                           ;	Code Protection Block 0
 24790                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 24791                           ;	Code Protection Block 1
 24792                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 24793                           ;	Code Protection Block 2
 24794                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 24795                           ;	Code Protection Block 3
 24796                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 24797  300008                     	org	3145736
 24798  300008  0F                 	db	15
 24799                           
 24800                           ;Config register CONFIG5H @ 0x300009
 24801                           ;	Boot Block Code Protection bit
 24802                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 24803                           ;	Data EEPROM Code Protection bit
 24804                           ;	CPD = OFF, Data EEPROM not code-protected
 24805  300009                     	org	3145737
 24806  300009  C0                 	db	192
 24807                           
 24808                           ;Config register CONFIG6L @ 0x30000A
 24809                           ;	Write Protection Block 0
 24810                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 24811                           ;	Write Protection Block 1
 24812                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 24813                           ;	Write Protection Block 2
 24814                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 24815                           ;	Write Protection Block 3
 24816                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 24817  30000A                     	org	3145738
 24818  30000A  0F                 	db	15
 24819                           
 24820                           ;Config register CONFIG6H @ 0x30000B
 24821                           ;	Configuration Register Write Protection bit
 24822                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 24823                           ;	Boot Block Write Protection bit
 24824                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 24825                           ;	Data EEPROM Write Protection bit
 24826                           ;	WRTD = OFF, Data EEPROM not write-protected
 24827  30000B                     	org	3145739
 24828  30000B  E0                 	db	224
 24829                           
 24830                           ;Config register CONFIG7L @ 0x30000C
 24831                           ;	Table Read Protection Block 0
 24832                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 24833                           ;	Table Read Protection Block 1
 24834                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 24835                           ;	Table Read Protection Block 2
 24836                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 24837                           ;	Table Read Protection Block 3
 24838                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 24839  30000C                     	org	3145740
 24840  30000C  0F                 	db	15
 24841                           
 24842                           ;Config register CONFIG7H @ 0x30000D
 24843                           ;	Boot Block Table Read Protection bit
 24844                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 24845  30000D                     	org	3145741
 24846  30000D  40                 	db	64
 24847                           tosu	equ	0xFFF
 24848                           tosh	equ	0xFFE
 24849                           tosl	equ	0xFFD
 24850                           stkptr	equ	0xFFC
 24851                           pclatu	equ	0xFFB
 24852                           pclath	equ	0xFFA
 24853                           pcl	equ	0xFF9
 24854                           tblptru	equ	0xFF8
 24855                           tblptrh	equ	0xFF7
 24856                           tblptrl	equ	0xFF6
 24857                           tablat	equ	0xFF5
 24858                           prodh	equ	0xFF4
 24859                           prodl	equ	0xFF3
 24860                           indf0	equ	0xFEF
 24861                           postinc0	equ	0xFEE
 24862                           postdec0	equ	0xFED
 24863                           preinc0	equ	0xFEC
 24864                           plusw0	equ	0xFEB
 24865                           fsr0h	equ	0xFEA
 24866                           fsr0l	equ	0xFE9
 24867                           wreg	equ	0xFE8
 24868                           indf1	equ	0xFE7
 24869                           postinc1	equ	0xFE6
 24870                           postdec1	equ	0xFE5
 24871                           preinc1	equ	0xFE4
 24872                           plusw1	equ	0xFE3
 24873                           fsr1h	equ	0xFE2
 24874                           fsr1l	equ	0xFE1
 24875                           bsr	equ	0xFE0
 24876                           indf2	equ	0xFDF
 24877                           postinc2	equ	0xFDE
 24878                           postdec2	equ	0xFDD
 24879                           preinc2	equ	0xFDC
 24880                           plusw2	equ	0xFDB
 24881                           fsr2h	equ	0xFDA
 24882                           fsr2l	equ	0xFD9
 24883                           status	equ	0xFD8

Data Sizes:
    Strings     201
    Constant    32
    Data        4
    BSS         810
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     76      85
    BANK0           160    151     157
    BANK1           256     41     255
    BANK2           256      0     255
    BANK3           256      0     230
    BANK4           256      0     100
    BANK5           256      0       0

Pointer List with Targets:

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> SRV_ADT7410_Read@data(COMRAM[2]), 

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> SRV_ADT7410_Read@data(COMRAM[2]), 

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> SRV_ADT7410_Read@data(COMRAM[2]), 

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> SRV_ADT7410_Read@data(COMRAM[2]), 

    I2C1_DO_TX$4211$0	PTR void  size(2) Largest target is 5
		 -> DRV_ADT7410_Read@bufferBlock(COMRAM[4]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C1_DO_RX$4217$0	PTR void  size(2) Largest target is 5
		 -> DRV_ADT7410_Read@bufferBlock(COMRAM[4]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C1_DO_TX_EMPTY$4223$0	PTR void  size(2) Largest target is 5
		 -> DRV_ADT7410_Read@bufferBlock(COMRAM[4]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C1_DO_RX_EMPTY$4229$0	PTR void  size(2) Largest target is 5
		 -> DRV_ADT7410_Read@bufferBlock(COMRAM[4]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    App_HTAD_run$4235$0	PTR struct . size(2) Largest target is 35
		 -> ObjetoHTAD(BANK2[35]), 

    App_HTAD_run$4235	PTR FTN(PTR struct .,)void  size(2) Largest target is 1
		 -> App_HTAD_MenuAjusteErro(), App_HTAD_Home(), 

    I2C1_DO_TX_EMPTY$4228	PTR void  size(2) Largest target is 5
		 -> DRV_ADT7410_Read@bufferBlock(COMRAM[4]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C1_DO_TX_EMPTY$4223	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621(), I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), 

    I2C1_DO_RX$4222	PTR void  size(2) Largest target is 5
		 -> DRV_ADT7410_Read@bufferBlock(COMRAM[4]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C1_DO_RX$4217	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621(), I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), 

    I2C1_DO_TX$4216	PTR void  size(2) Largest target is 5
		 -> DRV_ADT7410_Read@bufferBlock(COMRAM[4]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C1_DO_TX$4211	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621(), I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), 

    I2C1_MasterFsm$4210	const PTR FTN()enum E6125 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> DRV_ADT7410_Read@bufferBlock(COMRAM[4]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> DRV_ADT7410_Read@bufferBlock(COMRAM[4]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> DRV_ADT7410_Read@bufferBlock(COMRAM[4]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> DRV_ADT7410_Read@bufferBlock(COMRAM[4]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    mchStateHTAD$0	PTR struct . size(2) Largest target is 35
		 -> ObjetoHTAD(BANK2[35]), 

    S947$0$0	PTR void  size(2) Largest target is 5
		 -> DRV_ADT7410_Read@bufferBlock(COMRAM[4]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 21
		 -> App_HTAD_MenuAjusteErro@txt(BANK1[20]), App_HTAD_Home@txt(BANK1[21]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_8(CODE[21]), STR_7(CODE[25]), STR_6(CODE[25]), STR_5(CODE[25]), 
		 -> STR_4(CODE[23]), STR_3(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_8(CODE[21]), STR_7(CODE[25]), STR_6(CODE[25]), STR_5(CODE[25]), 
		 -> STR_4(CODE[23]), STR_3(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 25
		 -> STR_8(CODE[21]), STR_7(CODE[25]), STR_6(CODE[25]), STR_5(CODE[25]), 
		 -> STR_4(CODE[23]), STR_3(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_8(CODE[21]), STR_7(CODE[25]), STR_6(CODE[25]), STR_5(CODE[25]), 
		 -> STR_4(CODE[23]), STR_3(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 21
		 -> App_HTAD_MenuAjusteErro@txt(BANK1[20]), App_HTAD_Home@txt(BANK1[21]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S3492_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 21
		 -> App_HTAD_MenuAjusteErro@txt(BANK1[20]), App_HTAD_Home@txt(BANK1[21]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 21
		 -> App_HTAD_MenuAjusteErro@txt(BANK1[20]), App_HTAD_Home@txt(BANK1[21]), 

    DirectNet_Run@objetoHTAD_DirectNet	PTR struct . size(2) Largest target is 35
		 -> ObjetoHTAD(BANK2[35]), 

    convertFloatToBuffer@buffer	PTR unsigned char  size(2) Largest target is 5
		 -> bufferDadosFAHRENHEIT(BANK1[5]), bufferDadosCELSIUS(BANK1[4]), 

    calculateLRC@data	PTR unsigned char  size(2) Largest target is 30
		 -> bufferLcr(BANK2[30]), bufferDadosDDDTCO2(BANK2[30]), 

    SRV_Display_Write@data	PTR unsigned char  size(2) Largest target is 21
		 -> App_HTAD_MenuAjusteErro@txt(BANK1[20]), App_HTAD_Home@txt(BANK1[21]), NULL(NULL[0]), 

    telaDisplay	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    SRV_ADT7410_ReadMeanSensor@value	PTR float  size(2) Largest target is 8
		 -> Sensor3(BANK1[8]), Sensor2(BANK1[8]), Sensor1(BANK1[8]), 

    DRV_ADT7410_Read@data	PTR unsigned char  size(2) Largest target is 2
		 -> SRV_ADT7410_Read@data(COMRAM[2]), 

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 2
		 -> SRV_ADT7410_Read@data(COMRAM[2]), 

    rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621@ptr.data	PTR unsigned char  size(2) Largest target is 2
		 -> SRV_ADT7410_Read@data(COMRAM[2]), 

    rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621@ptr	PTR void  size(2) Largest target is 5
		 -> DRV_ADT7410_Read@bufferBlock(COMRAM[4]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    count_aux	PTR volatile unsigned long  size(2) Largest target is 4
		 -> tickRate(BANK1[4]), NULL(NULL[0]), 

    DRV_LCD_WriteString@data	PTR unsigned char  size(2) Largest target is 21
		 -> App_HTAD_MenuAjusteErro@txt(BANK1[20]), App_HTAD_Home@txt(BANK1[21]), NULL(NULL[0]), 

    App_HTAD_MenuAjusteErro@objetoHTAD	PTR struct . size(2) Largest target is 35
		 -> ObjetoHTAD(BANK2[35]), 

    moveCursor@CursorLinha	PTR unsigned char  size(2) Largest target is 1
		 -> App_HTAD_MenuAjusteErro@CursorLinha(BANK0[1]), 

    moveCursor@CursorColuna	PTR unsigned char  size(2) Largest target is 1
		 -> App_HTAD_MenuAjusteErro@CursorColuna(BANK0[1]), 

    decrementDigit@valorSensor	PTR unsigned char  size(2) Largest target is 35
		 -> ObjetoHTAD.erroSensorS3(BANK2[2]), ObjetoHTAD.erroSensorS2(BANK2[2]), ObjetoHTAD.erroSensorS1(BANK2[2]), ObjetoHTAD(BANK2[35]), 

    incrementDigit@valorSensor	PTR unsigned char  size(2) Largest target is 35
		 -> ObjetoHTAD.erroSensorS3(BANK2[2]), ObjetoHTAD.erroSensorS2(BANK2[2]), ObjetoHTAD.erroSensorS1(BANK2[2]), ObjetoHTAD(BANK2[35]), 

    App_HTAD_Home@objetoHTAD	PTR struct . size(2) Largest target is 35
		 -> ObjetoHTAD(BANK2[35]), 

    mchStateHTAD	PTR FTN(PTR struct .,)void [15] size(2) Largest target is 1
		 -> App_HTAD_MenuAjusteErro(), App_HTAD_Home(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    I2C1_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> DRV_ADT7410_Read@bufferBlock(COMRAM[4]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621(), Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> DRV_ADT7410_Read@bufferBlock(COMRAM[4]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621(), Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_SetBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> SRV_ADT7410_Read@data(COMRAM[2]), DRV_ADT7410_Read@reg(COMRAM[1]), DRV_ADT7410_Read@bufferBlock(COMRAM[4]), I2C1_ReadDataBlock@reg(COMRAM[1]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), 
		 -> I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    S947$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> SRV_ADT7410_Read@data(COMRAM[2]), DRV_ADT7410_Read@reg(COMRAM[1]), DRV_ADT7410_Read@bufferBlock(COMRAM[4]), I2C1_ReadDataBlock@reg(COMRAM[1]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), 
		 -> I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> SRV_ADT7410_Read@data(COMRAM[2]), DRV_ADT7410_Read@reg(COMRAM[1]), DRV_ADT7410_Read@bufferBlock(COMRAM[4]), I2C1_ReadDataBlock@reg(COMRAM[1]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), 
		 -> I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    S947$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> DRV_ADT7410_Read@bufferBlock(COMRAM[4]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C1_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> DRV_ADT7410_Read@bufferBlock(COMRAM[4]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    S947$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621(), I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621(), I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E6125[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> SRV_TIMER_TickInterrupt(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> SRV_TIMER_TickInterrupt(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 2
		 -> SRV_ADT7410_Read@data(COMRAM[2]), 

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> DRV_ADT7410_Read@bufferBlock(COMRAM[4]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> DRV_ADT7410_Read@bufferBlock(COMRAM[4]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> DRV_ADT7410_Read@bufferBlock(COMRAM[4]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> DRV_ADT7410_Read@bufferBlock(COMRAM[4]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> DRV_ADT7410_Read@bufferBlock(COMRAM[4]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    S96$data	PTR unsigned char  size(2) Largest target is 2
		 -> SRV_ADT7410_Read@data(COMRAM[2]), 

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 2
		 -> SRV_ADT7410_Read@data(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _SYSTEM_Initialize->_TMR0_Initialize
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _App_HTAD_run->_SRV_ADT7410_Run
    _SRV_ADT7410_Run->_SRV_ADT7410_ReadMeanSensor
    _Driver_Analog_Run->_SRV_TIMER_GetTick
    _DirectNet_Run->_Driver_Analog_GetValueAN0
    _DirectNet_Run->_Driver_Analog_GetValueAN1
    _DirectNet_Run->_Driver_Analog_GetValueAN3
    _convertFloatToBuffer->___fltol
    _DirectNet_enviaDadosSensores->_calculateLRC
    _DirectNet_enviaDadosDDDTCO2->_calculateLRC
    _moveCursor->___awmod
    _incrementDigit->___awmod
    _gravarDadosNaEEPROM->_DATAEE_WriteByte
    _decrementDigit->___awmod
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___fltol->___flmul
    ___flge->___flmul
    ___awmod->___awdiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _atoi->_isspace
    _readKeypad->_SRV_TIMER_GetTick
    _SRV_Display_Write->_DRV_LCD_SetCursor
    _DRV_LCD_WriteString->_DRV_LCD_WriteChar
    _DRV_LCD_WriteChar->_DRV_LCD_Data
    _Driver_Analog_GetValueAN3->_mapValue
    _Driver_Analog_GetValueAN1->_mapValue
    _Driver_Analog_GetValueAN0->_mapValue
    _mapValue->___lldiv
    _App_HTAD_init->_SRV_ADT7410_Init
    _lerDadosDaEEPROM->_DATAEE_WriteByte
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _SRV_TIMER_Init->_TMR0_SetInterruptHandler
    _SRV_Display_Init->_SRV_Display_SetCursor
    _SRV_Display_SetCursor->_DRV_LCD_SetCursor
    _DRV_LCD_SetCursor->_DRV_LCD_Cmd
    _SRV_Display_Clear->_DRV_LCD_Clear
    _DRV_LCD_Clear->_DRV_LCD_Cmd
    _DRV_LCD_Init->_DRV_LCD_Cmd
    _DRV_LCD_Cmd->_DRV_LCD_Data
    _SRV_ADT7410_Init->_SRV_ADT7410_ReadMeanSensor
    _SRV_ADT7410_ReadMeanSensor->___fldiv
    ___lldiv->___lmul
    ___flsub->___fladd
    ___fladd->___flmul
    ___fldiv->___flsub
    _SRV_ADT7410_Read->_DRV_ADT7410_Read
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _EUSART1_Receive_ISR->_DirectNet_Send
    _DirectNet_Send->i2_SRV_TIMER_GetTick

Critical Paths under _main in BANK0

    _App_HTAD_run->_App_HTAD_Home
    _App_HTAD_run->_App_HTAD_MenuAjusteErro
    _SRV_ADT7410_Run->_SRV_ADT7410_ReadMeanSensor
    _App_HTAD_MenuAjusteErro->_sprintf
    _App_HTAD_Home->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    _SRV_ADT7410_Init->_SRV_ADT7410_ReadMeanSensor
    _SRV_ADT7410_ReadMeanSensor->___fldiv

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _App_HTAD_run->_App_HTAD_Home
    _App_HTAD_MenuAjusteErro->_sprintf
    _App_HTAD_Home->_sprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  640717
                      _App_HTAD_init
                       _App_HTAD_run
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     644
                     _ADC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     444
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     111
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     111
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     111
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     111
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _App_HTAD_run                                         0     0      0  433334
                      _App_HTAD_Home *
            _App_HTAD_MenuAjusteErro *
                      _DirectNet_Run
                  _Driver_Analog_Run
                    _SRV_ADT7410_Run
 ---------------------------------------------------------------------------------
 (2) _SRV_ADT7410_Run                                      4     4      0  202685
                                             72 COMRAM     4     4      0
                    _SRV_ADT7410_Off
                     _SRV_ADT7410_On
         _SRV_ADT7410_ReadMeanSensor
                  _SRV_TIMER_GetTick
 ---------------------------------------------------------------------------------
 (3) _SRV_ADT7410_On                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SRV_ADT7410_Off                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Driver_Analog_Run                                    8     8      0      45
                                             13 COMRAM     8     8      0
                  _SRV_TIMER_GetTick
 ---------------------------------------------------------------------------------
 (2) _DirectNet_Run                                       16    14      2   41829
                                             59 COMRAM    16    14      2
        _DirectNet_enviaDadosDDDTCO2
       _DirectNet_enviaDadosSensores
          _Driver_Analog_GetValueAN0
          _Driver_Analog_GetValueAN1
          _Driver_Analog_GetValueAN3
                      _EUSART1_Write
                 _EUSART1_is_tx_done
         _SRV_ADT7410_GetTemperature
                  _SRV_TIMER_GetTick
                            ___flmul
                            ___fltol
               _convertFloatToBuffer
 ---------------------------------------------------------------------------------
 (3) _convertFloatToBuffer                                13     6      7   14165
                                             44 COMRAM    13     6      7
                            ___awdiv
                            ___awmod
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DirectNet_enviaDadosSensores                         3     3      0     583
                                             14 COMRAM     3     3      0
                      _EUSART1_Write
                       _calculateLRC
 ---------------------------------------------------------------------------------
 (3) _DirectNet_enviaDadosDDDTCO2                          3     3      0     583
                                             14 COMRAM     3     3      0
                      _EUSART1_Write
                       _calculateLRC
 ---------------------------------------------------------------------------------
 (4) _calculateLRC                                         5     2      3     470
                                              9 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      22
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _App_HTAD_MenuAjusteErro                             27    25      2   96851
                                            149 BANK0      2     0      2
                                              8 BANK1     25    25      0
                  _DRV_LCD_SetCursor
                  _SRV_Display_Write
                  _SRV_TIMER_GetTick
                     _decrementDigit
                _gravarDadosNaEEPROM
                     _incrementDigit
                   _lerDadosDaEEPROM
                         _moveCursor
                         _readKeypad
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _moveCursor                                           5     1      4    4237
                                             23 COMRAM     5     1      4
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) _incrementDigit                                       9     5      4    8017
                                             23 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) _gravarDadosNaEEPROM                                  1     1      0     829
                                             12 COMRAM     1     1      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _decrementDigit                                       9     5      4    8017
                                             23 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _App_HTAD_Home                                       35    33      2   91924
                                            149 BANK0      2     0      2
                                              8 BANK1     33    33      0
          _Driver_Analog_GetValueAN0
          _Driver_Analog_GetValueAN1
          _Driver_Analog_GetValueAN3
         _SRV_ADT7410_GetTemperature
                  _SRV_Display_Write
                  _SRV_TIMER_GetTick
                         _readKeypad
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             22    10     12   68326
                                            137 BANK0     12     0     12
                                              0 BANK1      8     8      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   66320
                                            129 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           50    44      6   65673
                                             95 BANK0     34    28      6
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     637
                                              9 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   43156
                                             27 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1296
                                             15 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     635
                                              9 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4    1177
                                              9 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     697
                                             70 COMRAM     6     6      0
                                             13 BANK0     14    10      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     403
                                              9 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4    1043
                                             34 COMRAM    10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     169
                                              9 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1098
                                             34 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     882
                                              9 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    3719
                                             17 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    2073
                                              9 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    8301
                                             36 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    5937
                                             25 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     234
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    2329
                                             18 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     197
                                             27 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     641
                                              9 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     653
                                              9 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 8     5      3    2275
                                             18 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1773
                                              9 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    4619
                                             16 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     287
                                              9 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     427
                                              9 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    3224
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _readKeypad                                           9     9      0     244
                                             13 COMRAM     9     9      0
                  _SRV_TIMER_GetTick
 ---------------------------------------------------------------------------------
 (3) _SRV_TIMER_GetTick                                    4     0      4       0
                                              9 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _SRV_Display_Write                                    4     1      3    3943
                                             18 COMRAM     4     1      3
                  _DRV_LCD_SetCursor
                _DRV_LCD_WriteString
 ---------------------------------------------------------------------------------
 (4) _DRV_LCD_WriteString                                  4     2      2     357
                                             13 COMRAM     4     2      2
                  _DRV_LCD_WriteChar
 ---------------------------------------------------------------------------------
 (5) _DRV_LCD_WriteChar                                    3     3      0     178
                                             10 COMRAM     3     3      0
                       _DRV_LCD_Data
 ---------------------------------------------------------------------------------
 (3) _SRV_ADT7410_GetTemperature                           5     1      4     933
                                              9 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _Driver_Analog_GetValueAN3                           11     9      2    5763
                                             48 COMRAM    11     9      2
                            ___lldiv
                           _mapValue
 ---------------------------------------------------------------------------------
 (3) _Driver_Analog_GetValueAN1                           11     9      2    5763
                                             48 COMRAM    11     9      2
                            ___lldiv
                           _mapValue
 ---------------------------------------------------------------------------------
 (3) _Driver_Analog_GetValueAN0                           11     9      2    5763
                                             48 COMRAM    11     9      2
                            ___lldiv
                           _mapValue
 ---------------------------------------------------------------------------------
 (4) _mapValue                                            14     4     10    3896
                                             34 COMRAM    14     4     10
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     422
                                              9 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _App_HTAD_init                                        0     0      0  206739
                      _DRV_LCD_Clear
                     _DirectNet_Init
                 _Driver_Analog_Init
                   _SRV_ADT7410_Init
         _SRV_ADT7410_SetErrorSensor
                   _SRV_Display_Init
                     _SRV_TIMER_Init
                    _TMR0_Initialize
                   _lerDadosDaEEPROM
 ---------------------------------------------------------------------------------
 (3) _lerDadosDaEEPROM                                     3     3      0     919
                                             12 COMRAM     3     3      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (4) _DATAEE_WriteByte                                     3     2      1     690
                                              9 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      1     1      0      22
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     200
                                             11 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _SRV_TIMER_Init                                       0     0      0     200
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     200
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SRV_Display_Init                                     0     0      0    1825
                       _DRV_LCD_Init
                  _SRV_Display_Clear
              _SRV_Display_SetCursor
 ---------------------------------------------------------------------------------
 (3) _SRV_Display_SetCursor                                2     1      1    1517
                                             18 COMRAM     2     1      1
                  _DRV_LCD_SetCursor
 ---------------------------------------------------------------------------------
 (4) _DRV_LCD_SetCursor                                    6     4      2    1384
                                             12 COMRAM     6     4      2
                        _DRV_LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _SRV_Display_Clear                                    0     0      0     110
                      _DRV_LCD_Clear
 ---------------------------------------------------------------------------------
 (4) _DRV_LCD_Clear                                        1     1      0     110
                                             12 COMRAM     1     1      0
                        _DRV_LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _DRV_LCD_Init                                         2     2      0     198
                                             12 COMRAM     2     2      0
                        _DRV_LCD_Cmd
                       _DRV_LCD_Data
 ---------------------------------------------------------------------------------
 (5) _DRV_LCD_Cmd                                          2     2      0     110
                                             10 COMRAM     2     2      0
                       _DRV_LCD_Data
 ---------------------------------------------------------------------------------
 (6) _DRV_LCD_Data                                         1     1      0      88
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SRV_ADT7410_SetErrorSensor                           3     1      2     732
                                              9 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _SRV_ADT7410_Init                                     2     2      0  202753
                                             72 COMRAM     2     2      0
         _SRV_ADT7410_ReadMeanSensor
 ---------------------------------------------------------------------------------
 (3) _SRV_ADT7410_ReadMeanSensor                          19    16      3  202685
                                             70 COMRAM     2     2      0
                                             13 BANK0     17    14      3
                   _SRV_ADT7410_Read
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___lldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1412
                                              9 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    1697
                                             21 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    6047
                                             50 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    4774
                                             34 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    5229
                                              9 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    3515
                                             58 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _SRV_ADT7410_Read                                     7     5      2  176147
                                             42 COMRAM     7     5      2
                   _DRV_ADT7410_Read
          _SRV_ADT7410_multiplex_off
           _SRV_ADT7410_multiplex_on
 ---------------------------------------------------------------------------------
 (5) _SRV_ADT7410_multiplex_on                             3     3      0      31
                                              9 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _SRV_ADT7410_multiplex_off                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _DRV_ADT7410_Read                                    18    13      5  175906
                                             24 COMRAM    18    13      5
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetAddressNackCallback                          4     0      4    2775
                                             14 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_Open                                            2     2      0      68
                                              9 COMRAM     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterWrite                                     0     0      0  165629
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOperation                                 2     2      0  165629
                                             22 COMRAM     2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (8) _I2C1_Poller                                          0     0      0  165561
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterFsm                                       0     0      0  165561
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX_EMPTY                                    2     2      0   41367
                                             20 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@DriverADT74 *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX                                          2     2      0   41398
                                             20 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@DriverADT74 *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterIsNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_WRITE                              0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_READ                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendTxData                               1     1      0      31
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_ACK                                      0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX                                          2     2      0   41367
                                             20 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@DriverADT74 *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_STOP                                0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_RESTART                             0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RESET                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RCEN                                        0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_ADDRESS_NACK                                2     2      0   41367
                                             20 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@DriverADT74 *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler                               2     0      2    6820
                                             18 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler                               2     0      2    6820
                                             18 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621      2     0      2    7236
                                             18 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler                             2     0      2    6851
                                             18 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler                               2     0      2    6820
                                             18 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler                               2     0      2    6820
                                             18 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetDataCompleteCallback                         4     0      4    3815
                                             14 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (7) _I2C1_SetCallback                                     5     1      4    1257
                                              9 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetBuffer                                       4     0      4    2974
                                              9 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnStop                             2     0      2       0
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnReset                            2     0      2       0
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_Close                                           1     1      0      37
                                              9 COMRAM     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Driver_Analog_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DirectNet_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          4     4      0      47
                                              5 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
            _SRV_TIMER_TickInterrupt *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _SRV_TIMER_TickInterrupt                             0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Receive_ISR                                 0     0      0      47
                   Absolute function *
                     _DirectNet_Send
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DirectNet_Send                                      1     1      0      47
                                              4 COMRAM     1     1      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                i2_SRV_TIMER_GetTick
 ---------------------------------------------------------------------------------
 (17) i2_SRV_TIMER_GetTick                                 4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (17) _EUSART1_is_rx_ready                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_Read                                        1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _App_HTAD_init
     _DRV_LCD_Clear
       _DRV_LCD_Cmd
         _DRV_LCD_Data
     _DirectNet_Init
     _Driver_Analog_Init
     _SRV_ADT7410_Init
       _SRV_ADT7410_ReadMeanSensor
         _SRV_ADT7410_Read
           _DRV_ADT7410_Read
             _I2C1_Close
               _I2C1_MasterClearIrq
               _I2C1_MasterClose
               _I2C1_MasterDisableIrq
             _I2C1_MasterWrite
               _I2C1_MasterOperation
                 _I2C1_MasterStart
                 _I2C1_Poller
                   _I2C1_MasterFsm
                     _I2C1_DO_ADDRESS_NACK *
                       Absolute function(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART *
                         _I2C1_MasterEnableRestart
                       _I2C1_DO_SEND_STOP *
                         _I2C1_MasterStop
                       _rd1RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                           _I2C1_SetCallback
                       _rd2RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rdBlkRegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr1RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr2RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                     _I2C1_DO_IDLE *
                     _I2C1_DO_RCEN *
                       _I2C1_MasterStartRx
                     _I2C1_DO_RESET *
                     _I2C1_DO_RX *
                       Absolute function(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_RX_NACK_RESTART *
                         _I2C1_MasterSendNack
                       _I2C1_DO_RX_NACK_STOP *
                         _I2C1_MasterSendNack
                       _I2C1_MasterGetRxData *
                       _I2C1_MasterSendAck *
                       _rd1RegCompleteHandler *
                       _rd2RegCompleteHandler *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621 *
                       _wr1RegCompleteHandler *
                       _wr2RegCompleteHandler *
                     _I2C1_DO_RX_ACK *
                       _I2C1_MasterSendAck
                     _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_DO_RX_NACK_STOP *
                     _I2C1_DO_SEND_ADR_READ *
                       _I2C1_MasterSendTxData
                     _I2C1_DO_SEND_ADR_WRITE *
                       _I2C1_MasterSendTxData
                     _I2C1_DO_SEND_RESTART *
                     _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_MasterEnableRestart
                     _I2C1_DO_SEND_RESTART_WRITE *
                       _I2C1_MasterEnableRestart
                     _I2C1_DO_SEND_STOP *
                     _I2C1_DO_TX *
                       Absolute function(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_DO_SEND_RESTART_WRITE *
                       _I2C1_DO_SEND_STOP *
                       _I2C1_MasterIsNack *
                       _I2C1_MasterSendTxData *
                       _rd1RegCompleteHandler *
                       _rd2RegCompleteHandler *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621 *
                       _wr1RegCompleteHandler *
                       _wr2RegCompleteHandler *
                     _I2C1_DO_TX_EMPTY *
                       Absolute function(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART *
                       _I2C1_DO_SEND_STOP *
                       _I2C1_MasterSetIrq *
                       _rd1RegCompleteHandler *
                       _rd2RegCompleteHandler *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621 *
                       _wr1RegCompleteHandler *
                       _wr2RegCompleteHandler *
                     _I2C1_MasterClearIrq *
                     _I2C1_MasterIsNack *
                   _I2C1_MasterWaitForEvent
             _I2C1_Open
               _I2C1_MasterClearIrq
               _I2C1_MasterOpen
             _I2C1_SetAddressNackCallback
               _I2C1_SetCallback
             _I2C1_SetBuffer
             _I2C1_SetDataCompleteCallback
           _SRV_ADT7410_multiplex_off
           _SRV_ADT7410_multiplex_on
         ___fladd
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___fladd (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
         ___flsub
         ___lldiv
           ___lmul (ARG)
         ___xxtofl
     _SRV_ADT7410_SetErrorSensor
     _SRV_Display_Init
       _DRV_LCD_Init
         _DRV_LCD_Cmd
         _DRV_LCD_Data
       _SRV_Display_Clear
         _DRV_LCD_Clear
       _SRV_Display_SetCursor
         _DRV_LCD_SetCursor
           _DRV_LCD_Cmd
     _SRV_TIMER_Init
       _TMR0_SetInterruptHandler
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _lerDadosDaEEPROM
       _DATAEE_ReadByte
       _DATAEE_WriteByte
   _App_HTAD_run
     _App_HTAD_Home *
       _Driver_Analog_GetValueAN0
         ___lldiv
         _mapValue
           ___lldiv
           ___lmul
       _Driver_Analog_GetValueAN1
         ___lldiv
         _mapValue
       _Driver_Analog_GetValueAN3
         ___lldiv
         _mapValue
       _SRV_ADT7410_GetTemperature
       _SRV_Display_Write
         _DRV_LCD_SetCursor
         _DRV_LCD_WriteString
           _DRV_LCD_WriteChar
             _DRV_LCD_Data
       _SRV_TIMER_GetTick
       _readKeypad
         _SRV_TIMER_GetTick
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _fputc
                 _putch
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                 _fputs
                   _fputc
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
                 ___awdiv (ARG)
               ___fladd
               ___fldiv
               ___fleq
               ___flge
                 ___flmul (ARG)
               ___flmul
               ___flneg
               ___flsub
               ___fltol
                 ___flmul (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
               _strcpy
               _tolower
                 _isupper
             _fputc
             _isdigit
             _isupper
             _strncmp
             _tolower
     _App_HTAD_MenuAjusteErro *
       _DRV_LCD_SetCursor
       _SRV_Display_Write
       _SRV_TIMER_GetTick
       _decrementDigit
         ___awdiv
         ___awmod
       _gravarDadosNaEEPROM
         _DATAEE_WriteByte
       _incrementDigit
         ___awdiv
         ___awmod
       _lerDadosDaEEPROM
       _moveCursor
         ___awmod
       _readKeypad
       _sprintf
     _DirectNet_Run *
       _DirectNet_enviaDadosDDDTCO2
         _EUSART1_Write
         _calculateLRC
       _DirectNet_enviaDadosSensores
         _EUSART1_Write
         _calculateLRC
       _Driver_Analog_GetValueAN0
       _Driver_Analog_GetValueAN1
       _Driver_Analog_GetValueAN3
       _EUSART1_Write
       _EUSART1_is_tx_done
       _SRV_ADT7410_GetTemperature
       _SRV_TIMER_GetTick
       ___flmul
       ___fltol
       _convertFloatToBuffer
         ___awdiv
         ___awmod
         ___flmul
         ___fltol
     _Driver_Analog_Run *
       _SRV_TIMER_GetTick
     _SRV_ADT7410_Run *
       _SRV_ADT7410_Off
       _SRV_ADT7410_On
       _SRV_ADT7410_ReadMeanSensor
       _SRV_TIMER_GetTick
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _DirectNet_Send *
       _EUSART1_Read
       _EUSART1_is_rx_ready
       i2_SRV_TIMER_GetTick
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _TMR0_ISR *
     Absolute function(Fake) *
     _SRV_TIMER_TickInterrupt *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      64      13       39.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      E6      11       89.8%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      FF       8       99.6%
BITBANK1           100      0       0       5        0.0%
BANK1              100     29      FF       6       99.6%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     97      9D       4       98.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4C      55       1       90.4%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     43A       9        0.0%
DATA                 0      0     43A      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Aug 02 12:06:43 2023

                        SRV_ADT7410_ReadMeanSensor@index 007D  
                         SRV_ADT7410_ReadMeanSensor@temp 0077  
                               ?_App_HTAD_MenuAjusteErro 00F5  
                        SRV_ADT7410_ReadMeanSensor@value 006E  
                                           ___fldiv@aexp 006C  
                                  _habilitaRefrescamento 01AF  
                                           ___fldiv@bexp 006B  
                                           ___fldiv@sign 0064  
                            ??_SRV_ADT7410_multiplex_off 000A  
                                                     l90 73CE  
                                                     l93 73A2  
                                                     l96 7376  
                                                     l99 73FA  
                                           ___awdiv@sign 000F  
                                    ___wmul@multiplicand 000C  
                                        _timer0ReloadVal 0051  
                                                    l102 7126  
                                                    l206 7756  
                                                    l224 77C8  
                                                    l160 7562  
                                                    l129 734A  
                                                    l331 709A  
                                                    l163 7570  
                                                    l332 70A6  
                                                    l157 74DC  
                                                    l502 6AAE  
                                                    l254 764A  
                                                    l511 76E2  
                                                    l335 769C  
                                                    l184 72E8  
                                                    l601 77E4  
                                                    l505 7724  
                                                    l329 708C  
                                                    l514 5CF0  
                                                    l530 6474  
                                                    l531 64E4  
                                                    l604 77E0  
                                                    l620 77D8  
                                                    l508 76F2  
                                                    l453 7426  
                                                    l517 5D28  
                                                    l445 7674  
                                                    l542 7718  
                                                    l614 74BE  
                                                    l623 77A6  
                                                    l472 749C  
                                                    l632 77DC  
                                                    l617 77F8  
                                                    l641 76B0  
                                                    l465 7766  
                                                    l449 66AC  
                                                    l481 7604  
                                                    l801 772E  
                                                    l626 77EC  
                                                    l635 77F0  
                                                    l475 761C  
                                                    l459 6FE6  
                                                    l492 682E  
                                                    l644 77B2  
                                                    l548 67B4  
                                                    l572 778E  
                                                    l581 7776  
                                                    l662 77F4  
                                                    l638 77E8  
                                                    l566 779E  
                                                    l902 6B0E  
                                                    l742 6BCC  
                                                    l647 77B8  
                                                    l575 7786  
                                                    l671 76C4  
                                                    l584 776E  
                                                    l665 77FC  
                                                    l569 7796  
                                                    l593 6976  
                                                    l753 7688  
                                                    l578 777E  
                                                    l498 7554  
                                                    l587 770C  
                                                    l675 76D2  
                                                    l668 77D4  
                                                    l766 764E  
                                                    l935 3750  
                                                    l792 7742  
                                                    l945 5444  
                                                    l961 5B96  
                                                    l769 7660  
                                                    l955 5544  
                                                    l795 7738  
                                                    l892 661E  
                                                    l965 5B96  
                                                    l886 6E84  
                                                    l798 774C  
                                                    l992 2C3A  
                                                    l898 689E  
                                _SRV_TIMER_TickInterrupt 7128  
                             fp__SRV_TIMER_TickInterrupt 0000  
                                  ?_I2C1_MasterOperation 0001  
                                                    _abs 6FE8  
                                  moveCursor@CursorLinha 0018  
                                                    _pad 5EB4  
                   __end_of_DirectNet_enviaDadosSensores 5036  
                  __size_of_DirectNet_enviaDadosSensores 010A  
                           _DirectNet_enviaDadosSensores 4F2C  
                                           ___awmod@sign 0017  
                                                    prod 000FF3  
                                                    tosl 000FFD  
                           __end_of_convertFloatToBuffer 6190  
                                                    wreg 000FE8  
                                 ?_I2C1_MasterSendTxData 0001  
                                             _TXSTA1bits 000FAC  
                      __size_of_I2C1_MasterEnableRestart 0004  
                                   _I2C1_DO_RX_NACK_STOP 7770  
                                           ___flmul@aexp 0017  
                              ?_I2C1_MasterEnableRestart 0001  
                                           ___flmul@bexp 001C  
                               fp__I2C1_DO_SEND_ADR_READ 0000  
                                fp__I2C1_DO_SEND_RESTART 0000  
                                           ___flmul@sign 0016  
                                           ___flmul@temp 0021  
                                           ___flmul@prod 001D  
                                   I2C1_SetBuffer@buffer 000A  
                                 __size_of_DRV_LCD_Clear 0018  
                                           ___fltol@exp1 002C  
                                                   l1110 573A  
                                                   l1104 5714  
                                                   l1113 5916  
                                                   ?_abs 001C  
                                                   l1132 7066  
                                ??_rd2RegCompleteHandler 0015  
                                                   l1310 28A2  
                                                   l1126 727C  
                                                   l1231 6D48  
                                                   l1223 6D3E  
                                                   l1063 6C3A  
                                                   l1039 2E60  
                                                   l1240 6D54  
                                                   l1312 24E8  
                                                   l1072 6C56  
                                                   l1152 75D4  
                                                   l1233 6D4A  
                                                   l1225 6D40  
                                                   l1081 6C7C  
                                                   l1049 4B9C  
                                                   l1242 6D56  
                                                   l1306 22EA  
                                                   l1066 6C40  
                                                   l1402 77AC  
                                                   l1162 758A  
                                                   l1251 775C  
                                                   l1235 6D4C  
                                                   l1227 6D42  
                                                   l1323 28BE  
                                                   l1075 6C66  
                                                   l1244 6D8E  
                                                   l2220 3A0C  
                                                   l1260 4E0C  
                                                   l1084 6C82  
                                                   l1340 5772  
                                                   l1253 775E  
                                                   l2213 3816  
                                                   l1069 6C50  
                                                   l1405 76C2  
                                                   l1341 582A  
                                                   l1238 6D52  
                                                   l2230 3B3C  
                                                   l2222 3A84  
                                                   l1318 26E6  
                                                   l1262 4E0E  
                                                   l1086 6C84  
                                                   l1078 6C6C  
                                                   l1183 5240  
                                                   l1247 7758  
                                                   l2223 3A72  
                                                   l2127 3050  
                                                   l1095 7536  
                                                   l1271 77CC  
                                                   l2144 316A  
                                                   l2136 3320  
                                                   l2128 303E  
                                                   l1256 4E08  
                                                   l2320 5EF8  
                                                   l1336 4E06  
                                                   l1177 70E6  
                                                   l1249 775A  
                                                   l2217 3B7A  
                                                   l2153 323A  
                                                   l2129 3004  
                                                   l1089 751C  
                                                   l1441 690A  
                                                   l1345 57BC  
                                                   l2154 3228  
                                                   l1266 4F2A  
                                                   l1258 4E0A  
                                                   l1098 75EC  
                                                   l1610 6A3A  
                                                   l1274 77CE  
                                                   l1611 6A4A  
                                                   l2323 5F3A  
                                                   l2403 0AD8  
                                                   l1531 731C  
                                                   l1451 4C42  
                                                   l1444 7700  
                                                   l1284 6D36  
                                                   l1276 77D0  
                                                   l2181 3F16  
                                                   l2261 44FA  
                                                   l1349 5806  
                                                   l2341 5AC2  
                                                   l2325 5F74  
                                                   l1541 5034  
                                                   l1269 77CA  
                                                   l2254 4462  
                                                   l1390 7518  
                                                   l2510 21B2  
                                                   l1454 4C88  
                                                   l2183 3D76  
                                                   l1463 6392  
                                                   l2431 0F18  
                                                   l2192 3DBC  
                                                   l2336 5A54  
                                                   l1536 6030  
                                                   l1448 4BFC  
                                                   l1289 6F18  
                                                   l2169 6F5E  
                                                   l1633 6588  
                                                   l2257 45BE  
                                                   l1473 623A  
                                                   l1713 48D6  
                                                   l2194 3E34  
                                                   l2186 3D3A  
                                                   l1626 6578  
                                                   l1458 4CDA  
                                                   l2195 3E22  
                                                   l2611 5C60  
                                                   l2339 5A96  
                                                   l2347 3FB6  
                                                   l1547 618E  
                                                   l1555 138E  
                                                   l2268 4556  
                                                   l1468 62E6  
                                                   l1396 74FA  
                                                   l2532 701E  
                                                   l2516 69D8  
                                                   l2349 3FBE  
                                                   l2517 69E0  
                                                   l2277 6CDE  
                                                   l2622 7802  
                                                   l1726 4A3A  
                                                   l1830 5EB2  
                                                   l2535 7026  
                                                   l2367 41F4  
                                                   l2527 5642  
                                                   l1591 1AFC  
                                                   l1576 19D2  
                                                   l2385 1344  
                                                   l1593 1B0C  
                                                   l2634 72B2  
                                                   l2474 1C00  
                                                   l2563 4746  
                                                   l2619 6FA2  
                                                   l1843 60E0  
                                                   l1596 7804  
                                                   l2572 440A  
                                                   l2628 6C28  
                                                   l2653 6B6E  
                                                   l2582 7244  
                                                   l2590 6E36  
                                                   l2566 474E  
                                                   l2638 59EC  
                                                   l1599 7478  
                                                   l2575 434E  
                                                   l1864 52FE  
                                                   l2648 6B66  
                                                   l1873 720C  
                                                   l1858 643C  
                                                   l2499 226C  
                                                   l2596 71D4  
                                                   l5500 7556  
                                                   l1869 5344  
                                                   ?_pad 001A  
                                                   l1896 513A  
                                                   l5516 7636  
                                                   l9010 731A  
                                                   l9002 72EA  
                                                   l5490 731E  
                                                   l9004 72F6  
                                                   l5492 7348  
                                                   l9006 7306  
                                                   l5494 77C6  
                                                   l8152 6C2C  
                                                   l9120 6E3C  
                                                   l9008 7308  
                                                   l5496 7662  
                                                   l8154 6C42  
                                                   l9202 581A  
                                                   l9130 6E5E  
                                                   l9122 6E46  
                                                   l5498 7672  
                                                   l8156 6C58  
                                                   l9140 6E78  
                                                   l9132 6E60  
                                                   l9124 6E48  
                                                   l8158 6C6E  
                                                   l9310 4B7E  
                                                   l9302 4B54  
                                                   l9142 6E82  
                                                   l9134 6E6A  
                                                   l9126 6E52  
                                                   l9118 6E38  
                                                   l9070 7726  
                                                   l9400 58BE  
                                                   l9160 65D6  
                                                   l9144 658A  
                                                   l9304 4B66  
                                                   l9320 4B9A  
                                                   l9136 6E6C  
                                                   l9128 6E54  
                                                   l9072 773A  
                                                   l9410 58F0  
                                                   l9402 58C4  
                                                   l9170 6604  
                                                   l9162 65E0  
                                                   l9154 65AC  
                                                   l9146 658E  
                                                   l9314 4B84  
                                                   l9138 6E76  
                                                   l9082 7676  
                                                   l9074 7730  
                                                   l8620 751E  
                                                   l9412 5900  
                                                   l9404 58D4  
                                                   l9068 774E  
                                                   l9172 6606  
                                                   l9164 65E2  
                                                   l9156 65B6  
                                                   l9148 65A4  
                                                   l9180 574E  
                                                   l9316 4B94  
                                                   l9308 4B6C  
                                                   l9076 7744  
                                                   l8622 7524  
                                                   l9414 5906  
                                                   l9406 58DA  
                                                   l9174 6612  
                                                   l9166 65EE  
                                                   l9158 65BA  
                                                   l9190 57A8  
                                                   l9182 575E  
                                                   l8630 7254  
                                                   l9270 4A3C  
                                                   l8624 7526  
                                                   l9408 58EA  
                                                   l9520 77A8  
                                                   l9176 661C  
                                                   l9168 65F8  
                                                   l8640 726A  
                                                   l8632 7256  
                                                   l9280 4B08  
                                                   l9272 4A9A  
                                                   l9600 4F4E  
                                                   l8626 7534  
                                                   l9522 76B4  
                                                   l9194 57D0  
                                                   l9186 5786  
                                                   l9178 573E  
                                                   l8642 7270  
                                                   l8634 725E  
                                                   l9266 74E0  
                                                   l9290 4B26  
                                                   l9274 4AAE  
                                                   l9530 5F92  
                                                   l9610 4F62  
                                                   l9602 4F52  
                                                   l9380 5850  
                                                   l9700 72B6  
                                                   l8900 7082  
                                                   l9196 57E2  
                                                   l9188 5798  
                                                   l8644 7272  
                                                   l8636 7260  
                                                   l8628 7248  
                                                   l9268 74EE  
                                                   l9292 4B36  
                                                   l9284 4B0E  
                                                   l9276 4AE2  
                                                   l9540 5FA6  
                                                   l9532 5F96  
                                                   l9524 5F76  
                                                   l9620 4F94  
                                                   l9612 4F66  
                                                   l9604 4F56  
                                                   l9390 5882  
                                                   l9382 5860  
                                                   l9374 582C  
                                                   l9710 72E4  
                                                   l9702 72BE  
                                                   l8910 7692  
                                                   l8902 7086  
                                                   l9198 57F2  
                                                   l8646 727A  
                                                   l8638 7268  
                                                   l9286 4B20  
                                                   l9278 4AF6  
                                                   l9550 5FBA  
                                                   l9542 5FAA  
                                                   l9534 5F9A  
                                                   l9526 5F88  
                                                   l9630 4FAA  
                                                   l9622 4F9A  
                                                   l9614 4F6A  
                                                   l9606 4F5A  
                                                   l9392 5892  
                                                   l9384 5866  
                                                   l9376 5832  
                                                   l9704 72D4  
                                                   l8912 7694  
                                                   l8904 708A  
                                                   l9296 4B3C  
                                                   l9560 5FCE  
                                                   l9552 5FBE  
                                                   l9544 5FAE  
                                                   l9536 5F9E  
                                                   l9528 5F8E  
                                                   l9640 4FBE  
                                                   l9632 4FAE  
                                                   l9624 4F9E  
                                                   l9616 4F76  
                                                   l9608 4F5E  
                                                   l9720 6B86  
                                                   l9712 6B70  
                                                   l9394 5898  
                                                   l9386 5876  
                                                   l9378 584A  
                                                   l9706 72D6  
                                                   l8914 7696  
                                                   l8906 768C  
                                                   l8690 69F2  
                                                   l8930 7572  
                                                   l9298 4B4E  
                                                   l8922 764E  
                                                   l9570 5FE2  
                                                   l9562 5FD2  
                                                   l9554 5FC2  
                                                   l9546 5FB2  
                                                   l9538 5FA2  
                                                   l9650 4FD2  
                                                   l9642 4FC2  
                                                   l9634 4FB2  
                                                   l9626 4FA2  
                                                   l9618 4F82  
                                                   l9810 4BB2  
                                                   l9730 6BAA  
                                                   l9722 6B8A  
                                                   l9714 6B72  
                                                   l9396 58A8  
                                                   l9388 587C  
                                                   l8940 566E  
                                                   l9708 72D8  
                                                   l8916 7698  
                                                   l8908 7690  
                                                   l8692 6A00  
                                                   l8924 765C  
                                                   l9580 5FF6  
                                                   l9572 5FE6  
                                                   l9564 5FD6  
                                                   l9556 5FC6  
                                                   l9548 5FB6  
                                                   l9660 4FE6  
                                                   l9652 4FD6  
                                                   l9644 4FC6  
                                                   l9636 4FB6  
                                                   l9628 4FA6  
                                                   l9820 4C38  
                                                   l9812 4BE6  
                                                   l9732 6BCA  
                                                   l9724 6B8E  
                                                   l9716 6B7E  
                                                   l9398 58AE  
                                                   l8926 75D6  
                                                   l8950 56AC  
                                                   l8942 5678  
                                                   l8934 5646  
                                                   l9750 74FC  
                                                   l8918 769A  
                                                   l8694 6A10  
                                                   l9590 6014  
                                                   l9574 5FEA  
                                                   l9566 5FDA  
                                                   l9558 5FCA  
                                                   l9670 4FFA  
                                                   l9662 4FEA  
                                                   l9654 4FDA  
                                                   l9646 4FCA  
                                                   l9638 4FBA  
                                                   l9830 4C96  
                                                   l9822 4C40  
                                                   l9814 4BF6  
                                                   l9726 6B92  
                                                   l9718 6B82  
                                                   l8928 75DC  
                                                   l8960 56F2  
                                                   l8952 56BE  
                                                   l8944 568A  
                                                   l8936 5656  
                                                   l9752 7504  
                                                   l8696 6A1A  
                                                   l8688 69E2  
                                                   l9576 5FEE  
                                                   l9568 5FDE  
                                                   l9680 5018  
                                                   l9664 4FEE  
                                                   l9656 4FDE  
                                                   l9648 4FCE  
                                                   l9592 4F2C  
                                                   l9832 4CC4  
                                                   l9824 4C50  
                                                   l9816 4BFA  
                                                   l9808 4B9E  
                                                   l9728 6B9E  
                                                   l8970 572A  
                                                   l8962 5704  
                                                   l8954 56D0  
                                                   l8946 569C  
                                                   l8938 5668  
                                                   l9754 750E  
                                                   l9770 75C8  
                                                   l8890 7076  
                                                   l9586 5FFE  
                                                   l9578 5FF2  
                                                   l9666 4FF2  
                                                   l9658 4FE2  
                                                   l9594 4F3E  
                                                   l9834 4CC6  
                                                   l9826 4C7E  
                                                   l9818 4C0A  
                                                   l9772 76F4  
                                                   l9780 6D10  
                                                   l8972 5734  
                                                   l8964 570A  
                                                   l8956 56D6  
                                                   l8948 56A2  
                                                   l8892 707A  
                                                   l8980 704A  
                                                   l9588 6010  
                                                   l9676 5002  
                                                   l9668 4FF6  
                                                   l9596 4F42  
                                                   l9836 4CD6  
                                                   l9828 4C86  
                                                   l9782 6D1C  
                                                   l9774 6CE2  
                                                   l8958 56E0  
                                                   l8966 5714  
                                                   l8894 707C  
                                                   l8886 706A  
                                                   l8974 7028  
                                                   l9678 5014  
                                                   l9598 4F4A  
                                                   STR_1 0698  
                                                   l9784 6D2E  
                                                   l9776 6CF2  
                                                   l8968 571A  
                                                   l9768 75BE  
                                                   l8896 707E  
                                                   l8888 7072  
                                                   l8976 7034  
                                                   STR_2 06AD  
                                                   STR_3 06C2  
                                                   l9778 6CFE  
                                                   l9698 72B4  
                                                   l8898 7080  
                                                   l8978 7046  
                                                   STR_4 066C  
                                                   STR_5 0621  
                                                   STR_6 063A  
                                                   STR_7 0653  
                                                   STR_8 0683  
                                                   STR_9 06D7  
                                                   _LATA 000F89  
                                                   _LATB 000F8A  
                                                   _LATC 000F8B  
                                                   u3840 7570  
                                                   u3841 756C  
                                                   u8110 709A  
                                                   u8111 7096  
                                                   u8200 731A  
                                                   u9000 4C0A  
                                                   u8201 7316  
                                                   u9001 4C06  
                                                   u8130 765C  
                                                   u9010 4C50  
                                                   u8131 7658  
                                                   u9011 4C4C  
                                                   u8140 5656  
                                                   u9020 4C96  
                                                   u8141 5652  
                                                   u8125 70A4  
                                                   u9021 4C92  
                                                   u8150 568A  
                                                   u8126 70A6  
                                                   u9030 4CD6  
                                                   u8151 5686  
                                                   u9031 4CD2  
                                                   u8160 56BE  
                                                   u8400 574E  
                                                   u8161 56BA  
                                                   u8401 574A  
                                                   u8170 56F2  
                                                   u8410 575E  
                                                   u8171 56EE  
                                                   u8411 575A  
                                                   u6900 6C66  
                                                   u8180 572A  
                                                   u8420 5798  
                                                   u8500 4A62  
                                                   u8340 7686  
                                                   u6901 6C62  
                                                   u8181 5726  
                                                   u8421 5794  
                                                   u8501 4A5A  
                                                   u8341 7680  
                                                   u6910 6C7C  
                                                   u8430 57A8  
                                                   u8190 7066  
                                                   u6911 6C78  
                                                   u8431 57A4  
                                                   u8191 7062  
                                                   u8440 57E2  
                                                   u8600 4B7E  
                                                   u8520 4A76  
                                                   u8441 57DE  
                                                   u8601 4B7A  
                                                   u8521 4A6E  
                                                   u8450 57F2  
                                                   u8610 4B94  
                                                   u8530 4A9A  
                                                   u8346 7688  
                                                   u8451 57EE  
                                                   u8611 4B90  
                                                   u8531 4A96  
                                                   u8515 4A64  
                                                   u8380 65A4  
                                                   u7820 6A00  
                                                   u8540 4AE2  
                                                   u8381 65A0  
                                                   u7821 69FC  
                                                   u8541 4ADE  
                                                   u8390 65D6  
                                                   u7830 6A3A  
                                                   u8550 4B08  
                                                   u8391 65D2  
                                                   u7831 6A36  
                                                   u8551 4B04  
                                                   u6880 6C3A  
                                                   u8560 4B20  
                                                   u8528 4A78  
                                                   u6881 6C36  
                                                   u8561 4B1C  
                                                   u6890 6C50  
                                                   u8570 4B36  
                                                   u8490 4A4E  
                                                   u6891 6C4C  
                                                   u8571 4B32  
                                                   u8491 4A46  
                                                   u8580 4B4E  
                                                   u8581 4B4A  
                                                   u8590 4B66  
                                                   u8591 4B62  
                                                   u8920 6CF2  
                                                   u8921 6CEE  
                                                   u8930 6D10  
                                                   u8498 4A50  
                                                   u8931 6D0C  
                                                   u8940 6D2E  
                                                   u8941 6D2A  
                                                   u8870 6030  
                                                   u8871 602C  
                                                   u8880 5034  
                                                   u8881 5030  
                                                   u8990 4BE6  
                                                   u8991 4BE2  
                                                   _WPUB 000F61  
                                      ?_lerDadosDaEEPROM 0001  
                                ??_wr2RegCompleteHandler 0015  
                                       ??_I2C1_MasterFsm 0017  
                                          _EUSART1_Write 764C  
                       __size_of_I2C1_DO_RX_NACK_RESTART 0008  
                                 moveCursor@CursorColuna 001A  
                                           ?_DRV_LCD_Cmd 0001  
                              ??_I2C1_CallbackReturnStop 0015  
                                                   abs@a 001C  
                                                   _dbuf 0250  
                                                   _atoi 45C0  
                                                   _ctoa 59EE  
                                                   _main 75A6  
                                                   _dtoa 3F18  
                                          ?_EUSART1_Read 0001  
                                                   _prec 004D  
                                                   _nout 0185  
                                                   pad@i 0021  
                                                   pad@p 001E  
                                                   fsr0h 000FEA  
                                                   fsr1h 000FE2  
                                                   indf0 000FEF  
                                                   fsr2h 000FDA  
                                                   fsr0l 000FE9  
                                                   indf2 000FDF  
                                                   fsr1l 000FE1  
                                                   pad@w 0023  
                                                   fsr2l 000FD9  
                                                   btemp 0056  
                                     ??_lerDadosDaEEPROM 000D  
                                          ___fpclassifyf 5546  
                                                   prodh 000FF4  
                                                   prodl 000FF3  
                                                   start 009C  
                                       ??_I2C1_SetBuffer 000E  
                                        ___fldiv@new_exp 0065  
                                           _tolower$3799 0016  
                         fp__EUSART1_DefaultErrorHandler 0000  
                                           ___param_bank 000000  
                       __size_of_rdBlkRegCompleteHandler 0040  
                          I2C1_CallbackReturnStop@funPtr 0013  
                                                  ??_abs 001E  
                                                  ??_pad 0020  
                              __size_of_DATAEE_WriteByte 0040  
                                      ?_DRV_ADT7410_Read 0019  
                                __end_of_TMR0_Initialize 72EA  
                                         DRV_LCD_Cmd@cmd 000C  
                         ??_TMR0_DefaultInterruptHandler 0001  
                         __size_of_OSCILLATOR_Initialize 001C  
                          __end_of_OSCILLATOR_Initialize 7572  
                                                  l11010 5C8A  
                                                  l11002 5C7A  
                                                  l11020 5D06  
                                                  l11100 777C  
                                                  l11022 5D20  
                                                  l11006 5C82  
                                                  l11024 5D26  
                                                  l11016 5C92  
                                                  l11040 646E  
                                                  l11032 643E  
                                                  l11104 7702  
                                                  l11120 6920  
                                                  l11112 690C  
                                                  l11200 2EF8  
                                                  l11018 5CF4  
                                                  l11050 6482  
                                                  l11034 644C  
                                                  l11106 7706  
                                                  l11114 6910  
                                                  l11202 2F08  
                                                  l11210 2F32  
                                                  l12002 563A  
                                                  l12010 6B10  
                                                  l11036 6452  
                                                  l11108 770A  
                                                  l11116 6918  
                                                  l11140 6A60  
                                                  l12100 6696  
                                                  l11300 313A  
                                                  l11220 2F6A  
                                                  l11212 2F42  
                                                  l11204 2F18  
                                                  l12020 41F6  
                                                  l11046 647A  
                                                  l11038 646A  
                                                  l11126 6928  
                                                  l11142 6A74  
                                                  l12102 669E  
                                                  l11302 314A  
                                                  l11230 2F7E  
                                                  l11222 2F6E  
                                                  l11214 2F54  
                                                  l11206 2F28  
                                                  l11150 5BBC  
                                                  l12022 4216  
                                                  l12006 6BCE  
                                                  l12014 6B46  
                                                  l12120 7400  
                                                  l11160 77EE  
                                                  l11080 674C  
                                                  l11072 6738  
                                                  l11056 648A  
                                                  l11064 770E  
                                                  l11144 6A7A  
                                                  l11136 6A4C  
                                                  l12104 66A2  
                                                  l12112 75EE  
                                                  l11320 31CC  
                                                  l11312 31A4  
                                                  l11304 315A  
                                                  l11240 2F92  
                                                  l11232 2F82  
                                                  l11224 2F72  
                                                  l11216 2F62  
                                                  l11208 2F2A  
                                                  l11152 5BC6  
                                                  l12200 4148  
                                                  l12040 43C2  
                                                  l12032 4302  
                                                  l12024 426E  
                                                  l12008 6BDE  
                                                  l12016 6B58  
                                                  l13000 5B5C  
                                                  l10280 74C4  
                                                  l11402 77F2  
                                                  l12122 7410  
                                                  l11074 6740  
                                                  l11090 675A  
                                                  l11066 7712  
                                                  l11138 6A50  
                                                  l11162 7538  
                                                  l11410 6FBA  
                                                  l12114 7760  
                                                  l12106 66A6  
                                                  l11322 31D4  
                                                  l11314 31AE  
                                                  l11306 3180  
                                                  l11330 31F8  
                                                  l11250 2FA6  
                                                  l11242 2F96  
                                                  l11234 2F86  
                                                  l11226 2F76  
                                                  l11218 2F66  
                                                  l11170 2E62  
                                                  l13010 22AA  
                                                  l11154 5BE4  
                                                  l11146 5B98  
                                                  l12210 4196  
                                                  l12202 4162  
                                                  l12042 43EA  
                                                  l12034 433E  
                                                  l12026 4282  
                                                  l13002 5B86  
                                                  l10290 74D8  
                                                  l10282 74C8  
                                                  l11404 77F6  
                                                  l12124 7414  
                                                  l11084 6752  
                                                  l11068 7716  
                                                  l11164 753C  
                                                  l11420 6FDC  
                                                  l11412 6FBC  
                                                  l12108 66AA  
                                                  l11340 324A  
                                                  l11332 31FC  
                                                  l11324 31D8  
                                                  l11316 31BC  
                                                  l11308 3190  
                                                  l11260 301E  
                                                  l11252 2FD0  
                                                  l11244 2F9A  
                                                  l11236 2F8A  
                                                  l11228 2F7A  
                                                  l11180 2E9E  
                                                  l11172 2E6E  
                                                  l13100 27B2  
                                                  l13012 22BA  
                                                  l13004 2272  
                                                  l12060 6E30  
                                                  l12052 6DE6  
                                                  l11156 5C1A  
                                                  l11148 5BAA  
                                                  l12140 5A28  
                                                  l12132 59EE  
                                                  l11500 49B2  
                                                  l12212 41A8  
                                                  l12204 4170  
                                                  l12044 43FA  
                                                  l12028 4290  
                                                  l12036 4372  
                                                  l12300 0A04  
                                                  l10284 74CC  
                                                  l12126 7420  
                                                  l12118 73FC  
                                                  l11078 6748  
                                                  l11166 7540  
                                                  l11422 6FE0  
                                                  l11414 6FC0  
                                                  l11406 6FA6  
                                                  l12070 663A  
                                                  l11350 32B0  
                                                  l11342 3256  
                                                  l11334 320A  
                                                  l11326 31E8  
                                                  l11318 31BE  
                                                  l11270 305E  
                                                  l11262 3022  
                                                  l11254 2FEC  
                                                  l11246 2F9E  
                                                  l11238 2F8E  
                                                  l11190 2ECE  
                                                  l11182 2EAE  
                                                  l11174 2E7C  
                                                  l13102 2824  
                                                  l13030 2332  
                                                  l13014 22D4  
                                                  l13006 2288  
                                                  l11430 7470  
                                                  l12054 6DEA  
                                                  l12150 5A74  
                                                  l12142 5A3A  
                                                  l12134 5A02  
                                                  l11510 4A1A  
                                                  l11502 49D2  
                                                  l12214 41B4  
                                                  l12206 4182  
                                                  l12038 43AE  
                                                  l12310 0A86  
                                                  l12302 0A38  
                                                  l12230 071C  
                                                  l12222 06EC  
                                                  l13110 6122  
                                                  l10286 74D0  
                                                  l10278 74C0  
                                                  l12128 7424  
                                                  l11168 7544  
                                                  l11416 6FD0  
                                                  l11424 6FE4  
                                                  l11408 6FAA  
                                                  l12080 664C  
                                                  l12072 663C  
                                                  l12064 6622  
                                                  l11600 3D9C  
                                                  l11520 3B9A  
                                                  l11360 32F8  
                                                  l11352 32C0  
                                                  l11344 3264  
                                                  l11336 3220  
                                                  l11328 31EA  
                                                  l11280 30A0  
                                                  l11272 306E  
                                                  l11264 3030  
                                                  l11256 2FFC  
                                                  l11248 2FA2  
                                                  l11192 2EE0  
                                                  l11184 2EB0  
                                                  l11176 2E7E  
                                                  l13104 2836  
                                                  l13040 243A  
                                                  l13032 235E  
                                                  l13024 22F0  
                                                  l13016 22D6  
                                                  l13008 2296  
                                                  l13120 4E10  
                                                  l12048 720E  
                                                  l12056 6DFE  
                                                  l12152 5A78  
                                                  l12136 5A0E  
                                                  l11440 4782  
                                                  l11504 49E4  
                                                  l12216 41BC  
                                                  l12208 4190  
                                                  l12160 3F18  
                                                  l12400 0F04  
                                                  l12312 0A98  
                                                  l12320 0AE4  
                                                  l12304 0A40  
                                                  l12240 0772  
                                                  l12232 0740  
                                                  l12224 06F6  
                                                  l13112 612E  
                                                  l13200 14C6  
                                                  l10288 74D4  
                                                  l11098 7778  
                                                  l11418 6FD8  
                                                  l12090 666E  
                                                  l12082 664E  
                                                  l12074 663E  
                                                  l12066 6626  
                                                  l11610 3DDA  
                                                  l11602 3DA2  
                                                  l11522 3BAA  
                                                  l11530 3BD4  
                                                  l11514 3B7C  
                                                  l11362 32FA  
                                                  l11354 32E0  
                                                  l11346 329E  
                                                  l11290 30CE  
                                                  l11282 30AE  
                                                  l11266 3032  
                                                  l11258 3012  
                                                  l11194 2EE2  
                                                  l11178 2E8E  
                                                  l11186 2EB8  
                                                  l13050 24E4  
                                                  l13034 235E  
                                                  l13026 2320  
                                                  l13018 22E6  
                                                  l13042 24A6  
                                                  l13106 28A6  
                                                  l13130 4F0E  
                                                  l12058 6E2C  
                                                  l12154 5AA4  
                                                  l12146 5A4C  
                                                  l12138 5A1A  
                                                  l11450 47C4  
                                                  l11442 4786  
                                                  l11434 4750  
                                                  l11506 49EA  
                                                  l12218 41CC  
                                                  l12170 3F90  
                                                  l12162 3F38  
                                                  l12410 0FBA  
                                                  l12402 0F10  
                                                  l12330 0B24  
                                                  l12314 0AAA  
                                                  l12306 0A72  
                                                  l12250 07A0  
                                                  l12242 0784  
                                                  l12234 074A  
                                                  l12226 0706  
                                                  l13114 6152  
                                                  l13210 1566  
                                                  l13202 14E0  
                                                  l10900 7124  
                                                  l12092 6676  
                                                  l12084 6656  
                                                  l12076 6640  
                                                  l12068 6636  
                                                  l11620 3E44  
                                                  l11612 3DDE  
                                                  l11604 3DAC  
                                                  l11540 3C00  
                                                  l11532 3BE4  
                                                  l11524 3BBA  
                                                  l11516 3B8A  
                                                  l11700 3882  
                                                  l11364 3300  
                                                  l11356 32E4  
                                                  l11348 32A0  
                                                  l11292 30D8  
                                                  l11284 30BA  
                                                  l11276 3082  
                                                  l11268 303C  
                                                  l11196 2EE8  
                                                  l11188 2EC8  
                                                  l13060 2520  
                                                  l13044 24B8  
                                                  l13036 23B6  
                                                  l13028 2322  
                                                  l11428 7454  
                                                  l12156 5AB6  
                                                  l12148 5A60  
                                                  l11460 481E  
                                                  l11452 47E2  
                                                  l11444 4794  
                                                  l11436 4754  
                                                  l11508 49FA  
                                                  l11372 6F60  
                                                  l11380 727E  
                                                  l12180 3FEC  
                                                  l12172 3FAA  
                                                  l12164 3F60  
                                                  l12500 1284  
                                                  l12420 1004  
                                                  l12412 0FCC  
                                                  l12404 0F34  
                                                  l12340 0B80  
                                                  l12332 0B5A  
                                                  l12316 0AB2  
                                                  l12308 0A82  
                                                  l12260 0814  
                                                  l12244 0790  
                                                  l12252 07A6  
                                                  l12236 0752  
                                                  l12228 0714  
                                                  l13116 616E  
                                                  l13108 60E2  
                                                  l13300 1972  
                                                  l13220 1614  
                                                  l13212 1584  
                                                  l13204 14F4  
                                                  l13140 4D38  
                                                  l13132 4CDC  
                                                  l10910 7798  
                                                  l12094 667E  
                                                  l12086 665E  
                                                  l12078 6644  
                                                  l11630 3EA6  
                                                  l11622 3E50  
                                                  l11614 3DEC  
                                                  l11606 3DBA  
                                                  l11542 3C10  
                                                  l11550 3C3A  
                                                  l11534 3BEA  
                                                  l11526 3BCA  
                                                  l11518 3B98  
                                                  l11710 38CC  
                                                  l11702 389A  
                                                  l11366 330E  
                                                  l11358 32F2  
                                                  l11286 30BE  
                                                  l11278 3092  
                                                  l11294 30DE  
                                                  l11198 2EF6  
                                                  l13070 2626  
                                                  l13062 2530  
                                                  l13046 24D2  
                                                  l13038 2428  
                                                  l13126 4E92  
                                                  l11462 484C  
                                                  l11454 47EA  
                                                  l11470 4886  
                                                  l11446 47B4  
                                                  l11438 4762  
                                                  l11374 6F6C  
                                                  l11382 728A  
                                                  l12190 408C  
                                                  l12182 3FF4  
                                                  l12174 3FC6  
                                                  l12166 3F80  
                                                  l11390 719E  
                                                  l12510 12B4  
                                                  l12502 1290  
                                                  l12430 103A  
                                                  l12422 1014  
                                                  l12414 0FDA  
                                                  l12406 0F98  
                                                  l12350 0BC4  
                                                  l12342 0B92  
                                                  l12334 0B62  
                                                  l12326 0AF6  
                                                  l12318 0ACC  
                                                  l12262 0830  
                                                  l12254 07CC  
                                                  l12270 087A  
                                                  l12246 0798  
                                                  l12238 0764  
                                                  l14110 2C1C  
                                                  l13118 6172  
                                                  l13310 199E  
                                                  l13302 1976  
                                                  l13230 1690  
                                                  l13222 161A  
                                                  l13214 1598  
                                                  l13206 1510  
                                                  l13150 4DF8  
                                                  l13142 4D4E  
                                                  l13134 4CF0  
                                                  l10904 769E  
                                                  l10912 779C  
                                                  l12096 6686  
                                                  l12088 6666  
                                                  l12600 5196  
                                                  l14120 6D70  
                                                  l11640 3F04  
                                                  l11632 3EBC  
                                                  l11624 3E5E  
                                                  l11616 3E1A  
                                                  l11608 3DCC  
                                                  l11560 3C7C  
                                                  l11552 3C4A  
                                                  l11544 3C20  
                                                  l11536 3BF0  
                                                  l11528 3BCC  
                                                  l11720 3922  
                                                  l11712 38DC  
                                                  l11704 38A6  
                                                  l11368 3310  
                                                  l11296 3104  
                                                  l11288 30CC  
                                                  l13080 26D2  
                                                  l13072 2638  
                                                  l13064 255C  
                                                  l13056 24EE  
                                                  l13048 24D4  
                                                  l13128 4F0A  
                                                  l11472 4896  
                                                  l11464 486C  
                                                  l11456 47FE  
                                                  l11448 47B8  
                                                  l11480 48DC  
                                                  l11376 6F7E  
                                                  l11384 728E  
                                                  l12192 4092  
                                                  l12184 3FFE  
                                                  l12176 3FD8  
                                                  l12168 3F8E  
                                                  l11800 5E24  
                                                  l12520 130E  
                                                  l12504 1298  
                                                  l12440 106E  
                                                  l12432 103E  
                                                  l12424 1018  
                                                  l12408 0FA6  
                                                  l12416 0FE2  
                                                  l12360 0C0E  
                                                  l12352 0BDC  
                                                  l12344 0BA0  
                                                  l12328 0B08  
                                                  l12336 0B66  
                                                  l12280 0904  
                                                  l12272 08A0  
                                                  l12264 0848  
                                                  l12248 079C  
                                                  l14112 2DDC  
                                                  l13400 3410  
                                                  l13320 19BE  
                                                  l13312 19B2  
                                                  l13304 197A  
                                                  l13240 1722  
                                                  l13232 1696  
                                                  l13224 161E  
                                                  l13216 15AA  
                                                  l13208 152E  
                                                  l13160 1390  
                                                  l13152 4DFC  
                                                  l13144 4DC6  
                                                  l13136 4D24  
                                                  l10850 747A  
                                                  l10842 67B8  
                                                  l10922 7780  
                                                  l14122 6960  
                                                  l11394 749E  
                                                  l12098 668E  
                                                  l12610 51D8  
                                                  l11642 3F0A  
                                                  l11634 3ED6  
                                                  l11626 3E88  
                                                  l11554 3C60  
                                                  l11546 3C30  
                                                  l11538 3BFE  
                                                  l11730 39C6  
                                                  l11722 393E  
                                                  l11714 38E8  
                                                  l11706 38B2  
                                                  l11298 3138  
                                                  l13090 271C  
                                                  l13082 26E2  
                                                  l13066 255C  
                                                  l13058 251E  
                                                  l13074 26A4  
                                                  l12530 45C0  
                                                  l11474 48B6  
                                                  l11466 486E  
                                                  l11458 480C  
                                                  l11490 493C  
                                                  l11482 48EA  
                                                  l11378 6F82  
                                                  l11386 72A6  
                                                  l12186 4004  
                                                  l12194 40F6  
                                                  l12178 3FE6  
                                                  l11810 5E52  
                                                  l11802 5E28  
                                                  l12522 131E  
                                                  l12514 12E8  
                                                  l12506 12A8  
                                                  l12450 110C  
                                                  l12442 1072  
                                                  l12434 1044  
                                                  l12426 101E  
                                                  l12418 0FF6  
                                                  l12362 0C22  
                                                  l12370 0D18  
                                                  l12354 0BEE  
                                                  l12346 0BA4  
                                                  l12338 0B6E  
                                                  l12290 093A  
                                                  l12266 0852  
                                                  l12258 0802  
                                                  l14114 2E32  
                                                  l13410 34AE  
                                                  l13402 3438  
                                                  l13330 19C8  
                                                  l13322 19C0  
                                                  l13314 19B6  
                                                  l13306 1996  
                                                  l13250 17AA  
                                                  l13242 1728  
                                                  l13226 1646  
                                                  l13218 15CC  
                                                  l13234 169E  
                                                  l13170 13EE  
                                                  l13162 13A2  
                                                  l13154 1346  
                                                  l13146 4DDC  
                                                  l13138 4D34  
                                                  l10860 77E6  
                                                  l10852 748A  
                                                  l10844 67CA  
                                                  l10932 77AE  
                                                  l10908 77A2  
                                                  l14124 64BE  
                                                  l10916 7790  
                                                  l10924 7784  
                                                  l10940 7770  
                                                  l11396 74AC  
                                                  l12620 522C  
                                                  l12612 51EC  
                                                  l12604 519A  
                                                  l11644 3F0C  
                                                  l11636 3EF2  
                                                  l11628 3E8C  
                                                  l11580 3CFE  
                                                  l11572 3CB4  
                                                  l11556 3C70  
                                                  l11564 3C90  
                                                  l11548 3C32  
                                                  l11740 3A1C  
                                                  l11732 39D4  
                                                  l11724 394A  
                                                  l11716 38F8  
                                                  l11708 38C0  
                                                  l11660 377E  
                                                  l11652 3752  
                                                  l13092 271E  
                                                  l13076 26B6  
                                                  l13068 25B4  
                                                  l12540 462E  
                                                  l12532 45D4  
                                                  l11468 4880  
                                                  l11492 495A  
                                                  l11484 490A  
                                                  l12196 4110  
                                                  l12188 4086  
                                                  l11820 5E86  
                                                  l11812 5E60  
                                                  l11804 5E30  
                                                  l11900 533C  
                                                  l12524 1324  
                                                  l12516 12FA  
                                                  l12508 12AE  
                                                  l12460 116A  
                                                  l12428 102A  
                                                  l12436 104A  
                                                  l12444 1078  
                                                  l12452 1110  
                                                  l12380 0DE4  
                                                  l12372 0D36  
                                                  l12364 0C86  
                                                  l12348 0BB6  
                                                  l12356 0BF6  
                                                  l12276 08D6  
                                                  l12700 1C78  
                                                  l14116 1BC0  
                                                  l13500 2AE4  
                                                  l13420 3532  
                                                  l13412 34BE  
                                                  l13404 3460  
                                                  l14108 1A8E  
                                                  l13340 19E2  
                                                  l13332 19CA  
                                                  l13324 19C2  
                                                  l13316 19BA  
                                                  l13308 199A  
                                                  l13260 1838  
                                                  l13244 172C  
                                                  l13236 16B0  
                                                  l13228 1668  
                                                  l13180 145C  
                                                  l13164 13AE  
                                                  l13172 13F2  
                                                  l13156 1346  
                                                  l13148 4DE0  
                                                  l10854 7492  
                                                  l10846 67FE  
                                                  l10862 77B4  
                                                  l14126 5CCA  
                                                  l10918 7794  
                                                  l10950 778C  
                                                  l10942 7774  
                                                  l10934 7768  
                                                  l11398 74BC  
                                                  l12614 51F4  
                                                  l12606 51B0  
                                                  l12622 6D3A  
                                                  l11638 3EF6  
                                                  l11590 3D44  
                                                  l11582 3D06  
                                                  l11574 3CCE  
                                                  l11566 3CA0  
                                                  l11558 3C78  
                                                  l11742 3A2A  
                                                  l11734 39F2  
                                                  l11726 3966  
                                                  l11718 3912  
                                                  l11670 37BA  
                                                  l11662 378E  
                                                  l11654 375E  
                                                  l13094 272E  
                                                  l13078 26D0  
                                                  l14118 467C  
                                                  l12550 4656  
                                                  l12542 4632  
                                                  l12534 45D8  
                                                  l11494 4962  
                                                  l11486 490E  
                                                  l11478 48D8  
                                                  l12198 412E  
                                                  l11822 5E8C  
                                                  l11814 5E66  
                                                  l11806 5E42  
                                                  l11902 5342  
                                                  l11910 71FC  
                                                  l12518 1306  
                                                  l12470 11A8  
                                                  l12462 117A  
                                                  l12454 112E  
                                                  l12446 10D0  
                                                  l12438 105C  
                                                  l12390 0E94  
                                                  l12382 0DF4  
                                                  l12374 0D6A  
                                                  l12366 0CDE  
                                                  l12358 0BFE  
                                                  l12294 0970  
                                                  l12278 08E8  
                                                  l12710 1CFC  
                                                  l12702 1C86  
                                                  l13510 2B54  
                                                  l13502 2B00  
                                                  l13430 35BC  
                                                  l13422 3544  
                                                  l13414 34CC  
                                                  l13406 347A  
                                                  l13350 1A38  
                                                  l13342 19E8  
                                                  l13326 19C4  
                                                  l13318 19BC  
                                                  l13270 18C0  
                                                  l13262 183E  
                                                  l13246 1758  
                                                  l13238 16D6  
                                                  l13254 17B4  
                                                  l13334 19D2  
                                                  l13190 1490  
                                                  l13182 1462  
                                                  l13174 140C  
                                                  l13166 13CC  
                                                  l13158 137E  
                                                  l10856 749A  
                                                  l10848 7606  
                                                  l10864 73A4  
                                                  l10872 7378  
                                                  l10880 734C  
                                                  l10960 77DE  
                                                  l10928 77D6  
                                                  l14128 678E  
                                                  l10936 776C  
                                                  l12608 51C4  
                                                  l11592 3D62  
                                                  l11584 3D16  
                                                  l11576 3CDE  
                                                  l11568 3CA0  
                                                  l11752 3A94  
                                                  l11760 3ADC  
                                                  l11744 3A2E  
                                                  l11736 39FC  
                                                  l11728 3990  
                                                  l11680 37F0  
                                                  l11672 37C0  
                                                  l11664 379E  
                                                  l11656 376C  
                                                  l12640 6520  
                                                  l12632 64E6  
                                                  l13096 275A  
                                                  l13088 26EC  
                                                  l13600 6838  
                                                  l12552 465E  
                                                  l12536 45DC  
                                                  l11496 4976  
                                                  l11488 491C  
                                                  l11816 5E7C  
                                                  l11808 5E4A  
                                                  l11824 5E92  
                                                  l11840 6050  
                                                  l11832 6032  
                                                  l11920 5060  
                                                  l12480 11DE  
                                                  l12472 11B8  
                                                  l12464 117E  
                                                  l12456 114A  
                                                  l12448 1104  
                                                  l12392 0EC8  
                                                  l12384 0E04  
                                                  l12376 0D9C  
                                                  l12368 0D12  
                                                  l12296 09A4  
                                                  l12288 0920  
                                                  l12800 2228  
                                                  l12720 1D6C  
                                                  l12704 1CA6  
                                                  l12712 1D0E  
                                                  l13520 2BC4  
                                                  l13512 2B66  
                                                  l13504 2B14  
                                                  l13440 3646  
                                                  l13432 35CE  
                                                  l13424 3552  
                                                  l13416 34D6  
                                                  l13408 3494  
                                                  l13352 1A3E  
                                                  l13328 19C6  
                                                  l13280 1938  
                                                  l13264 1842  
                                                  l13256 17C6  
                                                  l13248 177E  
                                                  l13344 19EC  
                                                  l13192 1494  
                                                  l13184 1474  
                                                  l13176 1420  
                                                  l13168 13EA  
                                                  l10858 77EA  
                                                  l10890 73E4  
                                                  l10866 73B8  
                                                  l10874 738C  
                                                  l10882 7360  
                                                  l10946 77DA  
                                                  l10954 77D2  
                                                  l12626 6D5C  
                                                  l11594 3D64  
                                                  l11586 3D2A  
                                                  l11578 3CEE  
                                                  l11770 3B50  
                                                  l11762 3AF6  
                                                  l11754 3AA0  
                                                  l11746 3A3C  
                                                  l11738 3A0A  
                                                  l11682 3800  
                                                  l11674 37CE  
                                                  l11666 37A4  
                                                  l11658 376E  
                                                  l12650 6568  
                                                  l12642 652E  
                                                  l12634 64F6  
                                                  l13098 275A  
                                                  l13610 684C  
                                                  l13602 683C  
                                                  l12562 4706  
                                                  l12554 4692  
                                                  l12546 4638  
                                                  l12538 45F8  
                                                  l11498 4984  
                                                  l11826 5EA2  
                                                  l11818 5E84  
                                                  l11850 6088  
                                                  l11842 605E  
                                                  l11834 6036  
                                                  l11906 71D6  
                                                  l11930 50AE  
                                                  l11922 508A  
                                                  l11914 5036  
                                                  l12490 123A  
                                                  l12482 11EA  
                                                  l12474 11C0  
                                                  l12466 118E  
                                                  l12458 115C  
                                                  l12394 0EDC  
                                                  l12386 0E38  
                                                  l12378 0DB2  
                                                  l12298 09AA  
                                                  l12730 1E1C  
                                                  l12722 1DA6  
                                                  l12714 1D32  
                                                  l12706 1CB4  
                                                  l13530 2C3E  
                                                  l13522 2BD6  
                                                  l13514 2B82  
                                                  l13506 2B26  
                                                  l13450 36C0  
                                                  l13442 3676  
                                                  l13434 35DC  
                                                  l13426 355C  
                                                  l13418 3520  
                                                  l13370 1ACC  
                                                  l13354 1A56  
                                                  l13346 1A06  
                                                  l13290 194E  
                                                  l13282 193E  
                                                  l13266 186E  
                                                  l13258 17EC  
                                                  l13274 18CA  
                                                  l13338 19DC  
                                                  l13194 14A6  
                                                  l13186 147A  
                                                  l13178 143E  
                                                  l13362 1A7A  
                                                  l10972 77FA  
                                                  l10892 73F8  
                                                  l10868 73CC  
                                                  l10876 73A0  
                                                  l10884 7374  
                                                  l10956 77E2  
                                                  l10964 70A8  
                                                  l10948 7788  
                                                  l12820 6ED4  
                                                  l11596 3D74  
                                                  l11588 3D38  
                                                  l11772 3B5E  
                                                  l11764 3B0A  
                                                  l11756 3AAE  
                                                  l11748 3A6A  
                                                  l11692 384A  
                                                  l11684 3806  
                                                  l11676 37D0  
                                                  l11668 37B4  
                                                  l12652 6572  
                                                  l12644 6538  
                                                  l12636 650C  
                                                  l13620 686A  
                                                  l13612 6852  
                                                  l13604 6840  
                                                  l12900 62FC  
                                                  l12564 4718  
                                                  l12548 464E  
                                                  l11828 5EAA  
                                                  l11852 6096  
                                                  l11860 60C0  
                                                  l11844 6066  
                                                  l11836 6044  
                                                  l11908 71EC  
                                                  l11940 50DA  
                                                  l11924 508C  
                                                  l11916 504C  
                                                  l12484 11F0  
                                                  l12492 1240  
                                                  l12476 11CE  
                                                  l12468 11A0  
                                                  l12388 0E8E  
                                                  l12396 0EE0  
                                                  l12580 595C  
                                                  l12572 5918  
                                                  l12740 1EA2  
                                                  l12724 1DC6  
                                                  l12716 1D3A  
                                                  l12732 1E2E  
                                                  l12660 1B52  
                                                  l12804 2236  
                                                  l13540 2CA4  
                                                  l13532 2C52  
                                                  l13524 2BE8  
                                                  l13516 2B96  
                                                  l13508 2B42  
                                                  l13460 3714  
                                                  l13452 36D0  
                                                  l13436 35E6  
                                                  l13428 35AA  
                                                  l13444 3688  
                                                  l13348 1A1A  
                                                  l13356 1A5A  
                                                  l13292 1952  
                                                  l13284 1942  
                                                  l13276 18DC  
                                                  l13268 1894  
                                                  l13364 1AAC  
                                                  l13196 14AA  
                                                  l13188 1480  
                                                  l10966 70D0  
                                                  l10974 771A  
                                                  l10982 76E4  
                                                  l10990 76D4  
                                                  l12830 6F0C  
                                                  l12822 6EDC  
                                                  l11598 3D86  
                                                  l11774 3B60  
                                                  l11766 3B24  
                                                  l11758 3AD8  
                                                  l11694 3856  
                                                  l11686 3826  
                                                  l11678 37E0  
                                                  l11782 6F1A  
                                                  l12646 6556  
                                                  l12638 6514  
                                                  l13630 6898  
                                                  l13622 686C  
                                                  l13614 685C  
                                                  l13606 6844  
                                                  l12902 6324  
                                                  l12910 623C  
                                                  l12566 472A  
                                                  l12558 46C8  
                                                  l11790 5DF4  
                                                  l11862 60D0  
                                                  l11854 60AC  
                                                  l11846 6078  
                                                  l11838 604C  
                                                  l11870 63C2  
                                                  l11950 510A  
                                                  l11926 509C  
                                                  l12494 1252  
                                                  l12486 1216  
                                                  l12478 11D6  
                                                  l12398 0EF0  
                                                  l12582 5974  
                                                  l12574 5942  
                                                  l12806 225A  
                                                  l12750 1F46  
                                                  l12742 1ED4  
                                                  l12734 1E50  
                                                  l12726 1DD4  
                                                  l12718 1D48  
                                                  l12662 1B56  
                                                  l12654 1B0E  
                                                  l13550 2D14  
                                                  l13542 2CC0  
                                                  l13534 2C64  
                                                  l13518 2BA8  
                                                  l13470 2918  
                                                  l13462 3740  
                                                  l13454 36D6  
                                                  l13446 3690  
                                                  l13438 3634  
                                                  l13390 336C  
                                                  l13366 1AB8  
                                                  l13374 1AE8  
                                                  l13358 1A70  
                                                  l13294 1956  
                                                  l13286 1946  
                                                  l13278 1924  
                                                  l13198 14C2  
                                                  l10888 73D0  
                                                  l10896 70E8  
                                                  l10968 70E4  
                                                  l10976 771E  
                                                  l10984 76E8  
                                                  l10992 76D8  
                                                  l12592 513E  
                                                  l12832 6F10  
                                                  l12824 6EE2  
                                                  l11768 3B40  
                                                  l11776 3B66  
                                                  l11696 3860  
                                                  l11688 3836  
                                                  l11784 6F2A  
                                                  l12648 6566  
                                                  l12840 440E  
                                                  l13624 686E  
                                                  l13616 6864  
                                                  l13608 6848  
                                                  l12904 6326  
                                                  l12920 627A  
                                                  l11960 5EC2  
                                                  l11792 5E02  
                                                  l11864 60D8  
                                                  l11856 60B4  
                                                  l11848 6080  
                                                  l11880 643A  
                                                  l11872 63D2  
                                                  l11952 511A  
                                                  l11936 50C6  
                                                  l11928 50A0  
                                                  l12496 126C  
                                                  l12488 1232  
                                                  l12584 5990  
                                                  l12760 200E  
                                                  l12752 1F6A  
                                                  l12744 1EF8  
                                                  l12736 1E60  
                                                  l12680 1B88  
                                                  l12672 1B7C  
                                                  l12664 1B62  
                                                  l12656 1B32  
                                                  l13560 2D84  
                                                  l13552 2D26  
                                                  l13544 2CD4  
                                                  l13536 2C80  
                                                  l13528 2C04  
                                                  l13480 2A42  
                                                  l13472 2962  
                                                  l13464 28C0  
                                                  l13456 36E8  
                                                  l13448 36A0  
                                                  l13392 33A0  
                                                  l13384 3322  
                                                  l13376 1AFE  
                                                  l13368 1ABC  
                                                  l13296 195A  
                                                  l13288 194A  
                                                  l13640 6AFA  
                                                  l13632 6AB0  
                                                  l10898 7110  
                                                  l10978 7722  
                                                  l10986 76F0  
                                                  l10994 76E0  
                                                  l12594 514E  
                                                  l12826 6EFC  
                                                  l11778 3B6A  
                                                  l11698 3876  
                                                  l12842 441E  
                                                  l13626 687C  
                                                  l13618 6868  
                                                  l12906 6336  
                                                  l12922 628A  
                                                  l11970 5F18  
                                                  l11962 5ED6  
                                                  l11794 5E0A  
                                                  l11858 60BA  
                                                  l11874 6400  
                                                  l11890 52AE  
                                                  l11954 512A  
                                                  l11946 50EE  
                                                  l11938 50D0  
                                                  l12498 1272  
                                                  l12586 59A2  
                                                  l12578 594E  
                                                  l12762 2020  
                                                  l12754 1F8E  
                                                  l12746 1F2A  
                                                  l12738 1E92  
                                                  l12666 1B64  
                                                  l12690 1BEE  
                                                  l12658 1B40  
                                                  l13570 2DFA  
                                                  l13562 2D96  
                                                  l13554 2D42  
                                                  l13546 2CE6  
                                                  l13538 2C92  
                                                  l13490 2A7E  
                                                  l13482 2A54  
                                                  l13474 2974  
                                                  l13466 28D4  
                                                  l13458 3700  
                                                  l13394 33B0  
                                                  l13386 3348  
                                                  l13298 195E  
                                                  l13642 6B0C  
                                                  l13634 6AB4  
                                                  l12596 5156  
                                                  l12828 6F02  
                                                  l12860 44E4  
                                                  l12852 449C  
                                                  l12844 442C  
                                                  l13628 688A  
                                                  l12836 68A0  
                                                  l12916 6250  
                                                  l12932 61A4  
                                                  l11980 6FE8  
                                                  l11972 5F1C  
                                                  l11964 5EE4  
                                                  l11796 5E0E  
                                                  l11788 5DF0  
                                                  l11876 6410  
                                                  l11868 6394  
                                                  l11892 52BE  
                                                  l11884 5242  
                                                  l11948 50FA  
                                                  l12588 59CA  
                                                  l12780 214E  
                                                  l12764 2036  
                                                  l12772 20A0  
                                                  l12756 1FD6  
                                                  l12692 1C0E  
                                                  l12684 1B8E  
                                                  l12676 1B82  
                                                  l12668 1B76  
                                                  l13572 2E12  
                                                  l13564 2DA8  
                                                  l13556 2D56  
                                                  l13548 2D02  
                                                  l13492 2A92  
                                                  l13476 29D0  
                                                  l13468 2908  
                                                  l13484 2A64  
                                                  l13396 33D4  
                                                  l13388 3358  
                                                  l13636 6AB8  
                                                  l10998 5C62  
                                                  l12598 5162  
                                                  l12870 4564  
                                                  l12862 44F0  
                                                  l12854 44A4  
                                                  l12846 4472  
                                                  l12918 6278  
                                                  l12934 61CC  
                                                  l12926 6190  
                                                  l11982 7002  
                                                  l11974 5F48  
                                                  l11966 5EF0  
                                                  l11958 5EB4  
                                                  l11798 5E1C  
                                                  l11878 6434  
                                                  l11894 52CC  
                                                  l11886 5270  
                                                  l11990 55CC  
                                                  l12790 21EA  
                                                  l12782 2182  
                                                  l12774 20CE  
                                                  l12766 2044  
                                                  l12694 1C10  
                                                  l12950 6CC6  
                                                  l12942 6C86  
                                                  l13558 2D68  
                                                  l13494 2AA4  
                                                  l13486 2A70  
                                                  l13478 2A1A  
                                                  l13398 33EE  
                                                  l13638 6AC4  
                                                  l12880 45AC  
                                                  l12872 4566  
                                                  l12864 452C  
                                                  l12856 44B0  
                                                  l12848 4488  
                                                  l12936 61CE  
                                                  l11976 5F5C  
                                                  l11968 5F04  
                                                  l11896 52DE  
                                                  l11888 5280  
                                                  l11992 55D8  
                                                  l11984 5546  
                                                  l12792 21F8  
                                                  l12768 2074  
                                                  l12696 1C34  
                                                  l12688 1B9A  
                                                  l12944 6C98  
                                                  l12960 53CA  
                                                  l13568 2DC4  
                                                  l13496 2AC0  
                                                  l13488 2A74  
                                                  l13576 2E1E  
                                                  l12882 45AE  
                                                  l12874 456A  
                                                  l12866 4538  
                                                  l12858 44E2  
                                                  l12938 61DE  
                                                  l11898 52EC  
                                                  l11986 5566  
                                                  l12794 220C  
                                                  l12778 213C  
                                                  l12698 1C6A  
                                                  l12890 698E  
                                                  l12946 6CA0  
                                                  l12970 5446  
                                                  l12962 53EE  
                                                  l12954 5346  
                                                  l13498 2AD2  
                                                  l12876 458E  
                                                  l12868 4546  
                                                  l13596 6830  
                                                  l11988 55A4  
                                                  l11996 55E4  
                                                  l12788 21C6  
                                                  l12892 69BC  
                                                  l12948 6CA8  
                                                  l12980 5500  
                                                  l12972 54A6  
                                                  l12964 5400  
                                                  l12956 53A6  
                                                  l13780 75AA  
                                                  l12878 459E  
                                                  l13598 6834  
                                                  l12894 62E8  
                                                  l11998 55F6  
                                                  l12798 221A  
                                                  l12886 6978  
                                                  l12982 5512  
                                                  l12974 54B8  
                                                  l12966 5412  
                                                  l12958 53B8  
                                                  l12990 5AEE  
                                                  l13782 75AC  
                                                  l12888 6980  
                                                  l12984 5532  
                                                  l12976 54CA  
                                                  l12968 5432  
                                                  l12992 5B08  
                                                  l13784 75AE  
                                                  l12978 54EE  
                                                  l12994 5B18  
                                                  l12986 5AC4  
                                                  l13786 75B2  
                                                  l13778 75A6  
                                                  l12996 5B32  
                                                  l12988 5ADE  
                                                  l12998 5B42  
                                  _eusart1RxStatusBuffer 0142  
                                          ___fltol@sign1 002B  
                                     ??_DRV_ADT7410_Read 001E  
                                        __end_of___aodiv 48D8  
                                      __end_of_I2C1_Open 66AE  
                                                  ?_atoi 0011  
                                                  ?_ctoa 0013  
                                        __end_of___fladd 3322  
                                                  ?_main 0001  
                                                  ?_dtoa 0025  
                                        __end_of___aomod 4A3C  
                                        __end_of___fldiv 3F18  
                                        __end_of___awdiv 5EB4  
                                        __end_of___flneg 720E  
                                                  _EEADR 000FA9  
                                                  STR_10 06DF  
                                                  STR_13 06DB  
                                                  STR_14 06E3  
                                                  STR_17 06E7  
                                                  STR_19 06E7  
                                        __end_of___awmod 60E2  
                                        __end_of___flmul 3B7C  
                                        __end_of___flsub 6F60  
                                        __end_of___fltol 513C  
                                                  u10000 67CA  
                                                  u10001 67C6  
                                                  u10010 748A  
                                                  u10011 7486  
                                        __end_of___lldiv 658A  
                                                  u10020 76AE  
                                                  u10100 76D2  
                                                  u10021 76A8  
                                                  u10101 76CE  
                                                  u10030 5C76  
                                                  u10110 6A60  
                                                  u10031 5C72  
                                                  u10111 6A5C  
                                                  u10120 6A74  
                                                  u11000 3F04  
                                                  u10200 2E8E  
                                                  u10121 6A70  
                                                  u11001 3F00  
                                                  u10201 2E8A  
                                                  u10026 76B0  
                                                  u10050 5D20  
                                                  u11010 376C  
                                                  u10210 2E9E  
                                                  u10051 5D1C  
                                                  u11011 3768  
                                                  u10211 2E9A  
                                                  u10060 646A  
                                                  u11100 3A0A  
                                                  u11020 377E  
                                                  u10300 2FEA  
                                                  u10220 2EE0  
                                                  u10140 5BAA  
                                                  u10061 6466  
                                                  u11101 3A06  
                                                  u11021 377A  
                                                  u10221 2EDC  
                                                  u10141 5BA6  
                                                  u11110 3A2A  
                                                  u11030 378E  
                                                  u10310 3012  
                                                  u10230 2EF6  
                                                  u10150 5BBC  
                                                  u11111 3A26  
                                                  u11031 378A  
                                                  u10311 300E  
                                                  u10231 2EF2  
                                                  u10151 5BB8  
                                                  u10048 5CA4  
                                                  u11120 3A3C  
                                                  u11040 37CE  
                                                  u10400 314A  
                                                  u10320 3030  
                                                  u10240 2F08  
                                                  u10160 5BE4  
                                                  u12000 41A8  
                                                  u11200 5E02  
                                                  u10049 5CB8  
                                                  u11121 3A38  
                                                  u11041 37CA  
                                                  u10401 3146  
                                                  u10321 302C  
                                                  u10241 2F04  
                                                  u10161 5BE0  
                                                  u12001 41A4  
                                                  u11201 5DFE  
                                                  u10138 6A92  
                                                  u11130 3A6A  
                                                  u11050 37E0  
                                                  u10410 3180  
                                                  u10330 3050  
                                                  u10250 2F18  
                                                  u10170 5C1A  
                                                  u11210 5E1C  
                                                  u12010 0714  
                                                  u10139 6AAA  
                                                  u11131 3A66  
                                                  u11051 37DC  
                                                  u10411 317C  
                                                  u10331 304C  
                                                  u10251 2F14  
                                                  u10171 5C16  
                                                  u11211 5E18  
                                                  u12011 0710  
                                                  u10180 7554  
                                                  u11140 3A80  
                                                  u11060 37F0  
                                                  u10500 324A  
                                                  u10420 3190  
                                                  u10340 305E  
                                                  u10260 2F54  
                                                  u11220 5E42  
                                                  u11300 60AC  
                                                  u12100 08D0  
                                                  u12020 0764  
                                                  u10181 7550  
                                                  u11141 3A7C  
                                                  u11061 37EC  
                                                  u10501 3246  
                                                  u10421 318C  
                                                  u10341 305A  
                                                  u10261 2F50  
                                                  u11221 5E3E  
                                                  u11301 60A8  
                                                  u12101 08CA  
                                                  u12021 0760  
                                                  u10078 6498  
                                                  u11150 3A94  
                                                  u11070 3826  
                                                  u10510 3264  
                                                  u10430 31BC  
                                                  u10350 306E  
                                                  u10270 2F62  
                                                  u10190 2E7C  
                                                  u11230 5E60  
                                                  u11310 60D0  
                                                  u12110 08D2  
                                                  u12030 0772  
                                                  u10079 64AC  
                                                  u11151 3A90  
                                                  u11071 3822  
                                                  u10511 3260  
                                                  u10431 31B8  
                                                  u10351 306A  
                                                  u10271 2F5E  
                                                  u10191 2E78  
                                                  u11231 5E5C  
                                                  u11311 60CC  
                                                  u12031 076E  
                                                  u10088 6768  
                                                  u11160 3AAE  
                                                  u11080 3836  
                                                  u10520 329E  
                                                  u10440 31CC  
                                                  u10360 30A0  
                                                  u10280 2FD0  
                                                  u13000 4488  
                                                  u11240 5E7C  
                                                  u11320 63C2  
                                                  u11400 71EC  
                                                  u10600 71CE  
                                                  u12200 0B08  
                                                  u12120 08E8  
                                                  u12040 0784  
                                                  _T0CON 000FD5  
                                                  u10089 677C  
                                                  u11161 3AAA  
                                                  u11081 3832  
                                                  u10521 329A  
                                                  u10441 31C8  
                                                  u10361 309C  
                                                  u10281 2FCC  
                                                  u13001 4484  
                                                  u11241 5E78  
                                                  u11321 63BE  
                                                  u11401 71E8  
                                                  u10601 71C8  
                                                  u12201 0B04  
                                                  u12121 08E4  
                                                  u12041 0780  
                                                  u10098 693A  
                                                  u11170 3AF6  
                                                  u11090 39B0  
                                                  u10530 32B0  
                                                  u10450 31E8  
                                                  u10370 30AE  
                                                  u10290 2FE8  
                                                  u13010 44DE  
                                                  u11250 5EA2  
                                                  u11330 6400  
                                                  u11410 504C  
                                                  u10610 71D0  
                                                  u12210 0B24  
                                                  u12130 096C  
                                                  u12050 07CC  
                                                  u10099 694E  
                                                  u11171 3AF2  
                                                  u10531 32AC  
                                                  u10451 31E4  
                                                  u10371 30AA  
                                                  u10291 2FE2  
                                                  u13011 44DA  
                                                  u11251 5E9E  
                                                  u11331 63FC  
                                                  u11411 5048  
                                                  u12211 0B20  
                                                  u12131 0968  
                                                  u12051 07C8  
                                                  u10620 74AC  
                                                  u11180 3B24  
                                                  u10540 32C0  
                                                  u10460 31F8  
                                                  u10380 30CC  
                                                  u13020 4528  
                                                  u13100 628A  
                                                  u10700 484C  
                                                  u11500 5F3A  
                                                  u11260 6044  
                                                  u11340 6434  
                                                  u11420 5080  
                                                  u12300 0D9C  
                                                  u12220 0B5A  
                                                  u12140 0A00  
                                                  u12060 07FC  
                                        ___awdiv@divisor 000C  
                                                  u10621 74A8  
                                                  u11181 3B20  
                                                  u10541 32BC  
                                                  u10461 31F4  
                                                  u10381 30C8  
                                                  u13021 4524  
                                                  u13101 6286  
                                                  u10701 4848  
                                                  u11501 5F36  
                                                  u11261 6040  
                                                  u11341 6430  
                                                  u12301 0D98  
                                                  u12221 0B56  
                                                  u12141 09FC  
                                                  u12061 07F6  
                                                  u10630 6FBA  
                                                  u11190 3B5E  
                                                  u10550 32E0  
                                                  u10470 320A  
                                                  u10390 3104  
                                                  u13030 4546  
                                                  u13110 61DE  
                                                  u10710 4896  
                                                  u11510 5F48  
                                                  u11270 605E  
                                                  u11350 5270  
                                                  u11430 50AE  
                                                  u12310 0DE4  
                                                  u12230 0B80  
                                                  u12150 0A72  
                                                  u12070 07FE  
                                                  u10631 6FB6  
                                                  u11191 3B5A  
                                                  u11095 39A6  
                                                  u10551 32DC  
                                                  u10471 3206  
                                                  u10391 3100  
                                                  u13031 4542  
                                                  u13111 61DA  
                                                  u10711 4892  
                                                  u11511 5F44  
                                                  u11271 605A  
                                                  u11351 526C  
                                                  u11431 50AA  
                                                  u12311 0DE0  
                                                  u12231 0B7C  
                                                  u12151 0A6E  
                                                  u10640 6FD0  
                                                  u10800 3BBA  
                                                  u10560 32F2  
                                                  u10480 3220  
                                                  u13040 4556  
                                                  u10720 48EA  
                                                  u11520 7002  
                                                  u11280 6078  
                                                  u11360 52AE  
                                                  u11440 50C2  
                                                  u11600 6C16  
                                                  u12400 0FF6  
                                                  u12320 0DF4  
                                                  u12240 0B92  
                                                  u12160 0A98  
                                                  u12080 0814  
                                                  u13120 53B8  
                                                  u13200 5ADE  
                                                  u14000 2D26  
                                                  u10641 6FCC  
                                                  u10801 3BB6  
                                                  u10561 32EE  
                                                  u10481 321C  
                                                  u13041 4552  
                                                  u10721 48E6  
                                                  u11521 6FFE  
                                                  u11281 6074  
                                                  u11361 52AA  
                                                  u11441 50BE  
                                                  u11425 5076  
                                                  u12401 0FF2  
                                                  u12321 0DF0  
                                                  u12241 0B8E  
                                                  u12161 0A94  
                                                  u12081 0810  
                                                  u13121 53B4  
                                                  u13201 5ADA  
                                                  u14001 2D22  
                                                  u10810 3BFE  
                                                  u10570 330E  
                                                  u10490 3236  
                                                  u13050 4564  
                                                  u10650 4762  
                                                  u10730 491C  
                                                  u11290 6096  
                                                  u11370 52CC  
                                                  u11450 50EA  
                                                  u11530 5586  
                                                  u11610 6C28  
                                                  u12410 1004  
                                                  u12330 0E8E  
                                                  u12250 0BA0  
                                                  u12170 0AAA  
                                                  u12090 08A0  
                                                  u13130 53CA  
                                                  u13210 5B08  
                                                  u14010 2D56  
                                                  u10811 3BFA  
                                                  u10571 330A  
                                                  u10491 3232  
                                                  u13051 4560  
                                                  u10651 475E  
                                                  u10731 4918  
                                                  u11291 6092  
                                                  u11371 52C8  
                                                  u11451 50E6  
                                                  u11611 6C24  
                                                  u12411 1000  
                                                  u12331 0E8A  
                                                  u12251 0B9C  
                                                  u12171 0AA6  
                                                  u12091 089C  
                                                  u13131 53C6  
                                                  u13211 5B04  
                                                  u14011 2D52  
                                                  u10900 3D9C  
                                                  u10820 3C10  
                                                  u13060 459E  
                                                  u13300 24E4  
                                                  u10660 4794  
                                                  u10740 495A  
                                                  u10580 6FA2  
                                                  u11380 52EC  
                                                  u11460 510A  
                                                  u11540 55A4  
                                                  u11700 4322  
                                                  u11620 6B40  
                                                  u12500 126C  
                                                  u12420 105C  
                                                  u12340 0EDC  
                                                  u12260 0BB6  
                                                  u12180 0ACC  
                                                  u13140 5400  
                                                  u13220 5B32  
                                                  u14020 2D68  
                                                  u10901 3D98  
                                                  u10821 3C0C  
                                                  u13061 459A  
                                                  u13301 24E0  
                                                  u10661 4790  
                                                  u10741 4956  
                                                  u10581 6F9E  
                                                  u11381 52E8  
                                                  u11461 5106  
                                                  u11541 55A0  
                                                  u11621 6B3A  
                                                  u12501 1268  
                                                  u12421 1058  
                                                  u12341 0ED8  
                                                  u12261 0BB2  
                                                  u12181 0AC8  
                                                  u13141 53FC  
                                                  u13221 5B2E  
                                                  u14021 2D64  
                                                  u10910 3DBA  
                                                  u10830 3C20  
                                                  u13070 45AC  
                                                  u13310 2530  
                                                  u10750 4984  
                                                  u10590 72A6  
                                                  u11390 533C  
                                                  u11470 511A  
                                                  u11550 55CC  
                                                  u11710 433E  
                                                  u11630 6B42  
                                                  u12510 1284  
                                                  u12430 112E  
                                                  u12350 0F04  
                                                  u12270 0BC4  
                                                  u12190 0AF2  
                                                  u13150 5412  
                                                  u13230 5B5C  
                                                  u14030 2D96  
                                                  u10911 3DB6  
                                                  u10831 3C1C  
                                                  u13071 45A8  
                                                  u13311 252C  
                                                  u10671 47BE  
                                                  u10751 4980  
                                                  u10591 72A2  
                                                  u11391 5338  
                                                  u11471 5116  
                                                  u11551 55C8  
                                                  u11535 557C  
                                                  u11711 433A  
                                                  u11607 6C0C  
                                                  u12511 1280  
                                                  u12431 112A  
                                                  u12351 0F00  
                                                  u12271 0BC0  
                                                  u12191 0AEE  
                                                  u13151 540E  
                                                  u13231 5B58  
                                                  u14031 2D92  
                                                  u11800 7410  
                                                  u10920 3DDA  
                                                  u10840 3C60  
                                                  u13320 2638  
                                                  u13240 22AA  
                                                  u12600 4718  
                                                  u10680 47E2  
                                                  u10760 49B2  
                                                  u11480 5EC2  
                                                  u11560 55F6  
                                                  u11720 4392  
                                                  u11640 6B58  
                                                  u12520 12E2  
                                                  u12440 114A  
                                                  u12360 0FA6  
                                                  u12280 0BEE  
                                                  u13080 69D8  
                                                  u13160 54B8  
                                                  u14040 2DA8  
                                                  u13400 4D4E  
                                                  u11801 740C  
                                                  u10921 3DD6  
                                                  u10841 3C5C  
                                                  u13321 2634  
                                                  u13241 22A6  
                                                  u12601 4714  
                                                  u10681 47DE  
                                                  u10761 49AE  
                                                  u11481 5EBE  
                                                  u11561 55F2  
                                                  u11705 4318  
                                                  u11641 6B54  
                                                  u12521 12DC  
                                                  u12441 1146  
                                                  u12361 0FA2  
                                                  u12281 0BEA  
                                                  u13081 69D4  
                                                  u13161 54B4  
                                                  u14041 2DA4  
                                                  u13401 4D4A  
                                                  u10930 3DEC  
                                                  u10850 3CA0  
                                                  u13330 26B6  
                                                  u13250 22BA  
                                                  u13090 6336  
                                                  u12610 472A  
                                                  u11810 5A02  
                                                  u10690 480C  
                                                  u10770 49FA  
                                                  u11490 5EE4  
                                                  u11730 43AE  
                                                  u11650 423E  
                                                  u12530 12E4  
                                                  u12450 115C  
                                                  u12370 0FBA  
                                                  u12290 0D36  
                                                  u13170 54CA  
                                                  u13410 4DDC  
                                                  u10931 3DE8  
                                                  u10851 3C9C  
                                                  u13331 26B2  
                                                  u13251 22B6  
                                                  u13091 6332  
                                                  u12611 4726  
                                                  u11811 59FE  
                                                  u10691 4808  
                                                  u10771 49F6  
                                                  u11491 5EE0  
                                                  u11731 43AA  
                                                  u12451 1158  
                                                  u12371 0FB6  
                                                  u12291 0D32  
                                                  u13171 54C6  
                                                  u13411 4DD8  
                                                  u12700 5240  
                                                  u10940 3E1A  
                                                  u10860 3D16  
                                                  u10780 3B98  
                                                  u13340 26E2  
                                                  u13260 22E6  
                                                  u11820 5A28  
                                                  u11900 3FAA  
                                                  u11580 5630  
                                                  u11740 43EA  
                                                  u11660 426E  
                                                  u12540 12FA  
                                                  u12460 116A  
                                                  u12380 0FCC  
                                                  u12620 5942  
                                                  u13180 5500  
                                                  u13500 14A6  
                                                  u13420 4DF8  
                                                  u14060 6B0C  
                                                  u12701 523C  
                                                  u10941 3E16  
                                                  u10861 3D12  
                                                  u10781 3B94  
                                                  u13341 26DE  
                                                  u13261 22E2  
                                                  u11821 5A24  
                                                  u11901 3FA6  
                                                  u11581 562A  
                                                  u11741 43E6  
                                                  u11725 4388  
                                                  u11661 426A  
                                                  u12541 12F6  
                                                  u12461 1166  
                                                  u12381 0FC8  
                                                  u12621 593E  
                                                  u13181 54FC  
                                                  u13501 14A2  
                                                  u13421 4DF4  
                                                  u14061 6B08  
                                                  u10950 3E30  
                                                  u10870 3D38  
                                                  u10790 3BAA  
                                                  u12710 650C  
                                                  u13350 272E  
                                                  u13270 2332  
                                                  u11750 723E  
                                                  u12550 45F8  
                                                  u11830 5A48  
                                                  u11910 3FD8  
                                                  u11590 5632  
                                                  u11670 4290  
                                                  u12470 11A0  
                                                  u12390 0FDA  
                                                  u12630 5974  
                                                  u13190 5512  
                                                  u13510 14DC  
                                                  u13430 137E  
                                                  u10951 3E2C  
                                                  u10871 3D34  
                                                  u10791 3BA6  
                                                  u12711 6508  
                                                  u13351 272A  
                                                  u13271 232E  
                                                  u11751 7238  
                                                  u12551 45F4  
                                                  u11831 5A44  
                                                  u11911 3FD4  
                                                  u11575 5608  
                                                  u11671 428C  
                                                  u11655 4234  
                                                  u12471 119C  
                                                  u12391 0FD6  
                                                  u12631 5970  
                                                  u13191 550E  
                                                  u13511 14D8  
                                                  u13431 137A  
                                                  u10960 3E44  
                                                  u10880 3D62  
                                                  u12720 652E  
                                                  u13360 2836  
                                                  u13280 243A  
                                                  u11760 7240  
                                                  u12560 462E  
                                                  u11840 5A96  
                                                  u11920 3FE6  
                                                  u12480 11CE  
                                                  u12640 5990  
                                                  u12800 1CF8  
                                                  u13600 1A02  
                                                  u13520 1510  
                                                  u13440 138E  
                                                  u10961 3E40  
                                                  u10881 3D5E  
                                                  u12721 652A  
                                                  u13361 2832  
                                                  u13281 2436  
                                                  u12561 462A  
                                                  u11841 5A92  
                                                  u11921 3FE2  
                                                  u12481 11CA  
                                                  u12641 598C  
                                                  u13601 19FE  
                                                  u13521 150C  
                                                  u13441 138A  
                                                  u10970 3E5E  
                                                  u10890 3D86  
                                                  u12730 6556  
                                                  u13290 24B8  
                                                  u11770 6DFE  
                                                  u12570 464A  
                                                  u11850 5AA4  
                                                  u11930 4110  
                                                  u11690 42FE  
                                                  u12490 1252  
                                                  u12650 59A2  
                                                  u12810 1D0E  
                                                  u13370 618E  
                                                  u13610 1A38  
                                                  u13530 152E  
                                                  u13450 13CC  
                                                  u14058 6AE6  
                                                  u10971 3E5A  
                                                  u10891 3D82  
                                                  u12731 6552  
                                                  u13291 24B4  
                                                  u14307 589E  
                                                  u11771 6DFA  
                                                  u12571 4646  
                                                  u11851 5AA0  
                                                  u11931 410C  
                                                  u11691 42FA  
                                                  u12491 124E  
                                                  u12651 599E  
                                                  u12811 1D0A  
                                                  u13371 618A  
                                                  u13611 1A34  
                                                  u13531 152A  
                                                  u13451 13C8  
                                                  u14059 6AFA  
                                                  u10980 3EA6  
                                                  u13380 4F2A  
                                                  u11780 6E2C  
                                                  u12580 4700  
                                                  u11940 412E  
                                                  u11860 3F48  
                                                  u12660 59CA  
                                                  u12900 1F6A  
                                                  u12820 1D32  
                                                  u12740 1B32  
                                                  u13700 34BE  
                                                  u13620 1A70  
                                                  u13540 1566  
                                                  u13460 13EA  
                                                  u10981 3EA2  
                                                  u13381 4F26  
                                                  u14317 58B4  
                                                  u14237 7262  
                                                  u11781 6E28  
                                                  u12581 46FA  
                                                  u11941 412A  
                                                  u11861 3F42  
                                                  u11685 42A4  
                                                  u12661 59C6  
                                                  u12901 1F66  
                                                  u12821 1D2E  
                                                  u12741 1B2E  
                                                  u13701 34BA  
                                                  u13621 1A6C  
                                                  u13541 1562  
                                                  u13461 13E6  
                                                  u11790 6636  
                                                  u12670 5196  
                                                  u10990 3ED6  
                                                  u12590 4702  
                                                  u11950 4148  
                                                  u11870 3F4A  
                                                  u11686 42AE  
                                                  u12910 1F8E  
                                                  u12830 1D6C  
                                                  u12750 1C00  
                                                  u13710 3544  
                                                  u13630 1AE4  
                                                  u13550 1584  
                                                  u13470 1408  
                                                  u13390 4D24  
                                                  u11791 6632  
                                                  u12671 5192  
                                                  u10991 3ED2  
                                                  u14327 58CA  
                                                  u14247 7274  
                                                  u11951 4144  
                                                  u11687 42BE  
                                                  u12911 1F8A  
                                                  u12831 1D68  
                                                  u12751 1BFC  
                                                  u13711 3540  
                                                  u13631 1AE0  
                                                  u13551 1580  
                                                  u13471 1404  
                                                  u13391 4D20  
                                                  u12680 51B0  
                                                  u11960 4162  
                                                  u11880 3F60  
                                                  u12920 2020  
                                                  u12840 1E16  
                                                  u12760 1C0E  
                                                  u13800 2908  
                                                  u13720 35CE  
                                                  u13640 1AFC  
                                                  u13560 15AA  
                                                  u13480 143E  
                                                  u12681 51AC  
                                                  u14337 58E0  
                                                  u14257 75E2  
                                                  u11961 415E  
                                                  u11881 3F5C  
                                                  u12921 201C  
                                                  u12841 1E10  
                                                  u12761 1C0A  
                                                  u13801 2904  
                                                  u13721 35CA  
                                                  u13641 1AF8  
                                                  u13561 15A6  
                                                  u13481 143A  
                                                  u12690 5228  
                                                  u11970 4170  
                                                  u11890 3F8E  
                                                  u12930 20CE  
                                                  u12850 1E18  
                                                  u12770 1C34  
                                                  u13810 2A92  
                                                  u13730 36A0  
                                                  u13650 3348  
                                                  u13570 16B0  
                                                  u13490 145C  
                                                  u12691 5224  
                                                  u14347 58F6  
                                                  u14267 583C  
                                                  u11971 416C  
                                                  u11891 3F8A  
                                                  u12931 20CA  
                                                  u12771 1C30  
                                                  u13811 2A8E  
                                                  u13731 369C  
                                                  u13651 3344  
                                                  u13571 16AC  
                                                  u13491 1458  
                                                  u11980 4182  
                                                  u12940 2136  
                                                  u12860 1E2E  
                                                  u12780 1C78  
                                                  u13900 2BA8  
                                                  u13820 2AA4  
                                                  u13740 36C0  
                                                  u13660 33A0  
                                                  u13580 17C6  
                                                  u14357 590C  
                                                  u14277 5856  
                                                  u11981 417E  
                                                  u12941 2130  
                                                  u12861 1E2A  
                                                  u12781 1C74  
                                                  u13901 2BA4  
                                                  u13821 2AA0  
                                                  u13741 36BC  
                                                  u13661 339C  
                                                  u13581 17C2  
                                                  u11990 4190  
                                                  u12950 2138  
                                                  u12870 1E60  
                                                  u12790 1CF6  
                                                  u13910 2BD6  
                                                  u13830 2AD2  
                                                  u13750 36E8  
                                                  u13670 33C0  
                                                  u13590 18DC  
                                                  u14367 752C  
                                                  u14287 586C  
                                                  u11991 418C  
                                                  u12871 1E5C  
                                                  u12791 1CF0  
                                                  u13911 2BD2  
                                                  u13831 2ACE  
                                                  u13751 36E4  
                                                  u13671 33BA  
                                                  u13591 18D8  
                                                  u12960 214E  
                                                  u12880 1EA2  
                                                  u13920 2BE8  
                                                  u13840 2AE4  
                                                  u13760 36FC  
                                                  u13680 33E8  
                                                  u14297 5888  
                                                  u12961 214A  
                                                  u12881 1E9E  
                                                  u13921 2BE4  
                                                  u13841 2AE0  
                                                  u13761 36F6  
                                                  u13681 33E2  
                                                  u12970 21EA  
                                                  u12890 1EF8  
                                                  u13930 2C52  
                                                  u13850 2B14  
                                                  u13770 36FE  
                                                  u13690 33EA  
                                                  u12971 21E6  
                                                  u12891 1EF4  
                                                  u13931 2C4E  
                                                  u13851 2B10  
                                                  u12980 441E  
                                                  u13940 2C64  
                                                  u13860 2B26  
                                                  u13780 3714  
                                                  u13676 33C2  
                                                  u12981 441A  
                                                  u13941 2C60  
                                                  u13861 2B22  
                                                  u13781 3710  
                                                  u12990 442C  
                                                  u13950 2C92  
                                                  u13870 2B54  
                                                  u13790 3740  
                                                  u12991 4428  
                                                  u13951 2C8E  
                                                  u13871 2B50  
                                                  u13791 373C  
                                                  u13960 2CA4  
                                                  u13880 2B66  
                                                  u13961 2CA0  
                                                  u13881 2B62  
                                                  u13970 2CD4  
                                                  u13890 2B96  
                                                  u13971 2CD0  
                                                  u13891 2B92  
                                                  u13980 2CE6  
                                                  u13981 2CE2  
                                                  u13990 2D14  
                                                  u13991 2D10  
                                                  i2l203 719C  
                                                  i2l209 7806  
                                                  i2l234 0088  
                                                  i2l235 0088  
                                                  i2l229 003E  
                                                  i2l750 7634  
                                                  i2l763 6DE4  
                                                  i2l780 7452  
                                 _errorNegSensorTraseiro 01A8  
                                                  i2l783 7808  
                                                  i2l775 5DEA  
                                                  i2l776 5DEE  
                                                  i2l786 77BE  
                            __size_of_EUSART1_is_tx_done 0014  
                                        ___awdiv@counter 000E  
                                                  i2l789 77C4  
                         __size_of_SRV_Display_SetCursor 0012  
                             __end_of_i2c1_fsmStateTable 0621  
                                           vfpfcnvrt@fmt 00C1  
                                                  _TMR0H 000FD7  
                                                  _TMR0L 000FD6  
                          __end_of_SRV_Display_SetCursor 76C4  
                                                  _TRISA 000F92  
                                                  _TRISB 000F93  
                                                  _TRISC 000F94  
                                 ??_I2C1_MasterGetRxData 000A  
                                  ?_I2C1_DO_RX_NACK_STOP 0001  
                                _errorNegSensorDianteiro 01AA  
                      __size_of_TMR0_SetInterruptHandler 000A  
                                    ___lmul@multiplicand 000E  
                              ?_TMR0_SetInterruptHandler 000A  
                             ??_I2C1_CallbackReturnReset 0015  
                                      ??_I2C1_MasterOpen 000A  
                                          ?_DRV_LCD_Data 0001  
                                      ??_I2C1_MasterStop 000A  
                                      ??_I2C1_Initialize 000A  
                                       __end_of_TMR0_ISR 719E  
                                          ?_DRV_LCD_Init 0001  
                          ?_DirectNet_enviaDadosSensores 0001  
                              incrementDigit@valorSensor 0018  
                                  SRV_Display_Write@data 0014  
                                        _DATAEE_ReadByte 768A  
                                                  _flags 004F  
                                      ??_SRV_ADT7410_Off 000A  
                                      ??_SRV_ADT7410_Run 0049  
                                                  _fputc 5B98  
                              _SRV_ADT7410_multiplex_off 7758  
                                                  _fputs 6F60  
                                        __end_of_isdigit 7246  
                                                  _tempo 0161  
                                                  atoi@n 001E  
                                                  pad@fp 001A  
                                                  atoi@s 0011  
                                                  _width 00F7  
                                                  ctoa@c 0015  
                                                  _putch 7802  
                                                  ctoa@l 0017  
                                                  ctoa@w 0019  
                                                  dtoa@d 0027  
                                                  dtoa@i 0047  
                                                  dtoa@n 003F  
                                                  dtoa@p 0039  
                                                  dtoa@s 003D  
                                                  dtoa@w 003B  
                       __end_of_SRV_ADT7410_multiplex_on 6D90  
                                        __end_of_isspace 6E38  
                                         ?_EUSART1_Write 0001  
                                      _SRV_TIMER_GetTick 7572  
                                        __end_of_isupper 71D6  
                                                  pclath 000FFA  
                                                  tablat 000FF5  
                                      SRV_ADT7410_Init@y 0049  
                                         ??_EUSART1_Read 0001  
                                                  plusw2 000FDB  
                    __size_of_SRV_ADT7410_GetTemperature 00F0  
                                                  ttemp5 0057  
                                                  ttemp6 005A  
                                                  ttemp7 005E  
                                                  status 000FD8  
                            __size_of_I2C1_MasterSendAck 0006  
                                     ?_SRV_TIMER_GetTick 000A  
                                                  wtemp8 0057  
                                        __end_of_sprintf 6CE0  
                                         ?___fpclassifyf 000A  
                                        __end_of_tolower 6B70  
                                           ??_I2C1_DO_RX 0015  
                                           ??_I2C1_DO_TX 0015  
                                        __end_of_strncmp 59EE  
                  fp__EUSART1_DefaultFramingErrorHandler 0000  
             __end_of_EUSART1_DefaultFramingErrorHandler 780A  
            __size_of_EUSART1_DefaultFramingErrorHandler 0002  
                   ??_EUSART1_DefaultFramingErrorHandler 0001  
                    ?_EUSART1_DefaultFramingErrorHandler 0001  
                     _EUSART1_DefaultFramingErrorHandler 7808  
                        __end_of_App_HTAD_MenuAjusteErro 2E62  
                                 ??_I2C1_DO_ADDRESS_NACK 0015  
                                           ??_I2C1_Close 000A  
                            __size_of_I2C1_MasterStartRx 0004  
                                __size_of_DirectNet_Init 0002  
                                __size_of_DirectNet_Send 004C  
                               fp__rd1RegCompleteHandler 0000  
                                             _ObjetoHTAD 02A0  
                                        __initialization 66AE  
                                          _DRV_LCD_Clear 75D6  
                                    ??_SRV_TIMER_GetTick 000E  
                                           __end_of_atoi 4750  
                                           __end_of_ctoa 5AC4  
                             __end_of_EUSART1_Initialize 6BCE  
                                           __end_of_main 75BE  
                                           __end_of_dtoa 41F6  
                                       _SRV_Display_Init 74FC  
                               fp__wr1RegCompleteHandler 0000  
                                         _decrementDigit 5446  
                      App_HTAD_MenuAjusteErro@objetoHTAD 00F5  
                            ?_INTERRUPT_InterruptManager 0001  
                              ??_SRV_TIMER_TickInterrupt 0001  
                                    _DRV_LCD_WriteString 7028  
                                  __size_of_App_HTAD_run 0060  
                           fp__I2C1_DO_SEND_RESTART_READ 0000  
                                                 ??_atoi 0013  
                                                 ??_ctoa 0016  
                                 ??_I2C1_MasterOperation 0017  
                                                 ??_main 004D  
                                                 ??_dtoa 002F  
                                          __activetblptr 000002  
                                         ??_DRV_LCD_Data 000A  
                          __size_of_I2C1_DO_SEND_RESTART 0008  
                                     __end_of_I2C1_DO_RX 64E6  
                                     __end_of_I2C1_DO_TX 5D2A  
                                         ??_DRV_LCD_Init 000D  
                                   DRV_LCD_WriteString@i 0010  
                             readKeypad@previousKeyState 01FE  
                                     __end_of_I2C1_Close 7428  
                             ?_Driver_Analog_GetValueAN0 0031  
                             ?_Driver_Analog_GetValueAN1 0031  
                             ?_Driver_Analog_GetValueAN3 0031  
                              __end_of_SRV_TIMER_GetTick 758C  
                                                 _ADCON0 000FC2  
                                                 _ADCON1 000FC1  
                                                 _ADCON2 000FC0  
                     __end_of_SRV_ADT7410_SetErrorSensor 6D38  
                             _SRV_ADT7410_SetErrorSensor 6CE0  
                                                 ?_fputc 000A  
                                                 ?_fputs 0013  
                                                 _ADRESH 000FC4  
                                                 _ADRESL 000FC3  
                                                 _EEDATA 000FA8  
                                                 _EECON2 000FA7  
                  Driver_Analog_GetValueAN0@averageValue 0035  
                                         _SRV_ADT7410_On 77CA  
                                       ___awdiv@dividend 000A  
                                                 _ANSELA 000F38  
                                          calculateLRC@i 000E  
                                                 ?_putch 0001  
                                                 _ANSELB 000F39  
                                                 _ANSELC 000F3A  
                                  __size_of_calculateLRC 0034  
                           __size_of_EUSART1_is_rx_ready 0018  
                                                 i2l1162 75A4  
                                                 i2l1159 7162  
                                                 i2l1551 6ED0  
                   __size_of_I2C1_SetAddressNackCallback 0018  
                                                 i2l9100 6DDC  
                                                 i2l9102 6DE0  
                                                 i2l9110 7438  
                                                 i2l9104 6DE2  
                                                 i2l9112 743A  
                                                 i2l9114 744A  
                                                 i2l9116 744E  
                                                 i2l9108 7428  
                                                 _TABLAT 000FF5  
                                                 i2l9090 6DA2  
                                                 i2l9092 6DC4  
                                                 i2l9094 6DC6  
                                                 i2l9086 6D90  
                                                 i2l9078 761E  
                                   ?_DRV_LCD_WriteString 000E  
                                                 i2l9096 6DD6  
                                                 i2l9088 6D90  
                                                 i2l9098 6DDA  
                                                 i2l9740 6EB2  
                                                 i2l9742 6EB6  
                                                 i2l9734 6E86  
                                                 i2l9744 6ECA  
                                                 i2l9736 6E9A  
                                                 i2l9738 6EA0  
                                                 i2l9746 77BA  
                                                 i2l9748 77C0  
                                                 i2l9694 758C  
                                                 _RCREG1 000FAE  
                                                 _RCSTA1 000FAB  
                                                 _OSCCON 000FD3  
                                                 _PLLRDY 007E97  
                                          vfpfcnvrt@done 00D1  
                                                 _SPBRG1 000FAF  
                                      ?_I2C1_MasterClose 0001  
                                                 _TXREG1 000FAD  
                                       __end_of___xxtofl 45C0  
                                                 _TXSTA1 000FAC  
                                ??_I2C1_MasterDisableIrq 000A  
                                      ?_I2C1_MasterStart 0001  
                            __end_of_gravarDadosNaEEPROM 6E86  
                                      ?_I2C1_MasterWrite 0001  
                                __size_of_SRV_TIMER_Init 0018  
                               ?_I2C1_MasterWaitForEvent 0001  
                                     ??_I2C1_MasterClose 000A  
                                       _I2C1_DO_TX_EMPTY 6738  
                                  __end_of_DirectNet_Run 1B0E  
                                     ??_I2C1_MasterStart 000A  
                                         DirectNet_Run@i 004A  
                                         ?_DRV_LCD_Clear 0001  
                                     ??_I2C1_MasterWrite 0019  
                                           _App_HTAD_run 6AB0  
                                   _convertFloatToBuffer 60E2  
                                           vfprintf@cfmt 00E7  
                           ?_DirectNet_enviaDadosDDDTCO2 0001  
                                      ?_SRV_ADT7410_Init 0001  
                                      ?_SRV_ADT7410_Read 002B  
                                                 ___flge 5242  
                                                 ___fleq 6394  
                                 __end_of_decrementDigit 5546  
                                                 ___lmul 69E2  
                                       __end_of_mapValue 690C  
                                              ??___aodiv 001A  
                                              ??___fladd 002B  
                                              ??___aomod 001A  
                                                 ___wmul 7454  
                                              ??___fldiv 0043  
                                              ??___awdiv 000E  
                                              ??___flneg 000E  
                                              ??___awmod 0016  
                                              ??___flmul 0012  
                                              ??___flsub 003B  
                                              ??___fltol 0027  
                                              ??___lldiv 001E  
                                                 _efgtoa 06EC  
                                 SRV_Display_Write@linha 0016  
                                                 _contRX 0187  
                                     ??_SRV_ADT7410_Init 0049  
                                     ??_SRV_ADT7410_Read 002D  
                               ?_EUSART1_SetErrorHandler 000A  
                                                 _floorf 41F6  
                           __size_of_I2C1_MasterClearIrq 0004  
                                       ?_TMR0_Initialize 0001  
                                                 clear_0 66E4  
                                                 clear_1 66F0  
                                                 clear_2 66FE  
                                                 clear_3 6710  
                                                 clear_4 6724  
                                       ___awdiv@quotient 0010  
                                        ___awmod@divisor 0014  
                                  DRV_LCD_WriteChar@data 000D  
           SRV_ADT7410_ReadMeanSensor@accumulatedUmidade 01A3  
                                                 isa$std 000001  
                                        ___awmod@counter 0016  
                                                 pad@buf 001C  
                                  DRV_LCD_WriteChar@temp 000B  
                       ??_EUSART1_SetOverrunErrorHandler 000C  
                        ?_EUSART1_SetOverrunErrorHandler 000A  
                                                 ctoa@fp 0013  
                                                 dtoa@fp 0025  
                               ??_I2C1_DO_SEND_ADR_WRITE 000B  
                                __end_of_DATAEE_ReadByte 769E  
                                                 _strcpy 6BCE  
                                                 _strlen 727E  
                                      ?_I2C1_SetCallback 000A  
                                 ??_I2C1_DO_RX_NACK_STOP 000A  
                                  _I2C1_DO_SEND_ADR_READ 76E4  
                                                 fputc@c 000A  
                                                 fputs@c 0017  
                            __end_ofi2_SRV_TIMER_GetTick 75A6  
                                                 fputs@i 0018  
                                                 fputs@s 0013  
                                           _calculateLRC 72EA  
                                              ??_isdigit 000C  
                          ?_I2C1_SetDataCompleteCallback 000F  
                                        ___fpclassifyf@e 0012  
                                        ___fpclassifyf@u 0014  
                                        ___fpclassifyf@x 000A  
                                     ??_I2C1_SetCallback 000E  
                                           __mediumconst 0000  
                                              ??_isspace 000C  
                                                 tblptrh 000FF7  
                                              ??_isupper 000C  
                                                 tblptrl 000FF6  
                                                 tblptru 000FF8  
                                 __end_of_SRV_ADT7410_On 77CE  
                                __size_of_incrementDigit 0100  
                                                 putch@c 0001  
                                      _DRV_LCD_SetCursor 5644  
                                       __end_of_vfprintf 69E2  
                                        ??_EUSART1_Write 000A  
               TMR0_SetInterruptHandler@InterruptHandler 000A  
                                 calculateLRC@dataLength 000C  
                                              ??_sprintf 004D  
                                              ??_tolower 0012  
                           __size_of_I2C1_MasterSendNack 0006  
                      __end_of_Driver_Analog_GetValueAN0 6394  
                      __end_of_Driver_Analog_GetValueAN1 62E8  
                      __end_of_Driver_Analog_GetValueAN3 623C  
                                        _eusart1RxBuffer 014A  
                                              ??_strncmp 0010  
                            __size_of_Driver_Analog_Init 000E  
                                _I2C1_DO_RX_NACK_RESTART 7768  
                             fp__I2C1_DO_RX_NACK_RESTART 0000  
                                     ?_DRV_LCD_SetCursor 000D  
                          __size_of_INTERRUPT_Initialize 0004  
                                  ??_DRV_LCD_WriteString 0010  
                                             ___flge@ff1 0023  
                                             ___flge@ff2 0027  
                                        ??___fpclassifyf 000E  
                                           ___xxtofl@arg 0014  
                                           ___xxtofl@exp 0013  
                                      _SYSTEM_Initialize 74C0  
                                           ___xxtofl@val 000A  
                                             ___fleq@ff1 000A  
                                             ___fleq@ff2 000E  
                         ??_DirectNet_enviaDadosSensores 000F  
                         I2C1_SetDataCompleteCallback@cb 000F  
                                             __accesstop 0060  
                                __end_of__initialization 672A  
                                             ___flneg@f1 000A  
                      App_HTAD_MenuAjusteErro@stateteste 01AC  
                        I2C1_MasterOperation@returnValue 0018  
                                     ?_SYSTEM_Initialize 0001  
                                          ___rparam_used 000001  
                               _SRV_ADT7410_multiplex_on 6D38  
                                   __size_of_DRV_LCD_Cmd 001E  
                                             ___fltol@f1 0023  
                                          ??_I2C1_Poller 0017  
                                    ??_DRV_LCD_SetCursor 000F  
                         __size_of_EUSART1_RxDataHandler 002C  
                                  ?_convertFloatToBuffer 002D  
                          __end_of_EUSART1_RxDataHandler 7454  
                                _rdBlkRegCompleteHandler 70E8  
                             fp__rdBlkRegCompleteHandler 0000  
                                         __pcstackCOMRAM 0001  
                                        ?_decrementDigit 0018  
                                           __pidataBANK0 77FE  
                                           __pidataBANK1 780A  
                                    ??_SYSTEM_Initialize 000E  
                       __end_of_I2C1_MasterEnableRestart 77EE  
                                      _SRV_Display_Clear 77A8  
                                              ?_TMR0_ISR 0001  
                          ??_DirectNet_enviaDadosDDDTCO2 000F  
                                       _DATAEE_WriteByte 7068  
                                          __end_of_fputc 5C62  
                                          __end_of_fputs 6FA4  
                             DirectNet_Run@valBruto_3050 0046  
                             DirectNet_Run@valBruto_3051 0048  
                             DirectNet_Run@valBruto_3049 0044  
                                          __end_of_putch 7804  
                                      _SRV_Display_Write 74DE  
                                     ?_SRV_Display_Clear 0001  
                                      _DRV_LCD_WriteChar 7246  
                              readKeypad@currentKeyState 0016  
                           ??_I2C1_DO_SEND_RESTART_WRITE 000A  
                                ??_I2C1_MasterSendTxData 000A  
                                   __end_of_EUSART1_Read 6DE6  
                                     ?_SRV_Display_Write 0013  
                                     ?_DRV_LCD_WriteChar 0001  
                                 __size_of_App_HTAD_Home 0430  
                              __end_of_DRV_LCD_SetCursor 573C  
                                       fp__App_HTAD_Home 0000  
                                          mapValue@inMax 0027  
                                          mapValue@inMin 0025  
                                  decrementDigit@digito1 001D  
                                  decrementDigit@digito2 001F  
                                    ??_SRV_Display_Clear 000E  
                       __size_of_App_HTAD_MenuAjusteErro 05A2  
                            __end_of_EUSART1_Receive_ISR 5DF0  
                                 __size_of_App_HTAD_init 0070  
                                  __end_of_I2C1_DO_RESET 770E  
                                        ?_SRV_ADT7410_On 0001  
                                          mapValue@value 0023  
                             __size_of_SRV_TIMER_GetTick 001A  
                                    ??_SRV_Display_Write 0016  
                                                ??_fputc 000E  
                              __end_of_SYSTEM_Initialize 74DE  
                                                ??_fputs 0017  
                                DRV_ADT7410_Read@address 0022  
                                    ??_DRV_LCD_WriteChar 000B  
                                                ??_putch 000A  
                                          _eusart1RxHead 0055  
                  Driver_Analog_GetValueAN1@averageValue 0035  
                                          _eusart1RxTail 0054  
                                             __pbssBANK0 00F7  
                                             __pbssBANK1 0100  
                                             __pbssBANK2 0200  
                                             __pbssBANK3 0300  
                                             __pbssBANK4 0400  
                        __end_of_I2C1_MasterWaitForEvent 76D4  
                        ??_EUSART1_SetRxInterruptHandler 000C  
                         __size_of_rd2RegCompleteHandler 002C  
                          __end_of_rd2RegCompleteHandler 73A4  
                                   I2C1_Open@returnValue 000B  
                         __size_of_wr2RegCompleteHandler 002C  
                      gravarDadosNaEEPROM@enderecoEEPROM 000D  
                           ??_SRV_ADT7410_ReadMeanSensor 0047  
                          __end_of_wr2RegCompleteHandler 73FC  
                                       DRV_LCD_Data@data 000A  
                                        ??_DRV_LCD_Clear 000D  
                                  _rd1RegCompleteHandler 73A4  
                     __size_of_SRV_ADT7410_multiplex_off 0008  
                                         _DirectNet_Init 7804  
                                         _DirectNet_Send 6E86  
                                DRV_ADT7410_Read@timeOut 0023  
                                      _I2C1_DO_SEND_STOP 7780  
                                DRV_LCD_WriteString@data 000E  
                                  _wr1RegCompleteHandler 734C  
                        __end_of_EUSART1_SetErrorHandler 774E  
                              __end_of_SRV_Display_Clear 77AE  
                    __size_of_I2C1_DO_SEND_RESTART_WRITE 0008  
                                   __end_of_DRV_LCD_Data 6C86  
                                   __end_of_DRV_LCD_Init 5918  
                               rd1RegCompleteHandler@ptr 0013  
                                          fp__I2C1_DO_RX 0000  
                                          fp__I2C1_DO_TX 0000  
                                        fp__I2C1_DO_IDLE 0000  
                                        fp__I2C1_DO_RCEN 0000  
                                                ?___flge 0023  
                                                ?___fleq 000A  
                                fp__I2C1_DO_ADDRESS_NACK 0000  
                       __end_of_TMR0_SetInterruptHandler 7758  
                                                ?___lmul 000A  
                                     ?_I2C1_DO_SEND_STOP 0001  
                              __end_of_SRV_Display_Write 74FC  
                                                ?___wmul 000A  
                                             ??_TMR0_ISR 0001  
                              __end_of_DRV_LCD_WriteChar 727E  
                                        _I2C1_MasterOpen 749E  
                                                ?_efgtoa 007B  
                                        _I2C1_MasterStop 77E6  
                                        _I2C1_Initialize 7662  
                              __size_of_lerDadosDaEEPROM 0096  
                                    __end_of_I2C1_Poller 7556  
                                                ?_floorf 006D  
                                         ___lmul@product 0012  
                                        _SRV_ADT7410_Off 77CE  
                                __size_of_I2C1_DO_RX_ACK 0008  
                                        _SRV_ADT7410_Run 4CDC  
                                      fp__I2C1_DO_RX_ACK 0000  
                                 ?_I2C1_DO_SEND_ADR_READ 0001  
                                __size_of_ADC_Initialize 0016  
                                    ??_I2C1_DO_SEND_STOP 000A  
                                                ?_strcpy 000A  
                                                ?_strlen 000A  
                 __end_of_EUSART1_SetFramingErrorHandler 7744  
                __size_of_EUSART1_SetFramingErrorHandler 000A  
                         _EUSART1_SetFramingErrorHandler 773A  
                                       ?_DATAEE_ReadByte 0001  
                        __size_of_I2C1_DO_SEND_ADR_WRITE 0010  
                                  readKeypad@currentTick 0012  
                                                i2l10300 7182  
                                                i2l10310 5D72  
                                                i2l10302 5D2A  
                                                i2l10320 5DE6  
                                                i2l10312 5D80  
                                                i2l10304 5D3A  
                                                i2l10314 5D90  
                                                i2l10306 5D48  
                                                i2l10316 5DAA  
                                                i2l10308 5D58  
                                                i2l10318 5DC6  
                                                i2l10274 7128  
                                                i2l10276 7152  
                                                i2l10292 7164  
                                                i2l10294 7166  
                                                i2l10470 001A  
                                                i2l10296 716A  
                                                i2l10480 0068  
                                                i2l10472 0028  
                                                i2l10298 716E  
                                                i2l10474 0036  
                                                i2l10476 004C  
                                                i2l10478 005A  
                                              ?___xxtofl 000A  
                           ?_EUSART1_DefaultErrorHandler 0001  
                                      _I2C1_MasterIsNack 769E  
                                                _OSCCON2 000FD2  
                                              _I2C1_Open 6620  
                                     __size_of_vfpfcnvrt 0760  
                                                _TBLPTRH 000FF7  
                                                _TBLPTRL 000FF6  
                     App_HTAD_MenuAjusteErro@CursorLinha 00FC  
                                                _TBLPTRU 000FF8  
                              ??_I2C1_DO_RX_NACK_RESTART 000A  
                                SRV_ADT7410_Read@address 002D  
                                                _OSCTUNE 000F9B  
                                                _SPBRGH1 000FB0  
                                      _I2C1_MasterSetIrq 77D2  
                     __size_of_I2C1_DO_SEND_RESTART_READ 0008  
                                                _SSP1ADD 000FC8  
                                                _SSP1BUF 000FC9  
                                     ?_I2C1_MasterIsNack 0001  
                               __end_of_SRV_Display_Init 751A  
                             ?_I2C1_DO_SEND_RESTART_READ 0001  
                              __size_of_DRV_ADT7410_Read 0106  
                         ??_I2C1_SetDataCompleteCallback 0013  
                                     ?_I2C1_MasterSetIrq 0001  
                                              ?_mapValue 0023  
         SRV_ADT7410_ReadMeanSensor@accumulatedDianteiro 01A5  
                                   DATAEE_WriteByte@bAdd 000B  
                                     _i2c1_fsmStateTable 0601  
                                 __end_of_DirectNet_Init 7806  
                                    ??_I2C1_MasterIsNack 000A  
                                 __end_of_DirectNet_Send 6ED2  
                              __end_of_I2C1_DO_SEND_STOP 7788  
                              ??_rdBlkRegCompleteHandler 0015  
                                     I2C1_SetCallback@cb 000A  
                                         _SRV_TIMER_Init 75BE  
                                 ??_convertFloatToBuffer 0034  
                                    ??_I2C1_MasterSetIrq 000A  
                SRV_ADT7410_ReadMeanSensor@meanDianteiro 0364  
                                          _App_HTAD_Home 3322  
                                   _ADC_InterruptHandler 0197  
                                                __Hparam 0000  
                                          _App_HTAD_init 6830  
                                                __Lparam 0000  
                                                _Sensor1 01C0  
                                                _Sensor2 01B8  
                                                _Sensor3 01B0  
                                 App_HTAD_Home@isCelsius 00FA  
                    SRV_ADT7410_SetErrorSensor@error_neg 000B  
                                        __size_of___flge 0104  
                                        __size_of___fleq 00AA  
                                                ___aodiv 4750  
                    SRV_ADT7410_SetErrorSensor@error_pos 000A  
                                                ___fladd 2E62  
                                                ___aomod 48D8  
                                                ___fldiv 3B7C  
                                                ___awdiv 5DF0  
                                    fp__I2C1_DO_TX_EMPTY 0000  
                                                ___flneg 71D6  
                                        __size_of___lmul 006A  
                                                ___awmod 6032  
                                                ___flmul 3752  
                                             _readKeypad 4A3C  
                                                ___flsub 6F1A  
                                                ___fltol 5036  
                                                ___lldiv 64E6  
                                        __size_of___wmul 0026  
                                       calculateLRC@data 000A  
                                              ?_vfprintf 00E1  
                                           __psmallconst 0600  
                                        __size_of_efgtoa 0C5A  
                            DRV_ADT7410_Read@bufferBlock 0027  
                                    _EUSART1_is_rx_ready 761E  
                                        __size_of_floorf 0216  
                             __end_of_EUSART1_is_tx_done 768A  
                                                __pcinit 66AE  
                                          ?_I2C1_DO_IDLE 0001  
                                          ?_I2C1_DO_RCEN 0001  
                                                __ramtop 0600  
                                SRV_Display_Write@coluna 0013  
                                        _CPU_Comunicando 01A0  
                                                __ptext0 75A6  
                                                __ptext1 74C0  
                                                __ptext2 731E  
                                                __ptext3 7556  
                                                __ptext4 77C6  
                                                __ptext5 7662  
                                                __ptext6 6B70  
                                                __ptext7 7726  
                                                __ptext8 7730  
                                                __ptext9 773A  
                               _I2C1_MasterEnableRestart 77EA  
                                              _T0CONbits 000FD5  
                              __end_of_I2C1_MasterIsNack 76B2  
                           ?_I2C1_SetAddressNackCallback 000F  
                                 DRV_LCD_SetCursor@linha 000F  
                                        __size_of_strcpy 005C  
                                        __size_of_strlen 0036  
                                  _OSCILLATOR_Initialize 7556  
                                           __size_of_abs 0040  
                                           __size_of_pad 00C2  
                                                _isdigit 720E  
                              __end_of_I2C1_MasterSetIrq 77D6  
                                             ??___xxtofl 000E  
                                                _recebeu 0200  
                               __end_of_I2C1_DO_TX_EMPTY 67B6  
                             __size_of_DRV_LCD_SetCursor 00F8  
                                       ___awmod@dividend 0012  
                                     _EUSART1_Initialize 6B70  
                                      _Driver_Analog_Run 4B9E  
                               ??_PIN_MANAGER_Initialize 000A  
                                                _isspace 6DE6  
                               wr1RegCompleteHandler@ptr 0013  
                                             ?_I2C1_Open 0001  
                                         _incrementDigit 5346  
                               SRV_ADT7410_Run@timeReset 018B  
                                                _isupper 719E  
                                                efgtoa@c 0081  
                                                efgtoa@d 009F  
                                                efgtoa@e 00B7  
                                                efgtoa@f 007D  
                                                efgtoa@g 00B3  
                                                efgtoa@h 00A9  
                                                efgtoa@i 00B1  
                                                efgtoa@l 00AD  
                                                efgtoa@m 0099  
                                                efgtoa@n 00B9  
                                                efgtoa@p 00A3  
                                                efgtoa@t 0093  
                                                efgtoa@u 00BB  
                                                efgtoa@w 00A5  
                                  _SRV_Display_SetCursor 76B2  
                          __size_of_I2C1_MasterGetRxData 0004  
                                fp__I2C1_DO_RX_NACK_STOP 0000  
                          ??_EUSART1_DefaultErrorHandler 0001  
                                                atoi@neg 0017  
                               ?_I2C1_CallbackReturnStop 0013  
          SRV_ADT7410_ReadMeanSensor@accumulatedTraseiro 01A4  
                                     ?_Driver_Analog_Run 0001  
                            ??_Driver_Analog_GetValueAN0 0033  
                            ??_Driver_Analog_GetValueAN1 0033  
                            ??_Driver_Analog_GetValueAN3 0033  
                             __size_of_SYSTEM_Initialize 001E  
                                                _sprintf 6C86  
                                                _tolower 6B10  
                            ?_SRV_ADT7410_SetErrorSensor 000A  
                                                _strncmp 5918  
                      __end_of_I2C1_DO_SEND_RESTART_READ 77A0  
                                   end_of_initialization 672A  
                             __end_of_I2C1_MasterSendAck 77B4  
                                             ??_mapValue 002D  
                                   ?_EUSART1_is_rx_ready 0001  
                                                floorf@e 0075  
                                                floorf@m 0071  
                                                floorf@u 0077  
                                                floorf@x 006D  
                                    _I2C1_MasterClearIrq 77FA  
                                    ?_EUSART1_Initialize 0001  
                              incrementDigit@CursorLinha 001A  
                                 __end_of_SRV_TIMER_Init 75D6  
                                                fputc@fp 000C  
                                          __Lmediumconst 0000  
                             __end_of_I2C1_MasterStartRx 77DE  
                            _EUSART1_OverrunErrorHandler 0193  
                                                fputs@fp 0015  
                                             _moveCursor 5AC4  
                                 ?_rd1RegCompleteHandler 0013  
                                 _I2C1_DO_SEND_ADR_WRITE 76D4  
                                        ?_DirectNet_Init 0001  
                                    ??_Driver_Analog_Run 000E  
                                        ?_DirectNet_Send 0001  
                                         ?_App_HTAD_Home 00F5  
                                    DRV_ADT7410_Read@len 001C  
                                    DRV_ADT7410_Read@reg 0019  
                           __end_of_I2C1_DO_SEND_RESTART 7790  
                                __end_of_I2C1_MasterOpen 74C0  
                                 ?_wr1RegCompleteHandler 0013  
                                       App_HTAD_Home@key 01FD  
                                __end_of_I2C1_MasterStop 77EA  
                                __end_of_I2C1_Initialize 7676  
                                       App_HTAD_Home@txt 01E1  
                                        ___lldiv@divisor 001A  
                                         ?_App_HTAD_init 0001  
                  __end_of_EUSART1_SetRxInterruptHandler 7730  
                 __size_of_EUSART1_SetRxInterruptHandler 000A  
                          _EUSART1_SetRxInterruptHandler 7726  
                      __size_of_I2C1_CallbackReturnReset 0004  
                                            _I2C1_Poller 7538  
                         __size_of_I2C1_MasterDisableIrq 0004  
                                        ___lldiv@counter 0022  
                              ?_I2C1_CallbackReturnReset 0013  
                          __end_of_I2C1_MasterDisableIrq 77F6  
                             __size_of_SRV_Display_Clear 0006  
                                            _I2C1_Status 0100  
                          __size_of_I2C1_DO_ADDRESS_NACK 006C  
                                __end_of_SRV_ADT7410_Off 77D2  
                               fp__rd2RegCompleteHandler 0000  
                                         _adc_values_an0 023C  
                                         _adc_values_an1 0228  
                                         _adc_values_an3 0214  
                             Driver_Analog_GetValueAN0@i 003B  
                                __end_of_SRV_ADT7410_Run 4E08  
                             Driver_Analog_GetValueAN1@i 003B  
                             Driver_Analog_GetValueAN3@i 003B  
                                      __end_of_vfpfcnvrt 226E  
                                             efgtoa@mode 00A8  
                                             efgtoa@sign 00A1  
                                                postdec1 000FE5  
                                                postdec2 000FDD  
                             __size_of_SRV_Display_Write 001E  
                               fp__wr2RegCompleteHandler 0000  
                                                postinc0 000FEE  
                                                postinc1 000FE6  
                                                postinc2 000FDE  
                                  __size_of_EUSART1_Read 0056  
                                __size_of_I2C1_MasterFsm 0064  
                                    _I2C1_MasterSendNack 77B4  
                    __end_of_I2C1_SetAddressNackCallback 7606  
                            _I2C1_SetAddressNackCallback 75EE  
                             __size_of_DRV_LCD_WriteChar 0038  
                                             ??_vfprintf 004D  
                                   ?_I2C1_MasterClearIrq 0001  
                                         ??_I2C1_DO_IDLE 000A  
                                   ??_EUSART1_Initialize 000C  
                                         ??_I2C1_DO_RCEN 000A  
                     __end_of_I2C1_DO_SEND_RESTART_WRITE 7798  
                             _I2C1_DO_SEND_RESTART_WRITE 7790  
                           ??_SRV_ADT7410_GetTemperature 000E  
                                                strcpy@d 0012  
                                                strlen@a 000C  
                                                strcpy@s 0010  
                                                strlen@s 000A  
                                    SRV_ADT7410_Run@tick 016D  
                              __size_of_I2C1_MasterClose 0004  
                             incrementDigit@CursorColuna 001B  
                               _TMR0_SetInterruptHandler 774E  
                                              _PORTCbits 000F82  
                                           _mchStateHTAD 03C8  
                                __size_of_I2C1_SetBuffer 0024  
                        __end_of_rdBlkRegCompleteHandler 7128  
                       __size_of_I2C1_MasterWaitForEvent 0010  
                              __size_of_I2C1_MasterStart 0004  
                              __size_of_I2C1_MasterWrite 0008  
                              __end_of_Driver_Analog_Run 4CDC  
                                 __end_of_incrementDigit 5446  
                                _App_HTAD_MenuAjusteErro 28C0  
                                            ___fladd@grs 0032  
                             fp__App_HTAD_MenuAjusteErro 0000  
                          __size_of_I2C1_MasterOperation 0044  
                          ??_I2C1_SetAddressNackCallback 0013  
                                      lerDadosDaEEPROM@i 000D  
                                          ___xxtofl@sign 0012  
                              __size_of_SRV_ADT7410_Init 0124  
                              __size_of_SRV_ADT7410_Read 0048  
                        I2C1_SetDataCompleteCallback@ptr 0011  
                                  DirectNet_Run@valBruto 0042  
                                            ___fldiv@grs 0067  
                                            ___fldiv@rem 0060  
                         I2C1_CallbackReturnReset@funPtr 0013  
                             ??_SRV_ADT7410_multiplex_on 000A  
                       __size_of_EUSART1_SetErrorHandler 000A  
                                   ?_I2C1_MasterSendNack 0001  
                                    EUSART1_Write@txData 000A  
                             SRV_Display_SetCursor@linha 0014  
                             decrementDigit@CursorColuna 001B  
                                  ??_EUSART1_is_rx_ready 0001  
                               __end_of_DATAEE_WriteByte 70A8  
                                        ?_SRV_TIMER_Init 0001  
                                            ___flmul@grs 0018  
                     __end_of_SRV_ADT7410_ReadMeanSensor 28C0  
                             _SRV_ADT7410_ReadMeanSensor 226E  
                                  __size_of_DRV_LCD_Data 005C  
                              __size_of_I2C1_SetCallback 007A  
                             rdBlkRegCompleteHandler@ptr 0013  
                                  __size_of_DRV_LCD_Init 00EC  
                             __size_of_I2C1_DO_SEND_STOP 0008  
                                           _EUSART1_Read 6D90  
                                       ??_decrementDigit 001C  
                   __size_of_EUSART1_DefaultErrorHandler 0006  
                               ?_SRV_TIMER_TickInterrupt 0001  
                              _Driver_Analog_GetValueAN0 62E8  
                              _Driver_Analog_GetValueAN1 623C  
                              _Driver_Analog_GetValueAN3 6190  
                                            ?_readKeypad 0001  
                           __end_of_INTERRUPT_Initialize 77CA  
                                  ??_I2C1_MasterClearIrq 000A  
                           __size_of_gravarDadosNaEEPROM 004E  
                                         __end_of___flge 5346  
                                  _errorNegSensorUmidade 01A6  
                                         __end_of___fleq 643E  
                                       _lerDadosDaEEPROM 658A  
                                         __end_of___lmul 6A4C  
                                            vfpfcnvrt@ap 00C3  
                                            vfpfcnvrt@ct 00DD  
                                            vfpfcnvrt@fp 00BF  
                                            vfpfcnvrt@ll 00C9  
                                         __end_of___wmul 747A  
                                         _I2C1_DO_RX_ACK 7778  
                        App_HTAD_MenuAjusteErro@tickLast 0175  
                                         __end_of_efgtoa 1346  
                                      __size_of_TMR0_ISR 003A  
                          DirectNet_enviaDadosSensores@i 0010  
                                         _ADC_Initialize 7636  
                                         __end_of_floorf 440C  
                                       ??_SRV_ADT7410_On 000A  
                                 ?_OSCILLATOR_Initialize 0001  
                                             floorf@F527 0159  
                             __size_of_I2C1_MasterIsNack 0014  
                                        ?_incrementDigit 0018  
                        __end_of_I2C1_CallbackReturnStop 77E6  
                         __size_of_I2C1_MasterSendTxData 0008  
                     SRV_ADT7410_GetTemperature@typeRead 000A  
                          __end_of_I2C1_MasterSendTxData 77A8  
                       SRV_ADT7410_SetErrorSensor@sensor 000C  
                             __size_of_I2C1_MasterSetIrq 0004  
                                         __end_of_strcpy 6C2A  
                                         __end_of_strlen 72B4  
                                 ?_SRV_Display_SetCursor 0013  
                                    start_initialization 66AE  
                            __end_of_DRV_LCD_WriteString 7068  
                                            ??_I2C1_Open 000A  
                          __size_of_I2C1_DO_RX_NACK_STOP 0008  
                                 __size_of_DirectNet_Run 07C8  
                               __size_of_TMR0_Initialize 0036  
                             App_HTAD_MenuAjusteErro@key 01F5  
                             __end_of_Driver_Analog_Init 7702  
                        __size_of_PIN_MANAGER_Initialize 002E  
                                           _DRV_LCD_Data 6C2A  
                             App_HTAD_MenuAjusteErro@txt 01E1  
                                            __end_of_abs 7028  
                                            __end_of_pad 5F76  
                                           _DRV_LCD_Init 582C  
                                  ??_I2C1_MasterSendNack 000A  
                  SRV_ADT7410_ReadMeanSensor@meanUmidade 0400  
          EUSART1_SetRxInterruptHandler@interruptHandler 000A  
                                       _DRV_ADT7410_Read 513C  
                                     _App_HTAD_Home$2431 01F8  
                                     _App_HTAD_Home$2433 01FA  
                                     _App_HTAD_Home$2429 01F6  
                     SRV_ADT7410_ReadMeanSensor@valueAux 0079  
                                  __end_of_EUSART1_Write 7662  
                                           _lastReadTime 0165  
                           __size_ofi2_SRV_TIMER_GetTick 001A  
                        SRV_ADT7410_multiplex_on@address 000C  
                                  _bufferDadosFAHRENHEIT 01C8  
                  Driver_Analog_GetValueAN3@averageValue 0035  
                                          ??_DRV_LCD_Cmd 000B  
                                        ??_App_HTAD_Home 01DD  
                                 fp__EUSART1_Receive_ISR 0000  
                                            ?_moveCursor 0018  
                                  __end_of___fpclassifyf 5644  
                                        ??_App_HTAD_init 004B  
                                     DRV_LCD_SetCursor@y 0011  
                                     DRV_LCD_SetCursor@z 0010  
      rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621@ptr 0013  
                                    DATAEE_ReadByte@bAdd 000A  
                               I2C1_SetBuffer@bufferSize 000C  
                                       ?_I2C1_MasterOpen 0001  
                     SRV_ADT7410_ReadMeanSensor@typeRead 006D  
                                       ?_I2C1_MasterStop 0001  
                                       ?_I2C1_Initialize 0001  
                                            vfprintf@fmt 00E3  
                                       ?_SRV_ADT7410_Off 0001  
                                       ?_SRV_ADT7410_Run 0001  
                                         mapValue@outMax 002B  
                                         mapValue@outMin 0029  
                                               ??___flge 002B  
                                               ??___fleq 0012  
                                               ??___lmul 0012  
                            SRV_Display_SetCursor@coluna 0013  
                                 __end_of_I2C1_DO_RX_ACK 7780  
                                               ??___wmul 000E  
                                  _EUSART1_RxDataHandler 7428  
                                ??_I2C1_DO_SEND_ADR_READ 000A  
                                               ??_efgtoa 0082  
                         ?_EUSART1_SetRxInterruptHandler 000A  
                                 __end_of_ADC_Initialize 764C  
                                            __pdataBANK0 00FA  
                                            __pdataBANK1 01FE  
                                               ??_floorf 0047  
                              decrementDigit@valorSensor 0018  
                    __size_of_SRV_ADT7410_SetErrorSensor 0058  
                              ??_App_HTAD_MenuAjusteErro 01DD  
                                               ??_strcpy 000E  
                                               ??_strlen 000C  
                                       I2C1_Open@address 000A  
                                         _eusart1RxCount 00F9  
                             __size_of_Driver_Analog_Run 013E  
                                              ___fladd@a 0027  
                                              ___fladd@b 0023  
                                              ___fldiv@a 003F  
                                              ___fldiv@b 003B  
                                              ___flmul@a 000E  
                                              ___flmul@b 000A  
                                            __pbssCOMRAM 004D  
                                   _I2C1_DO_SEND_RESTART 7788  
                                              ___flsub@a 0037  
                                              ___flsub@b 0033  
                      _EUSART1_RxDefaultInterruptHandler 0199  
                                          __pcstackBANK0 0060  
                                          __pcstackBANK1 01D5  
                                       ___aodiv@dividend 000A  
                                      __size_of___xxtofl 01B4  
                                  incrementDigit@digito1 001D  
                                  incrementDigit@digito2 001F  
                           Driver_Analog_GetValueAN0@sum 0037  
                            ??_I2C1_DO_SEND_RESTART_READ 000A  
                           Driver_Analog_GetValueAN1@sum 0037  
                           Driver_Analog_GetValueAN3@sum 0037  
                                      ?_SRV_Display_Init 0001  
                                    __size_of_readKeypad 0162  
      fp__rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621 0000  
 __end_of_rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621 70E8  
__size_of_rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621 0040  
       ??_rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621 0015  
        ?_rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621 0013  
         _rdBlkRegCompleteHandler@DriverADT7410TRZ$F2621 70A8  
                                   __end_of_I2C1_DO_IDLE 7726  
                       ??_EUSART1_SetFramingErrorHandler 000C  
                        ?_EUSART1_SetFramingErrorHandler 000A  
                                   __end_of_I2C1_DO_RCEN 771A  
                                     ??_SRV_Display_Init 0015  
                           __size_of_EUSART1_Receive_ISR 00C6  
                          I2C1_SetAddressNackCallback@cb 000F  
                                      __size_of_mapValue 006C  
                        __end_of_SRV_TIMER_TickInterrupt 7164  
                                              _atoi$3705 0019  
                                              _atoi$3706 001D  
                                              _atoi$3707 001B  
                                  _TMR0_InterruptHandler 019B  
                                  _rd2RegCompleteHandler 7378  
                              fp__I2C1_DO_SEND_ADR_WRITE 0000  
                                            _efgtoa$3642 008B  
                                            _efgtoa$3637 0087  
                                            _efgtoa$3646 008D  
                                            _efgtoa$3638 0089  
                                            _efgtoa$3647 008F  
                                            _efgtoa$3648 0091  
                                 _PIN_MANAGER_Initialize 731E  
                    __end_of_DirectNet_enviaDadosDDDTCO2 6032  
                            _DirectNet_enviaDadosDDDTCO2 5F76  
                                          _DirectNet_Run 1346  
                                  _wr2RegCompleteHandler 73D0  
                                              _dtoa$3613 0037  
                                  __end_of_DRV_LCD_Clear 75EE  
                                    __end_of_DRV_LCD_Cmd 7538  
                             ??_I2C1_MasterEnableRestart 000A  
                               rd2RegCompleteHandler@ptr 0013  
                                              __pintcode 0008  
                                         _I2C1_MasterFsm 6A4C  
                                 __size_of_I2C1_DO_RESET 000C  
                                       fp__I2C1_DO_RESET 0000  
                                               ?___aodiv 000A  
                                               ?___fladd 0023  
                                               ?___aomod 000A  
                                        ?_I2C1_DO_RX_ACK 0001  
                         lerDadosDaEEPROM@enderecoEEPROM 000F  
                                               ?___fldiv 003B  
                                               ?___awdiv 000A  
                                              __ptext100 6620  
                                              __ptext101 749E  
                                              __ptext110 7770  
                                              __ptext102 7760  
                                       ___aodiv@quotient 001C  
                                               ?___flneg 000A  
                                              __ptext111 7778  
                                              __ptext103 6FA4  
                                              __ptext120 76E4  
                                              __ptext112 7780  
                                              __ptext104 7538  
                                              __ptext121 771A  
                                              __ptext113 7788  
                                              __ptext105 76C4  
                                              __ptext130 70A8  
                                              __ptext122 6738  
                                              __ptext114 7790  
                                              __ptext106 6A4C  
                                              __ptext131 77DE  
                                              __ptext123 77D2  
                                              __ptext115 7798  
                                              __ptext107 690C  
                                              __ptext140 747A  
                                              __ptext132 77E2  
                                              __ptext124 769E  
                                              __ptext116 770E  
                                              __ptext108 7702  
                                              __ptext141 77E6  
                                              __ptext133 70E8  
                                              __ptext125 77A0  
                                              __ptext117 643E  
                                              __ptext109 7768  
                                              __ptext142 77EA  
                                              __ptext134 734C  
                                              __ptext126 77AE  
                                              __ptext118 5C62  
                                              __ptext151 7164  
                                              __ptext143 77EE  
                                              __ptext135 7378  
                                              __ptext127 77D6  
                                              __ptext119 76D4  
                                              __ptext160 758C  
                                              __ptext152 7128  
                                              __ptext144 73FC  
                                              __ptext136 73A4  
                                              __ptext128 77B4  
                                              __ptext161 761E  
                                              __ptext153 7806  
                                              __ptext145 77F2  
                                              __ptext137 73D0  
                                              __ptext129 77DA  
                                              __ptext162 6D90  
                                              __ptext154 5D2A  
                                              __ptext146 77F6  
                                              __ptext138 7606  
                                              __ptext163 0000  
                                              __ptext155 77BA  
                                              __ptext147 77FA  
                                              __ptext139 67B6  
                                              __ptext156 7808  
                                              __ptext148 76F4  
                                              __ptext157 77C0  
                                              __ptext149 7804  
                                              __ptext158 7428  
                                              __ptext159 6E86  
                                               ?___awmod 0012  
                                               ?___flmul 000A  
                                               ?___flsub 0033  
                                               ?___fltol 0023  
                                               ?___lldiv 0016  
                     __end_of_SRV_ADT7410_GetTemperature 582C  
                             _SRV_ADT7410_GetTemperature 573C  
                                        ?_ADC_Initialize 0001  
                                _I2C1_MasterWaitForEvent 76C4  
                                              _bufferLcr 02E1  
                                       _I2C1_MasterClose 77F6  
                                         _I2C1_SetBuffer 747A  
                           ??_INTERRUPT_InterruptManager 0006  
                        _SRV_ADT7410_ReadMeanSensor$4209 0070  
                                       _I2C1_MasterStart 77EE  
                                      __size_of_vfprintf 006A  
                                       _I2C1_MasterWrite 7760  
                                    __size_of_moveCursor 00D4  
                                            __smallconst 0600  
                                               _BAUDCON1 000FB8  
                  fp__EUSART1_DefaultOverrunErrorHandler 0000  
             __end_of_EUSART1_DefaultOverrunErrorHandler 77C0  
            __size_of_EUSART1_DefaultOverrunErrorHandler 0006  
                   ??_EUSART1_DefaultOverrunErrorHandler 0001  
                    ?_EUSART1_DefaultOverrunErrorHandler 0001  
                     _EUSART1_DefaultOverrunErrorHandler 77BA  
                                               ?_isdigit 000A  
                                  ?_I2C1_DO_SEND_RESTART 0001  
                                   _EUSART1_ErrorHandler 0191  
                              convertFloatToBuffer@value 002D  
                                     _bufferDadosDDDTCO2 02C3  
                                              _count_aux 018F  
                                               ?_isspace 000A  
                                      ?_I2C1_DO_TX_EMPTY 0001  
                                     _bufferDadosCELSIUS 01CD  
                                       _SRV_ADT7410_Init 4E08  
                                       _SRV_ADT7410_Read 6ED2  
                                               ?_isupper 000A  
                                _EUSART1_SetErrorHandler 7744  
                       __end_of_I2C1_CallbackReturnReset 77E2  
                                        calculateLRC@lrc 000D  
                                     ??_I2C1_DO_TX_EMPTY 0015  
                                       ??_DirectNet_Init 000A  
                                               ?_sprintf 00E9  
                                               ?_tolower 0010  
                                       ??_DirectNet_Send 0005  
                                     _EUSART1_is_tx_done 7676  
                                         __size_of_fputc 00CA  
                                         __size_of_fputs 0044  
                               __size_of_DATAEE_ReadByte 0014  
                                ??_rd1RegCompleteHandler 0015  
                                               ?_strncmp 000A  
                                ?_I2C1_DO_SEND_ADR_WRITE 0001  
                              I2C1_MasterSendTxData@data 000A  
                                              _recebeuID 0053  
                                         __size_of_putch 0002  
                                SRV_ADT7410_Run@tickLast 0169  
                                   _INTERRUPT_Initialize 77C6  
                                  DRV_LCD_SetCursor@temp 0012  
                                ??_wr1RegCompleteHandler 0015  
                                      ??_TMR0_Initialize 000C  
                                       _I2C1_SetCallback 67B6  
                                         ___wmul@product 000E  
                                               _LATAbits 000F89  
                EUSART1_SetErrorHandler@interruptHandler 000A  
                                               _LATBbits 000F8A  
                                               _LATCbits 000F8B  
                                             _I2C1_DO_RX 643E  
                                             _I2C1_DO_TX 5C62  
                                    ?_EUSART1_is_tx_done 0001  
                            App_HTAD_MenuAjusteErro@tick 0179  
                                               _PIE1bits 000F9D  
                                  App_HTAD_Home@tickLast 017D  
                                            _bufferEnvio 0124  
                                             _I2C1_Close 73FC  
                                         ?_DirectNet_Run 003C  
                                           ?_I2C1_Poller 0001  
                                 __end_of_I2C1_MasterFsm 6AB0  
                    __size_of_INTERRUPT_InterruptManager 0094  
                           __end_of_I2C1_MasterGetRxData 77DA  
                    App_HTAD_MenuAjusteErro@CursorColuna 00FB  
                                          ?_App_HTAD_run 0001  
                             ??_TMR0_SetInterruptHandler 000C  
                                               _PIR1bits 000F9E  
                       __size_of_I2C1_CallbackReturnStop 0004  
                                               _PIR2bits 000FA1  
                          __size_of_convertFloatToBuffer 00AE  
                                               i2u832_40 7632  
                                               i2u832_41 762C  
                                               i2u833_40 7634  
                                               i2u835_40 6DA2  
                                               i2u835_41 6D9E  
                                               i2u836_40 6DD6  
                                               i2u836_41 6DD2  
                                               i2u837_40 744A  
                                               i2u837_41 7446  
                                               i2u890_40 6E9A  
                                               i2u890_41 6E96  
                                               i2u971_40 5D80  
                                               i2u970_48 5D5E  
                                               i2u971_41 5D7C  
                                               i2u970_49 5D72  
                                 ?_EUSART1_RxDataHandler 0001  
                                               i2u973_40 5DC6  
                                               i2u972_48 5D96  
                                               i2u973_41 5DC2  
                                               i2u972_49 5DAA  
                                               i2u966_40 7152  
                                               i2u966_41 714E  
                                               i2u974_48 5DCC  
                                               i2u967_40 7182  
                                               i2u974_49 5DE2  
                                               i2u967_41 717E  
                                               _RCONbits 000FD0  
                                               i2u992_40 0028  
                                               i2u992_41 0024  
                                               i2u969_40 5D48  
                                               i2u968_48 7188  
                                               i2u993_40 0036  
                                               i2u969_41 5D44  
                                               i2u968_49 719C  
                                               i2u993_41 0032  
                                     _I2C1_MasterSendAck 77AE  
                                               i2u994_40 004C  
                                               i2u994_41 0048  
                                               i2u995_40 005A  
                                               i2u995_41 0056  
                                               i2u996_40 0068  
                                               i2u996_41 0064  
                                               i2u997_48 006E  
                                               i2u997_49 0084  
                              _I2C1_DO_SEND_RESTART_READ 7798  
                 SRV_ADT7410_ReadMeanSensor@meanTraseiro 0300  
                                               _SSP1CON1 000FC6  
                                               _SSP1CON2 000FC5  
                                               _TMR0_ISR 7164  
                             ?_SRV_ADT7410_multiplex_off 0001  
                                 __end_of_I2C1_SetBuffer 749E  
                                               _SSP1STAT 000FC7  
                   __end_of_I2C1_SetDataCompleteCallback 761E  
                  __size_of_I2C1_SetDataCompleteCallback 0018  
                           _I2C1_SetDataCompleteCallback 7606  
                    SRV_ADT7410_ReadMeanSensor@valueMean 0074  
                                     _I2C1_MasterStartRx 77DA  
                                              _stateHTAD 01AD  
                                              _vfpfcnvrt 1B0E  
                            ?_I2C1_DO_SEND_RESTART_WRITE 0001  
                                  App_HTAD_Home@typeRead 01FC  
                                    ?_I2C1_MasterSendAck 0001  
                                             _ADCON0bits 000FC2  
                                      ___wmul@multiplier 000A  
                               ?_I2C1_DO_RX_NACK_RESTART 0001  
                                   fp__I2C1_DO_SEND_STOP 0000  
                                   ??_EUSART1_is_tx_done 000A  
                     __size_of_Driver_Analog_GetValueAN0 00AC  
                     __size_of_Driver_Analog_GetValueAN1 00AC  
                     __size_of_Driver_Analog_GetValueAN3 00AC  
                                          ?_calculateLRC 000A  
                      DirectNet_Run@objetoHTAD_DirectNet 003C  
                                    ?_I2C1_MasterStartRx 0001  
                           __end_of_I2C1_DO_ADDRESS_NACK 6978  
                                _errorPosSensorDianteiro 01AB  
                           DirectNet_enviaDadosDDDTCO2@i 0010  
                               wr2RegCompleteHandler@ptr 0013  
                      SRV_ADT7410_ReadMeanSensor@address 0076  
                                  DATAEE_WriteByte@bData 000A  
                                       ??_SRV_TIMER_Init 000C  
                                           _isspace$3736 0010  
                         __end_of_I2C1_DO_SEND_ADR_WRITE 76E4  
                                          _I2C1_DO_RESET 7702  
                                         _recebeu_Serial 01A1  
                                             vfpfcnvrt@c 00E0  
                                             vfpfcnvrt@f 00D9  
                                      ___lmul@multiplier 000A  
                                            _INTCON2bits 000FF1  
                                  ?_INTERRUPT_Initialize 0001  
                                convertFloatToBuffer@val 0036  
                                  I2C1_Close@returnValue 000A  
                               ?_rdBlkRegCompleteHandler 0013  
                                    _gravarDadosNaEEPROM 6E38  
                                     DRV_LCD_WriteChar@y 000C  
                               __end_of_lerDadosDaEEPROM 6620  
                                      ?_DATAEE_WriteByte 000A  
                                    I2C1_SetCallback@idx 000E  
                                    I2C1_SetCallback@ptr 000C  
                                            _DRV_LCD_Cmd 751A  
                                   ??_I2C1_MasterSendAck 000A  
                            ?_SRV_ADT7410_ReadMeanSensor 006D  
                                  EUSART1_Read@readValue 0001  
                                 ?_rd2RegCompleteHandler 0013  
                                     ??_DATAEE_WriteByte 000B  
                           __end_of_I2C1_MasterOperation 6FE8  
                                             _EECON1bits 000FA6  
                                       DirectNet_Send@rx 0005  
                                 ?_wr2RegCompleteHandler 0013  
                                   ??_I2C1_MasterStartRx 000A  
                                         ??_App_HTAD_run 004D  
                                               __Hrparam 0000  
                                        ?_I2C1_MasterFsm 0001  
                                             vfprintf@ap 00E5  
                                               __Lrparam 0000  
                                             vfprintf@fp 00E1  
                              ??_I2C1_MasterWaitForEvent 000A  
                                           _sample_index 01A2  
                                           ??_readKeypad 000E  
                                  _I2C1_MasterDisableIrq 77F2  
                               __end_of_DRV_ADT7410_Read 5242  
                                   ?_gravarDadosNaEEPROM 0001  
                                ??_OSCILLATOR_Initialize 000A  
                                        ?_I2C1_SetBuffer 000A  
                                       ??_incrementDigit 001C  
                                       __size_of___aodiv 0188  
                                       __size_of___fladd 04C0  
                                       __size_of___aomod 0164  
                                       __size_of___fldiv 039C  
                                       __size_of___awdiv 00C4  
                                       __size_of___flneg 0038  
                      __end_of_SRV_ADT7410_multiplex_off 7760  
                                       __size_of___awmod 00B0  
                                    i2_SRV_TIMER_GetTick 758C  
                                       __size_of___flmul 042A  
                                       __size_of___flsub 0046  
                                       __size_of___fltol 0106  
                                       __size_of___lldiv 00A4  
                            __size_of_EUSART1_Initialize 005E  
                                             ?_vfpfcnvrt 00BF  
                                        ___aodiv@divisor 0012  
                                ??_SRV_Display_SetCursor 0014  
                                        ___aodiv@counter 001A  
                                         ??_calculateLRC 000D  
                                 ??_I2C1_DO_SEND_RESTART 000A  
                                  SRV_ADT7410_Read@F6557 018D  
                                     ___fpclassifyf@F465 015D  
                              ??_EUSART1_SetErrorHandler 000C  
                    __end_of_EUSART1_DefaultErrorHandler 77C6  
                            _EUSART1_DefaultErrorHandler 77C0  
                                             sprintf@fmt 00EB  
                            __end_of_EUSART1_is_rx_ready 7636  
                                               ___xxtofl 440C  
                                            _ID_Responde 019E  
                       __size_of_SRV_TIMER_TickInterrupt 003C  
                         DirectNet_enviaDadosDDDTCO2@LCR 000F  
                                       __size_of_isdigit 0038  
                                         ?_I2C1_DO_RESET 0001  
                                  __size_of_I2C1_DO_IDLE 000C  
                           Driver_Analog_Run@currentTick 0012  
                                  __size_of_I2C1_DO_RCEN 000C  
                                       __size_of_isspace 0052  
                                               __ptext10 7744  
                                               __ptext11 7636  
                                               __ptext20 4F2C  
                                               __ptext12 6AB0  
                                               __ptext21 5F76  
                                               __ptext13 4CDC  
                                               __ptext30 6C86  
                                               __ptext22 72EA  
                                               __ptext14 77CA  
                                               __ptext31 6978  
                                               __ptext23 764C  
                                               __ptext15 77CE  
                                               __ptext40 5036  
                                               __ptext32 1B0E  
                                               __ptext24 3322  
                                               __ptext16 4B9E  
                                               __ptext41 71D6  
                                               __ptext33 5918  
                                               __ptext25 28C0  
                                               __ptext17 1346  
                                               __ptext50 6FE8  
                                               __ptext42 5242  
                                               __ptext34 06EC  
                                               __ptext26 5AC4  
                                               __ptext18 60E2  
                                               __ptext51 48D8  
                                               __ptext43 6394  
                                               __ptext35 6B10  
                                               __ptext27 5346  
                                               __ptext19 7676  
                                               __ptext60 4A3C  
                                               __ptext52 4750  
                                               __ptext44 6032  
                                               __ptext36 719E  
                                               __ptext28 6E38  
                                               __ptext61 7572  
                                               __ptext53 59EE  
                                               __ptext45 5DF0  
                                               __ptext37 6BCE  
                                               __ptext29 5446  
                                               __ptext70 69E2  
                                               __ptext62 74DE  
                                               __ptext54 5B98  
                                               __ptext46 3F18  
                                               __ptext38 41F6  
                                               __ptext71 6830  
                                               __ptext63 7028  
                                               __ptext55 7802  
                                               __ptext47 5EB4  
                                               __ptext39 5546  
                                               __ptext80 5644  
                                               __ptext72 658A  
                                               __ptext64 7246  
                                               __ptext56 45C0  
                                               __ptext48 727E  
                                               __ptext81 77A8  
                                               __ptext73 7068  
                                               __ptext65 573C  
                                               __ptext57 6DE6  
                                               __ptext49 6F60  
                                               __ptext90 64E6  
                                               __ptext82 75D6  
                                               __ptext74 768A  
                                               __ptext66 6190  
                                               __ptext58 720E  
                                               __ptext91 6F1A  
                                               __ptext83 582C  
                                               __ptext75 72B4  
                                               __ptext67 623C  
                                               __ptext59 7454  
                                               __ptext92 2E62  
                                               __ptext84 751A  
                                               __ptext76 75BE  
                                               __ptext68 62E8  
                                               __ptext93 3752  
                                               __ptext85 6C2A  
                                               __ptext77 774E  
                                               __ptext69 68A0  
                                               __ptext94 3B7C  
                                               __ptext86 6CE0  
                                               __ptext78 74FC  
                                               __ptext95 6ED2  
                                               __ptext87 4E08  
                                               __ptext79 76B2  
                                               __ptext96 6D38  
                                               __ptext88 226E  
                                               __ptext97 7758  
                                               __ptext89 440C  
                                               __ptext98 513C  
                                               __ptext99 75EE  
                                       __size_of_isupper 0038  
                                           _SSP1CON1bits 000FC6  
                                           _SSP1CON2bits 000FC5  
                       SRV_ADT7410_GetTemperature@sensor 000E  
                                DRV_LCD_SetCursor@coluna 000D  
                                   ?i2_SRV_TIMER_GetTick 0001  
                                               _mapValue 68A0  
                                       __size_of_sprintf 005A  
                                       __size_of_tolower 0060  
                            DATAEE_WriteByte@GIEBitValue 000C  
                                             strcpy@dest 000A  
                                       __size_of_strncmp 00D6  
                                     __end_of_readKeypad 4B9E  
                               _I2C1_CallbackReturnReset 77DE  
                                           ??_moveCursor 001C  
                                          __size_of_atoi 0190  
                            fp__I2C1_CallbackReturnReset 0000  
                                          __size_of_ctoa 00D6  
                                          __size_of_main 0018  
                                          __size_of_dtoa 02DE  
                                        ??_DirectNet_Run 003E  
                                            ?_I2C1_DO_RX 0001  
                                            ?_I2C1_DO_TX 0001  
                                App_HTAD_Home@objetoHTAD 00F5  
                   __end_of_TMR0_DefaultInterruptHandler 7808  
                  __size_of_TMR0_DefaultInterruptHandler 0002  
                           _TMR0_DefaultInterruptHandler 7806  
                                      ??_DATAEE_ReadByte 000A  
                                     _Driver_Analog_Init 76F4  
                            __end_of_I2C1_MasterClearIrq 77FE  
                           __end_of_I2C1_DO_RX_NACK_STOP 7778  
                                            ?_I2C1_Close 0001  
                                               _tickRate 01D1  
                                               efgtoa@fp 007B  
                                               efgtoa@ne 0097  
                                               efgtoa@pp 0095  
                                               efgtoa@ou 009B  
         EUSART1_SetOverrunErrorHandler@interruptHandler 000A  
                      __size_of_SRV_ADT7410_multiplex_on 0058  
                                               isa$xinst 000000  
                              ?_SRV_ADT7410_multiplex_on 0001  
                                  ??_gravarDadosNaEEPROM 000D  
                                               int$flags 0056  
                        __end_of_I2C1_DO_RX_NACK_RESTART 7770  
                                    ?_Driver_Analog_Init 0001  
                               I2C1_MasterOperation@read 0017  
                                               _vfprintf 6978  
                     __end_of_INTERRUPT_InterruptManager 009C  
                             _INTERRUPT_InterruptManager 0008  
                                           _SSP1STATbits 000FC7  
                         __size_of_I2C1_DO_SEND_ADR_READ 0010  
                          __end_of_I2C1_DO_SEND_ADR_READ 76F4  
                                            _telaDisplay 0189  
                            _EUSART1_FramingErrorHandler 0195  
                                           _I2C1_DO_IDLE 771A  
                                    _EUSART1_Receive_ISR 5D2A  
                                           _I2C1_DO_RCEN 770E  
                                       ___aomod@dividend 000A  
                            __end_of_I2C1_MasterSendNack 77BA  
                                         _vfpfcnvrt$3662 00D3  
                                         _vfpfcnvrt$3663 00D5  
                                         _vfpfcnvrt$3669 00D7  
                                     __end_of_moveCursor 5B98  
                                             _INTCONbits 000FF2  
                          fp__I2C1_DO_SEND_RESTART_WRITE 0000  
                         I2C1_SetAddressNackCallback@ptr 0011  
                                           _respondeHTAD 019F  
                                   _I2C1_MasterGetRxData 77D6  
                                  _I2C1_MasterSendTxData 77A0  
                                               isdigit@c 000A  
                                 ??_INTERRUPT_Initialize 000A  
                                   ??_Driver_Analog_Init 000A  
                                  ??i2_SRV_TIMER_GetTick 0005  
                                               intlevel2 0000  
                                              sprintf@ap 01D5  
                                   DRV_ADT7410_Read@data 001A  
                           __size_of_DRV_LCD_WriteString 0040  
                               __end_of_I2C1_MasterClose 77FA  
                                   ?_EUSART1_Receive_ISR 0001  
                                               isspace@c 000A  
                                       ___lldiv@dividend 0016  
                                ?_PIN_MANAGER_Initialize 0001  
                                      App_HTAD_Home@tick 0181  
                               __end_of_I2C1_MasterStart 77F2  
                                   SRV_ADT7410_Read@data 002E  
                               __end_of_I2C1_MasterWrite 7768  
                                  __end_of_App_HTAD_Home 3752  
                                   SRV_ADT7410_Read@temp 0030  
                 __end_of_EUSART1_SetOverrunErrorHandler 773A  
                __size_of_EUSART1_SetOverrunErrorHandler 000A  
                         _EUSART1_SetOverrunErrorHandler 7730  
                                              strcpy@src 000C  
                                 _errorPosSensorTraseiro 01A9  
                                             _RCSTA1bits 000FAB  
                                       ??_I2C1_DO_RX_ACK 000A  
                                               isupper@c 000A  
                                _I2C1_CallbackReturnStop 77E2  
                                  __end_of_App_HTAD_init 68A0  
                             fp__I2C1_CallbackReturnStop 0000  
                                              strncmp@_l 000A  
                                              strncmp@_r 000C  
                                       ??_ADC_Initialize 000A  
                               __end_of_SRV_ADT7410_Init 4F2C  
                        fp__TMR0_DefaultInterruptHandler 0000  
                          ?_TMR0_DefaultInterruptHandler 0001  
                               __end_of_SRV_ADT7410_Read 6F1A  
                                   _I2C1_DO_ADDRESS_NACK 690C  
                                 ?_I2C1_MasterDisableIrq 0001  
                                            efgtoa@nmode 00A7  
                                   __size_of_I2C1_Poller 001E  
                              __size_of_SRV_Display_Init 001E  
                             readKeypad@lastKeyPressTime 0171  
         EUSART1_SetFramingErrorHandler@interruptHandler 000A  
                            ?_SRV_ADT7410_GetTemperature 000A  
                                  convertFloatToBuffer@i 0038  
                                        ___aomod@divisor 0012  
                                            ??_vfpfcnvrt 00C5  
                                        ___aomod@counter 001A  
                               __size_of_I2C1_MasterOpen 0022  
                                __size_of_decrementDigit 0100  
                               __size_of_I2C1_MasterStop 0004  
                               __size_of_I2C1_Initialize 0014  
                                 __size_of_EUSART1_Write 0016  
                                     _eusart1RxLastError 01AE  
                               __end_of_I2C1_SetCallback 6830  
                               __size_of_SRV_ADT7410_Off 0004  
                               __size_of_SRV_ADT7410_Run 012C  
                                               sprintf@f 01D7  
                                               tolower@c 0010  
                                               sprintf@s 00E9  
                                 __size_of___fpclassifyf 00FE  
                                    __size_of_I2C1_DO_RX 00A8  
                                    __size_of_I2C1_DO_TX 00C8  
                    __size_of_SRV_ADT7410_ReadMeanSensor 0652  
                                        ??_I2C1_DO_RESET 000A  
                   __size_of_DirectNet_enviaDadosDDDTCO2 00BC  
                                       ___lldiv@quotient 001E  
                                  _errorPosSensorUmidade 01A7  
                              decrementDigit@CursorLinha 001A  
                                   _I2C1_MasterOperation 6FA4  
                                        _TMR0_Initialize 72B4  
                         convertFloatToBuffer@bufferSize 0033  
                                               strncmp@l 0011  
                                               strncmp@n 000E  
                                               strncmp@r 0013  
                                   __end_of_App_HTAD_run 6B10  
                                    __size_of_I2C1_Close 002C  
                                  ?_I2C1_MasterGetRxData 0001  
                              DRV_LCD_SetCursor@cursorOn 000E  
                        DirectNet_enviaDadosSensores@LCR 000F  
                                          ___fladd@signs 002F  
                             convertFloatToBuffer@buffer 0031  
                                __size_of_SRV_ADT7410_On 0004  
                           ??_SRV_ADT7410_SetErrorSensor 000C  
                                           ___aodiv@sign 001B  
                                  ??_EUSART1_Receive_ISR 0006  
                         __end_of_PIN_MANAGER_Initialize 734C  
                         __size_of_rd1RegCompleteHandler 002C  
                          __end_of_rd1RegCompleteHandler 73D0  
                                     __size_of_I2C1_Open 008E  
                                           ___fladd@aexp 0030  
                                           ___fladd@bexp 0031  
                                  _bufferDadosValorBruto 0152  
                         __size_of_wr1RegCompleteHandler 002C  
                          __end_of_wr1RegCompleteHandler 7378  
                                ??_EUSART1_RxDataHandler 0001  
                                   __end_of_calculateLRC 731E  
                                           ___aomod@sign 001B  
                              __size_of_I2C1_DO_TX_EMPTY 007E  
                                  ?_I2C1_DO_ADDRESS_NACK 0001  
                                         _stateDirectNet 019D  
